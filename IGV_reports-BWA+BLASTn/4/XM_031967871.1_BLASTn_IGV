<html>
<head>
    <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"/>
    <meta http-equiv="Pragma" content="no-cache"/>
    <meta http-equiv="Expires" content="0"/>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>IGV Variant Inspector </title>

    <!-- igv -->
<script type="text/javascript">
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).igv=t()}(this,(function(){"use strict";function e(e){return t("div",e)}function t(e,t){const i=document.createElement(e);return t&&(t.class&&i.classList.add(t.class),t.id&&(i.id=t.id),t.style&&function(e,t){for(let i of Object.keys(t))e.style[i]=t[i]}(i,t.style)),i}function i(e){const t=getComputedStyle(e);"none"!==t.display&&(e._initialDisplay=t.display),e.style.display="none"}function n(e){if("none"===getComputedStyle(e).display){const t=e._initialDisplay||"block";e.style.display=t}}function r(e){if(e.type.startsWith("touch")){const t=e.touches[0];return{x:t.pageX,y:t.pageY}}return{x:e.pageX,y:e.pageY}}function s(){return("0000"+(Math.random()*Math.pow(36,4)|0).toString(36)).slice(-4)}let o=(e,{clientX:t,clientY:i})=>{const{left:n,top:r,width:s,height:o}=e.getBoundingClientRect(),a=t-n,c=i-r;return{x:a,y:c,xNormalized:a/s,yNormalized:c/o,width:s,height:o}};function a(e,t){const{clientX:i,clientY:n}=e;return o(t,{clientX:i,clientY:n})}class c{constructor(){this.elem=t("div",{class:"igv-ui-panel-column"})}add(t){if(t instanceof Node)this.elem.append(t);else if("object"==typeof t)this.elem.append(t.elem);else{const i=e();i.innerHTML=t,this.elem.append(i),this.html=i}}}function l(e,t){return h(e,t)}function h(e,t){t=t||"currentColor";let i=d[e];i||(console.error(`No icon named: ${e}`),i=d.question);const n=document.createElementNS("http://www.w3.org/2000/svg","svg");n.setAttributeNS(null,"viewBox","0 0 "+i[0]+" "+i[1]);const r=document.createElementNS("http://www.w3.org/2000/svg","path");return r.setAttributeNS(null,"fill",t),r.setAttributeNS(null,"d",i[4]),n.appendChild(r),n}const d={check:[512,512,[],"f00c","M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z"],cog:[512,512,[],"f013","M444.788 291.1l42.616 24.599c4.867 2.809 7.126 8.618 5.459 13.985-11.07 35.642-29.97 67.842-54.689 94.586a12.016 12.016 0 0 1-14.832 2.254l-42.584-24.595a191.577 191.577 0 0 1-60.759 35.13v49.182a12.01 12.01 0 0 1-9.377 11.718c-34.956 7.85-72.499 8.256-109.219.007-5.49-1.233-9.403-6.096-9.403-11.723v-49.184a191.555 191.555 0 0 1-60.759-35.13l-42.584 24.595a12.016 12.016 0 0 1-14.832-2.254c-24.718-26.744-43.619-58.944-54.689-94.586-1.667-5.366.592-11.175 5.459-13.985L67.212 291.1a193.48 193.48 0 0 1 0-70.199l-42.616-24.599c-4.867-2.809-7.126-8.618-5.459-13.985 11.07-35.642 29.97-67.842 54.689-94.586a12.016 12.016 0 0 1 14.832-2.254l42.584 24.595a191.577 191.577 0 0 1 60.759-35.13V25.759a12.01 12.01 0 0 1 9.377-11.718c34.956-7.85 72.499-8.256 109.219-.007 5.49 1.233 9.403 6.096 9.403 11.723v49.184a191.555 191.555 0 0 1 60.759 35.13l42.584-24.595a12.016 12.016 0 0 1 14.832 2.254c24.718 26.744 43.619 58.944 54.689 94.586 1.667 5.366-.592 11.175-5.459 13.985L444.788 220.9a193.485 193.485 0 0 1 0 70.2zM336 256c0-44.112-35.888-80-80-80s-80 35.888-80 80 35.888 80 80 80 80-35.888 80-80z"],exclamation:[192,512,[],"f12a","M176 432c0 44.112-35.888 80-80 80s-80-35.888-80-80 35.888-80 80-80 80 35.888 80 80zM25.26 25.199l13.6 272C39.499 309.972 50.041 320 62.83 320h66.34c12.789 0 23.331-10.028 23.97-22.801l13.6-272C167.425 11.49 156.496 0 142.77 0H49.23C35.504 0 24.575 11.49 25.26 25.199z"],"exclamation-circle":[512,512,[],"f06a","M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"],"exclamation-triangle":[576,512,[],"f071","M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"],minus:[448,512,[],"f068","M424 318.2c13.3 0 24-10.7 24-24v-76.4c0-13.3-10.7-24-24-24H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h400z"],"minus-circle":[512,512,[],"f056","M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z"],"minus-square":[448,512,[],"f146","M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"],plus:[448,512,[],"f067","M448 294.2v-76.4c0-13.3-10.7-24-24-24H286.2V56c0-13.3-10.7-24-24-24h-76.4c-13.3 0-24 10.7-24 24v137.8H24c-13.3 0-24 10.7-24 24v76.4c0 13.3 10.7 24 24 24h137.8V456c0 13.3 10.7 24 24 24h76.4c13.3 0 24-10.7 24-24V318.2H424c13.3 0 24-10.7 24-24z"],"plus-circle":[512,512,[],"f055","M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"],"plus-square":[448,512,[],"f0fe","M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"],question:[384,512,[],"f128","M202.021 0C122.202 0 70.503 32.703 29.914 91.026c-7.363 10.58-5.093 25.086 5.178 32.874l43.138 32.709c10.373 7.865 25.132 6.026 33.253-4.148 25.049-31.381 43.63-49.449 82.757-49.449 30.764 0 68.816 19.799 68.816 49.631 0 22.552-18.617 34.134-48.993 51.164-35.423 19.86-82.299 44.576-82.299 106.405V320c0 13.255 10.745 24 24 24h72.471c13.255 0 24-10.745 24-24v-5.773c0-42.86 125.268-44.645 125.268-160.627C377.504 66.256 286.902 0 202.021 0zM192 373.459c-38.196 0-69.271 31.075-69.271 69.271 0 38.195 31.075 69.27 69.271 69.27s69.271-31.075 69.271-69.271-31.075-69.27-69.271-69.27z"],save:[448,512,[],"f0c7","M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z"],search:[512,512,[],"f002","M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"],share:[512,512,[],"f064","M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z"],spinner:[512,512,[],"f110","M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z"],square:[448,512,[],"f0c8","M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z"],"square-full":[512,512,[],"f45c","M512 512H0V0h512v512z"],times:[384,512,[],"f00d","M323.1 441l53.9-53.9c9.4-9.4 9.4-24.5 0-33.9L279.8 256l97.2-97.2c9.4-9.4 9.4-24.5 0-33.9L323.1 71c-9.4-9.4-24.5-9.4-33.9 0L192 168.2 94.8 71c-9.4-9.4-24.5-9.4-33.9 0L7 124.9c-9.4 9.4-9.4 24.5 0 33.9l97.2 97.2L7 353.2c-9.4 9.4-9.4 24.5 0 33.9L60.9 441c9.4 9.4 24.5 9.4 33.9 0l97.2-97.2 97.2 97.2c9.3 9.3 24.5 9.3 33.9 0z"],"times-circle":[512,512,[],"f057","M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"],wrench:[512,512,[],"f0ad","M481.156 200c9.3 0 15.12 10.155 10.325 18.124C466.295 259.992 420.419 288 368 288c-79.222 0-143.501-63.974-143.997-143.079C223.505 65.469 288.548-.001 368.002 0c52.362.001 98.196 27.949 123.4 69.743C496.24 77.766 490.523 88 481.154 88H376l-40 56 40 56h105.156zm-171.649 93.003L109.255 493.255c-24.994 24.993-65.515 24.994-90.51 0-24.993-24.994-24.993-65.516 0-90.51L218.991 202.5c16.16 41.197 49.303 74.335 90.516 90.503zM104 432c0-13.255-10.745-24-24-24s-24 10.745-24 24 10.745 24 24 24 24-10.745 24-24z"]};function u(e,t){var i=document.createElement("div");e.appendChild(i),i.appendChild(l("times")),i.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t()}))}let f;function p(e,t,i){t.addEventListener("mousedown",function(e){e.stopPropagation(),e.preventDefault();const t=g.bind(this),n=m.bind(this),r=getComputedStyle(this),s=this.getBoundingClientRect();f={constraint:i,dragFunction:t,dragEndFunction:n,screenX:e.screenX,screenY:e.screenY,minDy:-s.top,minDx:-s.left,top:parseInt(r.top.replace("px","")),left:parseInt(r.left.replace("px",""))},document.addEventListener("mousemove",t),document.addEventListener("mouseup",n),document.addEventListener("mouseleave",n),document.addEventListener("mouseexit",n)}.bind(e))}function g(e){if(!f)return void console.error("No drag data!");e.stopPropagation(),e.preventDefault();const t=Math.max(f.minDx,e.screenX-f.screenX),i=Math.max(f.minDy,e.screenY-f.screenY),n=f.left+t,r=f.top+i;this.style.left=`${n}px`,this.style.top=`${r}px`}function m(e){if(!f)return void console.error("No drag data!");e.stopPropagation(),e.preventDefault();const t=f.dragFunction,i=f.dragEndFunction;document.removeEventListener("mousemove",t),document.removeEventListener("mouseup",i),document.removeEventListener("mouseleave",i),document.removeEventListener("mouseexit",i),f=void 0}class w{constructor({parent:t,label:n,content:r,okHandler:s,cancelHandler:o}){this.parent=t;const a=()=>{i(this.elem),"function"==typeof o&&o(this)};this.elem=e(),this.elem.classList.add("igv-ui-generic-dialog-container","igv-ui-center-fixed");const c=e({class:"igv-ui-generic-dialog-header"});if(this.elem.appendChild(c),u(c,a),n){const t=e({class:"igv-ui-dialog-one-liner"});this.elem.appendChild(t),t.innerHTML=n}r.elem.style.margin="16px",this.elem.appendChild(r.elem),this.content=r;const l=e({class:"igv-ui-generic-dialog-ok-cancel"});this.elem.appendChild(l),this.ok=e(),l.appendChild(this.ok),this.ok.textContent="OK",this.cancel=e(),l.appendChild(this.cancel),this.cancel.textContent="Cancel",this.callback=void 0,this.ok.addEventListener("click",(e=>{i(this.elem),"function"==typeof s?s(this):this.callback&&"function"==typeof this.callback&&this.callback(this)})),this.cancel.addEventListener("click",a),p(this.elem,c),this.elem.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation()}))}present(e,t){if(e.label&&this.label&&(this.label.textContent=e.label),e.html){this.content.html.innerHTML=e.html}if(e.text){this.content.html.innerText=e.text}e.value&&this.input&&(this.input.value=e.value),e.callback&&(this.callback=e.callback),n(this.elem)}clampLocation(e,t){let i=this.elem.getBoundingClientRect(),n=this.parent.getBoundingClientRect();const r=Math.min(Math.max(t,n.y),n.y+n.height-i.height),s=Math.min(Math.max(e,n.x),n.x+n.width-i.width);this.elem.style.left=s+"px",this.elem.style.top=r+"px"}}
/*!
     * jQuery JavaScript Library v3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector
     * https://jquery.com/
     *
     * Includes Sizzle.js
     * https://sizzlejs.com/
     *
     * Copyright JS Foundation and other contributors
     * Released under the MIT license
     * https://jquery.org/license
     *
     * Date: 2018-01-20T17:24Z
     */var b=[],F=window.document,v=Object.getPrototypeOf,y=b.slice,A=b.concat,C=b.push,_=b.indexOf,x={},k=x.toString,I=x.hasOwnProperty,S=I.toString,E=S.call(Object),N={},B=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},M=function(e){return null!=e&&e===e.window},R={type:!0,src:!0,noModule:!0};function D(e,t,i){var n,r=(t=t||F).createElement("script");if(r.text=e,i)for(n in R)i[n]&&(r[n]=i[n]);t.head.appendChild(r).parentNode.removeChild(r)}function T(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?x[k.call(e)]||"object":typeof e}var L="3.3.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector",z=function(e,t){return new z.fn.init(e,t)},H=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function P(e){var t=!!e&&"length"in e&&e.length,i=T(e);return!B(e)&&!M(e)&&("array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e)}z.fn=z.prototype={jquery:L,constructor:z,length:0,toArray:function(){return y.call(this)},get:function(e){return null==e?y.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=z.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return z.each(this,e)},map:function(e){return this.pushStack(z.map(this,(function(t,i){return e.call(t,i,t)})))},slice:function(){return this.pushStack(y.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(i>=0&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:C,sort:b.sort,splice:b.splice},z.extend=z.fn.extend=function(){var e,t,i,n,r,s,o=arguments[0]||{},a=1,c=arguments.length,l=!1;for("boolean"==typeof o&&(l=o,o=arguments[a]||{},a++),"object"==typeof o||B(o)||(o={}),a===c&&(o=this,a--);a<c;a++)if(null!=(e=arguments[a]))for(t in e)i=o[t],o!==(n=e[t])&&(l&&n&&(z.isPlainObject(n)||(r=Array.isArray(n)))?(r?(r=!1,s=i&&Array.isArray(i)?i:[]):s=i&&z.isPlainObject(i)?i:{},o[t]=z.extend(l,s,n)):void 0!==n&&(o[t]=n));return o},z.extend({expando:"jQuery"+(L+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==k.call(e))&&(!(t=v(e))||"function"==typeof(i=I.call(t,"constructor")&&t.constructor)&&S.call(i)===E)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e){D(e)},each:function(e,t){var i,n=0;if(P(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},trim:function(e){return null==e?"":(e+"").replace(H,"")},makeArray:function(e,t){var i=t||[];return null!=e&&(P(Object(e))?z.merge(i,"string"==typeof e?[e]:e):C.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:_.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,r=e.length;n<i;n++)e[r++]=t[n];return e.length=r,e},grep:function(e,t,i){for(var n=[],r=0,s=e.length,o=!i;r<s;r++)!t(e[r],r)!==o&&n.push(e[r]);return n},map:function(e,t,i){var n,r,s=0,o=[];if(P(e))for(n=e.length;s<n;s++)null!=(r=t(e[s],s,i))&&o.push(r);else for(s in e)null!=(r=t(e[s],s,i))&&o.push(r);return A.apply([],o)},guid:1,support:N}),"function"==typeof Symbol&&(z.fn[Symbol.iterator]=b[Symbol.iterator]),z.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){x["[object "+t+"]"]=t.toLowerCase()}));var O=
/*!
     * Sizzle CSS Selector Engine v2.3.3
     * https://sizzlejs.com/
     *
     * Copyright jQuery Foundation and other contributors
     * Released under the MIT license
     * http://jquery.org/license
     *
     * Date: 2016-08-08
     */
function(e){var t,i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v="sizzle"+1*new Date,y=e.document,A=0,C=0,_=oe(),x=oe(),k=oe(),I=function(e,t){return e===t&&(d=!0),0},S={}.hasOwnProperty,E=[],N=E.pop,B=E.push,M=E.push,R=E.slice,D=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},T="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",z="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",H="\\["+L+"*("+z+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+z+"))|)"+L+"*\\]",P=":("+z+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+H+")*)|.*)\\)|)",O=new RegExp(L+"+","g"),U=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),q=new RegExp("^"+L+"*,"+L+"*"),Q=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),V=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),j=new RegExp(P),W=new RegExp("^"+z+"$"),G={ID:new RegExp("^#("+z+")"),CLASS:new RegExp("^\\.("+z+")"),TAG:new RegExp("^("+z+"|[*])"),ATTR:new RegExp("^"+H),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+T+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},$=/^(?:input|select|textarea|button)$/i,K=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,X=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Z=/[+~]/,J=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),ee=function(e,t,i){var n="0x"+t-65536;return n!=n||i?t:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},te=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ne=function(){u()},re=we((function(e){return!0===e.disabled&&("form"in e||"label"in e)}),{dir:"parentNode",next:"legend"});try{M.apply(E=R.call(y.childNodes),y.childNodes),E[y.childNodes.length].nodeType}catch(e){M={apply:E.length?function(e,t){B.apply(e,R.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function se(e,t,n,r){var s,a,l,h,d,p,w,b=t&&t.ownerDocument,A=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==A&&9!==A&&11!==A)return n;if(!r&&((t?t.ownerDocument||t:y)!==f&&u(t),t=t||f,g)){if(11!==A&&(d=X.exec(e)))if(s=d[1]){if(9===A){if(!(l=t.getElementById(s)))return n;if(l.id===s)return n.push(l),n}else if(b&&(l=b.getElementById(s))&&F(t,l)&&l.id===s)return n.push(l),n}else{if(d[2])return M.apply(n,t.getElementsByTagName(e)),n;if((s=d[3])&&i.getElementsByClassName&&t.getElementsByClassName)return M.apply(n,t.getElementsByClassName(s)),n}if(i.qsa&&!k[e+" "]&&(!m||!m.test(e))){if(1!==A)b=t,w=e;else if("object"!==t.nodeName.toLowerCase()){for((h=t.getAttribute("id"))?h=h.replace(te,ie):t.setAttribute("id",h=v),a=(p=o(e)).length;a--;)p[a]="#"+h+" "+me(p[a]);w=p.join(","),b=Z.test(e)&&pe(t.parentNode)||t}if(w)try{return M.apply(n,b.querySelectorAll(w)),n}catch(e){}finally{h===v&&t.removeAttribute("id")}}}return c(e.replace(U,"$1"),t,n,r)}function oe(){var e=[];return function t(i,r){return e.push(i+" ")>n.cacheLength&&delete t[e.shift()],t[i+" "]=r}}function ae(e){return e[v]=!0,e}function ce(e){var t=f.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function le(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function he(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function de(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function ue(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&re(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function fe(e){return ae((function(t){return t=+t,ae((function(i,n){for(var r,s=e([],i.length,t),o=s.length;o--;)i[r=s[o]]&&(i[r]=!(n[r]=i[r]))}))}))}function pe(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in i=se.support={},s=se.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},u=se.setDocument=function(e){var t,r,o=e?e.ownerDocument||e:y;return o!==f&&9===o.nodeType&&o.documentElement?(p=(f=o).documentElement,g=!s(f),y!==f&&(r=f.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",ne,!1):r.attachEvent&&r.attachEvent("onunload",ne)),i.attributes=ce((function(e){return e.className="i",!e.getAttribute("className")})),i.getElementsByTagName=ce((function(e){return e.appendChild(f.createComment("")),!e.getElementsByTagName("*").length})),i.getElementsByClassName=Y.test(f.getElementsByClassName),i.getById=ce((function(e){return p.appendChild(e).id=v,!f.getElementsByName||!f.getElementsByName(v).length})),i.getById?(n.filter.ID=function(e){var t=e.replace(J,ee);return function(e){return e.getAttribute("id")===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var i=t.getElementById(e);return i?[i]:[]}}):(n.filter.ID=function(e){var t=e.replace(J,ee);return function(e){var i=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}},n.find.ID=function(e,t){if(void 0!==t.getElementById&&g){var i,n,r,s=t.getElementById(e);if(s){if((i=s.getAttributeNode("id"))&&i.value===e)return[s];for(r=t.getElementsByName(e),n=0;s=r[n++];)if((i=s.getAttributeNode("id"))&&i.value===e)return[s]}return[]}}),n.find.TAG=i.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):i.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],r=0,s=t.getElementsByTagName(e);if("*"===e){for(;i=s[r++];)1===i.nodeType&&n.push(i);return n}return s},n.find.CLASS=i.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(e)},w=[],m=[],(i.qsa=Y.test(f.querySelectorAll))&&(ce((function(e){p.appendChild(e).innerHTML="<a id='"+v+"'></a><select id='"+v+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+L+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||m.push("\\["+L+"*(?:value|"+T+")"),e.querySelectorAll("[id~="+v+"-]").length||m.push("~="),e.querySelectorAll(":checked").length||m.push(":checked"),e.querySelectorAll("a#"+v+"+*").length||m.push(".#.+[+~]")})),ce((function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=f.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&m.push("name"+L+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),p.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=Y.test(b=p.matches||p.webkitMatchesSelector||p.mozMatchesSelector||p.oMatchesSelector||p.msMatchesSelector))&&ce((function(e){i.disconnectedMatch=b.call(e,"*"),b.call(e,"[s!='']:x"),w.push("!=",P)})),m=m.length&&new RegExp(m.join("|")),w=w.length&&new RegExp(w.join("|")),t=Y.test(p.compareDocumentPosition),F=t||Y.test(p.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},I=t?function(e,t){if(e===t)return d=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!i.sortDetached&&t.compareDocumentPosition(e)===n?e===f||e.ownerDocument===y&&F(y,e)?-1:t===f||t.ownerDocument===y&&F(y,t)?1:h?D(h,e)-D(h,t):0:4&n?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,r=e.parentNode,s=t.parentNode,o=[e],a=[t];if(!r||!s)return e===f?-1:t===f?1:r?-1:s?1:h?D(h,e)-D(h,t):0;if(r===s)return le(e,t);for(i=e;i=i.parentNode;)o.unshift(i);for(i=t;i=i.parentNode;)a.unshift(i);for(;o[n]===a[n];)n++;return n?le(o[n],a[n]):o[n]===y?-1:a[n]===y?1:0},f):f},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==f&&u(e),t=t.replace(V,"='$1']"),i.matchesSelector&&g&&!k[t+" "]&&(!w||!w.test(t))&&(!m||!m.test(t)))try{var n=b.call(e,t);if(n||i.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){}return se(t,f,null,[e]).length>0},se.contains=function(e,t){return(e.ownerDocument||e)!==f&&u(e),F(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==f&&u(e);var r=n.attrHandle[t.toLowerCase()],s=r&&S.call(n.attrHandle,t.toLowerCase())?r(e,t,!g):void 0;return void 0!==s?s:i.attributes||!g?e.getAttribute(t):(s=e.getAttributeNode(t))&&s.specified?s.value:null},se.escape=function(e){return(e+"").replace(te,ie)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],r=0,s=0;if(d=!i.detectDuplicates,h=!i.sortStable&&e.slice(0),e.sort(I),d){for(;t=e[s++];)t===e[s]&&(r=n.push(s));for(;r--;)e.splice(n[r],1)}return h=null,e},r=se.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=r(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=r(t);return i},n=se.selectors={cacheLength:50,createPseudo:ae,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(J,ee),e[3]=(e[3]||e[4]||e[5]||"").replace(J,ee),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&j.test(i)&&(t=o(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(J,ee).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=_[e+" "];return t||(t=new RegExp("(^|"+L+")"+e+"("+L+"|$)"))&&_(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,t,i){return function(n){var r=se.attr(n,e);return null==r?"!="===t:!t||(r+="","="===t?r===i:"!="===t?r!==i:"^="===t?i&&0===r.indexOf(i):"*="===t?i&&r.indexOf(i)>-1:"$="===t?i&&r.slice(-i.length)===i:"~="===t?(" "+r.replace(O," ")+" ").indexOf(i)>-1:"|="===t&&(r===i||r.slice(0,i.length+1)===i+"-"))}},CHILD:function(e,t,i,n,r){var s="nth"!==e.slice(0,3),o="last"!==e.slice(-4),a="of-type"===t;return 1===n&&0===r?function(e){return!!e.parentNode}:function(t,i,c){var l,h,d,u,f,p,g=s!==o?"nextSibling":"previousSibling",m=t.parentNode,w=a&&t.nodeName.toLowerCase(),b=!c&&!a,F=!1;if(m){if(s){for(;g;){for(u=t;u=u[g];)if(a?u.nodeName.toLowerCase()===w:1===u.nodeType)return!1;p=g="only"===e&&!p&&"nextSibling"}return!0}if(p=[o?m.firstChild:m.lastChild],o&&b){for(F=(f=(l=(h=(d=(u=m)[v]||(u[v]={}))[u.uniqueID]||(d[u.uniqueID]={}))[e]||[])[0]===A&&l[1])&&l[2],u=f&&m.childNodes[f];u=++f&&u&&u[g]||(F=f=0)||p.pop();)if(1===u.nodeType&&++F&&u===t){h[e]=[A,f,F];break}}else if(b&&(F=f=(l=(h=(d=(u=t)[v]||(u[v]={}))[u.uniqueID]||(d[u.uniqueID]={}))[e]||[])[0]===A&&l[1]),!1===F)for(;(u=++f&&u&&u[g]||(F=f=0)||p.pop())&&((a?u.nodeName.toLowerCase()!==w:1!==u.nodeType)||!++F||(b&&((h=(d=u[v]||(u[v]={}))[u.uniqueID]||(d[u.uniqueID]={}))[e]=[A,F]),u!==t)););return(F-=r)===n||F%n==0&&F/n>=0}}},PSEUDO:function(e,t){var i,r=n.pseudos[e]||n.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return r[v]?r(t):r.length>1?(i=[e,e,"",t],n.setFilters.hasOwnProperty(e.toLowerCase())?ae((function(e,i){for(var n,s=r(e,t),o=s.length;o--;)e[n=D(e,s[o])]=!(i[n]=s[o])})):function(e){return r(e,0,i)}):r}},pseudos:{not:ae((function(e){var t=[],i=[],n=a(e.replace(U,"$1"));return n[v]?ae((function(e,t,i,r){for(var s,o=n(e,null,r,[]),a=e.length;a--;)(s=o[a])&&(e[a]=!(t[a]=s))})):function(e,r,s){return t[0]=e,n(t,null,s,i),t[0]=null,!i.pop()}})),has:ae((function(e){return function(t){return se(e,t).length>0}})),contains:ae((function(e){return e=e.replace(J,ee),function(t){return(t.textContent||t.innerText||r(t)).indexOf(e)>-1}})),lang:ae((function(e){return W.test(e||"")||se.error("unsupported lang: "+e),e=e.replace(J,ee).toLowerCase(),function(t){var i;do{if(i=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(i=i.toLowerCase())===e||0===i.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===p},focus:function(e){return e===f.activeElement&&(!f.hasFocus||f.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ue(!1),disabled:ue(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!n.pseudos.empty(e)},header:function(e){return K.test(e.nodeName)},input:function(e){return $.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:fe((function(){return[0]})),last:fe((function(e,t){return[t-1]})),eq:fe((function(e,t,i){return[i<0?i+t:i]})),even:fe((function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e})),odd:fe((function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e})),lt:fe((function(e,t,i){for(var n=i<0?i+t:i;--n>=0;)e.push(n);return e})),gt:fe((function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e}))}},n.pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[t]=he(t);for(t in{submit:!0,reset:!0})n.pseudos[t]=de(t);function ge(){}function me(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function we(e,t,i){var n=t.dir,r=t.next,s=r||n,o=i&&"parentNode"===s,a=C++;return t.first?function(t,i,r){for(;t=t[n];)if(1===t.nodeType||o)return e(t,i,r);return!1}:function(t,i,c){var l,h,d,u=[A,a];if(c){for(;t=t[n];)if((1===t.nodeType||o)&&e(t,i,c))return!0}else for(;t=t[n];)if(1===t.nodeType||o)if(h=(d=t[v]||(t[v]={}))[t.uniqueID]||(d[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[n]||t;else{if((l=h[s])&&l[0]===A&&l[1]===a)return u[2]=l[2];if(h[s]=u,u[2]=e(t,i,c))return!0}return!1}}function be(e){return e.length>1?function(t,i,n){for(var r=e.length;r--;)if(!e[r](t,i,n))return!1;return!0}:e[0]}function Fe(e,t,i,n,r){for(var s,o=[],a=0,c=e.length,l=null!=t;a<c;a++)(s=e[a])&&(i&&!i(s,n,r)||(o.push(s),l&&t.push(a)));return o}function ve(e,t,i,n,r,s){return n&&!n[v]&&(n=ve(n)),r&&!r[v]&&(r=ve(r,s)),ae((function(s,o,a,c){var l,h,d,u=[],f=[],p=o.length,g=s||function(e,t,i){for(var n=0,r=t.length;n<r;n++)se(e,t[n],i);return i}(t||"*",a.nodeType?[a]:a,[]),m=!e||!s&&t?g:Fe(g,u,e,a,c),w=i?r||(s?e:p||n)?[]:o:m;if(i&&i(m,w,a,c),n)for(l=Fe(w,f),n(l,[],a,c),h=l.length;h--;)(d=l[h])&&(w[f[h]]=!(m[f[h]]=d));if(s){if(r||e){if(r){for(l=[],h=w.length;h--;)(d=w[h])&&l.push(m[h]=d);r(null,w=[],l,c)}for(h=w.length;h--;)(d=w[h])&&(l=r?D(s,d):u[h])>-1&&(s[l]=!(o[l]=d))}}else w=Fe(w===o?w.splice(p,w.length):w),r?r(null,o,w,c):M.apply(o,w)}))}function ye(e){for(var t,i,r,s=e.length,o=n.relative[e[0].type],a=o||n.relative[" "],c=o?1:0,h=we((function(e){return e===t}),a,!0),d=we((function(e){return D(t,e)>-1}),a,!0),u=[function(e,i,n){var r=!o&&(n||i!==l)||((t=i).nodeType?h(e,i,n):d(e,i,n));return t=null,r}];c<s;c++)if(i=n.relative[e[c].type])u=[we(be(u),i)];else{if((i=n.filter[e[c].type].apply(null,e[c].matches))[v]){for(r=++c;r<s&&!n.relative[e[r].type];r++);return ve(c>1&&be(u),c>1&&me(e.slice(0,c-1).concat({value:" "===e[c-2].type?"*":""})).replace(U,"$1"),i,c<r&&ye(e.slice(c,r)),r<s&&ye(e=e.slice(r)),r<s&&me(e))}u.push(i)}return be(u)}return ge.prototype=n.filters=n.pseudos,n.setFilters=new ge,o=se.tokenize=function(e,t){var i,r,s,o,a,c,l,h=x[e+" "];if(h)return t?0:h.slice(0);for(a=e,c=[],l=n.preFilter;a;){for(o in i&&!(r=q.exec(a))||(r&&(a=a.slice(r[0].length)||a),c.push(s=[])),i=!1,(r=Q.exec(a))&&(i=r.shift(),s.push({value:i,type:r[0].replace(U," ")}),a=a.slice(i.length)),n.filter)!(r=G[o].exec(a))||l[o]&&!(r=l[o](r))||(i=r.shift(),s.push({value:i,type:o,matches:r}),a=a.slice(i.length));if(!i)break}return t?a.length:a?se.error(e):x(e,c).slice(0)},a=se.compile=function(e,t){var i,r=[],s=[],a=k[e+" "];if(!a){for(t||(t=o(e)),i=t.length;i--;)(a=ye(t[i]))[v]?r.push(a):s.push(a);a=k(e,function(e,t){var i=t.length>0,r=e.length>0,s=function(s,o,a,c,h){var d,p,m,w=0,b="0",F=s&&[],v=[],y=l,C=s||r&&n.find.TAG("*",h),_=A+=null==y?1:Math.random()||.1,x=C.length;for(h&&(l=o===f||o||h);b!==x&&null!=(d=C[b]);b++){if(r&&d){for(p=0,o||d.ownerDocument===f||(u(d),a=!g);m=e[p++];)if(m(d,o||f,a)){c.push(d);break}h&&(A=_)}i&&((d=!m&&d)&&w--,s&&F.push(d))}if(w+=b,i&&b!==w){for(p=0;m=t[p++];)m(F,v,o,a);if(s){if(w>0)for(;b--;)F[b]||v[b]||(v[b]=N.call(c));v=Fe(v)}M.apply(c,v),h&&!s&&v.length>0&&w+t.length>1&&se.uniqueSort(c)}return h&&(A=_,l=y),F};return i?ae(s):s}(s,r)),a.selector=e}return a},c=se.select=function(e,t,i,r){var s,c,l,h,d,u="function"==typeof e&&e,f=!r&&o(e=u.selector||e);if(i=i||[],1===f.length){if((c=f[0]=f[0].slice(0)).length>2&&"ID"===(l=c[0]).type&&9===t.nodeType&&g&&n.relative[c[1].type]){if(!(t=(n.find.ID(l.matches[0].replace(J,ee),t)||[])[0]))return i;u&&(t=t.parentNode),e=e.slice(c.shift().value.length)}for(s=G.needsContext.test(e)?0:c.length;s--&&(l=c[s],!n.relative[h=l.type]);)if((d=n.find[h])&&(r=d(l.matches[0].replace(J,ee),Z.test(c[0].type)&&pe(t.parentNode)||t))){if(c.splice(s,1),!(e=r.length&&me(c)))return M.apply(i,r),i;break}}return(u||a(e,f))(r,t,!g,i,!t||Z.test(e)&&pe(t.parentNode)||t),i},i.sortStable=v.split("").sort(I).join("")===v,i.detectDuplicates=!!d,u(),se}(window);z.find=O,z.expr=O.selectors,z.expr[":"]=z.expr.pseudos,z.uniqueSort=z.unique=O.uniqueSort,z.text=O.getText,z.isXMLDoc=O.isXML,z.contains=O.contains,z.escapeSelector=O.escape;var U=function(e,t,i){for(var n=[],r=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&z(e).is(i))break;n.push(e)}return n},q=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},Q=z.expr.match.needsContext;function V(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var j=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function W(e,t,i){return B(t)?z.grep(e,(function(e,n){return!!t.call(e,n,e)!==i})):t.nodeType?z.grep(e,(function(e){return e===t!==i})):"string"!=typeof t?z.grep(e,(function(e){return _.call(t,e)>-1!==i})):z.filter(t,e,i)}z.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?z.find.matchesSelector(n,e)?[n]:[]:z.find.matches(e,z.grep(t,(function(e){return 1===e.nodeType})))},z.fn.extend({find:function(e){var t,i,n=this.length,r=this;if("string"!=typeof e)return this.pushStack(z(e).filter((function(){for(t=0;t<n;t++)if(z.contains(r[t],this))return!0})));for(i=this.pushStack([]),t=0;t<n;t++)z.find(e,r[t],i);return n>1?z.uniqueSort(i):i},filter:function(e){return this.pushStack(W(this,e||[],!1))},not:function(e){return this.pushStack(W(this,e||[],!0))},is:function(e){return!!W(this,"string"==typeof e&&Q.test(e)?z(e):e||[],!1).length}});var G,$=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(z.fn.init=function(e,t,i){var n,r;if(!e)return this;if(i=i||G,"string"==typeof e){if(!(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:$.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof z?t[0]:t,z.merge(this,z.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:F,!0)),j.test(n[1])&&z.isPlainObject(t))for(n in t)B(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(r=F.getElementById(n[2]))&&(this[0]=r,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):B(e)?void 0!==i.ready?i.ready(e):e(z):z.makeArray(e,this)}).prototype=z.fn,G=z(F);var K=/^(?:parents|prev(?:Until|All))/,Y={children:!0,contents:!0,next:!0,prev:!0};function X(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}z.fn.extend({has:function(e){var t=z(e,this),i=t.length;return this.filter((function(){for(var e=0;e<i;e++)if(z.contains(this,t[e]))return!0}))},closest:function(e,t){var i,n=0,r=this.length,s=[],o="string"!=typeof e&&z(e);if(!Q.test(e))for(;n<r;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&z.find.matchesSelector(i,e))){s.push(i);break}return this.pushStack(s.length>1?z.uniqueSort(s):s)},index:function(e){return e?"string"==typeof e?_.call(z(e),this[0]):_.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(z.uniqueSort(z.merge(this.get(),z(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),z.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return U(e,"parentNode")},parentsUntil:function(e,t,i){return U(e,"parentNode",i)},next:function(e){return X(e,"nextSibling")},prev:function(e){return X(e,"previousSibling")},nextAll:function(e){return U(e,"nextSibling")},prevAll:function(e){return U(e,"previousSibling")},nextUntil:function(e,t,i){return U(e,"nextSibling",i)},prevUntil:function(e,t,i){return U(e,"previousSibling",i)},siblings:function(e){return q((e.parentNode||{}).firstChild,e)},children:function(e){return q(e.firstChild)},contents:function(e){return V(e,"iframe")?e.contentDocument:(V(e,"template")&&(e=e.content||e),z.merge([],e.childNodes))}},(function(e,t){z.fn[e]=function(i,n){var r=z.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(r=z.filter(n,r)),this.length>1&&(Y[e]||z.uniqueSort(r),K.test(e)&&r.reverse()),this.pushStack(r)}}));var Z=/[^\x20\t\r\n\f]+/g;function J(e){return e}function ee(e){throw e}function te(e,t,i,n){var r;try{e&&B(r=e.promise)?r.call(e).done(t).fail(i):e&&B(r=e.then)?r.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}z.Callbacks=function(e){e="string"==typeof e?function(e){var t={};return z.each(e.match(Z)||[],(function(e,i){t[i]=!0})),t}(e):z.extend({},e);var t,i,n,r,s=[],o=[],a=-1,c=function(){for(r=r||e.once,n=t=!0;o.length;a=-1)for(i=o.shift();++a<s.length;)!1===s[a].apply(i[0],i[1])&&e.stopOnFalse&&(a=s.length,i=!1);e.memory||(i=!1),t=!1,r&&(s=i?[]:"")},l={add:function(){return s&&(i&&!t&&(a=s.length-1,o.push(i)),function t(i){z.each(i,(function(i,n){B(n)?e.unique&&l.has(n)||s.push(n):n&&n.length&&"string"!==T(n)&&t(n)}))}(arguments),i&&!t&&c()),this},remove:function(){return z.each(arguments,(function(e,t){for(var i;(i=z.inArray(t,s,i))>-1;)s.splice(i,1),i<=a&&a--})),this},has:function(e){return e?z.inArray(e,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return r=o=[],s=i="",this},disabled:function(){return!s},lock:function(){return r=o=[],i||t||(s=i=""),this},locked:function(){return!!r},fireWith:function(e,i){return r||(i=[e,(i=i||[]).slice?i.slice():i],o.push(i),t||c()),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!n}};return l},z.extend({Deferred:function(e){var t=[["notify","progress",z.Callbacks("memory"),z.Callbacks("memory"),2],["resolve","done",z.Callbacks("once memory"),z.Callbacks("once memory"),0,"resolved"],["reject","fail",z.Callbacks("once memory"),z.Callbacks("once memory"),1,"rejected"]],i="pending",n={state:function(){return i},always:function(){return r.done(arguments).fail(arguments),this},catch:function(e){return n.then(null,e)},pipe:function(){var e=arguments;return z.Deferred((function(i){z.each(t,(function(t,n){var s=B(e[n[4]])&&e[n[4]];r[n[1]]((function(){var e=s&&s.apply(this,arguments);e&&B(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[n[0]+"With"](this,s?[e]:arguments)}))})),e=null})).promise()},then:function(e,i,n){var r=0;function s(e,t,i,n){return function(){var o=this,a=arguments,c=function(){var c,l;if(!(e<r)){if((c=i.apply(o,a))===t.promise())throw new TypeError("Thenable self-resolution");l=c&&("object"==typeof c||"function"==typeof c)&&c.then,B(l)?n?l.call(c,s(r,t,J,n),s(r,t,ee,n)):(r++,l.call(c,s(r,t,J,n),s(r,t,ee,n),s(r,t,J,t.notifyWith))):(i!==J&&(o=void 0,a=[c]),(n||t.resolveWith)(o,a))}},l=n?c:function(){try{c()}catch(n){z.Deferred.exceptionHook&&z.Deferred.exceptionHook(n,l.stackTrace),e+1>=r&&(i!==ee&&(o=void 0,a=[n]),t.rejectWith(o,a))}};e?l():(z.Deferred.getStackHook&&(l.stackTrace=z.Deferred.getStackHook()),window.setTimeout(l))}}return z.Deferred((function(r){t[0][3].add(s(0,r,B(n)?n:J,r.notifyWith)),t[1][3].add(s(0,r,B(e)?e:J)),t[2][3].add(s(0,r,B(i)?i:ee))})).promise()},promise:function(e){return null!=e?z.extend(e,n):n}},r={};return z.each(t,(function(e,s){var o=s[2],a=s[5];n[s[1]]=o.add,a&&o.add((function(){i=a}),t[3-e][2].disable,t[3-e][3].disable,t[0][2].lock,t[0][3].lock),o.add(s[3].fire),r[s[0]]=function(){return r[s[0]+"With"](this===r?void 0:this,arguments),this},r[s[0]+"With"]=o.fireWith})),n.promise(r),e&&e.call(r,r),r},when:function(e){var t=arguments.length,i=t,n=Array(i),r=y.call(arguments),s=z.Deferred(),o=function(e){return function(i){n[e]=this,r[e]=arguments.length>1?y.call(arguments):i,--t||s.resolveWith(n,r)}};if(t<=1&&(te(e,s.done(o(i)).resolve,s.reject,!t),"pending"===s.state()||B(r[i]&&r[i].then)))return s.then();for(;i--;)te(r[i],o(i),s.reject);return s.promise()}});var ie=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;z.Deferred.exceptionHook=function(e,t){window.console&&window.console.warn&&e&&ie.test(e.name)&&window.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},z.readyException=function(e){window.setTimeout((function(){throw e}))};var ne=z.Deferred();function re(){F.removeEventListener("DOMContentLoaded",re),window.removeEventListener("load",re),z.ready()}z.fn.ready=function(e){return ne.then(e).catch((function(e){z.readyException(e)})),this},z.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--z.readyWait:z.isReady)||(z.isReady=!0,!0!==e&&--z.readyWait>0||ne.resolveWith(F,[z]))}}),z.ready.then=ne.then,"complete"===F.readyState||"loading"!==F.readyState&&!F.documentElement.doScroll?window.setTimeout(z.ready):(F.addEventListener("DOMContentLoaded",re),window.addEventListener("load",re));var se=function(e,t,i,n,r,s,o){var a=0,c=e.length,l=null==i;if("object"===T(i))for(a in r=!0,i)se(e,t,a,i[a],!0,s,o);else if(void 0!==n&&(r=!0,B(n)||(o=!0),l&&(o?(t.call(e,n),t=null):(l=t,t=function(e,t,i){return l.call(z(e),i)})),t))for(;a<c;a++)t(e[a],i,o?n:n.call(e[a],a,t(e[a],i)));return r?e:l?t.call(e):c?t(e[0],i):s},oe=/^-ms-/,ae=/-([a-z])/g;function ce(e,t){return t.toUpperCase()}function le(e){return e.replace(oe,"ms-").replace(ae,ce)}var he=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function de(){this.expando=z.expando+de.uid++}de.uid=1,de.prototype={cache:function(e){var t=e[this.expando];return t||(t={},he(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,r=this.cache(e);if("string"==typeof t)r[le(t)]=i;else for(n in t)r[le(n)]=t[n];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][le(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(le):(t=le(t))in n?[t]:t.match(Z)||[]).length;for(;i--;)delete n[t[i]]}(void 0===t||z.isEmptyObject(n))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!z.isEmptyObject(t)}};var ue=new de,fe=new de,pe=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ge=/[A-Z]/g;function me(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(ge,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:pe.test(e)?JSON.parse(e):e)}(i)}catch(e){}fe.set(e,t,i)}else i=void 0;return i}z.extend({hasData:function(e){return fe.hasData(e)||ue.hasData(e)},data:function(e,t,i){return fe.access(e,t,i)},removeData:function(e,t){fe.remove(e,t)},_data:function(e,t,i){return ue.access(e,t,i)},_removeData:function(e,t){ue.remove(e,t)}}),z.fn.extend({data:function(e,t){var i,n,r,s=this[0],o=s&&s.attributes;if(void 0===e){if(this.length&&(r=fe.get(s),1===s.nodeType&&!ue.get(s,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&0===(n=o[i].name).indexOf("data-")&&(n=le(n.slice(5)),me(s,n,r[n]));ue.set(s,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each((function(){fe.set(this,e)})):se(this,(function(t){var i;if(s&&void 0===t)return void 0!==(i=fe.get(s,e))||void 0!==(i=me(s,e))?i:void 0;this.each((function(){fe.set(this,e,t)}))}),null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each((function(){fe.remove(this,e)}))}}),z.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=ue.get(e,t),i&&(!n||Array.isArray(i)?n=ue.access(e,t,z.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=z.queue(e,t),n=i.length,r=i.shift(),s=z._queueHooks(e,t);"inprogress"===r&&(r=i.shift(),n--),r&&("fx"===t&&i.unshift("inprogress"),delete s.stop,r.call(e,(function(){z.dequeue(e,t)}),s)),!n&&s&&s.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return ue.get(e,i)||ue.access(e,i,{empty:z.Callbacks("once memory").add((function(){ue.remove(e,[t+"queue",i])}))})}}),z.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?z.queue(this[0],e):void 0===t?this:this.each((function(){var i=z.queue(this,e,t);z._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&z.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){z.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,r=z.Deferred(),s=this,o=this.length,a=function(){--n||r.resolveWith(s,[s])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(i=ue.get(s[o],e+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),r.promise(t)}});var we=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,be=new RegExp("^(?:([+-])=|)("+we+")([a-z%]*)$","i"),Fe=["Top","Right","Bottom","Left"],ve=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&z.contains(e.ownerDocument,e)&&"none"===z.css(e,"display")},ye=function(e,t,i,n){var r,s,o={};for(s in t)o[s]=e.style[s],e.style[s]=t[s];for(s in r=i.apply(e,n||[]),t)e.style[s]=o[s];return r};var Ae={};function Ce(e){var t,i=e.ownerDocument,n=e.nodeName,r=Ae[n];return r||(t=i.body.appendChild(i.createElement(n)),r=z.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),Ae[n]=r,r)}function _e(e,t){for(var i,n,r=[],s=0,o=e.length;s<o;s++)(n=e[s]).style&&(i=n.style.display,t?("none"===i&&(r[s]=ue.get(n,"display")||null,r[s]||(n.style.display="")),""===n.style.display&&ve(n)&&(r[s]=Ce(n))):"none"!==i&&(r[s]="none",ue.set(n,"display",i)));for(s=0;s<o;s++)null!=r[s]&&(e[s].style.display=r[s]);return e}z.fn.extend({show:function(){return _e(this,!0)},hide:function(){return _e(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){ve(this)?z(this).show():z(this).hide()}))}});var xe=/^(?:checkbox|radio)$/i,ke=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ie=/^$|^module$|\/(?:java|ecma)script/i,Se={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function Ee(e,t){var i;return i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&V(e,t)?z.merge([e],i):i}function Ne(e,t){for(var i=0,n=e.length;i<n;i++)ue.set(e[i],"globalEval",!t||ue.get(t[i],"globalEval"))}Se.optgroup=Se.option,Se.tbody=Se.tfoot=Se.colgroup=Se.caption=Se.thead,Se.th=Se.td;var Be=/<|&#?\w+;/;function Me(e,t,i,n,r){for(var s,o,a,c,l,h,d=t.createDocumentFragment(),u=[],f=0,p=e.length;f<p;f++)if((s=e[f])||0===s)if("object"===T(s))z.merge(u,s.nodeType?[s]:s);else if(Be.test(s)){for(o=o||d.appendChild(t.createElement("div")),a=(ke.exec(s)||["",""])[1].toLowerCase(),c=Se[a]||Se._default,o.innerHTML=c[1]+z.htmlPrefilter(s)+c[2],h=c[0];h--;)o=o.lastChild;z.merge(u,o.childNodes),(o=d.firstChild).textContent=""}else u.push(t.createTextNode(s));for(d.textContent="",f=0;s=u[f++];)if(n&&z.inArray(s,n)>-1)r&&r.push(s);else if(l=z.contains(s.ownerDocument,s),o=Ee(d.appendChild(s),"script"),l&&Ne(o),i)for(h=0;s=o[h++];)Ie.test(s.type||"")&&i.push(s);return d}!function(){var e=F.createDocumentFragment().appendChild(F.createElement("div")),t=F.createElement("input");t.setAttribute("type","radio"),t.setAttribute("checked","checked"),t.setAttribute("name","t"),e.appendChild(t),N.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",N.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Re=F.documentElement,De=/^key/,Te=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Le=/^([^.]*)(?:\.(.+)|)/;function ze(){return!0}function He(){return!1}function Pe(){try{return F.activeElement}catch(e){}}function Oe(e,t,i,n,r,s){var o,a;if("object"==typeof t){for(a in"string"!=typeof i&&(n=n||i,i=void 0),t)Oe(e,a,i,n,t[a],s);return e}if(null==n&&null==r?(r=i,n=i=void 0):null==r&&("string"==typeof i?(r=n,n=void 0):(r=n,n=i,i=void 0)),!1===r)r=He;else if(!r)return e;return 1===s&&(o=r,r=function(e){return z().off(e),o.apply(this,arguments)},r.guid=o.guid||(o.guid=z.guid++)),e.each((function(){z.event.add(this,t,r,n,i)}))}z.event={global:{},add:function(e,t,i,n,r){var s,o,a,c,l,h,d,u,f,p,g,m=ue.get(e);if(m)for(i.handler&&(i=(s=i).handler,r=s.selector),r&&z.find.matchesSelector(Re,r),i.guid||(i.guid=z.guid++),(c=m.events)||(c=m.events={}),(o=m.handle)||(o=m.handle=function(t){return void 0!==z&&z.event.triggered!==t.type?z.event.dispatch.apply(e,arguments):void 0}),l=(t=(t||"").match(Z)||[""]).length;l--;)f=g=(a=Le.exec(t[l])||[])[1],p=(a[2]||"").split(".").sort(),f&&(d=z.event.special[f]||{},f=(r?d.delegateType:d.bindType)||f,d=z.event.special[f]||{},h=z.extend({type:f,origType:g,data:n,handler:i,guid:i.guid,selector:r,needsContext:r&&z.expr.match.needsContext.test(r),namespace:p.join(".")},s),(u=c[f])||((u=c[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(e,n,p,o)||e.addEventListener&&e.addEventListener(f,o)),d.add&&(d.add.call(e,h),h.handler.guid||(h.handler.guid=i.guid)),r?u.splice(u.delegateCount++,0,h):u.push(h),z.event.global[f]=!0)},remove:function(e,t,i,n,r){var s,o,a,c,l,h,d,u,f,p,g,m=ue.hasData(e)&&ue.get(e);if(m&&(c=m.events)){for(l=(t=(t||"").match(Z)||[""]).length;l--;)if(f=g=(a=Le.exec(t[l])||[])[1],p=(a[2]||"").split(".").sort(),f){for(d=z.event.special[f]||{},u=c[f=(n?d.delegateType:d.bindType)||f]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=s=u.length;s--;)h=u[s],!r&&g!==h.origType||i&&i.guid!==h.guid||a&&!a.test(h.namespace)||n&&n!==h.selector&&("**"!==n||!h.selector)||(u.splice(s,1),h.selector&&u.delegateCount--,d.remove&&d.remove.call(e,h));o&&!u.length&&(d.teardown&&!1!==d.teardown.call(e,p,m.handle)||z.removeEvent(e,f,m.handle),delete c[f])}else for(f in c)z.event.remove(e,f+t[l],i,n,!0);z.isEmptyObject(c)&&ue.remove(e,"handle events")}},dispatch:function(e){var t,i,n,r,s,o,a=z.event.fix(e),c=new Array(arguments.length),l=(ue.get(this,"events")||{})[a.type]||[],h=z.event.special[a.type]||{};for(c[0]=a,t=1;t<arguments.length;t++)c[t]=arguments[t];if(a.delegateTarget=this,!h.preDispatch||!1!==h.preDispatch.call(this,a)){for(o=z.event.handlers.call(this,a,l),t=0;(r=o[t++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,i=0;(s=r.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(s.namespace)||(a.handleObj=s,a.data=s.data,void 0!==(n=((z.event.special[s.origType]||{}).handle||s.handler).apply(r.elem,c))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,a),a.result}},handlers:function(e,t){var i,n,r,s,o,a=[],c=t.delegateCount,l=e.target;if(c&&l.nodeType&&!("click"===e.type&&e.button>=1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(s=[],o={},i=0;i<c;i++)void 0===o[r=(n=t[i]).selector+" "]&&(o[r]=n.needsContext?z(r,this).index(l)>-1:z.find(r,this,null,[l]).length),o[r]&&s.push(n);s.length&&a.push({elem:l,handlers:s})}return l=this,c<t.length&&a.push({elem:l,handlers:t.slice(c)}),a},addProp:function(e,t){Object.defineProperty(z.Event.prototype,e,{enumerable:!0,configurable:!0,get:B(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[z.expando]?e:new z.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==Pe()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===Pe()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&V(this,"input"))return this.click(),!1},_default:function(e){return V(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},z.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},z.Event=function(e,t){if(!(this instanceof z.Event))return new z.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ze:He,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&z.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[z.expando]=!0},z.Event.prototype={constructor:z.Event,isDefaultPrevented:He,isPropagationStopped:He,isImmediatePropagationStopped:He,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ze,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ze,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ze,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},z.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&De.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Te.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},z.event.addProp),z.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){z.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||z.contains(this,n))||(e.type=r.origType,i=r.handler.apply(this,arguments),e.type=t),i}}})),z.fn.extend({on:function(e,t,i,n){return Oe(this,e,t,i,n)},one:function(e,t,i,n){return Oe(this,e,t,i,n,1)},off:function(e,t,i){var n,r;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,z(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=He),this.each((function(){z.event.remove(this,e,i,t)}))}});var Ue=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,qe=/<script|<style|<link/i,Qe=/checked\s*(?:[^=]|=\s*.checked.)/i,Ve=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function je(e,t){return V(e,"table")&&V(11!==t.nodeType?t:t.firstChild,"tr")&&z(e).children("tbody")[0]||e}function We(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Ge(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function $e(e,t){var i,n,r,s,o,a,c,l;if(1===t.nodeType){if(ue.hasData(e)&&(s=ue.access(e),o=ue.set(t,s),l=s.events))for(r in delete o.handle,o.events={},l)for(i=0,n=l[r].length;i<n;i++)z.event.add(t,r,l[r][i]);fe.hasData(e)&&(a=fe.access(e),c=z.extend({},a),fe.set(t,c))}}function Ke(e,t){var i=t.nodeName.toLowerCase();"input"===i&&xe.test(e.type)?t.checked=e.checked:"input"!==i&&"textarea"!==i||(t.defaultValue=e.defaultValue)}function Ye(e,t,i,n){t=A.apply([],t);var r,s,o,a,c,l,h=0,d=e.length,u=d-1,f=t[0],p=B(f);if(p||d>1&&"string"==typeof f&&!N.checkClone&&Qe.test(f))return e.each((function(r){var s=e.eq(r);p&&(t[0]=f.call(this,r,s.html())),Ye(s,t,i,n)}));if(d&&(s=(r=Me(t,e[0].ownerDocument,!1,e,n)).firstChild,1===r.childNodes.length&&(r=s),s||n)){for(a=(o=z.map(Ee(r,"script"),We)).length;h<d;h++)c=r,h!==u&&(c=z.clone(c,!0,!0),a&&z.merge(o,Ee(c,"script"))),i.call(e[h],c,h);if(a)for(l=o[o.length-1].ownerDocument,z.map(o,Ge),h=0;h<a;h++)c=o[h],Ie.test(c.type||"")&&!ue.access(c,"globalEval")&&z.contains(l,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?z._evalUrl&&z._evalUrl(c.src):D(c.textContent.replace(Ve,""),l,c))}return e}function Xe(e,t,i){for(var n,r=t?z.filter(t,e):e,s=0;null!=(n=r[s]);s++)i||1!==n.nodeType||z.cleanData(Ee(n)),n.parentNode&&(i&&z.contains(n.ownerDocument,n)&&Ne(Ee(n,"script")),n.parentNode.removeChild(n));return e}z.extend({htmlPrefilter:function(e){return e.replace(Ue,"<$1></$2>")},clone:function(e,t,i){var n,r,s,o,a=e.cloneNode(!0),c=z.contains(e.ownerDocument,e);if(!(N.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||z.isXMLDoc(e)))for(o=Ee(a),n=0,r=(s=Ee(e)).length;n<r;n++)Ke(s[n],o[n]);if(t)if(i)for(s=s||Ee(e),o=o||Ee(a),n=0,r=s.length;n<r;n++)$e(s[n],o[n]);else $e(e,a);return(o=Ee(a,"script")).length>0&&Ne(o,!c&&Ee(e,"script")),a},cleanData:function(e){for(var t,i,n,r=z.event.special,s=0;void 0!==(i=e[s]);s++)if(he(i)){if(t=i[ue.expando]){if(t.events)for(n in t.events)r[n]?z.event.remove(i,n):z.removeEvent(i,n,t.handle);i[ue.expando]=void 0}i[fe.expando]&&(i[fe.expando]=void 0)}}}),z.fn.extend({detach:function(e){return Xe(this,e,!0)},remove:function(e){return Xe(this,e)},text:function(e){return se(this,(function(e){return void 0===e?z.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return Ye(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||je(this,e).appendChild(e)}))},prepend:function(){return Ye(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=je(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return Ye(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return Ye(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(z.cleanData(Ee(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return z.clone(this,e,t)}))},html:function(e){return se(this,(function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!qe.test(e)&&!Se[(ke.exec(e)||["",""])[1].toLowerCase()]){e=z.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(z.cleanData(Ee(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return Ye(this,arguments,(function(t){var i=this.parentNode;z.inArray(this,e)<0&&(z.cleanData(Ee(this)),i&&i.replaceChild(t,this))}),e)}}),z.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){z.fn[e]=function(e){for(var i,n=[],r=z(e),s=r.length-1,o=0;o<=s;o++)i=o===s?this:this.clone(!0),z(r[o])[t](i),C.apply(n,i.get());return this.pushStack(n)}}));var Ze=new RegExp("^("+we+")(?!px)[a-z%]+$","i"),Je=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=window),t.getComputedStyle(e)},et=new RegExp(Fe.join("|"),"i");function tt(e,t,i){var n,r,s,o,a=e.style;return(i=i||Je(e))&&(""!==(o=i.getPropertyValue(t)||i[t])||z.contains(e.ownerDocument,e)||(o=z.style(e,t)),!N.pixelBoxStyles()&&Ze.test(o)&&et.test(t)&&(n=a.width,r=a.minWidth,s=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=r,a.maxWidth=s)),void 0!==o?o+"":o}function it(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(c){a.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",Re.appendChild(a).appendChild(c);var e=window.getComputedStyle(c);i="1%"!==e.top,o=12===t(e.marginLeft),c.style.right="60%",s=36===t(e.right),n=36===t(e.width),c.style.position="absolute",r=36===c.offsetWidth||"absolute",Re.removeChild(a),c=null}}function t(e){return Math.round(parseFloat(e))}var i,n,r,s,o,a=F.createElement("div"),c=F.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",N.clearCloneStyle="content-box"===c.style.backgroundClip,z.extend(N,{boxSizingReliable:function(){return e(),n},pixelBoxStyles:function(){return e(),s},pixelPosition:function(){return e(),i},reliableMarginLeft:function(){return e(),o},scrollboxSize:function(){return e(),r}}))}();var nt,rt,st=/^(none|table(?!-c[ea]).+)/,ot=/^--/,at={position:"absolute",visibility:"hidden",display:"block"},ct={letterSpacing:"0",fontWeight:"400"},lt=["Webkit","Moz","ms"],ht=F.createElement("div").style;function dt(e){var t=z.cssProps[e];return t||(t=z.cssProps[e]=function(e){if(e in ht)return e;for(var t=e[0].toUpperCase()+e.slice(1),i=lt.length;i--;)if((e=lt[i]+t)in ht)return e}(e)||e),t}function ut(e,t,i){var n=be.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function ft(e,t,i,n,r,s){var o="width"===t?1:0,a=0,c=0;if(i===(n?"border":"content"))return 0;for(;o<4;o+=2)"margin"===i&&(c+=z.css(e,i+Fe[o],!0,r)),n?("content"===i&&(c-=z.css(e,"padding"+Fe[o],!0,r)),"margin"!==i&&(c-=z.css(e,"border"+Fe[o]+"Width",!0,r))):(c+=z.css(e,"padding"+Fe[o],!0,r),"padding"!==i?c+=z.css(e,"border"+Fe[o]+"Width",!0,r):a+=z.css(e,"border"+Fe[o]+"Width",!0,r));return!n&&s>=0&&(c+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-s-c-a-.5))),c}function pt(e,t,i){var n=Je(e),r=tt(e,t,n),s="border-box"===z.css(e,"boxSizing",!1,n),o=s;if(Ze.test(r)){if(!i)return r;r="auto"}return o=o&&(N.boxSizingReliable()||r===e.style[t]),("auto"===r||!parseFloat(r)&&"inline"===z.css(e,"display",!1,n))&&(r=e["offset"+t[0].toUpperCase()+t.slice(1)],o=!0),(r=parseFloat(r)||0)+ft(e,t,i||(s?"border":"content"),o,n,r)+"px"}z.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=tt(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,s,o,a=le(t),c=ot.test(t),l=e.style;if(c||(t=dt(a)),o=z.cssHooks[t]||z.cssHooks[a],void 0===i)return o&&"get"in o&&void 0!==(r=o.get(e,!1,n))?r:l[t];"string"===(s=typeof i)&&(r=be.exec(i))&&r[1]&&(i=function(e,t,i,n){var r,s,o=20,a=n?function(){return n.cur()}:function(){return z.css(e,t,"")},c=a(),l=i&&i[3]||(z.cssNumber[t]?"":"px"),h=(z.cssNumber[t]||"px"!==l&&+c)&&be.exec(z.css(e,t));if(h&&h[3]!==l){for(c/=2,l=l||h[3],h=+c||1;o--;)z.style(e,t,h+l),(1-s)*(1-(s=a()/c||.5))<=0&&(o=0),h/=s;h*=2,z.style(e,t,h+l),i=i||[]}return i&&(h=+h||+c||0,r=i[1]?h+(i[1]+1)*i[2]:+i[2],n&&(n.unit=l,n.start=h,n.end=r)),r}(e,t,r),s="number"),null!=i&&i==i&&("number"===s&&(i+=r&&r[3]||(z.cssNumber[a]?"":"px")),N.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),o&&"set"in o&&void 0===(i=o.set(e,i,n))||(c?l.setProperty(t,i):l[t]=i))}},css:function(e,t,i,n){var r,s,o,a=le(t);return ot.test(t)||(t=dt(a)),(o=z.cssHooks[t]||z.cssHooks[a])&&"get"in o&&(r=o.get(e,!0,i)),void 0===r&&(r=tt(e,t,n)),"normal"===r&&t in ct&&(r=ct[t]),""===i||i?(s=parseFloat(r),!0===i||isFinite(s)?s||0:r):r}}),z.each(["height","width"],(function(e,t){z.cssHooks[t]={get:function(e,i,n){if(i)return!st.test(z.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?pt(e,t,n):ye(e,at,(function(){return pt(e,t,n)}))},set:function(e,i,n){var r,s=Je(e),o="border-box"===z.css(e,"boxSizing",!1,s),a=n&&ft(e,t,n,o,s);return o&&N.scrollboxSize()===s.position&&(a-=Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(s[t])-ft(e,t,"border",!1,s)-.5)),a&&(r=be.exec(i))&&"px"!==(r[3]||"px")&&(e.style[t]=i,i=z.css(e,t)),ut(0,i,a)}}})),z.cssHooks.marginLeft=it(N.reliableMarginLeft,(function(e,t){if(t)return(parseFloat(tt(e,"marginLeft"))||e.getBoundingClientRect().left-ye(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px"})),z.each({margin:"",padding:"",border:"Width"},(function(e,t){z.cssHooks[e+t]={expand:function(i){for(var n=0,r={},s="string"==typeof i?i.split(" "):[i];n<4;n++)r[e+Fe[n]+t]=s[n]||s[n-2]||s[0];return r}},"margin"!==e&&(z.cssHooks[e+t].set=ut)})),z.fn.extend({css:function(e,t){return se(this,(function(e,t,i){var n,r,s={},o=0;if(Array.isArray(t)){for(n=Je(e),r=t.length;o<r;o++)s[t[o]]=z.css(e,t[o],!1,n);return s}return void 0!==i?z.style(e,t,i):z.css(e,t)}),e,t,arguments.length>1)}}),z.fn.delay=function(e,t){return e=z.fx&&z.fx.speeds[e]||e,t=t||"fx",this.queue(t,(function(t,i){var n=window.setTimeout(t,e);i.stop=function(){window.clearTimeout(n)}}))},nt=F.createElement("input"),rt=F.createElement("select").appendChild(F.createElement("option")),nt.type="checkbox",N.checkOn=""!==nt.value,N.optSelected=rt.selected,(nt=F.createElement("input")).value="t",nt.type="radio",N.radioValue="t"===nt.value;var gt,mt=z.expr.attrHandle;z.fn.extend({attr:function(e,t){return se(this,z.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each((function(){z.removeAttr(this,e)}))}}),z.extend({attr:function(e,t,i){var n,r,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===e.getAttribute?z.prop(e,t,i):(1===s&&z.isXMLDoc(e)||(r=z.attrHooks[t.toLowerCase()]||(z.expr.match.bool.test(t)?gt:void 0)),void 0!==i?null===i?void z.removeAttr(e,t):r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:(e.setAttribute(t,i+""),i):r&&"get"in r&&null!==(n=r.get(e,t))?n:null==(n=z.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!N.radioValue&&"radio"===t&&V(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,r=t&&t.match(Z);if(r&&1===e.nodeType)for(;i=r[n++];)e.removeAttribute(i)}}),gt={set:function(e,t,i){return!1===t?z.removeAttr(e,i):e.setAttribute(i,i),i}},z.each(z.expr.match.bool.source.match(/\w+/g),(function(e,t){var i=mt[t]||z.find.attr;mt[t]=function(e,t,n){var r,s,o=t.toLowerCase();return n||(s=mt[o],mt[o]=r,r=null!=i(e,t,n)?o:null,mt[o]=s),r}}));var wt=/^(?:input|select|textarea|button)$/i,bt=/^(?:a|area)$/i;function Ft(e){return(e.match(Z)||[]).join(" ")}function vt(e){return e.getAttribute&&e.getAttribute("class")||""}function yt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(Z)||[]}z.fn.extend({prop:function(e,t){return se(this,z.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each((function(){delete this[z.propFix[e]||e]}))}}),z.extend({prop:function(e,t,i){var n,r,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&z.isXMLDoc(e)||(t=z.propFix[t]||t,r=z.propHooks[t]),void 0!==i?r&&"set"in r&&void 0!==(n=r.set(e,i,t))?n:e[t]=i:r&&"get"in r&&null!==(n=r.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=z.find.attr(e,"tabindex");return t?parseInt(t,10):wt.test(e.nodeName)||bt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),N.optSelected||(z.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),z.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){z.propFix[this.toLowerCase()]=this})),z.fn.extend({addClass:function(e){var t,i,n,r,s,o,a,c=0;if(B(e))return this.each((function(t){z(this).addClass(e.call(this,t,vt(this)))}));if((t=yt(e)).length)for(;i=this[c++];)if(r=vt(i),n=1===i.nodeType&&" "+Ft(r)+" "){for(o=0;s=t[o++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");r!==(a=Ft(n))&&i.setAttribute("class",a)}return this},removeClass:function(e){var t,i,n,r,s,o,a,c=0;if(B(e))return this.each((function(t){z(this).removeClass(e.call(this,t,vt(this)))}));if(!arguments.length)return this.attr("class","");if((t=yt(e)).length)for(;i=this[c++];)if(r=vt(i),n=1===i.nodeType&&" "+Ft(r)+" "){for(o=0;s=t[o++];)for(;n.indexOf(" "+s+" ")>-1;)n=n.replace(" "+s+" "," ");r!==(a=Ft(n))&&i.setAttribute("class",a)}return this},toggleClass:function(e,t){var i=typeof e,n="string"===i||Array.isArray(e);return"boolean"==typeof t&&n?t?this.addClass(e):this.removeClass(e):B(e)?this.each((function(i){z(this).toggleClass(e.call(this,i,vt(this),t),t)})):this.each((function(){var t,r,s,o;if(n)for(r=0,s=z(this),o=yt(e);t=o[r++];)s.hasClass(t)?s.removeClass(t):s.addClass(t);else void 0!==e&&"boolean"!==i||((t=vt(this))&&ue.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":ue.get(this,"__className__")||""))}))},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&(" "+Ft(vt(i))+" ").indexOf(t)>-1)return!0;return!1}});var At=/\r/g;z.fn.extend({val:function(e){var t,i,n,r=this[0];return arguments.length?(n=B(e),this.each((function(i){var r;1===this.nodeType&&(null==(r=n?e.call(this,i,z(this).val()):e)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=z.map(r,(function(e){return null==e?"":e+""}))),(t=z.valHooks[this.type]||z.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))}))):r?(t=z.valHooks[r.type]||z.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(i=t.get(r,"value"))?i:"string"==typeof(i=r.value)?i.replace(At,""):null==i?"":i:void 0}}),z.extend({valHooks:{option:{get:function(e){var t=z.find.attr(e,"value");return null!=t?t:Ft(z.text(e))}},select:{get:function(e){var t,i,n,r=e.options,s=e.selectedIndex,o="select-one"===e.type,a=o?null:[],c=o?s+1:r.length;for(n=s<0?c:o?s:0;n<c;n++)if(((i=r[n]).selected||n===s)&&!i.disabled&&(!i.parentNode.disabled||!V(i.parentNode,"optgroup"))){if(t=z(i).val(),o)return t;a.push(t)}return a},set:function(e,t){for(var i,n,r=e.options,s=z.makeArray(t),o=r.length;o--;)((n=r[o]).selected=z.inArray(z.valHooks.option.get(n),s)>-1)&&(i=!0);return i||(e.selectedIndex=-1),s}}}}),z.each(["radio","checkbox"],(function(){z.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=z.inArray(z(e).val(),t)>-1}},N.checkOn||(z.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})})),N.focusin="onfocusin"in window;var Ct=/^(?:focusinfocus|focusoutblur)$/,_t=function(e){e.stopPropagation()};z.extend(z.event,{trigger:function(e,t,i,n){var r,s,o,a,c,l,h,d,u=[i||F],f=I.call(e,"type")?e.type:e,p=I.call(e,"namespace")?e.namespace.split("."):[];if(s=d=o=i=i||F,3!==i.nodeType&&8!==i.nodeType&&!Ct.test(f+z.event.triggered)&&(f.indexOf(".")>-1&&(p=f.split("."),f=p.shift(),p.sort()),c=f.indexOf(":")<0&&"on"+f,(e=e[z.expando]?e:new z.Event(f,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:z.makeArray(t,[e]),h=z.event.special[f]||{},n||!h.trigger||!1!==h.trigger.apply(i,t))){if(!n&&!h.noBubble&&!M(i)){for(a=h.delegateType||f,Ct.test(a+f)||(s=s.parentNode);s;s=s.parentNode)u.push(s),o=s;o===(i.ownerDocument||F)&&u.push(o.defaultView||o.parentWindow||window)}for(r=0;(s=u[r++])&&!e.isPropagationStopped();)d=s,e.type=r>1?a:h.bindType||f,(l=(ue.get(s,"events")||{})[e.type]&&ue.get(s,"handle"))&&l.apply(s,t),(l=c&&s[c])&&l.apply&&he(s)&&(e.result=l.apply(s,t),!1===e.result&&e.preventDefault());return e.type=f,n||e.isDefaultPrevented()||h._default&&!1!==h._default.apply(u.pop(),t)||!he(i)||c&&B(i[f])&&!M(i)&&((o=i[c])&&(i[c]=null),z.event.triggered=f,e.isPropagationStopped()&&d.addEventListener(f,_t),i[f](),e.isPropagationStopped()&&d.removeEventListener(f,_t),z.event.triggered=void 0,o&&(i[c]=o)),e.result}},simulate:function(e,t,i){var n=z.extend(new z.Event,i,{type:e,isSimulated:!0});z.event.trigger(n,null,t)}}),z.fn.extend({trigger:function(e,t){return this.each((function(){z.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var i=this[0];if(i)return z.event.trigger(e,t,i,!0)}}),N.focusin||z.each({focus:"focusin",blur:"focusout"},(function(e,t){var i=function(e){z.event.simulate(t,e.target,z.event.fix(e))};z.event.special[t]={setup:function(){var n=this.ownerDocument||this,r=ue.access(n,t);r||n.addEventListener(e,i,!0),ue.access(n,t,(r||0)+1)},teardown:function(){var n=this.ownerDocument||this,r=ue.access(n,t)-1;r?ue.access(n,t,r):(n.removeEventListener(e,i,!0),ue.remove(n,t))}}}));var xt,kt=/\[\]$/,It=/\r?\n/g,St=/^(?:submit|button|image|reset|file)$/i,Et=/^(?:input|select|textarea|keygen)/i;function Nt(e,t,i,n){var r;if(Array.isArray(t))z.each(t,(function(t,r){i||kt.test(e)?n(e,r):Nt(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,i,n)}));else if(i||"object"!==T(t))n(e,t);else for(r in t)Nt(e+"["+r+"]",t[r],i,n)}z.param=function(e,t){var i,n=[],r=function(e,t){var i=B(t)?t():t;n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)};if(Array.isArray(e)||e.jquery&&!z.isPlainObject(e))z.each(e,(function(){r(this.name,this.value)}));else for(i in e)Nt(i,e[i],t,r);return n.join("&")},z.fn.extend({serialize:function(){return z.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=z.prop(this,"elements");return e?z.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!z(this).is(":disabled")&&Et.test(this.nodeName)&&!St.test(e)&&(this.checked||!xe.test(e))})).map((function(e,t){var i=z(this).val();return null==i?null:Array.isArray(i)?z.map(i,(function(e){return{name:t.name,value:e.replace(It,"\r\n")}})):{name:t.name,value:i.replace(It,"\r\n")}})).get()}}),z.fn.extend({wrapAll:function(e){var t;return this[0]&&(B(e)&&(e=e.call(this[0])),t=z(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this},wrapInner:function(e){return B(e)?this.each((function(t){z(this).wrapInner(e.call(this,t))})):this.each((function(){var t=z(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)}))},wrap:function(e){var t=B(e);return this.each((function(i){z(this).wrapAll(t?e.call(this,i):e)}))},unwrap:function(e){return this.parent(e).not("body").each((function(){z(this).replaceWith(this.childNodes)})),this}}),z.expr.pseudos.hidden=function(e){return!z.expr.pseudos.visible(e)},z.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},N.createHTMLDocument=((xt=F.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===xt.childNodes.length),z.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(N.createHTMLDocument?((n=(t=F.implementation.createHTMLDocument("")).createElement("base")).href=F.location.href,t.head.appendChild(n)):t=F),s=!i&&[],(r=j.exec(e))?[t.createElement(r[1])]:(r=Me([e],t,s),s&&s.length&&z(s).remove(),z.merge([],r.childNodes)));var n,r,s},z.offset={setOffset:function(e,t,i){var n,r,s,o,a,c,l=z.css(e,"position"),h=z(e),d={};"static"===l&&(e.style.position="relative"),a=h.offset(),s=z.css(e,"top"),c=z.css(e,"left"),("absolute"===l||"fixed"===l)&&(s+c).indexOf("auto")>-1?(o=(n=h.position()).top,r=n.left):(o=parseFloat(s)||0,r=parseFloat(c)||0),B(t)&&(t=t.call(e,i,z.extend({},a))),null!=t.top&&(d.top=t.top-a.top+o),null!=t.left&&(d.left=t.left-a.left+r),"using"in t?t.using.call(e,d):h.css(d)}},z.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){z.offset.setOffset(this,e,t)}));var t,i,n=this[0];return n?n.getClientRects().length?(t=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:t.top+i.pageYOffset,left:t.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],r={top:0,left:0};if("fixed"===z.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===z.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((r=z(e).offset()).top+=z.css(e,"borderTopWidth",!0),r.left+=z.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-z.css(n,"marginTop",!0),left:t.left-r.left-z.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===z.css(e,"position");)e=e.offsetParent;return e||Re}))}}),z.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var i="pageYOffset"===t;z.fn[e]=function(n){return se(this,(function(e,n,r){var s;if(M(e)?s=e:9===e.nodeType&&(s=e.defaultView),void 0===r)return s?s[t]:e[n];s?s.scrollTo(i?s.pageXOffset:r,i?r:s.pageYOffset):e[n]=r}),e,n,arguments.length)}})),z.each(["top","left"],(function(e,t){z.cssHooks[t]=it(N.pixelPosition,(function(e,i){if(i)return i=tt(e,t),Ze.test(i)?z(e).position()[t]+"px":i}))})),z.each({Height:"height",Width:"width"},(function(e,t){z.each({padding:"inner"+e,content:t,"":"outer"+e},(function(i,n){z.fn[n]=function(r,s){var o=arguments.length&&(i||"boolean"!=typeof r),a=i||(!0===r||!0===s?"margin":"border");return se(this,(function(t,i,r){var s;return M(t)?0===n.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(s=t.documentElement,Math.max(t.body["scroll"+e],s["scroll"+e],t.body["offset"+e],s["offset"+e],s["client"+e])):void 0===r?z.css(t,i,a):z.style(t,i,r,a)}),t,o?r:void 0,o)}}))})),z.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(e,t){z.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}})),z.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),z.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)}}),z.proxy=function(e,t){var i,n,r;if("string"==typeof t&&(i=e[t],t=e,e=i),B(e))return n=y.call(arguments,2),r=function(){return e.apply(t||this,n.concat(y.call(arguments)))},r.guid=e.guid=e.guid||z.guid++,r},z.holdReady=function(e){e?z.readyWait++:z.ready(!0)},z.isArray=Array.isArray,z.parseJSON=JSON.parse,z.nodeName=V,z.isFunction=B,z.isWindow=M,z.camelCase=le,z.type=T,z.now=Date.now,z.isNumeric=function(e){var t=z.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))};const Bt=z;function Mt(e){return"string"==typeof e||e instanceof String}function Rt(e){var t=String(e).split(/[.,]/);return t[0].split("").reverse().reduce((function(e,t,i){return i%3==0?e+","+t:e+t})).split("").reverse().join("")+(t[1]?"."+t[1]:"")}const Dt=function(e){return e.split(/\n|\r\n|\r/g)};function Tt(e,t){var i,n,r=[],s=e.length,o=0,a=!1;if(s>0)for(r[o]=e.charAt(0),i=1;i<s;i++)'"'===(n=e.charAt(i))?a=!a:a||n!==t?r[o]+=n:r[++o]="";return r}function Lt(e){return e.length>0?e.charAt(0).toUpperCase()+e.slice(1):e}function zt(e){if(void 0!==e.name)return e.name;if(Mt(e)){let t=e.lastIndexOf("/"),i=t<0?e:e.substr(t+1);return t=i.indexOf("?"),t>0&&(i=i.substr(0,t)),i}throw Error("Expected File or string, got "+typeof e)}function Ht(e){return!!e&&("function"!=typeof e&&(e instanceof File||e.hasOwnProperty("name")&&"function"==typeof e.slice&&"function"==typeof e.arrayBuffer))}function Pt(e,t){const i=document.createElement("a");i.setAttribute("href",t),i.setAttribute("download",e),i.style.display="none",document.body.appendChild(i),i.click(),document.body.removeChild(i)}function Ot(e){for(var t=Ut,i=t.parser.loose.exec(e),n={},r=14;r--;)n[t.key[r]]=i[r]||"";return n[t.q.name]={},n[t.key[12]].replace(t.q.parser,(function(e,i,r){i&&(n[t.q.name][i]=r)})),n}"object"==typeof process&&"undefined"==typeof window&&(global.atob=function(e){return Buffer.from(e,"base64").toString("binary")});const Ut={strictMode:!1,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};function qt(e){let t=e.length;for(;--t>=0;)e[t]=0}const Qt=256,Vt=286,jt=30,Wt=15,Gt=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),$t=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),Yt=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Xt=new Array(576);qt(Xt);const Zt=new Array(60);qt(Zt);const Jt=new Array(512);qt(Jt);const ei=new Array(256);qt(ei);const ti=new Array(29);qt(ti);const ii=new Array(jt);function ni(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}let ri,si,oi;function ai(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}qt(ii);const ci=e=>e<256?Jt[e]:Jt[256+(e>>>7)],li=(e,t)=>{e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255},hi=(e,t,i)=>{e.bi_valid>16-i?(e.bi_buf|=t<<e.bi_valid&65535,li(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=i-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)},di=(e,t,i)=>{hi(e,i[2*t],i[2*t+1])},ui=(e,t)=>{let i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1},fi=(e,t,i)=>{const n=new Array(16);let r,s,o=0;for(r=1;r<=Wt;r++)o=o+i[r-1]<<1,n[r]=o;for(s=0;s<=t;s++){let t=e[2*s+1];0!==t&&(e[2*s]=ui(n[t]++,t))}},pi=e=>{let t;for(t=0;t<Vt;t++)e.dyn_ltree[2*t]=0;for(t=0;t<jt;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.sym_next=e.matches=0},gi=e=>{e.bi_valid>8?li(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0},mi=(e,t,i,n)=>{const r=2*t,s=2*i;return e[r]<e[s]||e[r]===e[s]&&n[t]<=n[i]},wi=(e,t,i)=>{const n=e.heap[i];let r=i<<1;for(;r<=e.heap_len&&(r<e.heap_len&&mi(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!mi(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n},bi=(e,t,i)=>{let n,r,s,o,a=0;if(0!==e.sym_next)do{n=255&e.pending_buf[e.sym_buf+a++],n+=(255&e.pending_buf[e.sym_buf+a++])<<8,r=e.pending_buf[e.sym_buf+a++],0===n?di(e,r,t):(s=ei[r],di(e,s+Qt+1,t),o=Gt[s],0!==o&&(r-=ti[s],hi(e,r,o)),n--,s=ci(n),di(e,s,i),o=$t[s],0!==o&&(n-=ii[s],hi(e,n,o)))}while(a<e.sym_next);di(e,256,t)},Fi=(e,t)=>{const i=t.dyn_tree,n=t.stat_desc.static_tree,r=t.stat_desc.has_stree,s=t.stat_desc.elems;let o,a,c,l=-1;for(e.heap_len=0,e.heap_max=573,o=0;o<s;o++)0!==i[2*o]?(e.heap[++e.heap_len]=l=o,e.depth[o]=0):i[2*o+1]=0;for(;e.heap_len<2;)c=e.heap[++e.heap_len]=l<2?++l:0,i[2*c]=1,e.depth[c]=0,e.opt_len--,r&&(e.static_len-=n[2*c+1]);for(t.max_code=l,o=e.heap_len>>1;o>=1;o--)wi(e,i,o);c=s;do{o=e.heap[1],e.heap[1]=e.heap[e.heap_len--],wi(e,i,1),a=e.heap[1],e.heap[--e.heap_max]=o,e.heap[--e.heap_max]=a,i[2*c]=i[2*o]+i[2*a],e.depth[c]=(e.depth[o]>=e.depth[a]?e.depth[o]:e.depth[a])+1,i[2*o+1]=i[2*a+1]=c,e.heap[1]=c++,wi(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],((e,t)=>{const i=t.dyn_tree,n=t.max_code,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,o=t.stat_desc.extra_bits,a=t.stat_desc.extra_base,c=t.stat_desc.max_length;let l,h,d,u,f,p,g=0;for(u=0;u<=Wt;u++)e.bl_count[u]=0;for(i[2*e.heap[e.heap_max]+1]=0,l=e.heap_max+1;l<573;l++)h=e.heap[l],u=i[2*i[2*h+1]+1]+1,u>c&&(u=c,g++),i[2*h+1]=u,h>n||(e.bl_count[u]++,f=0,h>=a&&(f=o[h-a]),p=i[2*h],e.opt_len+=p*(u+f),s&&(e.static_len+=p*(r[2*h+1]+f)));if(0!==g){do{for(u=c-1;0===e.bl_count[u];)u--;e.bl_count[u]--,e.bl_count[u+1]+=2,e.bl_count[c]--,g-=2}while(g>0);for(u=c;0!==u;u--)for(h=e.bl_count[u];0!==h;)d=e.heap[--l],d>n||(i[2*d+1]!==u&&(e.opt_len+=(u-i[2*d+1])*i[2*d],i[2*d+1]=u),h--)}})(e,t),fi(i,l,e.bl_count)},vi=(e,t,i)=>{let n,r,s=-1,o=t[1],a=0,c=7,l=4;for(0===o&&(c=138,l=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=o,o=t[2*(n+1)+1],++a<c&&r===o||(a<l?e.bl_tree[2*r]+=a:0!==r?(r!==s&&e.bl_tree[2*r]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,a=0,s=r,0===o?(c=138,l=3):r===o?(c=6,l=3):(c=7,l=4))},yi=(e,t,i)=>{let n,r,s=-1,o=t[1],a=0,c=7,l=4;for(0===o&&(c=138,l=3),n=0;n<=i;n++)if(r=o,o=t[2*(n+1)+1],!(++a<c&&r===o)){if(a<l)do{di(e,r,e.bl_tree)}while(0!=--a);else 0!==r?(r!==s&&(di(e,r,e.bl_tree),a--),di(e,16,e.bl_tree),hi(e,a-3,2)):a<=10?(di(e,17,e.bl_tree),hi(e,a-3,3)):(di(e,18,e.bl_tree),hi(e,a-11,7));a=0,s=r,0===o?(c=138,l=3):r===o?(c=6,l=3):(c=7,l=4)}};let Ai=!1;const Ci=(e,t,i,n)=>{hi(e,0+(n?1:0),3),gi(e),li(e,i),li(e,~i),i&&e.pending_buf.set(e.window.subarray(t,t+i),e.pending),e.pending+=i};var _i=e=>{Ai||((()=>{let e,t,i,n,r;const s=new Array(16);for(i=0,n=0;n<28;n++)for(ti[n]=i,e=0;e<1<<Gt[n];e++)ei[i++]=n;for(ei[i-1]=n,r=0,n=0;n<16;n++)for(ii[n]=r,e=0;e<1<<$t[n];e++)Jt[r++]=n;for(r>>=7;n<jt;n++)for(ii[n]=r<<7,e=0;e<1<<$t[n]-7;e++)Jt[256+r++]=n;for(t=0;t<=Wt;t++)s[t]=0;for(e=0;e<=143;)Xt[2*e+1]=8,e++,s[8]++;for(;e<=255;)Xt[2*e+1]=9,e++,s[9]++;for(;e<=279;)Xt[2*e+1]=7,e++,s[7]++;for(;e<=287;)Xt[2*e+1]=8,e++,s[8]++;for(fi(Xt,287,s),e=0;e<jt;e++)Zt[2*e+1]=5,Zt[2*e]=ui(e,5);ri=new ni(Xt,Gt,257,Vt,Wt),si=new ni(Zt,$t,0,jt,Wt),oi=new ni(new Array(0),Kt,0,19,7)})(),Ai=!0),e.l_desc=new ai(e.dyn_ltree,ri),e.d_desc=new ai(e.dyn_dtree,si),e.bl_desc=new ai(e.bl_tree,oi),e.bi_buf=0,e.bi_valid=0,pi(e)},xi=(e,t,i,n)=>{let r,s,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=(e=>{let t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<Qt;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0})(e)),Fi(e,e.l_desc),Fi(e,e.d_desc),o=(e=>{let t;for(vi(e,e.dyn_ltree,e.l_desc.max_code),vi(e,e.dyn_dtree,e.d_desc.max_code),Fi(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*Yt[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t})(e),r=e.opt_len+3+7>>>3,s=e.static_len+3+7>>>3,s<=r&&(r=s)):r=s=i+5,i+4<=r&&-1!==t?Ci(e,t,i,n):4===e.strategy||s===r?(hi(e,2+(n?1:0),3),bi(e,Xt,Zt)):(hi(e,4+(n?1:0),3),((e,t,i,n)=>{let r;for(hi(e,t-257,5),hi(e,i-1,5),hi(e,n-4,4),r=0;r<n;r++)hi(e,e.bl_tree[2*Yt[r]+1],3);yi(e,e.dyn_ltree,t-1),yi(e,e.dyn_dtree,i-1)})(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),bi(e,e.dyn_ltree,e.dyn_dtree)),pi(e),n&&gi(e)},ki={_tr_init:_i,_tr_stored_block:Ci,_tr_flush_block:xi,_tr_tally:(e,t,i)=>(e.pending_buf[e.sym_buf+e.sym_next++]=t,e.pending_buf[e.sym_buf+e.sym_next++]=t>>8,e.pending_buf[e.sym_buf+e.sym_next++]=i,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(ei[i]+Qt+1)]++,e.dyn_dtree[2*ci(t)]++),e.sym_next===e.sym_end),_tr_align:e=>{hi(e,2,3),di(e,256,Xt),(e=>{16===e.bi_valid?(li(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)})(e)}};var Ii=(e,t,i,n)=>{let r=65535&e,s=e>>>16&65535,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{r=r+t[n++]|0,s=s+r|0}while(--o);r%=65521,s%=65521}return r|s<<16};const Si=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})());var Ei=(e,t,i,n)=>{const r=Si,s=n+i;e^=-1;for(let i=n;i<s;i++)e=e>>>8^r[255&(e^t[i])];return~e},Ni={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Bi={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:Mi,_tr_stored_block:Ri,_tr_flush_block:Di,_tr_tally:Ti,_tr_align:Li}=ki,{Z_NO_FLUSH:zi,Z_PARTIAL_FLUSH:Hi,Z_FULL_FLUSH:Pi,Z_FINISH:Oi,Z_BLOCK:Ui,Z_OK:qi,Z_STREAM_END:Qi,Z_STREAM_ERROR:Vi,Z_DATA_ERROR:ji,Z_BUF_ERROR:Wi,Z_DEFAULT_COMPRESSION:Gi,Z_FILTERED:$i,Z_HUFFMAN_ONLY:Ki,Z_RLE:Yi,Z_FIXED:Xi,Z_DEFAULT_STRATEGY:Zi,Z_UNKNOWN:Ji,Z_DEFLATED:en}=Bi,tn=258,nn=262,rn=42,sn=113,on=666,an=(e,t)=>(e.msg=Ni[t],t),cn=e=>2*e-(e>4?9:0),ln=e=>{let t=e.length;for(;--t>=0;)e[t]=0},hn=e=>{let t,i,n,r=e.w_size;t=e.hash_size,n=t;do{i=e.head[--n],e.head[n]=i>=r?i-r:0}while(--t);t=r,n=t;do{i=e.prev[--n],e.prev[n]=i>=r?i-r:0}while(--t)};let dn=(e,t,i)=>(t<<e.hash_shift^i)&e.hash_mask;const un=e=>{const t=e.state;let i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(e.output.set(t.pending_buf.subarray(t.pending_out,t.pending_out+i),e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))},fn=(e,t)=>{Di(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,un(e.strm)},pn=(e,t)=>{e.pending_buf[e.pending++]=t},gn=(e,t)=>{e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t},mn=(e,t,i,n)=>{let r=e.avail_in;return r>n&&(r=n),0===r?0:(e.avail_in-=r,t.set(e.input.subarray(e.next_in,e.next_in+r),i),1===e.state.wrap?e.adler=Ii(e.adler,t,r,i):2===e.state.wrap&&(e.adler=Ei(e.adler,t,r,i)),e.next_in+=r,e.total_in+=r,r)},wn=(e,t)=>{let i,n,r=e.max_chain_length,s=e.strstart,o=e.prev_length,a=e.nice_match;const c=e.strstart>e.w_size-nn?e.strstart-(e.w_size-nn):0,l=e.window,h=e.w_mask,d=e.prev,u=e.strstart+tn;let f=l[s+o-1],p=l[s+o];e.prev_length>=e.good_match&&(r>>=2),a>e.lookahead&&(a=e.lookahead);do{if(i=t,l[i+o]===p&&l[i+o-1]===f&&l[i]===l[s]&&l[++i]===l[s+1]){s+=2,i++;do{}while(l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&s<u);if(n=tn-(u-s),s=u-tn,n>o){if(e.match_start=t,o=n,n>=a)break;f=l[s+o-1],p=l[s+o]}}}while((t=d[t&h])>c&&0!=--r);return o<=e.lookahead?o:e.lookahead},bn=e=>{const t=e.w_size;let i,n,r;do{if(n=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-nn)&&(e.window.set(e.window.subarray(t,t+t-n),0),e.match_start-=t,e.strstart-=t,e.block_start-=t,e.insert>e.strstart&&(e.insert=e.strstart),hn(e),n+=t),0===e.strm.avail_in)break;if(i=mn(e.strm,e.window,e.strstart+e.lookahead,n),e.lookahead+=i,e.lookahead+e.insert>=3)for(r=e.strstart-e.insert,e.ins_h=e.window[r],e.ins_h=dn(e,e.ins_h,e.window[r+1]);e.insert&&(e.ins_h=dn(e,e.ins_h,e.window[r+3-1]),e.prev[r&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=r,r++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<nn&&0!==e.strm.avail_in)},Fn=(e,t)=>{let i,n,r,s=e.pending_buf_size-5>e.w_size?e.w_size:e.pending_buf_size-5,o=0,a=e.strm.avail_in;do{if(i=65535,r=e.bi_valid+42>>3,e.strm.avail_out<r)break;if(r=e.strm.avail_out-r,n=e.strstart-e.block_start,i>n+e.strm.avail_in&&(i=n+e.strm.avail_in),i>r&&(i=r),i<s&&(0===i&&t!==Oi||t===zi||i!==n+e.strm.avail_in))break;o=t===Oi&&i===n+e.strm.avail_in?1:0,Ri(e,0,0,o),e.pending_buf[e.pending-4]=i,e.pending_buf[e.pending-3]=i>>8,e.pending_buf[e.pending-2]=~i,e.pending_buf[e.pending-1]=~i>>8,un(e.strm),n&&(n>i&&(n=i),e.strm.output.set(e.window.subarray(e.block_start,e.block_start+n),e.strm.next_out),e.strm.next_out+=n,e.strm.avail_out-=n,e.strm.total_out+=n,e.block_start+=n,i-=n),i&&(mn(e.strm,e.strm.output,e.strm.next_out,i),e.strm.next_out+=i,e.strm.avail_out-=i,e.strm.total_out+=i)}while(0===o);return a-=e.strm.avail_in,a&&(a>=e.w_size?(e.matches=2,e.window.set(e.strm.input.subarray(e.strm.next_in-e.w_size,e.strm.next_in),0),e.strstart=e.w_size,e.insert=e.strstart):(e.window_size-e.strstart<=a&&(e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,e.insert>e.strstart&&(e.insert=e.strstart)),e.window.set(e.strm.input.subarray(e.strm.next_in-a,e.strm.next_in),e.strstart),e.strstart+=a,e.insert+=a>e.w_size-e.insert?e.w_size-e.insert:a),e.block_start=e.strstart),e.high_water<e.strstart&&(e.high_water=e.strstart),o?4:t!==zi&&t!==Oi&&0===e.strm.avail_in&&e.strstart===e.block_start?2:(r=e.window_size-e.strstart,e.strm.avail_in>r&&e.block_start>=e.w_size&&(e.block_start-=e.w_size,e.strstart-=e.w_size,e.window.set(e.window.subarray(e.w_size,e.w_size+e.strstart),0),e.matches<2&&e.matches++,r+=e.w_size,e.insert>e.strstart&&(e.insert=e.strstart)),r>e.strm.avail_in&&(r=e.strm.avail_in),r&&(mn(e.strm,e.window,e.strstart,r),e.strstart+=r,e.insert+=r>e.w_size-e.insert?e.w_size-e.insert:r),e.high_water<e.strstart&&(e.high_water=e.strstart),r=e.bi_valid+42>>3,r=e.pending_buf_size-r>65535?65535:e.pending_buf_size-r,s=r>e.w_size?e.w_size:r,n=e.strstart-e.block_start,(n>=s||(n||t===Oi)&&t!==zi&&0===e.strm.avail_in&&n<=r)&&(i=n>r?r:n,o=t===Oi&&0===e.strm.avail_in&&i===n?1:0,Ri(e,e.block_start,i,o),e.block_start+=i,un(e.strm)),o?3:1)},vn=(e,t)=>{let i,n;for(;;){if(e.lookahead<nn){if(bn(e),e.lookahead<nn&&t===zi)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=dn(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-nn&&(e.match_length=wn(e,i)),e.match_length>=3)if(n=Ti(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=dn(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=dn(e,e.ins_h,e.window[e.strstart+1]);else n=Ti(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(fn(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,t===Oi?(fn(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fn(e,!1),0===e.strm.avail_out)?1:2},yn=(e,t)=>{let i,n,r;for(;;){if(e.lookahead<nn){if(bn(e),e.lookahead<nn&&t===zi)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=3&&(e.ins_h=dn(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-nn&&(e.match_length=wn(e,i),e.match_length<=5&&(e.strategy===$i||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,n=Ti(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=dn(e,e.ins_h,e.window[e.strstart+3-1]),i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,n&&(fn(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if(n=Ti(e,0,e.window[e.strstart-1]),n&&fn(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=Ti(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,t===Oi?(fn(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fn(e,!1),0===e.strm.avail_out)?1:2};function An(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}const Cn=[new An(0,0,0,0,Fn),new An(4,4,8,4,vn),new An(4,5,16,8,vn),new An(4,6,32,32,vn),new An(4,4,16,16,yn),new An(8,16,32,32,yn),new An(8,16,128,128,yn),new An(8,32,128,256,yn),new An(32,128,258,1024,yn),new An(32,258,258,4096,yn)];function _n(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=en,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),ln(this.dyn_ltree),ln(this.dyn_dtree),ln(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),ln(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),ln(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const xn=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.status!==rn&&57!==t.status&&69!==t.status&&73!==t.status&&91!==t.status&&103!==t.status&&t.status!==sn&&t.status!==on?1:0},kn=e=>{if(xn(e))return an(e,Vi);e.total_in=e.total_out=0,e.data_type=Ji;const t=e.state;return t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=2===t.wrap?57:t.wrap?rn:sn,e.adler=2===t.wrap?0:1,t.last_flush=-2,Mi(t),qi},In=e=>{const t=kn(e);var i;return t===qi&&((i=e.state).window_size=2*i.w_size,ln(i.head),i.max_lazy_match=Cn[i.level].max_lazy,i.good_match=Cn[i.level].good_length,i.nice_match=Cn[i.level].nice_length,i.max_chain_length=Cn[i.level].max_chain,i.strstart=0,i.block_start=0,i.lookahead=0,i.insert=0,i.match_length=i.prev_length=2,i.match_available=0,i.ins_h=0),t},Sn=(e,t,i,n,r,s)=>{if(!e)return Vi;let o=1;if(t===Gi&&(t=6),n<0?(o=0,n=-n):n>15&&(o=2,n-=16),r<1||r>9||i!==en||n<8||n>15||t<0||t>9||s<0||s>Xi||8===n&&1!==o)return an(e,Vi);8===n&&(n=9);const a=new _n;return e.state=a,a.strm=e,a.status=rn,a.wrap=o,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=r+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+3-1)/3),a.window=new Uint8Array(2*a.w_size),a.head=new Uint16Array(a.hash_size),a.prev=new Uint16Array(a.w_size),a.lit_bufsize=1<<r+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new Uint8Array(a.pending_buf_size),a.sym_buf=a.lit_bufsize,a.sym_end=3*(a.lit_bufsize-1),a.level=t,a.strategy=s,a.method=i,In(e)};var En=(e,t)=>{let i=t.length;if(xn(e))return Vi;const n=e.state,r=n.wrap;if(2===r||1===r&&n.status!==rn||n.lookahead)return Vi;if(1===r&&(e.adler=Ii(e.adler,t,i,0)),n.wrap=0,i>=n.w_size){0===r&&(ln(n.head),n.strstart=0,n.block_start=0,n.insert=0);let e=new Uint8Array(n.w_size);e.set(t.subarray(i-n.w_size,i),0),t=e,i=n.w_size}const s=e.avail_in,o=e.next_in,a=e.input;for(e.avail_in=i,e.next_in=0,e.input=t,bn(n);n.lookahead>=3;){let e=n.strstart,t=n.lookahead-2;do{n.ins_h=dn(n,n.ins_h,n.window[e+3-1]),n.prev[e&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=e,e++}while(--t);n.strstart=e,n.lookahead=2,bn(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=o,e.input=a,e.avail_in=s,n.wrap=r,qi},Nn={deflateInit:(e,t)=>Sn(e,t,en,15,8,Zi),deflateInit2:Sn,deflateReset:In,deflateResetKeep:kn,deflateSetHeader:(e,t)=>xn(e)||2!==e.state.wrap?Vi:(e.state.gzhead=t,qi),deflate:(e,t)=>{if(xn(e)||t>Ui||t<0)return e?an(e,Vi):Vi;const i=e.state;if(!e.output||0!==e.avail_in&&!e.input||i.status===on&&t!==Oi)return an(e,0===e.avail_out?Wi:Vi);const n=i.last_flush;if(i.last_flush=t,0!==i.pending){if(un(e),0===e.avail_out)return i.last_flush=-1,qi}else if(0===e.avail_in&&cn(t)<=cn(n)&&t!==Oi)return an(e,Wi);if(i.status===on&&0!==e.avail_in)return an(e,Wi);if(i.status===rn&&0===i.wrap&&(i.status=sn),i.status===rn){let t=en+(i.w_bits-8<<4)<<8,n=-1;if(n=i.strategy>=Ki||i.level<2?0:i.level<6?1:6===i.level?2:3,t|=n<<6,0!==i.strstart&&(t|=32),t+=31-t%31,gn(i,t),0!==i.strstart&&(gn(i,e.adler>>>16),gn(i,65535&e.adler)),e.adler=1,i.status=sn,un(e),0!==i.pending)return i.last_flush=-1,qi}if(57===i.status)if(e.adler=0,pn(i,31),pn(i,139),pn(i,8),i.gzhead)pn(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),pn(i,255&i.gzhead.time),pn(i,i.gzhead.time>>8&255),pn(i,i.gzhead.time>>16&255),pn(i,i.gzhead.time>>24&255),pn(i,9===i.level?2:i.strategy>=Ki||i.level<2?4:0),pn(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(pn(i,255&i.gzhead.extra.length),pn(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=Ei(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69;else if(pn(i,0),pn(i,0),pn(i,0),pn(i,0),pn(i,0),pn(i,9===i.level?2:i.strategy>=Ki||i.level<2?4:0),pn(i,3),i.status=sn,un(e),0!==i.pending)return i.last_flush=-1,qi;if(69===i.status){if(i.gzhead.extra){let t=i.pending,n=(65535&i.gzhead.extra.length)-i.gzindex;for(;i.pending+n>i.pending_buf_size;){let r=i.pending_buf_size-i.pending;if(i.pending_buf.set(i.gzhead.extra.subarray(i.gzindex,i.gzindex+r),i.pending),i.pending=i.pending_buf_size,i.gzhead.hcrc&&i.pending>t&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex+=r,un(e),0!==i.pending)return i.last_flush=-1,qi;t=0,n-=r}let r=new Uint8Array(i.gzhead.extra);i.pending_buf.set(r.subarray(i.gzindex,i.gzindex+n),i.pending),i.pending+=n,i.gzhead.hcrc&&i.pending>t&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-t,t)),i.gzindex=0}i.status=73}if(73===i.status){if(i.gzhead.name){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-n,n)),un(e),0!==i.pending)return i.last_flush=-1,qi;n=0}t=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,pn(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-n,n)),i.gzindex=0}i.status=91}if(91===i.status){if(i.gzhead.comment){let t,n=i.pending;do{if(i.pending===i.pending_buf_size){if(i.gzhead.hcrc&&i.pending>n&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-n,n)),un(e),0!==i.pending)return i.last_flush=-1,qi;n=0}t=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,pn(i,t)}while(0!==t);i.gzhead.hcrc&&i.pending>n&&(e.adler=Ei(e.adler,i.pending_buf,i.pending-n,n))}i.status=103}if(103===i.status){if(i.gzhead.hcrc){if(i.pending+2>i.pending_buf_size&&(un(e),0!==i.pending))return i.last_flush=-1,qi;pn(i,255&e.adler),pn(i,e.adler>>8&255),e.adler=0}if(i.status=sn,un(e),0!==i.pending)return i.last_flush=-1,qi}if(0!==e.avail_in||0!==i.lookahead||t!==zi&&i.status!==on){let n=0===i.level?Fn(i,t):i.strategy===Ki?((e,t)=>{let i;for(;;){if(0===e.lookahead&&(bn(e),0===e.lookahead)){if(t===zi)return 1;break}if(e.match_length=0,i=Ti(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(fn(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Oi?(fn(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fn(e,!1),0===e.strm.avail_out)?1:2})(i,t):i.strategy===Yi?((e,t)=>{let i,n,r,s;const o=e.window;for(;;){if(e.lookahead<=tn){if(bn(e),e.lookahead<=tn&&t===zi)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=e.strstart-1,n=o[r],n===o[++r]&&n===o[++r]&&n===o[++r])){s=e.strstart+tn;do{}while(n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&n===o[++r]&&r<s);e.match_length=tn-(s-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(i=Ti(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=Ti(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(fn(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,t===Oi?(fn(e,!0),0===e.strm.avail_out?3:4):e.sym_next&&(fn(e,!1),0===e.strm.avail_out)?1:2})(i,t):Cn[i.level].func(i,t);if(3!==n&&4!==n||(i.status=on),1===n||3===n)return 0===e.avail_out&&(i.last_flush=-1),qi;if(2===n&&(t===Hi?Li(i):t!==Ui&&(Ri(i,0,0,!1),t===Pi&&(ln(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),un(e),0===e.avail_out))return i.last_flush=-1,qi}return t!==Oi?qi:i.wrap<=0?Qi:(2===i.wrap?(pn(i,255&e.adler),pn(i,e.adler>>8&255),pn(i,e.adler>>16&255),pn(i,e.adler>>24&255),pn(i,255&e.total_in),pn(i,e.total_in>>8&255),pn(i,e.total_in>>16&255),pn(i,e.total_in>>24&255)):(gn(i,e.adler>>>16),gn(i,65535&e.adler)),un(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?qi:Qi)},deflateEnd:e=>{if(xn(e))return Vi;const t=e.state.status;return e.state=null,t===sn?an(e,ji):qi},deflateSetDictionary:En,deflateInfo:"pako deflate (from Nodeca project)"};const Bn=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var Mn={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(const t in i)Bn(i,t)&&(e[t]=i[t])}}return e},flattenChunks:e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i}};let Rn=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(FA){Rn=!1}const Dn=new Uint8Array(256);for(let vA=0;vA<256;vA++)Dn[vA]=vA>=252?6:vA>=248?5:vA>=240?4:vA>=224?3:vA>=192?2:1;Dn[254]=Dn[254]=1;var Tn={string2buf:e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,s,o=e.length,a=0;for(r=0;r<o;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),a+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(a),s=0,r=0;s<a;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[s++]=i:i<2048?(t[s++]=192|i>>>6,t[s++]=128|63&i):i<65536?(t[s++]=224|i>>>12,t[s++]=128|i>>>6&63,t[s++]=128|63&i):(t[s++]=240|i>>>18,t[s++]=128|i>>>12&63,t[s++]=128|i>>>6&63,t[s++]=128|63&i);return t},buf2string:(e,t)=>{const i=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const s=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){s[r++]=t;continue}let o=Dn[t];if(o>4)s[r++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?s[r++]=65533:t<65536?s[r++]=t:(t-=65536,s[r++]=55296|t>>10&1023,s[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Rn)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i="";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(s,r)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+Dn[e[i]]>t?i:t}};var Ln=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const zn=Object.prototype.toString,{Z_NO_FLUSH:Hn,Z_SYNC_FLUSH:Pn,Z_FULL_FLUSH:On,Z_FINISH:Un,Z_OK:qn,Z_STREAM_END:Qn,Z_DEFAULT_COMPRESSION:Vn,Z_DEFAULT_STRATEGY:jn,Z_DEFLATED:Wn}=Bi;function Gn(e){this.options=Mn.assign({level:Vn,method:Wn,chunkSize:16384,windowBits:15,memLevel:8,strategy:jn},e||{});let t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ln,this.strm.avail_out=0;let i=Nn.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==qn)throw new Error(Ni[i]);if(t.header&&Nn.deflateSetHeader(this.strm,t.header),t.dictionary){let e;if(e="string"==typeof t.dictionary?Tn.string2buf(t.dictionary):"[object ArrayBuffer]"===zn.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,i=Nn.deflateSetDictionary(this.strm,e),i!==qn)throw new Error(Ni[i]);this._dict_set=!0}}function $n(e,t){const i=new Gn(t);if(i.push(e,!0),i.err)throw i.msg||Ni[i.err];return i.result}Gn.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize;let r,s;if(this.ended)return!1;for(s=t===~~t?t:!0===t?Un:Hn,"string"==typeof e?i.input=Tn.string2buf(e):"[object ArrayBuffer]"===zn.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;)if(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),(s===Pn||s===On)&&i.avail_out<=6)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else{if(r=Nn.deflate(i,s),r===Qn)return i.next_out>0&&this.onData(i.output.subarray(0,i.next_out)),r=Nn.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===qn;if(0!==i.avail_out){if(s>0&&i.next_out>0)this.onData(i.output.subarray(0,i.next_out)),i.avail_out=0;else if(0===i.avail_in)break}else this.onData(i.output)}return!0},Gn.prototype.onData=function(e){this.chunks.push(e)},Gn.prototype.onEnd=function(e){e===qn&&(this.result=Mn.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Kn=function(e,t){return(t=t||{}).raw=!0,$n(e,t)},Yn=function(e,t){return(t=t||{}).gzip=!0,$n(e,t)},Xn={Deflate:Gn,deflate:$n,deflateRaw:Kn,gzip:Yn,constants:Bi};const Zn=16209;var Jn=function(e,t){let i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v,y,A,C,_,x;const k=e.state;i=e.next_in,_=e.input,n=i+(e.avail_in-5),r=e.next_out,x=e.output,s=r-(t-e.avail_out),o=r+(e.avail_out-257),a=k.dmax,c=k.wsize,l=k.whave,h=k.wnext,d=k.window,u=k.hold,f=k.bits,p=k.lencode,g=k.distcode,m=(1<<k.lenbits)-1,w=(1<<k.distbits)-1;e:do{f<15&&(u+=_[i++]<<f,f+=8,u+=_[i++]<<f,f+=8),b=p[u&m];t:for(;;){if(F=b>>>24,u>>>=F,f-=F,F=b>>>16&255,0===F)x[r++]=65535&b;else{if(!(16&F)){if(64&F){if(32&F){k.mode=16191;break e}e.msg="invalid literal/length code",k.mode=Zn;break e}b=p[(65535&b)+(u&(1<<F)-1)];continue t}for(v=65535&b,F&=15,F&&(f<F&&(u+=_[i++]<<f,f+=8),v+=u&(1<<F)-1,u>>>=F,f-=F),f<15&&(u+=_[i++]<<f,f+=8,u+=_[i++]<<f,f+=8),b=g[u&w];;){if(F=b>>>24,u>>>=F,f-=F,F=b>>>16&255,16&F){if(y=65535&b,F&=15,f<F&&(u+=_[i++]<<f,f+=8,f<F&&(u+=_[i++]<<f,f+=8)),y+=u&(1<<F)-1,y>a){e.msg="invalid distance too far back",k.mode=Zn;break e}if(u>>>=F,f-=F,F=r-s,y>F){if(F=y-F,F>l&&k.sane){e.msg="invalid distance too far back",k.mode=Zn;break e}if(A=0,C=d,0===h){if(A+=c-F,F<v){v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}}else if(h<F){if(A+=c+h-F,F-=h,F<v){v-=F;do{x[r++]=d[A++]}while(--F);if(A=0,h<v){F=h,v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}}}else if(A+=h-F,F<v){v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}for(;v>2;)x[r++]=C[A++],x[r++]=C[A++],x[r++]=C[A++],v-=3;v&&(x[r++]=C[A++],v>1&&(x[r++]=C[A++]))}else{A=r-y;do{x[r++]=x[A++],x[r++]=x[A++],x[r++]=x[A++],v-=3}while(v>2);v&&(x[r++]=x[A++],v>1&&(x[r++]=x[A++]))}break}if(64&F){e.msg="invalid distance code",k.mode=Zn;break e}b=g[(65535&b)+(u&(1<<F)-1)]}}break}}while(i<n&&r<o);v=f>>3,i-=v,f-=v<<3,u&=(1<<f)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<o?o-r+257:257-(r-o),k.hold=u,k.bits=f};const er=15,tr=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ir=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),nr=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),rr=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var sr=(e,t,i,n,r,s,o,a)=>{const c=a.bits;let l,h,d,u,f,p,g=0,m=0,w=0,b=0,F=0,v=0,y=0,A=0,C=0,_=0,x=null;const k=new Uint16Array(16),I=new Uint16Array(16);let S,E,N,B=null;for(g=0;g<=er;g++)k[g]=0;for(m=0;m<n;m++)k[t[i+m]]++;for(F=c,b=er;b>=1&&0===k[b];b--);if(F>b&&(F=b),0===b)return r[s++]=20971520,r[s++]=20971520,a.bits=1,0;for(w=1;w<b&&0===k[w];w++);for(F<w&&(F=w),A=1,g=1;g<=er;g++)if(A<<=1,A-=k[g],A<0)return-1;if(A>0&&(0===e||1!==b))return-1;for(I[1]=0,g=1;g<er;g++)I[g+1]=I[g]+k[g];for(m=0;m<n;m++)0!==t[i+m]&&(o[I[t[i+m]]++]=m);if(0===e?(x=B=o,p=20):1===e?(x=tr,B=ir,p=257):(x=nr,B=rr,p=0),_=0,m=0,g=w,f=s,v=F,y=0,d=-1,C=1<<F,u=C-1,1===e&&C>852||2===e&&C>592)return 1;for(;;){S=g-y,o[m]+1<p?(E=0,N=o[m]):o[m]>=p?(E=B[o[m]-p],N=x[o[m]-p]):(E=96,N=0),l=1<<g-y,h=1<<v,w=h;do{h-=l,r[f+(_>>y)+h]=S<<24|E<<16|N}while(0!==h);for(l=1<<g-1;_&l;)l>>=1;if(0!==l?(_&=l-1,_+=l):_=0,m++,0==--k[g]){if(g===b)break;g=t[i+o[m]]}if(g>F&&(_&u)!==d){for(0===y&&(y=F),f+=w,v=g-y,A=1<<v;v+y<b&&(A-=k[v+y],!(A<=0));)v++,A<<=1;if(C+=1<<v,1===e&&C>852||2===e&&C>592)return 1;d=_&u,r[d]=F<<24|v<<16|f-s}}return 0!==_&&(r[f+_]=g-y<<24|64<<16),a.bits=F,0};const{Z_FINISH:or,Z_BLOCK:ar,Z_TREES:cr,Z_OK:lr,Z_STREAM_END:hr,Z_NEED_DICT:dr,Z_STREAM_ERROR:ur,Z_DATA_ERROR:fr,Z_MEM_ERROR:pr,Z_BUF_ERROR:gr,Z_DEFLATED:mr}=Bi,wr=16180,br=16190,Fr=16191,vr=16192,yr=16194,Ar=16199,Cr=16200,_r=16206,xr=16209,kr=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function Ir(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const Sr=e=>{if(!e)return 1;const t=e.state;return!t||t.strm!==e||t.mode<wr||t.mode>16211?1:0},Er=e=>{if(Sr(e))return ur;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=wr,t.last=0,t.havedict=0,t.flags=-1,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,lr},Nr=e=>{if(Sr(e))return ur;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,Er(e)},Br=(e,t)=>{let i;if(Sr(e))return ur;const n=e.state;return t<0?(i=0,t=-t):(i=5+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?ur:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,Nr(e))},Mr=(e,t)=>{if(!e)return ur;const i=new Ir;e.state=i,i.strm=e,i.window=null,i.mode=wr;const n=Br(e,t);return n!==lr&&(e.state=null),n};let Rr,Dr,Tr=!0;const Lr=e=>{if(Tr){Rr=new Int32Array(512),Dr=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(sr(1,e.lens,0,288,Rr,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;sr(2,e.lens,0,32,Dr,0,e.work,{bits:5}),Tr=!1}e.lencode=Rr,e.lenbits=9,e.distcode=Dr,e.distbits=5},zr=(e,t,i,n)=>{let r;const s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),n>=s.wsize?(s.window.set(t.subarray(i-s.wsize,i),0),s.wnext=0,s.whave=s.wsize):(r=s.wsize-s.wnext,r>n&&(r=n),s.window.set(t.subarray(i-n,i-n+r),s.wnext),(n-=r)?(s.window.set(t.subarray(i-n,i),0),s.wnext=n,s.whave=s.wsize):(s.wnext+=r,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=r))),0};var Hr=(e,t)=>{let i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v,y,A,C,_=0;const x=new Uint8Array(4);let k,I;const S=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(Sr(e)||!e.output||!e.input&&0!==e.avail_in)return ur;i=e.state,i.mode===Fr&&(i.mode=vr),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,l=i.hold,h=i.bits,d=a,u=c,C=lr;e:for(;;)switch(i.mode){case wr:if(0===i.wrap){i.mode=vr;break}for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(2&i.wrap&&35615===l){0===i.wbits&&(i.wbits=15),i.check=0,x[0]=255&l,x[1]=l>>>8&255,i.check=Ei(i.check,x,2,0),l=0,h=0,i.mode=16181;break}if(i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&l)<<8)+(l>>8))%31){e.msg="incorrect header check",i.mode=xr;break}if((15&l)!==mr){e.msg="unknown compression method",i.mode=xr;break}if(l>>>=4,h-=4,A=8+(15&l),0===i.wbits&&(i.wbits=A),A>15||A>i.wbits){e.msg="invalid window size",i.mode=xr;break}i.dmax=1<<i.wbits,i.flags=0,e.adler=i.check=1,i.mode=512&l?16189:Fr,l=0,h=0;break;case 16181:for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(i.flags=l,(255&i.flags)!==mr){e.msg="unknown compression method",i.mode=xr;break}if(57344&i.flags){e.msg="unknown header flags set",i.mode=xr;break}i.head&&(i.head.text=l>>8&1),512&i.flags&&4&i.wrap&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Ei(i.check,x,2,0)),l=0,h=0,i.mode=16182;case 16182:for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.head&&(i.head.time=l),512&i.flags&&4&i.wrap&&(x[0]=255&l,x[1]=l>>>8&255,x[2]=l>>>16&255,x[3]=l>>>24&255,i.check=Ei(i.check,x,4,0)),l=0,h=0,i.mode=16183;case 16183:for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.head&&(i.head.xflags=255&l,i.head.os=l>>8),512&i.flags&&4&i.wrap&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Ei(i.check,x,2,0)),l=0,h=0,i.mode=16184;case 16184:if(1024&i.flags){for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.length=l,i.head&&(i.head.extra_len=l),512&i.flags&&4&i.wrap&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Ei(i.check,x,2,0)),l=0,h=0}else i.head&&(i.head.extra=null);i.mode=16185;case 16185:if(1024&i.flags&&(f=i.length,f>a&&(f=a),f&&(i.head&&(A=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(s,s+f),A)),512&i.flags&&4&i.wrap&&(i.check=Ei(i.check,n,f,s)),a-=f,s+=f,i.length-=f),i.length))break e;i.length=0,i.mode=16186;case 16186:if(2048&i.flags){if(0===a)break e;f=0;do{A=n[s+f++],i.head&&A&&i.length<65536&&(i.head.name+=String.fromCharCode(A))}while(A&&f<a);if(512&i.flags&&4&i.wrap&&(i.check=Ei(i.check,n,f,s)),a-=f,s+=f,A)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=16187;case 16187:if(4096&i.flags){if(0===a)break e;f=0;do{A=n[s+f++],i.head&&A&&i.length<65536&&(i.head.comment+=String.fromCharCode(A))}while(A&&f<a);if(512&i.flags&&4&i.wrap&&(i.check=Ei(i.check,n,f,s)),a-=f,s+=f,A)break e}else i.head&&(i.head.comment=null);i.mode=16188;case 16188:if(512&i.flags){for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(4&i.wrap&&l!==(65535&i.check)){e.msg="header crc mismatch",i.mode=xr;break}l=0,h=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=Fr;break;case 16189:for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}e.adler=i.check=kr(l),l=0,h=0,i.mode=br;case br:if(0===i.havedict)return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,dr;e.adler=i.check=1,i.mode=Fr;case Fr:if(t===ar||t===cr)break e;case vr:if(i.last){l>>>=7&h,h-=7&h,i.mode=_r;break}for(;h<3;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}switch(i.last=1&l,l>>>=1,h-=1,3&l){case 0:i.mode=16193;break;case 1:if(Lr(i),i.mode=Ar,t===cr){l>>>=2,h-=2;break e}break;case 2:i.mode=16196;break;case 3:e.msg="invalid block type",i.mode=xr}l>>>=2,h-=2;break;case 16193:for(l>>>=7&h,h-=7&h;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if((65535&l)!=(l>>>16^65535)){e.msg="invalid stored block lengths",i.mode=xr;break}if(i.length=65535&l,l=0,h=0,i.mode=yr,t===cr)break e;case yr:i.mode=16195;case 16195:if(f=i.length,f){if(f>a&&(f=a),f>c&&(f=c),0===f)break e;r.set(n.subarray(s,s+f),o),a-=f,s+=f,c-=f,o+=f,i.length-=f;break}i.mode=Fr;break;case 16196:for(;h<14;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(i.nlen=257+(31&l),l>>>=5,h-=5,i.ndist=1+(31&l),l>>>=5,h-=5,i.ncode=4+(15&l),l>>>=4,h-=4,i.nlen>286||i.ndist>30){e.msg="too many length or distance symbols",i.mode=xr;break}i.have=0,i.mode=16197;case 16197:for(;i.have<i.ncode;){for(;h<3;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.lens[S[i.have++]]=7&l,l>>>=3,h-=3}for(;i.have<19;)i.lens[S[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,k={bits:i.lenbits},C=sr(0,i.lens,0,19,i.lencode,0,i.work,k),i.lenbits=k.bits,C){e.msg="invalid code lengths set",i.mode=xr;break}i.have=0,i.mode=16198;case 16198:for(;i.have<i.nlen+i.ndist;){for(;_=i.lencode[l&(1<<i.lenbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(b<16)l>>>=m,h-=m,i.lens[i.have++]=b;else{if(16===b){for(I=m+2;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(l>>>=m,h-=m,0===i.have){e.msg="invalid bit length repeat",i.mode=xr;break}A=i.lens[i.have-1],f=3+(3&l),l>>>=2,h-=2}else if(17===b){for(I=m+3;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,A=0,f=3+(7&l),l>>>=3,h-=3}else{for(I=m+7;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,A=0,f=11+(127&l),l>>>=7,h-=7}if(i.have+f>i.nlen+i.ndist){e.msg="invalid bit length repeat",i.mode=xr;break}for(;f--;)i.lens[i.have++]=A}}if(i.mode===xr)break;if(0===i.lens[256]){e.msg="invalid code -- missing end-of-block",i.mode=xr;break}if(i.lenbits=9,k={bits:i.lenbits},C=sr(1,i.lens,0,i.nlen,i.lencode,0,i.work,k),i.lenbits=k.bits,C){e.msg="invalid literal/lengths set",i.mode=xr;break}if(i.distbits=6,i.distcode=i.distdyn,k={bits:i.distbits},C=sr(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,k),i.distbits=k.bits,C){e.msg="invalid distances set",i.mode=xr;break}if(i.mode=Ar,t===cr)break e;case Ar:i.mode=Cr;case Cr:if(a>=6&&c>=258){e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,Jn(e,u),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,l=i.hold,h=i.bits,i.mode===Fr&&(i.back=-1);break}for(i.back=0;_=i.lencode[l&(1<<i.lenbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(w&&!(240&w)){for(F=m,v=w,y=b;_=i.lencode[y+((l&(1<<F+v)-1)>>F)],m=_>>>24,w=_>>>16&255,b=65535&_,!(F+m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=F,h-=F,i.back+=F}if(l>>>=m,h-=m,i.back+=m,i.length=b,0===w){i.mode=16205;break}if(32&w){i.back=-1,i.mode=Fr;break}if(64&w){e.msg="invalid literal/length code",i.mode=xr;break}i.extra=15&w,i.mode=16201;case 16201:if(i.extra){for(I=i.extra;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.length+=l&(1<<i.extra)-1,l>>>=i.extra,h-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=16202;case 16202:for(;_=i.distcode[l&(1<<i.distbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(!(240&w)){for(F=m,v=w,y=b;_=i.distcode[y+((l&(1<<F+v)-1)>>F)],m=_>>>24,w=_>>>16&255,b=65535&_,!(F+m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=F,h-=F,i.back+=F}if(l>>>=m,h-=m,i.back+=m,64&w){e.msg="invalid distance code",i.mode=xr;break}i.offset=b,i.extra=15&w,i.mode=16203;case 16203:if(i.extra){for(I=i.extra;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.offset+=l&(1<<i.extra)-1,l>>>=i.extra,h-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg="invalid distance too far back",i.mode=xr;break}i.mode=16204;case 16204:if(0===c)break e;if(f=u-c,i.offset>f){if(f=i.offset-f,f>i.whave&&i.sane){e.msg="invalid distance too far back",i.mode=xr;break}f>i.wnext?(f-=i.wnext,p=i.wsize-f):p=i.wnext-f,f>i.length&&(f=i.length),g=i.window}else g=r,p=o-i.offset,f=i.length;f>c&&(f=c),c-=f,i.length-=f;do{r[o++]=g[p++]}while(--f);0===i.length&&(i.mode=Cr);break;case 16205:if(0===c)break e;r[o++]=i.length,c--,i.mode=Cr;break;case _r:if(i.wrap){for(;h<32;){if(0===a)break e;a--,l|=n[s++]<<h,h+=8}if(u-=c,e.total_out+=u,i.total+=u,4&i.wrap&&u&&(e.adler=i.check=i.flags?Ei(i.check,r,u,o-u):Ii(i.check,r,u,o-u)),u=c,4&i.wrap&&(i.flags?l:kr(l))!==i.check){e.msg="incorrect data check",i.mode=xr;break}l=0,h=0}i.mode=16207;case 16207:if(i.wrap&&i.flags){for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(4&i.wrap&&l!==(4294967295&i.total)){e.msg="incorrect length check",i.mode=xr;break}l=0,h=0}i.mode=16208;case 16208:C=hr;break e;case xr:C=fr;break e;case 16210:return pr;default:return ur}return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,(i.wsize||u!==e.avail_out&&i.mode<xr&&(i.mode<_r||t!==or))&&zr(e,e.output,e.next_out,u-e.avail_out),d-=e.avail_in,u-=e.avail_out,e.total_in+=d,e.total_out+=u,i.total+=u,4&i.wrap&&u&&(e.adler=i.check=i.flags?Ei(i.check,r,u,e.next_out-u):Ii(i.check,r,u,e.next_out-u)),e.data_type=i.bits+(i.last?64:0)+(i.mode===Fr?128:0)+(i.mode===Ar||i.mode===yr?256:0),(0===d&&0===u||t===or)&&C===lr&&(C=gr),C},Pr={inflateReset:Nr,inflateReset2:Br,inflateResetKeep:Er,inflateInit:e=>Mr(e,15),inflateInit2:Mr,inflate:Hr,inflateEnd:e=>{if(Sr(e))return ur;let t=e.state;return t.window&&(t.window=null),e.state=null,lr},inflateGetHeader:(e,t)=>{if(Sr(e))return ur;const i=e.state;return 2&i.wrap?(i.head=t,t.done=!1,lr):ur},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,s;return Sr(e)?ur:(n=e.state,0!==n.wrap&&n.mode!==br?ur:n.mode===br&&(r=1,r=Ii(r,t,i,0),r!==n.check)?fr:(s=zr(e,t,i,i),s?(n.mode=16210,pr):(n.havedict=1,lr)))},inflateInfo:"pako inflate (from Nodeca project)"};var Or=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const Ur=Object.prototype.toString,{Z_NO_FLUSH:qr,Z_FINISH:Qr,Z_OK:Vr,Z_STREAM_END:jr,Z_NEED_DICT:Wr,Z_STREAM_ERROR:Gr,Z_DATA_ERROR:$r,Z_MEM_ERROR:Kr}=Bi;function Yr(e){this.options=Mn.assign({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(15&t.windowBits||(t.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ln,this.strm.avail_out=0;let i=Pr.inflateInit2(this.strm,t.windowBits);if(i!==Vr)throw new Error(Ni[i]);if(this.header=new Or,Pr.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=Tn.string2buf(t.dictionary):"[object ArrayBuffer]"===Ur.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=Pr.inflateSetDictionary(this.strm,t.dictionary),i!==Vr)))throw new Error(Ni[i])}function Xr(e,t){const i=new Yr(t);if(i.push(e),i.err)throw i.msg||Ni[i.err];return i.result}Yr.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let s,o,a;if(this.ended)return!1;for(o=t===~~t?t:!0===t?Qr:qr,"[object ArrayBuffer]"===Ur.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),s=Pr.inflate(i,o),s===Wr&&r&&(s=Pr.inflateSetDictionary(i,r),s===Vr?s=Pr.inflate(i,o):s===$r&&(s=Wr));i.avail_in>0&&s===jr&&i.state.wrap>0&&0!==e[i.next_in];)Pr.inflateReset(i),s=Pr.inflate(i,o);switch(s){case Gr:case $r:case Wr:case Kr:return this.onEnd(s),this.ended=!0,!1}if(a=i.avail_out,i.next_out&&(0===i.avail_out||s===jr))if("string"===this.options.to){let e=Tn.utf8border(i.output,i.next_out),t=i.next_out-e,r=Tn.buf2string(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(s!==Vr||0!==a){if(s===jr)return s=Pr.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},Yr.prototype.onData=function(e){this.chunks.push(e)},Yr.prototype.onEnd=function(e){e===Vr&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Mn.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Zr=function(e,t){return(t=t||{}).raw=!0,Xr(e,t)},Jr={Inflate:Yr,inflate:Xr,inflateRaw:Zr,ungzip:Xr,constants:Bi};const{Deflate:es,deflate:ts,deflateRaw:is,gzip:ns}=Xn,{Inflate:rs,inflate:ss,inflateRaw:os,ungzip:as}=Jr;var cs=is,ls=ss,hs=os,ds=as;const us=4;function fs(e){const t=ArrayBuffer.isView(e)?e:new Uint8Array(e);return 31===t[0]&&139===t[1]}function ps(e){const t=ArrayBuffer.isView(e)?e:new Uint8Array(e);return 0!==(t[3]&us)&&66===t[12]&&67===t[13]?gs(t.buffer):ds(t)}function gs(e,t){const i=[];let n=0,r=0;for(t=t||e.byteLength-18;n<t;)try{const t=ArrayBuffer.isView(e)?e:new Uint8Array(e,n,18),s=t[11]<<8|t[10],o=(t[3],t[12],t[13],t[15],t[14],1+(t[17]<<8|t[16])),a=12+s+n,c=e.byteLength-a,l=o-s-19;if(c<l||l<=0)break;const h=new Uint8Array(e,a,l),d=hs(h);n+=l-1+26,r+=d.byteLength,i.push(d)}catch(e){console.error(e);break}if(1===i.length)return i[0];{const e=new Uint8Array(r);let t=0;for(let n=0;n<i.length;++n){var s=new Uint8Array(i[n]);bs(s,0,e,t,s.length),t+=s.length}return e}}function ms(e){const t=ArrayBuffer.isView(e)?e:new Uint8Array(e);return 1+(t[17]<<8|t[16])}const ws="function"==typeof new Uint8Array(1).subarray;function bs(e,t,i,n,r){if(0!==r){if(!e)throw"Undef src";if(!i)throw"Undef dest";0===t&&r===e.length?Fs(e,i,n):ws?Fs(e.subarray(t,t+r),i,n):1===e.BYTES_PER_ELEMENT&&r>100?Fs(new Uint8Array(e.buffer,e.byteOffset+t,r),i,n):function(e,t,i,n,r){for(let s=0;s<r;++s)i[n+s]=e[t+s]}(e,t,i,n,r)}}function Fs(e,t,i){t.set(e,i)}function vs(e,t){const i=e.split(","),n=i[0].split(":")[1];let r=i[1];if(n.indexOf("base64")>=0){r=atob(r);const e=new Uint8Array(r.length);for(let t=0;t<r.length;t++)e[t]=r.charCodeAt(t);let i;return i=t||n.indexOf("gzip")>0?ds(e):e,i}return decodeURIComponent(r)}const ys={lerp:(e,t,i)=>(1-i)*e+i*t,mean:function(e){var t,i=0,n=0;for(t=0;t<e.length;t++)isNaN(e[t])||(i+=e[t],n++);return n>0?i/n:0},meanAndStdev:function(e){var t,i,n=0,r=0,s=0;for(i=0;i<e.length;i++)t=e[i],isNaN(t)||(n+=t,r+=t*t,s++);return s>0?{mean:n/s,stdev:Math.sqrt(r-n*n/s)}:{mean:0,stdev:0}},median:function(e){var t=e.length;return e.sort(),t%2==0?(e[t/2-1]+e[t/2])/2:e[(t-1)/2]},percentile:function(e,t){if(0!==e.length){var i=Math.floor(e.length*((100-t)/100));return 0===i?(e.sort((function(e,t){return t-e})),e[i]):function(e,t){var i,n=new As;for(i=0;i<e.length;i++){var r=e[i];(n.content.length<t||r>n.content[0])&&(n.content.length===t&&n.pop(),n.push(r))}return n.content[0]}(e,i)}},clamp:function(e,t,i){return Math.min(Math.max(e,t),i)},log2:function(e){return Math.log(e)/Math.LN2}};function As(){this.content=[]}function Cs(e,t){return Math.random()*(t-e)+e}As.prototype={push:function(e){this.content.push(e),this.bubbleUp(this.content.length-1)},pop:function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),e},remove:function(e){for(var t=this.content.length,i=0;i<t;i++)if(this.content[i]===e){var n=this.content.pop();if(i===t-1)break;this.content[i]=n,this.bubbleUp(i),this.sinkDown(i);break}},size:function(){return this.content.length},bubbleUp:function(e){for(var t=this.content[e],i=t;e>0;){var n=Math.floor((e+1)/2)-1,r=this.content[n];if(i>=r)break;this.content[n]=t,this.content[e]=r,e=n}},sinkDown:function(e){for(var t=this.content.length,i=this.content[e],n=i;;){var r=2*(e+1),s=r-1,o=null;if(s<t){var a=this.content[s],c=a;a<n&&(o=s)}if(r<t)this.content[r]<(null==o?n:c)&&(o=r);if(null==o)break;this.content[e]=this.content[o],this.content[o]=i,e=o}}};const _s={rgbListFromHSV:()=>{let e=[];for(let t=1;t>=.5;t-=.1)for(let i=0;i<1;i+=1/28){const n="rgb("+_s.hsvToRgb(i,1,t).join(",")+")";e.push(n)}return e.pop(),e.push(_s.rgbColor(16,16,16)),e},rgbToHex:function(e){return(e=e.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&4===e.length?"#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2):""},hexToRgb:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);if(null!==t)return"rgb("+parseInt(t[1],16)+","+parseInt(t[2],16)+","+parseInt(t[3],16)+")"},hsvToRgb:function(e,t,i){var n,r,s,o=Math.floor(6*e),a=6*e-o,c=i*(1-t),l=i*(1-a*t),h=i*(1-(1-a)*t);switch(o%6){case 0:n=i,r=h,s=c;break;case 1:n=l,r=i,s=c;break;case 2:n=c,r=i,s=h;break;case 3:n=c,r=l,s=i;break;case 4:n=h,r=c,s=i;break;case 5:n=i,r=c,s=l}return[Math.floor(255*n),Math.floor(255*r),Math.floor(255*s)]},hslToRgb:function(e,t,i){var n,r,s;if(0===t)n=r=s=i;else{var o=i<.5?i*(1+t):i+t-i*t,a=2*i-o;n=_s.hue2rgb(a,o,e+1/3),r=_s.hue2rgb(a,o,e),s=_s.hue2rgb(a,o,e-1/3)}return[255*n,255*r,255*s]},hue2rgb:(e,t,i)=>(i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e),rgbaColor:function(e,t,i,n){return"rgba("+(e=ys.clamp(e,0,255))+","+(t=ys.clamp(t,0,255))+","+(i=ys.clamp(i,0,255))+","+(n=ys.clamp(n,0,1))+")"},rgbColor:function(e,t,i){return"rgb("+(e=ys.clamp(e,0,255))+","+(t=ys.clamp(t,0,255))+","+(i=ys.clamp(i,0,255))+")"},greyScale:function(e){var t=ys.clamp(e,0,255);return"rgb("+t+","+t+","+t+")"},randomGrey:function(e,t){e=ys.clamp(e,0,255),t=ys.clamp(t,0,255);var i=Math.round(Cs(e,t)).toString(10);return"rgb("+i+","+i+","+i+")"},randomRGB:function(e,t){return e=ys.clamp(e,0,255),t=ys.clamp(t,0,255),"rgb("+Math.round(Cs(e,t)).toString(10)+","+Math.round(Cs(e,t)).toString(10)+","+Math.round(Cs(e,t)).toString(10)+")"},randomRGBConstantAlpha:function(e,t,i){return e=ys.clamp(e,0,255),t=ys.clamp(t,0,255),"rgba("+Math.round(Cs(e,t)).toString(10)+","+Math.round(Cs(e,t)).toString(10)+","+Math.round(Cs(e,t)).toString(10)+","+i+")"},addAlpha:function(e,t){if("0"===e||"."===e)e="rgb(0,0,0)";else{const t=this.colorNameToHex(e);t&&(e=t)}var i=/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e);if(e.startsWith("rgba")){const i=e.lastIndexOf(",");return e.substring(0,i+1)+t.toString()+")"}return i&&(e=_s.hexToRgb(e)),e.startsWith("rgb")?e.replace("rgb","rgba").replace(")",", "+t+")"):(console.log(e+" is not an rgb style string"),e)},rgbComponents:function(e){if("0"===e||"."===e)return[0,0,0];if(/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e))e=_s.hexToRgb(e);else if(!e.startsWith("rgb")){const t=this.colorNameToHex(e);e=this.hexToRgb(t)}if(e.startsWith("rgb("))return e.substring(4,e.length-1).split(",").map((e=>Number.parseInt(e.trim())));if(e.startsWith("rgba("))return e.substring(5,e.length-1).split(",").map(((e,t)=>(e=e.trim(),3===t?Number.parseFloat(e):Number.parseInt(e))));throw Error("Unrecognized color string: color")},getCompositeColor:function(e,t,i){return"rgb("+Math.floor(i*t[0]+(1-i)*e[0])+","+Math.floor(i*t[1]+(1-i)*e[1])+","+Math.floor(i*t[2]+(1-i)*e[2])+")"},createColorString:function(e){const t=this.createColorStringSafe(e);return t||e},createColorStringSafe:function(e){if((e=function(e){return void 0===e||((e.startsWith("'")||e.startsWith('"'))&&(e=e.substring(1)),(e.endsWith("'")||e.endsWith('"'))&&(e=e.substring(0,e.length-1))),e}(e)).startsWith("rgb(")&&e.endsWith(")"))return e;if(e.startsWith("#")&&e.length<8)return e;const t=this.colorNameToHex(e);if(t)return t;const i=e.split(",");return 3===i.length&&xs(i[0])&&xs(i[1])&&xs(i[2])?`rgb(${e})`:void 0},darkenLighten:function(e,t){let i,n=this.colorNameToHex(e);i=n?_s.hexToRgb(n):e.startsWith("rgb(")?e:_s.hexToRgb(e);const r=i.replace(")","").substring(4).split(","),s=Math.max(0,Math.min(255,Number.parseInt(r[0].trim())+t)),o=Math.max(0,Math.min(255,Number.parseInt(r[1].trim())+t)),a=Math.max(0,Math.min(255,Number.parseInt(r[2].trim())+t));return"rgb("+s.toString()+","+o.toString()+","+a.toString()+")"},colorNameToHex:function(e){return{aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4","indianred ":"#cd5c5c","indigo ":"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370d8",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#d87093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",darkgrey:"#a9a9a9",darkslategrey:"#2f4f4f",dimgrey:"#696969",grey:"#808080",lightgray:"#d3d3d3",lightslategrey:"#778899",slategrey:"#708090"}[e]}};function xs(e){const t=Number.parseInt(e);return!Number.isNaN(t)&&t>=0&&t<=255}const ks="googleapis";class Is{constructor(){this.oauthTokens={}}setToken(e,t){t=t||ks,this.oauthTokens[t]=e}getToken(e){let t;e=e||ks;for(let i of Object.keys(this.oauthTokens)){if(Ss(i).test(e)){t=this.oauthTokens[i];break}}return t}removeToken(e){e=e||ks;for(let t of Object.keys(this.oauthTokens)){Ss(t).test(e)&&(this.oauthTokens[t]=void 0)}}}function Ss(e){return new RegExp("^"+e.split(/\*+/).map(Es).join(".*")+"$")}function Es(e){return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")}function Ns(e){return e.includes("googleapis")&&!e.includes("urlshortener")||Bs(e)||Ms(e)}function Bs(e){return e.startsWith("gs://")||e.startsWith("https://www.googleapis.com/storage")||e.startsWith("https://storage.cloud.google.com")||e.startsWith("https://storage.googleapis.com")}function Ms(e){return e.indexOf("drive.google.com")>=0||e.indexOf("www.googleapis.com/drive")>0}function Rs(e){let{bucket:t,object:i}=function(e){let t,i;if(e.startsWith("gs://")){const n=e.indexOf("/",5);if(n>=0){t=e.substring(5,n);const r=e.indexOf("?");i=r<0?e.substring(n+1):e.substring(n+1,r)}}else if(e.startsWith("https://storage.googleapis.com")||e.startsWith("https://storage.cloud.google.com")){const n=e.indexOf("/v1/b/",8);if(n>0){const r=e.indexOf("/o/",n);if(r>0){const s=e.indexOf("?",r);t=e.substring(n+6,r),i=s>0?e.substring(r+3,s):e.substring(r+3)}}else{const n=e.indexOf("/",8),r=e.indexOf("/",n+1),s=e.indexOf("?",r);r>0&&(t=e.substring(n+1,r),i=s<0?e.substring(r+1):e.substring(r+1,s))}}else if(e.startsWith("https://www.googleapis.com/storage/v1/b")){const n=e.indexOf("/v1/b/",8),r=e.indexOf("/o/",n);if(r>0){const s=e.indexOf("?",r);t=e.substring(n+6,r),i=s>0?e.substring(r+3,s):e.substring(r+3)}}if(t&&i)return{bucket:t,object:i};throw Error(`Unrecognized Google Storage URI: ${e}`)}(e);i=function(e){let t="";return e.split("").forEach((function(e){Ds.has(e)?t+=Ds.get(e):t+=e})),t}(i);const n=e.indexOf("?");return`https://storage.googleapis.com/storage/v1/b/${t}/o/${i}${n>0?e.substring(n)+"&alt=media":"?alt=media"}`}const Ds=new Map;function Ts(){return window.google&&window.google.igv}async function Ls(e){if(!Ts())throw Error("Google oAuth has not been initialized");if(google.igv.tokenResponse&&Date.now()<google.igv.tokenExpiresAt&&google.accounts.oauth2.hasGrantedAllScopes(google.igv.tokenResponse,e))return google.igv.tokenResponse.access_token;{const t=google.igv.tokenClient;return new Promise(((i,n)=>{try{t.callback=e=>{void 0!==e.error&&n(e),google.igv.tokenResponse=e,google.igv.tokenExpiresAt=Date.now()+1e3*e.expires_in,i(e.access_token)},t.requestAccessToken({scope:e})}catch(e){console.log(e)}}))}}function zs(){return google.igv.apiKey}function Hs(e){var t=Ps(e);return t?"https://www.googleapis.com/drive/v3/files/"+t+"?alt=media&supportsTeamDrives=true":e}function Ps(e){if(e.includes("/open?id=")){const t=e.indexOf("/open?id=")+9,i=e.indexOf("&");if(t>0&&i>t)return e.substring(t,i);if(t>0)return e.substring(t)}else{if(e.includes("/file/d/")){const t=e.indexOf("/file/d/")+8,i=e.lastIndexOf("/");return e.substring(t,i)}if(e.startsWith("https://www.googleapis.com/drive")){let t=e.indexOf("/files/");const i=e.indexOf("?");if(t>0)return t+=7,i>0?e.substring(t,i):e.substring(t)}}throw Error("Unknown Google Drive url format: "+e)}Ds.set("!","%21"),Ds.set("#","%23"),Ds.set("$","%24"),Ds.set("%","%25"),Ds.set("&","%26"),Ds.set("'","%27"),Ds.set("(","%28"),Ds.set(")","%29"),Ds.set("*","%2A"),Ds.set("+","%2B"),Ds.set(",","%2C"),Ds.set("/","%2F"),Ds.set(":","%3A"),Ds.set(";","%3B"),Ds.set("=","%3D"),Ds.set("?","%3F"),Ds.set("@","%40"),Ds.set("[","%5B"),Ds.set("]","%5D"),Ds.set(" ","%20");class Os{constructor(e){this.requestsPerSecond=e.requestsPerSecond||10,this.lastStartTime=0,this.queued=[]}add(e,t){var i=this;return new Promise((function(t,n){i.queued.push({resolve:t,reject:n,asyncFunction:e}),i.dequeue()}))}addAll(e,t){var i=e.map(function(e){return this.add(e,t)}.bind(this));return Promise.all(i)}dequeue(){if(this.queued.length>0){var e=new Date,t=1e3/this.requestsPerSecond+1,i=e-this.lastStartTime;i>=t?this._execute():setTimeout(function(){this.dequeue()}.bind(this),t-i)}}async _execute(){this.lastStartTime=new Date;var e=this.queued.shift();const t=e.asyncFunction;try{const i=await t();e.resolve(i)}catch(t){e.reject(t)}}}function Us(){if(Ts()){return Ts()&&google.igv.tokenResponse&&Date.now()<google.igv.tokenExpiresAt?google.igv.tokenResponse.access_token:void 0}}function qs(e){let t;return t=fs(e)?ps(e):new Uint8Array(e),"TextDecoder"in function(){if("undefined"!=typeof self)return self;return"undefined"!=typeof global?global:window}()?(new TextDecoder).decode(t):function(e){var t="",i=0;for(;i<e.length;){var n=e[i],r=0,s=0;if(n<=127?(r=0,s=255&n):n<=223?(r=1,s=31&n):n<=239?(r=2,s=15&n):n<=244&&(r=3,s=7&n),e.length-i-r>0)for(var o=0;o<r;)s=s<<6|63&(n=e[i+o+1]),o+=1;else s=65533,r=e.length-i;t+=String.fromCodePoint(s),i+=r+1}return t}(t)}const Qs=new class{constructor(){this.apiKey=void 0,this.googleThrottle=new Os({requestsPerSecond:8}),this.RANGE_WARNING_GIVEN=!1,this.oauth=new Is}setApiKey(e){this.apiKey=e}async loadArrayBuffer(e,t){return(t=t||{}).responseType||(t.responseType="arraybuffer"),Ht(e)?this._loadFileSlice(e,t):this.load(e,t)}async loadByteArray(e,t){const i=await this.loadArrayBuffer(e,t);let n;return n=fs(i)?ps(i):new Uint8Array(i),n}async loadJson(e,t){"POST"===((t=t||{}).method||(t.sendData?"POST":"GET"))&&(t.contentType="application/json");const i=await this.loadString(e,t);return i?JSON.parse(i):i}async loadString(e,t){return t=t||{},e instanceof File?this._loadStringFromFile(e,t):this._loadStringFromUrl(e,t)}async load(e,t){t=t||{};const i=typeof e;if(Ht(e=await("function"==typeof e?e():e)))return this._loadFileSlice(e,t);if("function"==typeof e.startsWith){if(e.startsWith("data:")){const i=vs(e).buffer;if(t.range){const e=t.range.size?t.range.start+t.range.size:i.byteLength;return i.slice(t.range.start,e)}return i}return e.startsWith("https://drive.google.com")&&(e=Hs(e)),Ms(e)||e.startsWith("https://www.dropbox.com")?this.googleThrottle.add((async()=>this._loadURL(e,t))):this._loadURL(e,t)}throw Error(`url must be either a 'File', 'string', 'function', or 'Promise'.  Actual type: ${i}`)}async _loadURL(e,t){const i=this,n=e;e=function(e){return e.startsWith("https://www.dropbox.com")?e.replace("//www.dropbox.com","//dl.dropboxusercontent.com"):e.startsWith("https://drive.google.com")?Hs(e):e.includes("//www.broadinstitute.org/igvdata")?e.replace("//www.broadinstitute.org/igvdata","//data.broadinstitute.org/igvdata"):e.includes("//igvdata.broadinstitute.org")?e.replace("//igvdata.broadinstitute.org","//s3.amazonaws.com/igv.broadinstitute.org"):e.includes("//igv.genepattern.org")?e.replace("//igv.genepattern.org","//igv-genepattern-org.s3.amazonaws.com"):e.startsWith("ftp://ftp.ncbi.nlm.nih.gov/geo")?e.replace("ftp://","https://"):e}(e);let r=(t=t||{}).oauthToken||this.getOauthToken(e);return r&&(r=await("function"==typeof r?r():r)),new Promise((function(s,o){Ns(e)&&!function(e){return e.indexOf("X-Goog-Signature")>-1}(e)&&(Bs(e)&&(e=Rs(e)),Ms(e=function(e){let t=Qs.apiKey;t||"undefined"==typeof gapi||(t=gapi.apiKey);if(void 0!==t&&!e.includes("key=")){const i=e.includes("?")?"&":"?";e=e+i+"key="+t}return e}(e))&&function(e){if(e.includes("supportsTeamDrive"))return e;{const t=e.includes("?")?"&":"?";e=e+t+"supportsTeamDrive=true"}}(e),r||(r=Us()));const a=t.headers||{};r&&function(e,t){t&&(e["Cache-Control"]="no-cache",e.Authorization="Bearer "+t)}(a,r);const c=t.range,l=new XMLHttpRequest,h=t.sendData||t.body,d=t.method||(h?"POST":"GET"),u=t.responseType,f=t.contentType,p=t.mimeType;if(l.open(d,e),t.timeout&&(l.timeout=t.timeout),c){let e="";c.size&&(e=c.start+c.size-1),l.setRequestHeader("Range","bytes="+c.start+"-"+e)}if(f&&l.setRequestHeader("Content-Type",f),p&&l.overrideMimeType(p),u&&(l.responseType=u),a)for(let e of Object.keys(a)){const t=a[e];l.setRequestHeader(e,t)}!0===t.withCredentials&&(l.withCredentials=!0),l.onload=async function(n){if(0===l.status||l.status>=200&&l.status<=300)if("HEAD"===t.method){const e=t.requestedHeaders||["content-length"],i={};for(let t of e)i[t]=l.getResponseHeader(t);s(i)}else c&&206!==l.status&&0!==c.start?(l.response.length>1e5&&!i.RANGE_WARNING_GIVEN&&alert(`Warning: Range header ignored for URL: ${e}.  This can have severe performance impacts.`),s(l.response.slice(c.start,c.start+c.size))):s(l.response);else 416===l.status?g(Error("416 Unsatisfiable Range")):!Ts()||404!==l.status&&401!==l.status&&403!==l.status||!Ns(e)||t.retries?403===l.status?g("Access forbidden: "+e):g(l.status):m()},l.onerror=function(i){Ns(e)&&!t.retries?m():g("Error accessing resource: "+e+" Status: "+l.status)},l.ontimeout=function(e){g("Timed out")},l.onabort=function(e){console.log("Aborted"),o(e)};try{l.send(h)}catch(i){Ns(e)&&!t.retries?m():g(i)}function g(e){if(!o)throw e;o(e)}async function m(){try{const e=await async function(e){if(Ts()){const t=function(e){return Ms(e)?"https://www.googleapis.com/auth/drive.file":Bs(e)?"https://www.googleapis.com/auth/devstorage.read_only":"https://www.googleapis.com/auth/userinfo.profile"}(e);return await Ls(t)}throw Error("Authorization is required, but Google oAuth has not been initalized. Contact your site administrator for assistance.")}(n);t.retries=1,t.oauthToken=e;const r=await i.load(n,t);s(r)}catch(e){if(e.error){const t=e.error.startsWith("popup_blocked")?"Google login popup blocked by browser.":e.error;alert(t)}else g(e)}}}))}async _loadFileSlice(e,t){let i=t&&t.range?e.slice(t.range.start,t.range.start+t.range.size):e;const n=await i.arrayBuffer();return"arraybuffer"===t.responseType?n:qs(n)}async _loadStringFromFile(e,t){const i=t.range?e.slice(t.range.start,t.range.start+t.range.size):e;return qs(await i.arrayBuffer())}async _loadStringFromUrl(e,t){(t=t||{}).responseType="arraybuffer";return qs(await this.load(e,t))}setOauthToken(e,t){this.oauth.setToken(e,t)}getOauthToken(e){const t=Ns(e)?void 0:Ot(e).host;let i=this.oauth.getToken(t);if(i)return i;if(void 0===t){const e=Us();if(e&&e.expires_at>Date.now())return e.access_token}}async getContentLength(e,t){(t=t||{}).method="HEAD",t.requestedHeaders=["content-length"];const i=(await this._loadURL(e,t))["content-length"];return i?Number.parseInt(i):0}};var Vs={color:1};Vs.parent=Vs,Vs.left=Vs,Vs.right=Vs;class js{constructor(){this.root=Vs}insert(e,t,i){var n=new Xs(new Ys(e,t,i));for(this.treeInsert(n),n.color=2;n!==this.root&&2===n.parent.color;)if(n.parent===n.parent.parent.left){let e=n.parent.parent.right;2===e.color?(n.parent.color=1,e.color=1,n.parent.parent.color=2,n=n.parent.parent):(n===n.parent.right&&(n=n.parent,Gs.call(this,n)),n.parent.color=1,n.parent.parent.color=2,$s.call(this,n.parent.parent))}else{let e=n.parent.parent.left;2===e.color?(n.parent.color=1,e.color=1,n.parent.parent.color=2,n=n.parent.parent):(n===n.parent.left&&(n=n.parent,$s.call(this,n)),n.parent.color=1,n.parent.parent.color=2,Gs.call(this,n.parent.parent))}this.root.color=1}findOverlapping(e,t){var i=new Ys(e,t,0);if(this.root===Vs)return[];var n=Ws.call(this,i,this.root,[]);return n.length>1&&n.sort((function(e,t){return e.low-t.low})),n}logIntervals(){!function e(t,i){for(var n="",r=0;r<i;r++)n+=" ";console.log(n+t.interval.low+" "+t.interval.high),i+=5,t.left!==Vs&&e(t.left,i);t.right!==Vs&&e(t.right,i)}(this.root,0)}mapIntervals(e){!function t(i){e(i.interval),i.left!==Vs&&t(i.left);i.right!==Vs&&t(i.right)}(this.root)}treeInsert(e){for(var t=this.root,i=Vs;t!==Vs;)i=t,t=e.interval.low<=t.interval.low?t.left:t.right;e.parent=i,i===Vs?(this.root=e,e.left=e.right=Vs):e.interval.low<=i.interval.low?i.left=e:i.right=e,Ks.call(this,e)}}function Ws(e,t,i){return t.interval.overlaps(e)&&i.push(t.interval),t.left!==Vs&&t.left.max>=e.low&&Ws.call(this,e,t.left,i),t.right!==Vs&&t.right.min<=e.high&&Ws.call(this,e,t.right,i),i}function Gs(e){var t=e.right;e.right=t.left,t.left!==Vs&&(t.left.parent=e),t.parent=e.parent,e.parent===Vs?this.root=t:e.parent.left===e?e.parent.left=t:e.parent.right=t,t.left=e,e.parent=t,Ks.call(this,e)}function $s(e){var t=e.left;e.left=t.right,t.right!==Vs&&(t.right.parent=e),t.parent=e.parent,e.parent===Vs?this.root=t:e.parent.right===e?e.parent.right=t:e.parent.left=t,t.right=e,e.parent=t,Ks.call(this,e)}function Ks(e){for(;e!==Vs;){var t=e.left.max>e.right.max?e.left.max:e.right.max,i=e.interval.high;e.max=t>i?t:i;var n=e.left.min<e.right.min?e.left.min:e.right.min,r=e.interval.low;e.min=n<r?n:r,e=e.parent}}class Ys{constructor(e,t,i){this.low=e,this.high=t,this.value=i}equals(e){return!!e&&(this===e||this.low===e.low&&this.high===e.high)}compareTo(e){return this.low<e.low?-1:this.low>e.low?1:this.high<e.high?-1:this.high>e.high?1:0}overlaps(e){return this.low<=e.high&&e.low<=this.high}}function Xs(e){this.parent=Vs,this.left=Vs,this.right=Vs,this.interval=e,this.color=2}class Zs{constructor(e,t,i){e=e||[],this.treeMap=this.buildTreeMap(e,t),this.range=i,this.count=e.length}containsRange(e){return void 0===this.range||this.range.contains(e.chr,e.start,e.end)}findFeatures(e){const t=[];for(let i of Object.values(this.allFeatures))for(let n of i)e(n)&&t.push(n);return t}queryFeatures(e,t,i){const n=this.treeMap[e];if(!n)return[];const r=n.findOverlapping(t,i);if(0===r.length)return[];{const n=[],s=this.allFeatures[e];if(s){for(let e of r){const r=e.value;for(let e=r.start;e<r.end;e++){let r=s[e];if(r.start>i)break;r.end>=t&&n.push(r)}}n.sort((function(e,t){return e.start-t.start}))}return n}}getAllFeatures(){return this.allFeatures}buildTreeMap(e,t){const i={},n=[];if(this.allFeatures={},e){for(let i of e){let e=i.chr;t&&(e=t.getChromosomeName(e));let r=this.allFeatures[e];r||(n.push(e),r=[],this.allFeatures[e]=r),r.push(i)}for(let e of n){const t=this.allFeatures[e];t.sort((function(e,t){return e.start===t.start?0:e.start>t.start?1:-1})),i[e]=Js(t)}}return i}}function Js(e){const t=new js,i=e.length,n=Math.max(10,Math.round(i/10));for(let r=0;r<i;r+=n){const s=Math.min(i,r+n),o=new eo(r,s),a=e[r].start;let c=a;for(let t=r;t<s;t++)c=Math.max(c,e[t].end);t.insert(a,c,o)}return t}class eo{constructor(e,t){this.start=e,this.end=t}}const to=function(e,t,i){if(e&&0!==e.length){const n=function(e){const t=new js,i=e.length,n=Math.max(10,Math.round(i/100));e.sort((function(e,t){return e.start===t.start?0:e.start>t.start?1:-1}));for(let r=0;r<i;r+=n){const s=Math.min(i,r+n),o=e.slice(r,s),a=o[0].start;let c=a;o.forEach((function(e){c=Math.max(c,e.end)})),t.insert(a,c,o)}return t}(e),r=n.findOverlapping(t,i);return 0===r.length?[]:(e=[],r.forEach((function(n){const r=n.value,s=r.length;for(let n=0;n<s;n++){const s=r[n];if(s.start>i)break;s.end>t&&e.push(s)}})),e.sort((function(e,t){return e.start-t.start})),e)}return[]};function io(e){if(3===(e=e.replace(/^#/,"")).length&&(e=e.split("").map((e=>e+e)).join("")),6!==e.length)throw new Error("Invalid HEX color.");let t=parseInt(e,16);return`rgb(${t>>16&255}, ${t>>8&255}, ${255&t})`}const no={cantaloupe:{r:255,g:206,b:110},honeydew:{r:206,g:250,b:110},spindrift:{r:104,g:251,b:208},sky:{r:106,g:207,b:255},lavender:{r:210,g:120,b:255},carnation:{r:255,g:127,b:211},licorice:{r:0,g:0,b:0},snow:{r:255,g:255,b:255},salmon:{r:255,g:114,b:110},banana:{r:255,g:251,b:109},flora:{r:104,g:249,b:110},ice:{r:104,g:253,b:255},orchid:{r:110,g:118,b:255},bubblegum:{r:255,g:122,b:255},lead:{r:30,g:30,b:30},mercury:{r:232,g:232,b:232},tangerine:{r:255,g:136,b:2},lime:{r:131,g:249,b:2},sea_foam:{r:3,g:249,b:135},aqua:{r:0,g:140,b:255},grape:{r:137,g:49,b:255},strawberry:{r:255,g:41,b:135},tungsten:{r:58,g:58,b:58},silver:{r:208,g:208,b:208},maraschino:{r:255,g:33,b:1},lemon:{r:255,g:250,b:3},spring:{r:5,g:248,b:2},turquoise:{r:0,g:253,b:255},blueberry:{r:0,g:46,b:255},magenta:{r:255,g:57,b:255},iron:{r:84,g:84,b:83},magnesium:{r:184,g:184,b:184},mocha:{r:137,g:72,b:0},fern:{r:69,g:132,b:1},moss:{r:1,g:132,b:72},ocean:{r:0,g:74,b:136},eggplant:{r:73,g:26,b:136},maroon:{r:137,g:22,b:72},steel:{r:110,g:110,b:110},aluminum:{r:160,g:159,b:160},cayenne:{r:137,g:17,b:0},aspargus:{r:136,g:133,b:1},clover:{r:2,g:132,b:1},teal:{r:0,g:134,b:136},midnight:{r:0,g:24,b:136},plum:{r:137,g:30,b:136},tin:{r:135,g:134,b:135},nickel:{r:136,g:135,b:135}};function ro(e){const{r:t,g:i,b:n}=no[e];return`rgb(${t},${i},${n})`}const so={Set1:["rgb(228,26,28)","rgb(55,126,184)","rgb(77,175,74)","rgb(166,86,40)","rgb(152,78,163)","rgb(255,127,0)","rgb(247,129,191)","rgb(153,153,153)","rgb(255,255,51)"],Dark2:["rgb(27,158,119)","rgb(217,95,2)","rgb(117,112,179)","rgb(231,41,138)","rgb(102,166,30)","rgb(230,171,2)","rgb(166,118,29)","rgb(102,102,102)"],Set2:["rgb(102, 194,165)","rgb(252,141,98)","rgb(141,160,203)","rgb(231,138,195)","rgb(166,216,84)","rgb(255,217,47)","rgb(229,196,148)","rgb(179,179,179)"],Set3:["rgb(141,211,199)","rgb(255,255,179)","rgb(190,186,218)","rgb(251,128,114)","rgb(128,177,211)","rgb(253,180,98)","rgb(179,222,105)","rgb(252,205,229)","rgb(217,217,217)","rgb(188,128,189)","rgb(204,235,197)","rgb(255,237,111)"],Pastel1:["rgb(251,180,174)","rgb(179,205,227)","rgb(204,235,197)","rgb(222,203,228)","rgb(254,217,166)","rgb(255,255,204)","rgb(229,216,189)","rgb(253,218,236)"],Pastel2:["rgb(173,226,207)","rgb(253,205,172)","rgb(203,213,232)","rgb(244,202,228)","rgb(230,245,201)","rgb(255,242,174)","rgb(243,225,206)"],Accent:["rgb(127,201,127)","rgb(190,174,212)","rgb(253,192,134)","rgb(255,255,153)","rgb(56,108,176)","rgb(240,2,127)","rgb(191,91,23)"]};class oo{constructor(e){this.colors=so[e],Array.isArray(this.colors)||(this.colors=[]),this.colorTable=new Map,this.nextIdx=0,this.colorGenerator=new co}getColor(e){return this.colorTable.has(e)||(this.nextIdx<this.colors.length?this.colorTable.set(e,this.colors[this.nextIdx]):this.colorTable.set(e,this.colorGenerator.get()),this.nextIdx++),this.colorTable.get(e)}}class ao{constructor(e){this.colorTable=e||{},this.nextIdx=0,this.colorGenerator=new co}getColor(e){if(!this.colorTable.hasOwnProperty(e)){if(this.colorTable.hasOwnProperty("*"))return this.colorTable["*"];this.colorTable[e]=this.colorGenerator.get()}return this.colorTable[e]}}function co(){this.hue=Math.random(),this.goldenRatio=.618033988749895,this.hexwidth=2}function lo(e,t,i,n){return`rgba(${e=ys.clamp(e,0,255)}, ${t=ys.clamp(t,0,255)}, ${i=ys.clamp(i,0,255)}, ${n=ys.clamp(n,0,1)})`}function ho(e,t){e=ys.clamp(e,0,255),t=ys.clamp(t,0,255);return`rgb(${Math.round(Math.random()*(t-e)+e).toString(10)},${Math.round(Math.random()*(t-e)+e).toString(10)},${Math.round(Math.random()*(t-e)+e).toString(10)})`}function uo(e){if(e.startsWith("rgb(")){const[t,i]=e.split("("),[n]=i.split(")");return n.split(",").map((e=>parseInt(e)))}}co.prototype.hsvToRgb=function(e,t,i){var n=Math.floor(6*e),r=6*e-n,s=i*(1-t),o=i*(1-r*t),a=i*(1-(1-r)*t),c=255,l=255,h=255;switch(n){case 0:c=i,l=a,h=s;break;case 1:c=o,l=i,h=s;break;case 2:c=s,l=i,h=a;break;case 3:c=s,l=o,h=i;break;case 4:c=a,l=s,h=i;break;case 5:c=i,l=s,h=o}return[Math.floor(256*c),Math.floor(256*l),Math.floor(256*h)]},co.prototype.padHex=function(e){return e.length>this.hexwidth?e:new Array(this.hexwidth-e.length+1).join("0")+e},co.prototype.get=function(e,t){this.hue+=this.goldenRatio,this.hue%=1,"number"!=typeof e&&(e=.5),"number"!=typeof t&&(t=.95);var i=this.hsvToRgb(this.hue,e,t);return"#"+this.padHex(i[0].toString(16))+this.padHex(i[1].toString(16))+this.padHex(i[2].toString(16))},new co;function fo(e,t,i){if(i<.005)return e;if(i>.995)return t;{let n,r,s,o,a,c;i<.5?(i/=.5,[n,r,s]=uo(e),[o,a,c]=uo(ro("snow"))):(i=(i-.5)/.5,[n,r,s]=uo(ro("snow")),[o,a,c]=uo(t));const[l,h,d]=[Math.floor(ys.lerp(n,o,i)),Math.floor(ys.lerp(r,a,i)),Math.floor(ys.lerp(s,c,i))];return function(e,t,i){return`rgb(${e=ys.clamp(e,0,255)}, ${t=ys.clamp(t,0,255)}, ${i=ys.clamp(i,0,255)})`}(l,h,d)}}const po=new Set(["bedtype","alignment","annotation","variant","wig","interact"]),go=new Set(["alignment","annotation","variant","eqtl","qtl","snp","shoebox"]),mo=new Set(["sequence","ruler","ideogram"]),wo={};class bo{constructor(e){this.browser=e,this.initialize()}initialize(){const e=new c;e.add("...");const t={parent:this.browser.root,content:e};this.dialog=new w(t),this.browser.root.appendChild(this.dialog.elem),i(this.dialog.elem)}trackMenuItemList(e){const t=[];return"sequence"!==e.track.config.type&&t.push(function(){const e=Bt("<div>");function t(e){const t=()=>{const e=parseInt(this.browser.inputDialog.value,10);if(void 0!==e){const t=[];this.trackView.track.selected?t.push(...this.trackView.browser.getSelectedTrackViews().map((({track:e})=>e))):t.push(this);for(const i of t)void 0!==i.minHeight&&i.minHeight>e&&(i.minHeight=e),void 0!==i.maxHeight&&i.maxHeight<e&&(i.minHeight=e),i.trackView.setTrackHeight(e,!0),i.trackView.checkContentHeight(),i.trackView.repaintViews(),i.trackView.autoHeight=!1}},i={label:"Track Height",value:this.height,callback:t};this.browser.inputDialog.present(i,e)}return e.text("Set track height"),{object:e,dialog:t}}()),!0===function(e){const t=e.browser.getSelectedTrackViews();return t&&t.length>1&&new Set(t).has(e)}(e)?t.push(...this.multiSelectMenuItems(e)):("sequence"!==e.track.config.type&&t.push(function(){const e=Bt("<div>");function t(e){const t=()=>{let e=this.browser.inputDialog.value;e=""===e||void 0===e?"untitled":e.trim(),this.name=e},i={label:"Track Name",value:Ao(this)||"unnamed",callback:t};this.browser.inputDialog.present(i,e)}return e.text("Set track name"),{object:e,click:t}}()),t.push(...this.defaultMenuItems(e))),!1!==e.track.removable&&(t.push("<hr/>"),t.push(function(e){const t=e.track.selected?"Remove tracks":"Remove track",i=Bt("<div>");function n(e){this.trackView.browser._removeTrack(this)}return i.text(t),{object:i,click:n,menuItemType:"removeTrack"}}(e))),t}defaultMenuItems(e){const t=[];return Co(e.track)&&(t.push("<hr/>"),t.push(Fo({trackView:e,label:"Set track color",option:"color"})),t.push(vo({trackView:e,label:"Unset track color"})),"wig"!==e.track.config.type&&"annotation"!==e.track.config.type||(t.push(Fo({trackView:e,label:"Set alt color",option:"altColor"})),t.push(yo({trackView:e,label:"Unset alt color"})))),e.track.menuItemList&&t.push(...e.track.menuItemList()),function(e){const t=e.track;return t&&t.config&&void 0!==t.config.visibilityWindow||t&&go.has(t.type)}(e)&&(t.push("<hr/>"),t.push(function(){const e=Bt("<div>");function t(e){const t=()=>{let e=this.browser.inputDialog.value;e=""===e||void 0===e?-1:e.trim(),this.visibilityWindow=Number.parseInt(e),this.config.visibilityWindow=Number.parseInt(e),this.trackView.updateViews()},i={label:"Visibility Window",value:this.visibilityWindow,callback:t};this.browser.inputDialog.present(i,e)}return e.text("Set visibility window"),{object:e,click:t}}())),t}multiSelectMenuItems(e){const t=[],i=e.browser.getSelectedTrackViews();var n;return!0===(n=i.map((({track:e})=>e.type)),1===[...new Set(n)].length)?(t.push(...this.defaultMenuItems(e)),"wig"===e.track.type&&(t.push("<hr/>"),t.push(function(){const e=Bt("<div>");function t(e){const t=so.Dark2,i=Math.floor(Math.random()*t.length),n=`auto-scale-group-${s()}`;wo[n]=t[i];const r=this.browser.getSelectedTrackViews();for(const{track:e}of r)e.autoscaleGroup=n;this.browser.updateViews()}return e.text("Group autoscale"),{object:e,doAllMultiSelectedTracks:!0,click:t}}()))):Co(e.track)&&(t.push("<hr/>"),t.push(Fo({trackView:e,label:"Set track color",option:"color"})),t.push(vo({trackView:e,label:"Unset track color"})),"wig"!==e.track.config.type&&"annotation"!==e.track.config.type||(t.push(Fo({trackView:e,label:"Set alt color",option:"altColor"})),t.push(yo({trackView:e,label:"Unset alt color"})))),t}}function Fo({trackView:e,label:t,option:i}){const n=Bt("<div>");return n.text(t),{object:n,click:()=>e.presentColorPicker(i)}}function vo({trackView:e,label:t}){const i=Bt("<div>");return i.text(t),{object:i,click:()=>{e.track.color=void 0,e.repaintViews()}}}function yo({trackView:e,label:t}){const i=Bt("<div>");return i.text(t),{object:i,click:()=>{e.track.altColor=void 0,e.repaintViews()}}}function Ao(e){return e.name}function Co(e){return void 0===e.type||po.has(e.type)}class _o{constructor(e,t){this.browser=e,this.$container=Bt("<div>",{class:"igv-generic-dialog-container"}),t.append(this.$container),this.$container.offset({left:0,top:0});const i=Bt("<div>",{class:"igv-generic-dialog-header"});this.$container.append(i),u(i[0],(()=>{this.$minimum_input.val(""),this.$maximum_input.val(""),this.$container.offset({left:0,top:0}),this.$container.hide()})),this.$minimum=Bt("<div>",{class:"igv-generic-dialog-label-input"}),this.$container.append(this.$minimum);const n=Bt("<div>");n.text("Minimum"),this.$minimum.append(n),this.$minimum_input=Bt("<input>"),this.$minimum.append(this.$minimum_input),this.$maximum=Bt("<div>",{class:"igv-generic-dialog-label-input"}),this.$container.append(this.$maximum);const r=Bt("<div>");r.text("Maximum"),this.$maximum.append(r),this.$maximum_input=Bt("<input>"),this.$maximum.append(this.$maximum_input);const s=Bt("<div>",{class:"igv-generic-dialog-ok-cancel"});this.$container.append(s),this.$ok=Bt("<div>"),s.append(this.$ok),this.$ok.text("OK"),this.$cancel=Bt("<div>"),s.append(this.$cancel),this.$cancel.text("Cancel"),this.$cancel.on("click",(()=>{this.$minimum_input.val(""),this.$maximum_input.val(""),this.$container.offset({left:0,top:0}),this.$container.hide()})),p(this.$container.get(0),i.get(0)),this.$container.hide()}configure(e){let t;if(Array.isArray(e)){t={min:Number.MAX_SAFE_INTEGER,max:-Number.MAX_SAFE_INTEGER};for(const i of e)i.track.dataRange&&(t.min=Math.min(i.track.dataRange.min,t.min),t.max=Math.max(i.track.dataRange.max,t.max))}else t=e.track.dataRange;t&&(this.$minimum_input.val(t.min),this.$maximum_input.val(t.max)),this.$minimum_input.unbind(),this.$minimum_input.on("keyup",(t=>{13===t.keyCode&&this.processResults(e),t.stopImmediatePropagation()})),this.$maximum_input.unbind(),this.$maximum_input.on("keyup",(t=>{13===t.keyCode&&(t.stopImmediatePropagation(),this.processResults(e))})),this.$ok.unbind(),this.$ok.on("click",(t=>{this.processResults(e)}))}processResults(e){if(""!==this.$minimum_input.val()&&""!==this.$maximum_input.val()){const t=Number(this.$minimum_input.val()),i=Number(this.$maximum_input.val());if(isNaN(t)||isNaN(i))this.browser.alert.present(new Error("Must input numeric values"),void 0);else{const n=Array.isArray(e)?e:[e];for(const e of n)e.track.setDataRange({min:t,max:i})}this.$minimum_input.val(""),this.$maximum_input.val("")}this.$container.offset({left:0,top:0}),this.$container.hide()}present(e){const t=e.offset().top,i=Bt("body").scrollTop();this.$container.offset({left:e.width()-this.$container.width(),top:t+i}),this.$container.show()}}const xo={configureHighDPICanvas:function(e,t,i){const n=window.devicePixelRatio;e.canvas.style.width=`${t}px`,e.canvas.width=Math.floor(n*t),e.canvas.style.height=`${i}px`,e.canvas.height=Math.floor(n*i),e.scale(n,n)},setProperties:function(e,t){for(var i in t)if(t.hasOwnProperty(i)){var n=t[i];e[i]=n}},strokeLine:function(e,t,i,n,r,s){t=Math.floor(t)+.5,i=Math.floor(i)+.5,n=Math.floor(n)+.5,r=Math.floor(r)+.5,s&&(e.save(),xo.setProperties(e,s)),e.beginPath(),e.moveTo(t,i),e.lineTo(n,r),e.stroke(),s&&e.restore()},fillRect:function(e,t,i,n,r,s){s&&(e.save(),xo.setProperties(e,s)),e.fillRect(t,i,n,r),s&&e.restore()},fillPolygon:function(e,t,i,n){n&&(e.save(),xo.setProperties(e,n)),ko(e,t,i),e.fill(),n&&e.restore()},strokePolygon:function(e,t,i,n){n&&(e.save(),xo.setProperties(e,n)),ko(e,t,i),e.stroke(),n&&e.restore()},fillText:function(e,t,i,n,r,s){if((r||s)&&e.save(),r&&xo.setProperties(e,r),s){for(var o in e.translate(i,n),s){var a=s[o];"translate"===o&&e.translate(a.x,a.y),"rotate"===o&&e.rotate(a.angle*Math.PI/180)}e.fillText(t,0,0)}else e.fillText(t,i,n);(r||s)&&e.restore()},strokeText:function(e,t,i,n,r,s){if((r||s)&&e.save(),r&&xo.setProperties(e,r),s){for(var o in e.translate(i,n),s){var a=s[o];"translate"===o&&e.translate(a.x,a.y),"rotate"===o&&e.rotate(a.angle*Math.PI/180)}e.strokeText(t,0,0)}else e.strokeText(t,i,n);(r||s)&&e.restore()},strokeCircle:function(e,t,i,n,r){r&&(e.save(),xo.setProperties(e,r)),e.beginPath(),e.arc(t,i,n,0,2*Math.PI),e.stroke(),r&&e.restore()},fillCircle:function(e,t,i,n,r){r&&(e.save(),xo.setProperties(e,r)),e.beginPath(),e.arc(t,i,n,0,2*Math.PI),e.fill(),r&&e.restore()},drawArrowhead:function(e,t,i,n,r){e.save(),n||(n=5),r&&(e.lineWidth=r),e.beginPath(),e.moveTo(t,i-n/2),e.lineTo(t,i+n/2),e.lineTo(t+n,i),e.lineTo(t,i-n/2),e.closePath(),e.fill(),e.restore()},dashedLine:function(e,t,i,n,r,s,o={}){void 0===s&&(s=2),e.setLineDash([s,s]),xo.strokeLine(e,t,i,n,r,o),e.setLineDash([])},roundRect:function(e,t,i,n,r,s,o,a){void 0===a&&(a=!0),void 0===s&&(s=5),e.beginPath(),e.moveTo(t+s,i),e.lineTo(t+n-s,i),e.quadraticCurveTo(t+n,i,t+n,i+s),e.lineTo(t+n,i+r-s),e.quadraticCurveTo(t+n,i+r,t+n-s,i+r),e.lineTo(t+s,i+r),e.quadraticCurveTo(t,i+r,t,i+r-s),e.lineTo(t,i+s),e.quadraticCurveTo(t,i,t+s,i),e.closePath(),a&&e.stroke(),o&&e.fill()},polygon:function(e,t,i,n,r){void 0===r&&(r=!0),e.beginPath();var s=t.length;e.moveTo(t[0],i[0]);for(var o=1;o<s;o++)e.lineTo(t[o],i[o]);e.closePath(),r&&e.stroke(),n&&e.fill()},drawRandomColorVerticalLines:e=>{for(let t=0;t<e.canvas.width;t++)xo.fillRect(e,t,0,1,e.canvas.height,{fillStyle:ho(100,250)})},labelTransformWithContext:(e,t)=>{e.translate(t,0),e.scale(-1,1),e.translate(-t,0)}};function ko(e,t,i){var n,r=t.length;for(e.beginPath(),e.moveTo(t[0],i[0]),n=1;n<r;n++)e.lineTo(t[n],i[n]);e.closePath()}
/*! @license DOMPurify 3.1.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.6/LICENSE */const{entries:Io,setPrototypeOf:So,isFrozen:Eo,getPrototypeOf:No,getOwnPropertyDescriptor:Bo}=Object;let{freeze:Mo,seal:Ro,create:Do}=Object,{apply:To,construct:Lo}="undefined"!=typeof Reflect&&Reflect;Mo||(Mo=function(e){return e}),Ro||(Ro=function(e){return e}),To||(To=function(e,t,i){return e.apply(t,i)}),Lo||(Lo=function(e,t){return new e(...t)});const zo=Yo(Array.prototype.forEach),Ho=Yo(Array.prototype.pop),Po=Yo(Array.prototype.push),Oo=Yo(String.prototype.toLowerCase),Uo=Yo(String.prototype.toString),qo=Yo(String.prototype.match),Qo=Yo(String.prototype.replace),Vo=Yo(String.prototype.indexOf),jo=Yo(String.prototype.trim),Wo=Yo(Object.prototype.hasOwnProperty),Go=Yo(RegExp.prototype.test),$o=(Ko=TypeError,function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];return Lo(Ko,t)});var Ko;function Yo(e){return function(t){for(var i=arguments.length,n=new Array(i>1?i-1:0),r=1;r<i;r++)n[r-1]=arguments[r];return To(e,t,n)}}function Xo(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Oo;So&&So(e,null);let n=t.length;for(;n--;){let r=t[n];if("string"==typeof r){const e=i(r);e!==r&&(Eo(t)||(t[n]=e),r=e)}e[r]=!0}return e}function Zo(e){for(let t=0;t<e.length;t++){Wo(e,t)||(e[t]=null)}return e}function Jo(e){const t=Do(null);for(const[i,n]of Io(e)){Wo(e,i)&&(Array.isArray(n)?t[i]=Zo(n):n&&"object"==typeof n&&n.constructor===Object?t[i]=Jo(n):t[i]=n)}return t}function ea(e,t){for(;null!==e;){const i=Bo(e,t);if(i){if(i.get)return Yo(i.get);if("function"==typeof i.value)return Yo(i.value)}e=No(e)}return function(){return null}}const ta=Mo(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),ia=Mo(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),na=Mo(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),ra=Mo(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),sa=Mo(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),oa=Mo(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),aa=Mo(["#text"]),ca=Mo(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","popover","popovertarget","popovertargetaction","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","wrap","xmlns","slot"]),la=Mo(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),ha=Mo(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),da=Mo(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),ua=Ro(/\{\{[\w\W]*|[\w\W]*\}\}/gm),fa=Ro(/<%[\w\W]*|[\w\W]*%>/gm),pa=Ro(/\${[\w\W]*}/gm),ga=Ro(/^data-[\-\w.\u00B7-\uFFFF]/),ma=Ro(/^aria-[\-\w]+$/),wa=Ro(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),ba=Ro(/^(?:\w+script|data):/i),Fa=Ro(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),va=Ro(/^html$/i),ya=Ro(/^[a-z][.\w]*(-[.\w]+)+$/i);var Aa=Object.freeze({__proto__:null,MUSTACHE_EXPR:ua,ERB_EXPR:fa,TMPLIT_EXPR:pa,DATA_ATTR:ga,ARIA_ATTR:ma,IS_ALLOWED_URI:wa,IS_SCRIPT_OR_DATA:ba,ATTR_WHITESPACE:Fa,DOCTYPE_NAME:va,CUSTOM_ELEMENT:ya});const Ca=1,_a=3,xa=7,ka=8,Ia=9,Sa=function(){return"undefined"==typeof window?null:window};var Ea=function e(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Sa();const i=t=>e(t);if(i.version="3.1.6",i.removed=[],!t||!t.document||t.document.nodeType!==Ia)return i.isSupported=!1,i;let{document:n}=t;const r=n,s=r.currentScript,{DocumentFragment:o,HTMLTemplateElement:a,Node:c,Element:l,NodeFilter:h,NamedNodeMap:d=t.NamedNodeMap||t.MozNamedAttrMap,HTMLFormElement:u,DOMParser:f,trustedTypes:p}=t,g=l.prototype,m=ea(g,"cloneNode"),w=ea(g,"remove"),b=ea(g,"nextSibling"),F=ea(g,"childNodes"),v=ea(g,"parentNode");if("function"==typeof a){const e=n.createElement("template");e.content&&e.content.ownerDocument&&(n=e.content.ownerDocument)}let y,A="";const{implementation:C,createNodeIterator:_,createDocumentFragment:x,getElementsByTagName:k}=n,{importNode:I}=r;let S={};i.isSupported="function"==typeof Io&&"function"==typeof v&&C&&void 0!==C.createHTMLDocument;const{MUSTACHE_EXPR:E,ERB_EXPR:N,TMPLIT_EXPR:B,DATA_ATTR:M,ARIA_ATTR:R,IS_SCRIPT_OR_DATA:D,ATTR_WHITESPACE:T,CUSTOM_ELEMENT:L}=Aa;let{IS_ALLOWED_URI:z}=Aa,H=null;const P=Xo({},[...ta,...ia,...na,...sa,...aa]);let O=null;const U=Xo({},[...ca,...la,...ha,...da]);let q=Object.seal(Do(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),Q=null,V=null,j=!0,W=!0,G=!1,$=!0,K=!1,Y=!0,X=!1,Z=!1,J=!1,ee=!1,te=!1,ie=!1,ne=!0,re=!1,se=!0,oe=!1,ae={},ce=null;const le=Xo({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let he=null;const de=Xo({},["audio","video","img","source","image","track"]);let ue=null;const fe=Xo({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),pe="http://www.w3.org/1998/Math/MathML",ge="http://www.w3.org/2000/svg",me="http://www.w3.org/1999/xhtml";let we=me,be=!1,Fe=null;const ve=Xo({},[pe,ge,me],Uo);let ye=null;const Ae=["application/xhtml+xml","text/html"];let Ce=null,_e=null;const xe=n.createElement("form"),ke=function(e){return e instanceof RegExp||e instanceof Function},Ie=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!_e||_e!==e){if(e&&"object"==typeof e||(e={}),e=Jo(e),ye=-1===Ae.indexOf(e.PARSER_MEDIA_TYPE)?"text/html":e.PARSER_MEDIA_TYPE,Ce="application/xhtml+xml"===ye?Uo:Oo,H=Wo(e,"ALLOWED_TAGS")?Xo({},e.ALLOWED_TAGS,Ce):P,O=Wo(e,"ALLOWED_ATTR")?Xo({},e.ALLOWED_ATTR,Ce):U,Fe=Wo(e,"ALLOWED_NAMESPACES")?Xo({},e.ALLOWED_NAMESPACES,Uo):ve,ue=Wo(e,"ADD_URI_SAFE_ATTR")?Xo(Jo(fe),e.ADD_URI_SAFE_ATTR,Ce):fe,he=Wo(e,"ADD_DATA_URI_TAGS")?Xo(Jo(de),e.ADD_DATA_URI_TAGS,Ce):de,ce=Wo(e,"FORBID_CONTENTS")?Xo({},e.FORBID_CONTENTS,Ce):le,Q=Wo(e,"FORBID_TAGS")?Xo({},e.FORBID_TAGS,Ce):{},V=Wo(e,"FORBID_ATTR")?Xo({},e.FORBID_ATTR,Ce):{},ae=!!Wo(e,"USE_PROFILES")&&e.USE_PROFILES,j=!1!==e.ALLOW_ARIA_ATTR,W=!1!==e.ALLOW_DATA_ATTR,G=e.ALLOW_UNKNOWN_PROTOCOLS||!1,$=!1!==e.ALLOW_SELF_CLOSE_IN_ATTR,K=e.SAFE_FOR_TEMPLATES||!1,Y=!1!==e.SAFE_FOR_XML,X=e.WHOLE_DOCUMENT||!1,ee=e.RETURN_DOM||!1,te=e.RETURN_DOM_FRAGMENT||!1,ie=e.RETURN_TRUSTED_TYPE||!1,J=e.FORCE_BODY||!1,ne=!1!==e.SANITIZE_DOM,re=e.SANITIZE_NAMED_PROPS||!1,se=!1!==e.KEEP_CONTENT,oe=e.IN_PLACE||!1,z=e.ALLOWED_URI_REGEXP||wa,we=e.NAMESPACE||me,q=e.CUSTOM_ELEMENT_HANDLING||{},e.CUSTOM_ELEMENT_HANDLING&&ke(e.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(q.tagNameCheck=e.CUSTOM_ELEMENT_HANDLING.tagNameCheck),e.CUSTOM_ELEMENT_HANDLING&&ke(e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(q.attributeNameCheck=e.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),e.CUSTOM_ELEMENT_HANDLING&&"boolean"==typeof e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(q.allowCustomizedBuiltInElements=e.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),K&&(W=!1),te&&(ee=!0),ae&&(H=Xo({},aa),O=[],!0===ae.html&&(Xo(H,ta),Xo(O,ca)),!0===ae.svg&&(Xo(H,ia),Xo(O,la),Xo(O,da)),!0===ae.svgFilters&&(Xo(H,na),Xo(O,la),Xo(O,da)),!0===ae.mathMl&&(Xo(H,sa),Xo(O,ha),Xo(O,da))),e.ADD_TAGS&&(H===P&&(H=Jo(H)),Xo(H,e.ADD_TAGS,Ce)),e.ADD_ATTR&&(O===U&&(O=Jo(O)),Xo(O,e.ADD_ATTR,Ce)),e.ADD_URI_SAFE_ATTR&&Xo(ue,e.ADD_URI_SAFE_ATTR,Ce),e.FORBID_CONTENTS&&(ce===le&&(ce=Jo(ce)),Xo(ce,e.FORBID_CONTENTS,Ce)),se&&(H["#text"]=!0),X&&Xo(H,["html","head","body"]),H.table&&(Xo(H,["tbody"]),delete Q.tbody),e.TRUSTED_TYPES_POLICY){if("function"!=typeof e.TRUSTED_TYPES_POLICY.createHTML)throw $o('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if("function"!=typeof e.TRUSTED_TYPES_POLICY.createScriptURL)throw $o('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');y=e.TRUSTED_TYPES_POLICY,A=y.createHTML("")}else void 0===y&&(y=function(e,t){if("object"!=typeof e||"function"!=typeof e.createPolicy)return null;let i=null;const n="data-tt-policy-suffix";t&&t.hasAttribute(n)&&(i=t.getAttribute(n));const r="dompurify"+(i?"#"+i:"");try{return e.createPolicy(r,{createHTML:e=>e,createScriptURL:e=>e})}catch(e){return console.warn("TrustedTypes policy "+r+" could not be created."),null}}(p,s)),null!==y&&"string"==typeof A&&(A=y.createHTML(""));Mo&&Mo(e),_e=e}},Se=Xo({},["mi","mo","mn","ms","mtext"]),Ee=Xo({},["foreignobject","annotation-xml"]),Ne=Xo({},["title","style","font","a","script"]),Be=Xo({},[...ia,...na,...ra]),Me=Xo({},[...sa,...oa]),Re=function(e){Po(i.removed,{element:e});try{v(e).removeChild(e)}catch(t){w(e)}},De=function(e,t){try{Po(i.removed,{attribute:t.getAttributeNode(e),from:t})}catch(e){Po(i.removed,{attribute:null,from:t})}if(t.removeAttribute(e),"is"===e&&!O[e])if(ee||te)try{Re(t)}catch(e){}else try{t.setAttribute(e,"")}catch(e){}},Te=function(e){let t=null,i=null;if(J)e="<remove></remove>"+e;else{const t=qo(e,/^[\r\n\t ]+/);i=t&&t[0]}"application/xhtml+xml"===ye&&we===me&&(e='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+e+"</body></html>");const r=y?y.createHTML(e):e;if(we===me)try{t=(new f).parseFromString(r,ye)}catch(e){}if(!t||!t.documentElement){t=C.createDocument(we,"template",null);try{t.documentElement.innerHTML=be?A:r}catch(e){}}const s=t.body||t.documentElement;return e&&i&&s.insertBefore(n.createTextNode(i),s.childNodes[0]||null),we===me?k.call(t,X?"html":"body")[0]:X?t.documentElement:s},Le=function(e){return _.call(e.ownerDocument||e,e,h.SHOW_ELEMENT|h.SHOW_COMMENT|h.SHOW_TEXT|h.SHOW_PROCESSING_INSTRUCTION|h.SHOW_CDATA_SECTION,null)},ze=function(e){return e instanceof u&&("string"!=typeof e.nodeName||"string"!=typeof e.textContent||"function"!=typeof e.removeChild||!(e.attributes instanceof d)||"function"!=typeof e.removeAttribute||"function"!=typeof e.setAttribute||"string"!=typeof e.namespaceURI||"function"!=typeof e.insertBefore||"function"!=typeof e.hasChildNodes)},He=function(e){return"function"==typeof c&&e instanceof c},Pe=function(e,t,n){S[e]&&zo(S[e],(e=>{e.call(i,t,n,_e)}))},Oe=function(e){let t=null;if(Pe("beforeSanitizeElements",e,null),ze(e))return Re(e),!0;const n=Ce(e.nodeName);if(Pe("uponSanitizeElement",e,{tagName:n,allowedTags:H}),e.hasChildNodes()&&!He(e.firstElementChild)&&Go(/<[/\w]/g,e.innerHTML)&&Go(/<[/\w]/g,e.textContent))return Re(e),!0;if(e.nodeType===xa)return Re(e),!0;if(Y&&e.nodeType===ka&&Go(/<[/\w]/g,e.data))return Re(e),!0;if(!H[n]||Q[n]){if(!Q[n]&&qe(n)){if(q.tagNameCheck instanceof RegExp&&Go(q.tagNameCheck,n))return!1;if(q.tagNameCheck instanceof Function&&q.tagNameCheck(n))return!1}if(se&&!ce[n]){const t=v(e)||e.parentNode,i=F(e)||e.childNodes;if(i&&t){for(let n=i.length-1;n>=0;--n){const r=m(i[n],!0);r.__removalCount=(e.__removalCount||0)+1,t.insertBefore(r,b(e))}}}return Re(e),!0}return e instanceof l&&!function(e){let t=v(e);t&&t.tagName||(t={namespaceURI:we,tagName:"template"});const i=Oo(e.tagName),n=Oo(t.tagName);return!!Fe[e.namespaceURI]&&(e.namespaceURI===ge?t.namespaceURI===me?"svg"===i:t.namespaceURI===pe?"svg"===i&&("annotation-xml"===n||Se[n]):Boolean(Be[i]):e.namespaceURI===pe?t.namespaceURI===me?"math"===i:t.namespaceURI===ge?"math"===i&&Ee[n]:Boolean(Me[i]):e.namespaceURI===me?!(t.namespaceURI===ge&&!Ee[n])&&!(t.namespaceURI===pe&&!Se[n])&&!Me[i]&&(Ne[i]||!Be[i]):!("application/xhtml+xml"!==ye||!Fe[e.namespaceURI]))}(e)?(Re(e),!0):"noscript"!==n&&"noembed"!==n&&"noframes"!==n||!Go(/<\/no(script|embed|frames)/i,e.innerHTML)?(K&&e.nodeType===_a&&(t=e.textContent,zo([E,N,B],(e=>{t=Qo(t,e," ")})),e.textContent!==t&&(Po(i.removed,{element:e.cloneNode()}),e.textContent=t)),Pe("afterSanitizeElements",e,null),!1):(Re(e),!0)},Ue=function(e,t,i){if(ne&&("id"===t||"name"===t)&&(i in n||i in xe))return!1;if(W&&!V[t]&&Go(M,t));else if(j&&Go(R,t));else if(!O[t]||V[t]){if(!(qe(e)&&(q.tagNameCheck instanceof RegExp&&Go(q.tagNameCheck,e)||q.tagNameCheck instanceof Function&&q.tagNameCheck(e))&&(q.attributeNameCheck instanceof RegExp&&Go(q.attributeNameCheck,t)||q.attributeNameCheck instanceof Function&&q.attributeNameCheck(t))||"is"===t&&q.allowCustomizedBuiltInElements&&(q.tagNameCheck instanceof RegExp&&Go(q.tagNameCheck,i)||q.tagNameCheck instanceof Function&&q.tagNameCheck(i))))return!1}else if(ue[t]);else if(Go(z,Qo(i,T,"")));else if("src"!==t&&"xlink:href"!==t&&"href"!==t||"script"===e||0!==Vo(i,"data:")||!he[e]){if(G&&!Go(D,Qo(i,T,"")));else if(i)return!1}else;return!0},qe=function(e){return"annotation-xml"!==e&&qo(e,L)},Qe=function(e){Pe("beforeSanitizeAttributes",e,null);const{attributes:t}=e;if(!t)return;const n={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:O};let r=t.length;for(;r--;){const s=t[r],{name:o,namespaceURI:a,value:c}=s,l=Ce(o);let h="value"===o?c:jo(c);if(n.attrName=l,n.attrValue=h,n.keepAttr=!0,n.forceKeepAttr=void 0,Pe("uponSanitizeAttribute",e,n),h=n.attrValue,Y&&Go(/((--!?|])>)|<\/(style|title)/i,h)){De(o,e);continue}if(n.forceKeepAttr)continue;if(De(o,e),!n.keepAttr)continue;if(!$&&Go(/\/>/i,h)){De(o,e);continue}K&&zo([E,N,B],(e=>{h=Qo(h,e," ")}));const d=Ce(e.nodeName);if(Ue(d,l,h)){if(!re||"id"!==l&&"name"!==l||(De(o,e),h="user-content-"+h),y&&"object"==typeof p&&"function"==typeof p.getAttributeType)if(a);else switch(p.getAttributeType(d,l)){case"TrustedHTML":h=y.createHTML(h);break;case"TrustedScriptURL":h=y.createScriptURL(h)}try{a?e.setAttributeNS(a,o,h):e.setAttribute(o,h),ze(e)?Re(e):Ho(i.removed)}catch(e){}}}Pe("afterSanitizeAttributes",e,null)},Ve=function e(t){let i=null;const n=Le(t);for(Pe("beforeSanitizeShadowDOM",t,null);i=n.nextNode();)Pe("uponSanitizeShadowNode",i,null),Oe(i)||(i.content instanceof o&&e(i.content),Qe(i));Pe("afterSanitizeShadowDOM",t,null)};return i.sanitize=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=null,s=null,a=null,l=null;if(be=!e,be&&(e="\x3c!--\x3e"),"string"!=typeof e&&!He(e)){if("function"!=typeof e.toString)throw $o("toString is not a function");if("string"!=typeof(e=e.toString()))throw $o("dirty is not a string, aborting")}if(!i.isSupported)return e;if(Z||Ie(t),i.removed=[],"string"==typeof e&&(oe=!1),oe){if(e.nodeName){const t=Ce(e.nodeName);if(!H[t]||Q[t])throw $o("root node is forbidden and cannot be sanitized in-place")}}else if(e instanceof c)n=Te("\x3c!----\x3e"),s=n.ownerDocument.importNode(e,!0),s.nodeType===Ca&&"BODY"===s.nodeName||"HTML"===s.nodeName?n=s:n.appendChild(s);else{if(!ee&&!K&&!X&&-1===e.indexOf("<"))return y&&ie?y.createHTML(e):e;if(n=Te(e),!n)return ee?null:ie?A:""}n&&J&&Re(n.firstChild);const h=Le(oe?e:n);for(;a=h.nextNode();)Oe(a)||(a.content instanceof o&&Ve(a.content),Qe(a));if(oe)return e;if(ee){if(te)for(l=x.call(n.ownerDocument);n.firstChild;)l.appendChild(n.firstChild);else l=n;return(O.shadowroot||O.shadowrootmode)&&(l=I.call(r,l,!0)),l}let d=X?n.outerHTML:n.innerHTML;return X&&H["!doctype"]&&n.ownerDocument&&n.ownerDocument.doctype&&n.ownerDocument.doctype.name&&Go(va,n.ownerDocument.doctype.name)&&(d="<!DOCTYPE "+n.ownerDocument.doctype.name+">\n"+d),K&&zo([E,N,B],(e=>{d=Qo(d,e," ")})),y&&ie?y.createHTML(d):d},i.setConfig=function(){Ie(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),Z=!0},i.clearConfig=function(){_e=null,Z=!1},i.isValidAttribute=function(e,t,i){_e||Ie({});const n=Ce(e),r=Ce(t);return Ue(n,r,i)},i.addHook=function(e,t){"function"==typeof t&&(S[e]=S[e]||[],Po(S[e],t))},i.removeHook=function(e){if(S[e])return Ho(S[e])},i.removeHooks=function(e){S[e]&&(S[e]=[])},i.removeAllHooks=function(){S={}},i}();class Na{constructor(t){this.parent=t,this.container=e({class:"igv-ui-generic-dialog-container"}),t.appendChild(this.container);const n=e({class:"igv-ui-generic-dialog-header"});this.container.appendChild(n),this.label=e({class:"igv-ui-generic-dialog-one-liner"}),this.container.appendChild(this.label),this.label.text="Unlabeled",this.input_container=e({class:"igv-ui-generic-dialog-input"}),this.container.appendChild(this.input_container);let r='<input type="range" id="igv-slider-dialog-input" name="igv-slider-dialog-input" />';this._input=document.createRange().createContextualFragment(r).firstChild,this.input_container.appendChild(this._input),r='<output id="igv-slider-dialog-output" name="igv-slider-dialog-output" for="igv-slider-dialog-input"></output>',this._output=document.createRange().createContextualFragment(r).firstChild,this.input_container.appendChild(this._output);const s=e({class:"igv-ui-generic-dialog-ok-cancel"});this.container.appendChild(s),this.ok=e(),s.appendChild(this.ok),this.ok.textContent="OK",this.cancel=e(),s.appendChild(this.cancel),this.cancel.textContent="Cancel",i(this.container),this._input.addEventListener("input",(()=>{const e=parseFloat(this._input.value)/this._scaleFactor;this.callback(e),this._output.value=`${e.toFixed(2)}`}),!1),this.ok.addEventListener("click",(()=>{if("function"==typeof this.callback){const e=parseFloat(this._input.value)/this._scaleFactor;this.callback(e),this.callback=void 0}this._input.value=void 0,i(this.container)}));const o=()=>{this._input.value=void 0,i(this.container)};this.cancel.addEventListener("click",o),u(n,o),p(this.container,n)}get value(){return Ea.sanitize(this._input.value)}present(e,t){this.label.textContent=e.label,this._scaleFactor=e.scaleFactor;const[i,r,s]=[e.min,e.max,e.value].map((e=>Math.floor(this._scaleFactor*e).toString()));this._input.min=i,this._input.max=r,this._input.value=s;const o=parseFloat(s)/this._scaleFactor;this._output.value=`${o.toFixed(2)}`,this.callback=e.callback||e.click,n(this.container),this.clampLocation(t.clientX,t.clientY)}clampLocation(e,t){const{width:i,height:n}=this.container.getBoundingClientRect(),r=window.innerHeight,s=window.innerWidth,o=Math.min(r-n,t),a=Math.min(s-i,e);this.container.style.left=`${a}px`,this.container.style.top=`${o}px`}}class Ba{constructor(t){this.parent=t,this.container=e({class:"igv-ui-generic-dialog-container"}),t.appendChild(this.container);const n=e({class:"igv-ui-generic-dialog-header"});this.container.appendChild(n),this.label=e({class:"igv-ui-generic-dialog-one-liner"}),this.container.appendChild(this.label),this.label.text="Unlabeled",this.input_container=e({class:"igv-ui-generic-dialog-input"}),this.container.appendChild(this.input_container),this._input=document.createElement("input"),this.input_container.appendChild(this._input);const r=e({class:"igv-ui-generic-dialog-ok-cancel"});this.container.appendChild(r),this.ok=e(),r.appendChild(this.ok),this.ok.textContent="OK",this.cancel=e(),r.appendChild(this.cancel),this.cancel.textContent="Cancel",i(this.container),this._input.addEventListener("keyup",(e=>{"Enter"===e.code&&("function"==typeof this.callback&&(this.callback(this._input.value),this.callback=void 0),this._input.value=void 0,i(this.container)),e.stopImmediatePropagation()})),this.ok.addEventListener("click",(()=>{"function"==typeof this.callback&&(this.callback(this._input.value),this.callback=void 0),this._input.value=void 0,i(this.container)}));const s=()=>{this._input.value="",i(this.container)};this.cancel.addEventListener("click",s),u(n,s),p(this.container,n)}get value(){return Ea.sanitize(this._input.value)}present(e,t){this.label.textContent=e.label,this._input.value=e.value,this.callback=e.callback||e.click,n(this.container),this.clampLocation(t.clientX,t.clientY)}clampLocation(e,t){const{width:i,height:n}=this.container.getBoundingClientRect(),r=window.innerHeight,s=window.innerWidth,o=Math.min(r-n,t),a=Math.min(s-i,e);this.container.style.left=`${a}px`,this.container.style.top=`${o}px`}}const Ma={licorice:"#000000",lead:"#1e1e1e",tungsten:"#3a3a3a",iron:"#545453",steel:"#6e6e6e",tin:"#878687",nickel:"#888787",aluminum:"#a09fa0",magnesium:"#b8b8b8",silver:"#d0d0d0",mercury:"#e8e8e8",snow:"#ffffff",cayenne:"#891100",mocha:"#894800",aspargus:"#888501",fern:"#458401",clover:"#028401",moss:"#018448",teal:"#008688",ocean:"#004a88",midnight:"#001888",eggplant:"#491a88",plum:"#891e88",maroon:"#891648",maraschino:"#ff2101",tangerine:"#ff8802",lemon:"#fffa03",lime:"#83f902",spring:"#05f802",seam_foam:"#03f987",turquoise:"#00fdff",aqua:"#008cff",blueberry:"#002eff",grape:"#8931ff",magenta:"#ff39ff",strawberry:"#ff2987",salmon:"#ff726e",cantaloupe:"#ffce6e",banana:"#fffb6d",honeydew:"#cefa6e",flora:"#68f96e",spindrift:"#68fbd0",ice:"#68fdff",sky:"#6acfff",orchid:"#6e76ff",lavender:"#d278ff",bubblegum:"#ff7aff",carnation:"#ff7fd3"};class Ra{constructor({parent:t,top:n,left:r,width:s,height:o,border:a,closeHandler:c}){let l=e({class:"igv-ui-generic-container"});t.appendChild(l),i(l),this.container=l,void 0!==n&&(this.container.style.top=`${n}px`),void 0!==r&&(this.container.style.left=`${r}px`),void 0!==s&&(this.container.style.width=`${s}px`),void 0!==o&&(this.container.style.height=`${o}px`),a&&(this.container.style.border=a);const h=e();this.container.appendChild(h),u(h,(e=>{i(this.container),"function"==typeof c&&c(e)})),p(this.container,h)}show(){n(this.container)}hide(){i(this.container)}dispose(){this.container.parent&&this.container.parent.removeChild(this.container)}}class Da extends Ra{constructor({parent:e,width:t}){super({parent:e,width:t,border:"1px solid gray"})}configure(e,t){this.colorHandlers=t,this.setActiveColorHandler("color"),this.createSwatches(e)}setActiveColorHandler(e){this.activeColorHandler=this.colorHandlers[e]}createSwatches(t){this.container.querySelectorAll(".igv-ui-color-swatch").forEach((e=>e.remove()));const i=Object.values(Ma);for(let t of i){const i=e({class:"igv-ui-color-swatch"});this.container.appendChild(i),this.decorateSwatch(i,t)}if(t)for(let i of t){const t=e({class:"igv-ui-color-swatch"});this.container.appendChild(t),this.decorateSwatch(t,i)}}decorateSwatch(e,t){e.style.backgroundColor=t,e.addEventListener("mouseenter",(()=>e.style.borderColor=t)),e.addEventListener("mouseleave",(()=>e.style.borderColor="white")),e.addEventListener("click",(e=>{e.stopPropagation(),this.activeColorHandler(t)})),e.addEventListener("touchend",(e=>{e.stopPropagation(),this.activeColorHandler(t)}))}}const Ta={401:"Access unauthorized",403:"Access forbidden",404:"Not found"};class La{constructor(t,n){this.alertProps=Object.assign({shouldFocus:!0,preventScroll:!1},n),this.container=e({class:"igv-ui-alert-dialog-container"}),t.appendChild(this.container),this.container.setAttribute("tabIndex","-1");const r=e();this.container.appendChild(r),this.errorHeadline=e(),r.appendChild(this.errorHeadline),this.errorHeadline.textContent="";let s=e({class:"igv-ui-alert-dialog-body"});this.container.appendChild(s),this.body=e({class:"igv-ui-alert-dialog-body-copy"}),s.appendChild(this.body);let o=e();this.container.appendChild(o),this.ok=e(),o.appendChild(this.ok),this.ok.textContent="OK";const a=()=>{"function"==typeof this.callback&&(this.callback("OK"),this.callback=void 0),this.body.innerHTML="",i(this.container)};this.ok.addEventListener("click",(e=>{e.stopPropagation(),a()})),this.container.addEventListener("keypress",(e=>{e.stopPropagation(),"Enter"===e.key&&a()})),p(this.container,r),i(this.container)}present(e,t){this.errorHeadline.textContent=e.message?"ERROR":"";let i=e.message||e;Ta.hasOwnProperty(i)&&(i=Ta[i]);const r=Ea.sanitize(i);this.body.innerHTML=r,this.callback=t,n(this.container),this.alertProps.shouldFocus&&this.container.focus({preventScroll:this.alertProps.preventScroll})}}class za{constructor(e){this.dialog=new La(e)}present(e,t){this.dialog.present(e,t)}}function Ha(e){if(e)switch(e.toLowerCase()){case"bw":case"bigwig":case"wig":case"bedgraph":case"tdf":return"wig";case"vcf":return"variant";case"seg":return"seg";case"mut":case"maf":return"mut";case"bam":case"cram":return"alignment";case"hiccups":case"bedpe":case"bedpe-loop":case"biginteract":return"interact";case"bp":return"arc";case"gwas":return"gwas";case"bed":case"bigbed":case"bb":case"biggenepred":case"bignarrowpeak":return"bedtype";case"fasta":return"sequence";case"pytor":return"cnvpytor";case"qtl":return"qtl";default:return"annotation"}}function Pa(e){e.featureType&&(e.type=e.type||e.featureType,e.featureType=void 0),"junctions"===e.type?e.type="junction":"bed"===e.type?(e.type="annotation",e.format=e.format||"bed"):"annotations"===e.type?e.type="annotation":"alignments"===e.type?e.type="alignment":"bam"===e.type?(e.type="alignment",e.format="bam"):"vcf"===e.type?(e.type="variant",e.format="vcf"):"t2d"===e.type?e.type="gwas":"FusionJuncSpan"!==e.type||e.format?"aed"===e.type&&(e.type="annotation",e.format=e.format||"aed"):e.format="fusionjuncspan"}var Oa=Object.freeze({__proto__:null,inferTrackType:Ha,translateDeprecatedTypes:Pa});function Ua(e){const t=new Set(["boolean","number","string","symbol"]),i=typeof e;return void 0!==e&&(t.has(i)||e.substring||e.toFixed)}function qa(e,t){var i={oauthToken:e.oauthToken,headers:e.headers,withCredentials:e.withCredentials,filename:e.filename};return Object.assign(i,t)}const Qa=function(e){var t,i;if(e&&e.length>0){t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let n of e)Number.isNaN(n.value)||(t=Math.min(t,n.value),i=Math.max(i,n.value));i>0&&(t=Math.min(0,t)),i<0&&(i=0)}else t=0,i=100;return{min:t,max:i}},Va=function(e,t,i){let n=t.start,r=t.end;if(void 0===r)n-=i/2,r=n+i,r>e?(r=e,n=r-i):n<0&&(n=0,r=i);else if(r-n<i){const t=(r+n)/2;t-i/2<0?(n=0,r=n+i):t+i/2>e?(r=e,n=r-i):(n=t-i/2,r=n+i)}t.start=Math.ceil(n),t.end=Math.floor(r)},ja=function(e){return"number"==typeof e?e-e==0:"string"==typeof e&&""!==e.trim()&&Number.isFinite(+e)};async function Wa(e){if(Mt(e)&&e.startsWith("https://drive.google.com")){if(void 0===zs())throw Error("Google drive is referenced, but API key is not defined.  An API key is required for Google Drive access");const t=await async function(e){let t="https://www.googleapis.com/drive/v3/files/"+Ps(e)+"?supportsTeamDrives=true";const i=zs();i&&(t+="&key="+i);const n=await fetch(t);let r=await n.json();if(r.error&&404===r.error.code){let e="https://www.googleapis.com/auth/drive.readonly";const i=await Ls(e);if(!i)throw Error(r.error);{const e=await fetch(t,{headers:{Authorization:`Bearer ${i}`}});if(r=await e.json(),r.error)throw Error(r.error)}}return r}(e);return t.originalFileName||t.name}return zt(e)}function Ga(e){var t,i;return e>1e7?(t=" mb",i=e/1e6,Math.floor(i).toString()+t):e>1e4?(t=" kb",i=e/1e3,Rt(Math.floor(i))+t):Rt(e)+" bp"}function $a(e){return Mt(e)&&e.startsWith("data:")}function Ka(t,i){const n=e({class:i});t.appendChild(n)}function Ya(e,t){t.parentNode.insertBefore(e,t)}function Xa(e,t){t.parentNode.insertBefore(e,t.nextSibling)}function Za(){return"https:"===window.location.protocol||"localhost"===window.location.hostname}class Ja extends Ra{constructor({parent:e,top:t,left:i,width:n,height:r,defaultColors:s,colorHandler:o}){super({parent:e,top:t,left:i,width:n,height:r,border:"1px solid gray"}),ec(this.container,o,s)}}const ec=(t,i,n)=>{const r=Object.values(Ma);for(let n of r){const r=e({class:"igv-ui-color-swatch"});t.appendChild(r),tc(r,n,i)}if(n)for(let r of n){const n=e({class:"igv-ui-color-swatch"});t.appendChild(n),tc(n,r,i)}},tc=(e,t,i)=>{e.style.backgroundColor=t,e.addEventListener("mouseenter",(i=>e.style.borderColor=t)),e.addEventListener("mouseleave",(t=>e.style.borderColor="white")),e.addEventListener("click",(e=>{e.stopPropagation(),i(t)})),e.addEventListener("touchend",(e=>{e.stopPropagation(),i(t)}))};class ic{constructor(t,i,n,r){this.parent=t,this.popover=e({class:"igv-ui-popover"}),t.appendChild(this.popover),this.popoverHeader=e(),this.popover.appendChild(this.popoverHeader);const s=e();this.popoverHeader.appendChild(s),n&&(s.textContent=n);const o=e();this.popoverHeader.appendChild(o),o.appendChild(l("times")),o.addEventListener("click",(e=>{e.stopPropagation(),e.preventDefault(),r?r():this.dismiss()})),!0===i&&p(this.popover,this.popoverHeader,{minX:0,minY:0}),this.popoverContent=e(),this.popover.appendChild(this.popoverContent),this.popover.style.display="none"}configure(e){if(0===e.length)return;const t=rc(e,this.popover);for(const{object:e}of t)this.popoverContent.appendChild(e)}present(e){this.popover.style.display="block";const t=this.popover.parentNode,{x:i,y:n,width:r}=a(e,t);this.popover.style.top=`${n}px`;const{width:s}=this.popover.getBoundingClientRect(),o=i+s,c=o-r;this.popover.style.left=`${o>r?i-c:i}px`,this.popoverContent.style.maxWidth=`${Math.min(s,r)}px`}presentContentWithEvent(e,t){this.popover.style.display="block",this.popoverContent.innerHTML=t,nc(e,this.popover,this.popoverContent)}presentMenu(e,t){if(0===t.length)return;this.popover.style.display="block";const i=rc(t,this.popover);for(let e of i)this.popoverContent.appendChild(e.object);nc(e,this.popover,this.popoverContent)}dismiss(){this.popover.style.display="none"}hide(){this.popover.style.display="none",this.dispose()}dispose(){this.popover&&this.popover.parentNode.removeChild(this.popover);const e=Object.keys(this);for(let t of e)this[t]=void 0}}function nc(e,t,i){const{x:n,y:r,width:s}=a(e,t.parentNode);t.style.top=`${r}px`;const{width:o}=t.getBoundingClientRect(),c=n+o,l=c-s;t.style.left=`${c>s?n-l:n}px`,i.style.maxWidth=`${Math.min(o,s)}px`}function rc(t,n){const r=t.map((function(t,r){let s;if("string"==typeof t)s=e(),s.innerHTML=t;else if("Node"==typeof t)s=t;else{if("function"==typeof t.init&&t.init(),"checkbox"===t.type)s=function(t,i){const n=e({class:"igv-ui-trackgear-popover-check-container"}),r=h("check",!0===i?"#444":"transparent");r.style.borderColor="gray",r.style.borderWidth="1px",r.style.borderStyle="solid",n.appendChild(r);let s=e();return s.textContent=t,n.appendChild(s),n}("Show all bases",t.value);else if("color"===t.type){const o=new Ja({parent:n.parentElement,width:364,colorHandler:e=>t.click(e)});s=e(),"string"==typeof t.label&&(s.innerHTML=t.label);const a=e=>{o.show(),i(n),e.preventDefault(),e.stopPropagation()};s.addEventListener("click",a),s.addEventListener("touchend",a),s.addEventListener("mouseup",(function(e){e.preventDefault(),e.stopPropagation()}))}else s=e(),"string"==typeof t.label&&(s.innerHTML=t.label);if(t.click&&"color"!==t.type){function c(e){t.click(),i(n),e.preventDefault(),e.stopPropagation()}s.addEventListener("click",c),s.addEventListener("touchend",c),s.addEventListener("mouseup",(function(e){e.preventDefault(),e.stopPropagation()}))}}return{object:s,init:t.init}}));return r}const sc=[["A","T"],["G","C"],["Y","R"],["W","S"],["K","M"],["D","H"],["B","V"]],oc=new Map;for(let yA of sc){const AA=yA[0],CA=yA[1];oc.set(AA,CA),oc.set(CA,AA),oc.set(AA.toLowerCase(),CA.toLowerCase()),oc.set(CA.toLowerCase(),AA.toLowerCase())}function ac(e){return oc.has(e)?oc.get(e):e}function cc(e){let t="";for(let i of e)t+=oc.has(i)?oc.get(i):i;return t}function lc(e){let t="",i=e.length;for(;i-- >0;){const n=e[i];t+=oc.has(n)?oc.get(n):n}return t}class hc{constructor(e,t,i,n){this.name=e,this.order=t,this.bpLength=i,this.altNames=n}getAltName(e){return this.altNames&&this.altNames.has(e)?this.altNames.get(e):this.name}}class dc{constructor(e,t,i,n){this.chr=e,this.start=t,this.end=i,this.features=n}contains(e,t,i){return this.chr===e&&this.start<=t&&this.end>=i}containsRange(e){return this.chr===e.chr&&this.start<=e.start&&this.end>=e.end}get locusString(){return`${this.chr}:${this.start+1}-${this.end}`}}class uc extends dc{constructor(e,t,i,n){super(e,t,i,n)}getSequence(e,t){if(e<this.start||t>this.end)return null;const i=e-this.start,n=t-e;return this.features?this.features.substring(i,i+n):null}hasSequence(e,t){return e>=this.start&&t<=this.end}}const fc=Dt,pc=new Set(["fastaURL","indexURL","cytobandURL","indexed"]);class gc{#e;chromosomes=new Map;sequences=new Map;constructor(e){this.fastaURL=e.fastaURL,this.withCredentials=e.withCredentials;const t={};for(let i in e)e.hasOwnProperty(i)&&!pc.has(i)&&(t[i]=e[i]);this.config=t}async init(){return this.loadAll()}getSequenceRecord(e){return this.chromosomes.get(e)}get chromosomeNames(){return this.#e||(this.#e=Array.from(this.chromosomes.keys())),this.#e}getFirstChromosomeName(){return this.chromosomeNames[0]}async getSequence(e,t,i){if(0===this.sequences.size&&await this.loadAll(),!this.sequences.has(e))return;let n=this.sequences.get(e).find((e=>e.contains(t,i)));if(!n&&(n=this.sequences.get(e).find((e=>e.overlaps(t,i))),!n))return;t-=n.offset,i-=n.offset;let r="";if(t<0)for(let e=t;e<Math.min(i,0);e++)r+="*";if(i<=0)return r;const s=n.sequence,o=Math.min(i,s.length);return r+s.substring(t,o)}async loadAll(){let e;if($a(this.fastaURL)){let t=vs(this.fastaURL);e="";for(let i of t)e+=String.fromCharCode(i)}else e=await Qs.load(this.fastaURL,qa(this.config));const t=new Set,i=fc(e),n=i.length;let r,s=0,o=0,a={};for(;s<n;){if(r=i[s++].trim(),r.startsWith("#")||0===r.length);else if(r.startsWith(">")){a&&a.seq&&c.call(this,a,o++);const e=r.substr(1).split(/\s+/),t=e[0].split(":");if(a.chr=t[0],a.seq="",a.offset=0,t.length>1&&t[1].indexOf("-")>0){const i=t[1].split("-");2===i.length&&/^[0-9]+$/.test(i[0])&&/^[0-9]+$/.test(i[1]);const n=Number.parseInt(i[0]);if(Number.parseInt(i[1])>n&&(a.offset=n-1),e.length>1&&e[1].startsWith("@len="))try{a.length=parseInt(e[1].trim().substring(5))}catch(e){a.length=void 0,console.error(`Error parsing sequence length for ${r}`)}else a.length=void 0}}else a.seq+=r;a&&a.seq&&c.call(this,a,o)}function c(e,i){const n=e.length||e.offset+e.seq.length;if(t.has(e.chr)){const t=this.chromosomes.get(e.chr);t.bpLength=Math.max(t.bpLength,n)}else this.sequences.set(e.chr,[]),this.chromosomes.set(e.chr,new hc(e.chr,i,n)),t.add(e.chr);this.sequences.get(e.chr).push(new mc(e.offset,e.seq))}}getSequenceInterval(e,t,i){const n=this.sequences.get(e);if(n)for(let r of n){const n=r.sequence,s=r.offset,o=s+n.length;if(s<=t&&o>=i)return new uc(e,s,o,n)}}}class mc{constructor(e,t){this.offset=e,this.sequence=t}contains(e,t){return this.offset<=e&&this.end>=t}overlaps(e,t){return this.offset<t&&this.end>e}get end(){return this.offset+this.sequence.length}}const wc=Dt,bc=new Set(["fastaURL","indexURL","compressedIndexURL","cytobandURL","indexed"]);class Fc{#e;chromosomes=new Map;constructor(e){this.file=e.fastaURL,this.indexFile=e.indexURL,this.compressedIndexFile=e.compressedIndexURL,this.withCredentials=e.withCredentials;const t={};for(let i in e)e.hasOwnProperty(i)&&!bc.has(i)&&(t[i]=e[i]);this.config=t}getSequenceRecord(e){return this.chromosomes.get(e)}async init(){return this.getIndex()}get chromosomeNames(){return this.#e||(this.#e=Array.from(this.chromosomes.keys())),this.#e}getFirstChromosomeName(){return this.chromosomeNames[0]}async getIndex(){if(this.index)return this.index;{const e=await Qs.load(this.indexFile,qa(this.config)),t=wc(e),i=t.length;let n=0,r=0;for(this.index={};n<i;){const e=t[n++].split("\t");if(5===e.length){const t=e[0],i=parseInt(e[1]),n={size:i,position:parseInt(e[2]),basesPerLine:parseInt(e[3]),bytesPerLine:parseInt(e[4])};this.index[t]=n,this.chromosomes.set(t,new hc(t,r++,i))}}return this.index}}async getCompressedIndex(){if(this.compressedIndex)return this.compressedIndex;if(!this.compressedIndexFile)return this.compressedIndex=[],this.compressedIndex;this.compressedIndex=[];const e=await Qs.loadArrayBuffer(this.compressedIndexFile,qa(this.config)),t=e.byteLength;if(t<8)return console.log("Cannot parse GZI index file: length ("+t+" bytes) is insufficient to determine content of index."),this.compressedIndex;const i=e.slice(0,8),n=Number(new DataView(i).getBigUint64(0,!0)),r=8+2*n*8;if(t!=r)return console.log("Incorrect file size of reference genome index. Expected : "+r+". Received : "+t),this.compressedIndex;this.compressedIndex.push([0,0]);for(let t=0;t<n;t++){const i=8+2*t*8,n=8+2*t*8+16,r=e.slice(i,n),s=new DataView(r),o=Number(s.getBigUint64(0,!0)),a=Number(s.getBigUint64(8,!0));this.compressedIndex.push([o,a])}return this.compressedIndex}async getRelevantCompressedBlockNumbers(e,t){if(e<0||t<0||t<e)return console.log("Incompatible query positions for reference-genome. Start:"+e+" | End:"+t),[];await this.getCompressedIndex();let i=[];const n=this.compressedIndex.length-1;if(0==this.compressedIndex.length)return console.log("Compressed index does not contain any content"),[];if(e>this.compressedIndex[n][1])return[n];let r=0,s=n,o=Math.floor(this.compressedIndex.length/2),a=this.compressedIndex.length+1,c=!1;for(let t=0;t<a;t++){const t=this.compressedIndex[o][1],i=o<this.compressedIndex.length-1?this.compressedIndex[o+1][1]:1/0;if(t<=e&&i>e){c=!0;break}t<e?r=o+1:s=o-1,o=Math.ceil((s-r)/2)+r}if(!c)return console.log("No blocks within compressed index found that correspond with query positions "+e+","+t),console.log(this.compressedIndex),[];i.push(o);for(let e=o+1;e<this.compressedIndex.length;e++){i.push(e);if(this.compressedIndex[e][1]>=t)break}const l=i[i.length-1];return l===this.compressedIndex.length-1&&this.compressedIndex[l][1]<t&&i.push(-1),i}async loadAndUncompressBlocks(e,t){if(await this.getCompressedIndex(),0==e.length)return"";let i=Array(e.length-1);for(let t=0;t<e.length-1;t++){const n=e[t],r=this.compressedIndex[n][0],s=e[t+1];let o=[];if(-1!=s){const e=this.compressedIndex[s][0]-r;o=await Qs.loadArrayBuffer(this.file,qa(this.config,{range:{start:r,size:e}}))}else o=await Qs.loadArrayBuffer(this.file,qa(this.config,{range:{start:r}}));const a=await gs(o);i[t]=a}let n="";for(let e=0;e<i.length;e++)for(let t=0;t<i[e].length;t++){n+=String.fromCharCode(i[e][t])}const r=t-this.compressedIndex[e[0]][1];return n=n.substring(r),n}async readSequence(e,t,i){await this.getIndex(),await this.getCompressedIndex();const n=this.index[e];if(!n)return console.log("No index entry for chr: "+e),this.index[e]=null,null;const r=Math.max(0,t),s=Math.min(n.size,i),o=n.bytesPerLine,a=n.basesPerLine,c=n.position,l=o-a,h=Math.floor(r/a),d=Math.floor(s/a),u=r-h*a,f=c+h*o+u,p=c+d*o+(s-d*a)-1,g=p-f+1;if(g<=0)return console.error("No sequence for "+e+":"+t+"-"+i),null;let m;if(this.compressedIndexFile){let e=await this.getRelevantCompressedBlockNumbers(f,p);if(0===e.length)return console.log("No blocks in the compressed index that correspond with the requested byte positions ("+f+","+p+")"),null;m=await this.loadAndUncompressBlocks(e,f)}else m=await Qs.load(this.file,qa(this.config,{range:{start:f,size:g}}));if(!m)return null;let w,b="",F=0,v=m.length;for(u>0&&(w=Math.min(s-r,a-u),b+=m.substr(F,w),F+=w+l);F<v;)w=Math.min(a,v-F),b+=m.substr(F,w),F+=w+l;return b}}const vc=Dt;class yc{#e;chromosomes=new Map;constructor(e){this.url=e}async init(){return this.loadAll()}getSequenceRecord(e){return this.chromosomes.get(e)}get chromosomeNames(){this.#e||(this.#e=Array.from(this.chromosomes.keys()))}async getSequence(e,t,i){return null}async loadAll(){let e;if($a(this.url)){let t=vs(this.fastaURL);e="";for(let i of t)e+=String.fromCharCode(i)}else e=await Qs.load(this.url,{});const t=vc(e);let i=0;for(let e of t){const t=e.split("\t");if(t.length>1){const e=Number.parseInt(t[1]),n=new hc(t[0],i++,e);this.chromosomes.set(t[0],n)}}}}class Ac{constructor(e,t=!0){this.littleEndian=t,this.position=0,this.view=e,this.length=e.byteLength}setPosition(e){this.position=e}available(){return this.length-this.position}remLength(){return this.length-this.position}hasNext(){return this.position<this.length-1}getByte(){const e=this.view.getUint8(this.position,this.littleEndian);return this.position++,e}getShort(){const e=this.view.getInt16(this.position,this.littleEndian);return this.position+=2,e}getUShort(){const e=this.view.getUint16(this.position,this.littleEndian);return this.position+=2,e}getInt(){const e=this.view.getInt32(this.position,this.littleEndian);return this.position+=4,e}getUInt(){const e=this.view.getUint32(this.position,this.littleEndian);return this.position+=4,e}getLong(){var e=[];e[0]=this.view.getUint8(this.position),e[1]=this.view.getUint8(this.position+1),e[2]=this.view.getUint8(this.position+2),e[3]=this.view.getUint8(this.position+3),e[4]=this.view.getUint8(this.position+4),e[5]=this.view.getUint8(this.position+5),e[6]=this.view.getUint8(this.position+6),e[7]=this.view.getUint8(this.position+7);let t=0;if(this.littleEndian)for(let i=e.length-1;i>=0;i--)t=256*t+e[i];else for(let i=0;i<e.length;i++)t=256*t+e[i];return this.position+=8,t}getString(e){let t,i="";for(;0!==(t=this.view.getUint8(this.position++))&&(i+=String.fromCharCode(t),!e||i.length!==e););return i}getFixedLengthString(e){let t="";for(let i=0;i<e;i++){const e=this.view.getUint8(this.position++);e>0&&(t+=String.fromCharCode(e))}return t}getFloat(){var e=this.view.getFloat32(this.position,this.littleEndian);return this.position+=4,e}getDouble(){var e=this.view.getFloat64(this.position,this.littleEndian);return this.position+=8,e}skip(e){return this.position+=e,this.position}getVPointer(){var e=this.position,t=this.view.getUint8(e+1)<<8|this.view.getUint8(e),i=4294967296*(255&this.view.getUint8(e+6))+16777216*(255&this.view.getUint8(e+5))+65536*(255&this.view.getUint8(e+4))+256*(255&this.view.getUint8(e+3))+(255&this.view.getUint8(e+2));return this.position+=8,new Cc(i,t)}}class Cc{constructor(e,t){this.block=e,this.offset=t}isLessThan(e){return this.block<e.block||this.block===e.block&&this.offset<e.offset}isGreaterThan(e){return this.block>e.block||this.block===e.block&&this.offset>e.offset}isEqualTo(e){return this.block===e.block&&this.offset===e.offset}print(){return this.block+":"+this.offset}}class _c{static magic=2026540177;littleEndian=!0;nodeCache=new Map;static async loadBpTree(e,t,i){return new _c(e,t,i).init()}constructor(e,t,i){this.path=e,this.config=t,this.startOffset=i}async init(){const e=await this.#t(this.startOffset,32);let t=e.getInt();if(t!==_c.magic&&(e.setPosition(0),this.littleEndian=!this.littleEndian,e.littleEndian=this.littleEndian,t=e.getInt(),t!==_c.magic))throw Error(`Bad magic number ${t}`);const i=e.getInt(),n=e.getInt(),r=e.getInt(),s=e.getLong(),o=e.getLong(),a=this.startOffset+32;return this.header={magic:t,blockSize:i,keySize:n,valSize:r,itemCount:s,reserved:o,nodeOffset:a},this}async search(e){this.header||await this.init();const{keySize:t,valSize:i}=this.header;if(16!==i&&8!==i)throw Error(`Unexpected valSize ${i}`);const n=async e=>{if(this.nodeCache.has(e))return this.nodeCache.get(e);{let n=await this.#t(e,4);const r=n.getByte();n.getByte();const s=n.getUShort(),o=[];if(1===r){const r=s*(t+i);n=await this.#t(e+4,r);for(let e=0;e<s;e++){const e=n.getFixedLengthString(t),r=n.getLong();let s;if(16===i){const e=n.getInt();n.getInt(),s={offset:r,length:e}}else s={offset:r};o.push({key:e,value:s})}}else{const i=s*(t+8);n=await this.#t(e+4,i);for(let e=0;e<s;e++){const e=n.getFixedLengthString(t),i=n.getLong();o.push({key:e,offset:i})}}const a={type:r,count:s,items:o};return this.nodeCache.set(e,a),a}},r=async t=>{const i=await n(t);if(1!==i.type){let t=i.items[0].offset;for(let n=1;n<i.items.length;n++){const r=i.items[n].key;if(e.localeCompare(r)<0)break;t=i.items[n].offset}return r(t)}for(let t of i.items)if(e===t.key)return t.value};return r(this.header.nodeOffset)}async#t(e,t){const i=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:e,size:t}}));return new Ac(new DataView(i),this.littleEndian)}}
/**
     * Note: Some portions of this code adapated from the GMOD two-bit.js project, @Copyright (c) 2017 Robert Buels
     * * https://github.com/GMOD/twobit-js/blob/master/src/twoBitFile.ts*
     */const xc=["T","C","A","G"],kc=[];for(let _A=0;_A<256;_A++)kc.push(xc[_A>>6&3]+xc[_A>>4&3]+xc[_A>>2&3]+xc[3&_A]);const Ic=kc.map((e=>e.toLowerCase()));class Sc{littleEndian;metaIndex=new Map;constructor(e){this.url=e.twoBitURL||e.fastaURL,this.config=e,e.twoBitBptURL&&(this.bptURL=e.twoBitBptURL)}async init(){if(this.bptURL)this.index=await _c.loadBpTree(this.bptURL,this.config,0);else{const e=await this._readIndex();this.index={search:async t=>e.has(t)?{offset:e.get(t)}:void 0}}}async readSequence(e,t,i){this.index||await this.init();const n=await this.getSequenceRecord(e);if(!n)return null;if(t<0)throw new TypeError("regionStart cannot be less than 0");(void 0===i||i>n.dnaSize)&&(i=n.dnaSize);const r=this._getOverlappingBlocks(t,i,n.nBlocks),s=this._getOverlappingBlocks(t,i,n.maskBlocks),o=Math.floor(t/4),a=n.packedPos+o,c=Math.floor(i/4)-o+1,l=await Qs.loadArrayBuffer(this.url,{range:{start:a,size:c}}),h=new Uint8Array(l);let d="";for(let e=t;e<i;e+=1){for(;s.length&&s[0].end<=e;)s.shift();const t=s[0]&&s[0].start<=e&&s[0].end>e;if(r[0]&&e>=r[0].start&&e<r[0].end){const t=r.shift();for(;e<t.end&&e<i;)d+="N",e++;e--}else{const i=e%4,n=h[Math.floor(e/4)-o];d+=t?Ic[n][i]:kc[n][i]}}return d}async _readIndex(){const e=new Map;let t=await Qs.loadArrayBuffer(this.url,{range:{start:0,size:64}}),i=new DataView(t),n=0;const r=i.getUint32(n,!0),s=i.getUint32(n,!1);n+=4;const o=440477507;if(r===o)this.littleEndian=!0;else{if(s!==o)throw Error(`Bad magic number ${o}`);this.littleEndian=!1}let a,c;this.version=i.getUint32(n,this.littleEndian),n+=4,this.sequenceCount=i.getUint32(n,this.littleEndian),n+=4,this.reserved=i.getUint32(n,this.littleEndian),n+=4;let l=20;for(let t=0;t<this.sequenceCount;t++){(!c||c.available()<1)&&(a=(this.sequenceCount-t)*l,c=await this._loadBinaryBuffer(n,a));const i=c.getByte();n+=1,c.available()<i+5&&(a=(this.sequenceCount-t)*l+100,c=await this._loadBinaryBuffer(n,a));const r=c.getString(i),s=c.getUInt();n+=i+4,e.set(r,s),l=Math.floor(l*(t/(t+1))+r.length/(t+1))}return e}async getSequenceRecord(e){if(!this.metaIndex.has(e)){if(!this.index)throw Error("TwobitSequence object must be initialized before accessing sequence");let t=await this.index.search(e);if(!t)return;let i=t.offset,n=8,r=await this._loadBinaryBuffer(i,n);const s=r.getUInt(),o=r.getUInt();i+=n,n=8*o+4,r=await this._loadBinaryBuffer(i,n);const a=[];for(let e=0;e<o;e++)a.push(r.getUInt());const c=[];for(let e=0;e<o;e++)c.push(r.getUInt());const l=r.getUInt();i+=n,n=8*l+4,r=await this._loadBinaryBuffer(i,n);const h=[];for(let e=0;e<l;e++)h.push(r.getUInt());const d=[];for(let e=0;e<l;e++)d.push(r.getUInt());const u=[];for(let e=0;e<o;e++)u.push(new Ec(a[e],c[e]));const f=[];for(let e=0;e<l;e++)f.push(new Ec(h[e],d[e]));if(0!=r.getUInt())throw Error("Bad 2-bit file");i+=n;const p={dnaSize:s,nBlocks:u,maskBlocks:f,packedPos:i,bpLength:s};this.metaIndex.set(e,p)}return this.metaIndex.get(e)}_getOverlappingBlocks(e,t,i){const n=[];for(let r of i){if(r.start>t)break;r.end<e||n.push(r)}return n}async _loadBinaryBuffer(e,t){const i=await Qs.loadArrayBuffer(this.url,{range:{start:e,size:t}});return new Ac(new DataView(i),this.littleEndian)}}class Ec{constructor(e,t){this.start=e,this.size=t}get end(){return this.start+this.size}}class Nc{static#i=1e5;#n;#r=[];#s=10;constructor(e,t){this.sequenceReader=e,this.browser=t}get chromosomes(){return this.sequenceReader.chromosomes}async getSequenceRecord(e){return this.sequenceReader.getSequenceRecord(e)}async getSequence(e,t,i){let n=this.#r.find((n=>n.contains(e,t,i)));if(n||(n=await this.#o(e,t,i),this.#a(n),this.#r.push(n)),n){const e=t-n.start,r=i-t;return n.features?n.features.substring(e,e+r):null}}#a(e){this.#r=this.#r.filter((t=>!e.contains(t))),this.#r.length===this.#s&&this.#r.shift(),this.browser&&this.browser.referenceFrameList.length<100&&(this.#r=this.#r.filter((e=>void 0!==this.browser.referenceFrameList.find((t=>t.overlaps(e))))))}getSequenceInterval(e,t,i){return this.#r.find((n=>n.contains(e,t,i)))}async#o(e,t,i){let n=t,r=i;if(i-t<Nc.#i){const e=i-t,s=Math.round(t+e/2);n=Math.max(0,s-Nc.#i/2),r=n+Nc.#i}const s=new uc(e,n,r);if(this.#n&&this.#n[0].contains(e,t,i))return this.#n[1];{const t=new Promise((async(t,i)=>{s.features=await this.sequenceReader.readSequence(e,n,r),t(s)}));return this.#n=[s,t],t}}async init(){return this.sequenceReader.init()}get chromosomeNames(){return this.sequenceReader.chromosomeNames}getFirstChromosomeName(){return"function"==typeof this.sequenceReader.getFirstChromosomeName?this.sequenceReader.getFirstChromosomeName():void 0}#c(e){this.browser.referenceFrameList}}async function Bc(e,t){let i;return"chromsizes"===e.format?i=new yc(e.fastaURL||e.url):"2bit"===e.format||e.twoBitURL?i=new Nc(new Sc(e),t):$a(e.fastaURL)||!e.indexURL?i=new gc(e):"gbk"===e.format||e.gbkURL||(i=new Nc(new Fc(e),t)),await i.init(),i}const Mc={A:"rgb(  0, 200,   0)",C:"rgb(  0,0,200)",T:"rgb(255,0,0)",G:"rgb(209,113,  5)",N:"rgb(80,80,80)"};function Rc(e,t){if(e.length<6)return void console.log("Skipping line: "+e.join(" "));var i={chr1:e[0],start1:Number.parseInt(e[1]),end1:Number.parseInt(e[2]),chr2:e[3],start2:Number.parseInt(e[4]),end2:Number.parseInt(e[5])};if(isNaN(i.start1)||isNaN(i.end1)||isNaN(i.start2)||isNaN(i.end2))return;t&&void 0===t.hiccups&&(t.hiccups=!!t.columnNames&&Tc(t.columnNames));const n=t&&t.hiccups,r=n?6:10;if(n||(e.length>6&&"."!==e[6]&&(i.name=e[6]),e.length>7&&"."!==e[7]&&(i.score=Number(e[7])),e.length>8&&"."!==e[8]&&(i.strand1=e[8]),e.length>9&&"."!==e[9]&&(i.strand2=e[9])),t){const n=t.colorColumn;n&&n<e.length&&(i.color=_s.createColorString(e[n]));const s=t.thicknessColumn;s&&s<e.length&&(i.thickness=e[s]),e.length>r&&t.columnNames&&t.columnNames.length===e.length&&(i.extras=e.slice(r))}return i.chr1===i.chr2&&(i.chr=i.chr1,i.start=Math.min(i.start1,i.start2),i.end=Math.max(i.end1,i.end2)),i}function Dc(e,t){if(!(e.length<8))return{chr:e[0],start:Number.parseInt(e[1]),end:Number.parseInt(e[2]),color:_s.createColorString(e[6]),value:Number(e[7])}}function Tc(e){return e&&(e.includes("fdrDonut")||e.includes("fdr_donut"))}function Lc(e,t){if(!(e.length<6))return{chr:e[0],start:Number.parseInt(e[1]),end:Number.parseInt(e[2]),chr1:e[8],start1:Number.parseInt(e[9]),end1:Number.parseInt(e[10]),chr2:e[13],start2:Number.parseInt(e[14]),end2:Number.parseInt(e[15]),name:e[3],score:Number(e[4]),value:Number(e[5]),color:"."===e[7]?void 0:"0"===e[7]?"rgb(0,0,0)":e[7]};console.log("Skipping line: "+e.join(" "))}class zc{constructor(e){this.message=e}}const Hc=new Map([["%09","\t"],["%0A","\n"],["%0D","\r"],["%25","%"],["%3B",";"],["%3D","="],["%26","&"],["%2C",","]]);function Pc(e){if(!e.includes("%"))return e;let t="";for(let i=0;i<e.length;i++)if(37===e.charCodeAt(i)&&i<e.length-2){const n=e.substring(i,i+3);Hc.has(n)?t+=Hc.get(n):t+=n,i+=2}else t+=e.charAt(i);return t}function Oc(e,t="="){const i="="===t;var n=[];for(let r of e.split(";")){r=r.trim();const e=r.indexOf(t);if(e>0&&e<r.length-1){let t=Pc(r.substring(0,e).trim()),s=Pc(r.substring(e+1).trim());i||(t=Uc(t),s=Uc(s)),n.push([t,s])}}return n}function Uc(e){return e.startsWith('"')&&e.endsWith('"')&&(e=e.substr(1,e.length-2)),e}function qc(e,t,i=Number.MAX_SAFE_INTEGER){if(e.length<3)return;t&&t.gffTags;const n=e[0],r=parseInt(e[1]),s=e.length>2?parseInt(e[2]):r+1;if(isNaN(r)||isNaN(s))return new zc("Unparsable bed record.");const o=new nl({chr:n,start:r,end:s,score:1e3});let a=3;try{if(e.length>3&&a++<i){if(e[3].indexOf(";")>0&&e[3].indexOf("=")>0){const i=Oc(e[3],"=");o.attributes={};for(let e of i)o.attributes[e[0]]=e[1],null!=t.nameField&&e[0]===t.nameField&&(o.name=e[1])}o.name||(o.name="."===e[3]?"":e[3])}if(e.length>4&&a++<i&&(o.score="."===e[4]?0:Number(e[4]),isNaN(o.score)))return o;if(e.length>5&&a++<i&&(o.strand=e[5],"."!==o.strand&&"+"!==o.strand&&"-"!==o.strand))return o;if(e.length>6&&a++<i&&(o.cdStart=parseInt(e[6]),isNaN(o.cdStart)))return o;if(e.length>7&&a++<i&&(o.cdEnd=parseInt(e[7]),isNaN(o.cdEnd)))return o;if(e.length>8&&a++<i&&"."!==e[8]&&"0"!==e[8]&&(o.color=_s.createColorString(e[8])),e.length>11&&a++<i){const t=parseInt(e[9]);if(t>1e3)return o;const i=e[10].replace(/,$/,"").split(","),n=e[11].replace(/,$/,"").split(",");if(i.length!==n.length||t!==i.length)return o;const s=[];for(let e=0;e<t;e++){const t=r+parseInt(n[e]),o=t+parseInt(i[e]);s.push({start:t,end:o})}s.length>0&&(Xc(s,o.cdStart,o.cdEnd),o.exons=s)}if(t){let i=t.thicknessColumn,n=t.colorColumn;n&&n<e.length&&(o.color=_s.createColorString(e[n])),i&&i<e.length&&(o.thickness=e[i])}}catch(e){}return o}function Qc(e,t){const i=qc(e,t);return i&&e.length>14&&(i.signal=Number(e[12]),i.pValue=Number(e[13]),i.qValue=Number(e[14])),i}function Vc(e,t){const i=qc(e,t,9);if(i){const t=["Coverage","% Showing Methylation","N-mod","N-canonical","N-other mod","N-delete","N-fail","N-dff","N-nocall"];for(let n=9;n<e.length;n++){i[t[n-9]]=e[n]}}return i}function jc(e,t){if(e.length<=15)return;return{swScore:Number.parseInt(e[1]),milliDiv:Number.parseInt(e[2]),milliDel:Number.parseInt(e[3]),milliIns:Number.parseInt(e[4]),chr:e[5],start:Number.parseInt(e[6]),end:Number.parseInt(e[7]),strand:e[9],repName:e[10],repClass:e[11],repFamily:e[12],repStart:Number.parseInt(e[13]),repEnd:Number.parseInt(e[14]),repLeft:Number.parseInt(e[15])}}function Wc(e,t){var i=void 0===t.shift?0:1;if(e.length<=9+i)return;const n=parseInt(e[5+i]),r=parseInt(e[6+i]);var s={name:e[0+i],chr:e[1+i],strand:e[2+i],start:parseInt(e[3+i]),end:parseInt(e[4+i]),cdStart:n,cdEnd:r,id:e[0+i]};const o=Yc(parseInt(e[7+i]),e[8+i],e[9+i]);return Xc(o,n,r),s.exons=o,s}function Gc(e,t){var i=void 0===t.shift?0:1;if(e.length<=11+i)return;const n=parseInt(e[5+i]),r=parseInt(e[6+i]),s={name:e[11+i],chr:e[1+i],strand:e[2+i],start:parseInt(e[3+i]),end:parseInt(e[4+i]),cdStart:n,cdEnd:r,id:e[0+i]},o=Yc(parseInt(e[7+i]),e[8+i],e[9+i],e[14+i]);return Xc(o,n,r),s.exons=o,s}function $c(e,t){var i=void 0===t.shift?0:1;if(e.length<=10+i)return;const n=parseInt(e[6+i]),r=parseInt(e[7+i]);var s={name:e[0+i],id:e[1+i],chr:e[2+i],strand:e[3+i],start:parseInt(e[4+i]),end:parseInt(e[5+i]),cdStart:n,cdEnd:r};const o=Yc(parseInt(e[8+i]),e[9+i],e[10+i]);return Xc(o,n,r),s.exons=o,s}function Kc(e,t){if(e.length<21)return;const i=e[13],n=parseInt(e[15]),r=parseInt(e[16]),s=e[8].charAt(0),o=parseInt(e[17]),a=[],c=e[20].replace(/,$/,"").split(","),l=e[18].replace(/,$/,"").split(",");for(let e=0;e<o;e++){const t=parseInt(c[e]),i=t+parseInt(l[e]);a.push({start:t,end:i})}return new rl({chr:i,start:n,end:r,strand:s,exons:a,tokens:e})}function Yc(e,t,i,n){const r=t.replace(/,$/,"").split(","),s=i.replace(/,$/,"").split(","),o=n?n.replace(/,$/,"").split(","):void 0,a=[];for(let t=0;t<e;t++){const e={start:parseInt(r[t]),end:parseInt(s[t])};if(o){const i=parseInt(o[t]);-1!=i&&(e.readingFrame=i)}a.push(e)}return a}function Xc(e,t,i){for(let n of e){const e=n.end,r=n.start;e<t||r>i?n.utr=!0:(t>=r&&t<=e&&(n.cdStart=t),i>=r&&i<=e&&(n.cdEnd=i))}}function Zc(e,t){var i,n,r,s,o,a,c;if(!(e.length<9))return i=e[0],n=parseInt(e[1]),r=parseInt(e[2]),o=e[3],a=Number(e[4]),s=e[5].trim(),c=Number(e[6]),0===a&&(a=c),{chr:i,start:n,end:r,name:o,score:a,strand:s,signal:c,pValue:Number(e[7]),qValue:Number(e[8])}}function Jc(e,t){const i=Zc(e);return e.length>9&&(i.peak=Number(e[9])),i}function el(e,t){if(e.length<=3)return;const i={chr:e[0],start:parseInt(e[1]),end:parseInt(e[2]),value:Number(e[3])};if(t){let n=t.colorColumn;n&&n<e.length&&(i.color=_s.createColorString(e[n]))}return i}function tl(e,t){const i=t.wig;if(i&&"fixedStep"===i.format){const t=i.index*i.step+i.start,n=t+i.span,r=Number(e[0]);return++i.index,isNaN(r)?null:{chr:i.chrom,start:t,end:n,value:r}}if(i&&"variableStep"===i.format){if(e.length<2)return null;const t=parseInt(e[0],10)-1,n=t+i.span,r=Number(e[1]);return isNaN(r)?null:{chr:i.chrom,start:t,end:n,value:r}}return el(e)}function il(e,t){if(e.length<6)return;const i=["bin","chr","start","end","name","score","strand","refNCBI","refUCSC","observed","molType","class","valid","avHet","avHetSE","func","locType","weight","exceptions","submitterCount","submitters","alleleFreqCount","alleles","alleleNs","alleleFreqs","bitfields"],n={chr:e[1],start:Number.parseInt(e[2]),end:Number.parseInt(e[3]),name:e[4],score:Number.parseInt(e[5])},r=Math.min(e.length,i.length);for(let t=6;t<r;t++)n[i[t]]=e[t];return n}class nl{constructor(e){Object.assign(this,e)}getAttributeValue(e){return this.hasOwnProperty(e)?this[e]:this.attributes?this.attributes[e]:void 0}}class rl{constructor(e){Object.assign(this,e)}get score(){const e=this.tokens,t=parseInt(e[0]),i=parseInt(e[2]),n=parseInt(e[1]),r=parseInt(e[4]),s=parseInt(e[6]),o=parseInt(e[10]);return Math.floor(1e3*(t+i-n-r-s)/o)}get matches(){return this.tokens[0]}get misMatches(){return this.tokens[1]}get repMatches(){return this.tokens[2]}get nCount(){return this.tokens[3]}get qNumInsert(){return this.tokens[4]}get qBaseInsert(){return this.tokens[5]}get tNumInsert(){return this.tokens[6]}get tBaseInsert(){return this.tokens[7]}popupData(){return[{name:"chr",value:this.chr},{name:"start",value:this.start+1},{name:"end",value:this.end},{name:"strand",value:this.strand},{name:"score",value:this.score},{name:"match",value:this.matches},{name:"mis-match",value:this.misMatches},{name:"rep. match",value:this.repMatches},{name:"N's",value:this.nCount},{name:"Q gap count",value:this.qNumInsert},{name:"Q gap bases",value:this.qBaseInsert},{name:"T gap count",value:this.tNumInsert},{name:"T gap bases",value:this.tBaseInsert}]}}const sl=new Set(["transcript","primary_transcript","processed_transcript","mRNA","mrna","lnc_RNA","miRNA","ncRNA","rRNA","scRNA","snRNA","snoRNA","tRNA"]),ol=new Set(["CDS","cds"]),al=new Set(["start_codon","stop_codon"]),cl=new Set(["5UTR","3UTR","UTR","five_prime_UTR","three_prime_UTR","3'-UTR","5'-UTR"]),ll=new Set(["exon","coding-exon"]),hl=new Set;for(let xA of[ol,al,cl,ll])for(let kA of xA)hl.add(kA);function dl(e){return e.includes("intron")}function ul(e){return ol.has(e)||al.has(e)}function fl(e){return cl.has(e)}function pl(e){return sl.has(e)||e.endsWith("RNA")||e.endsWith("transcript")}function gl(e){return hl.has(e)||e.endsWith("RNA")||dl(e)}const ml=new Set(["id","parent","name"]);class wl{constructor(e){Object.assign(this,e),void 0!==e.phase&&"."!==e.phase&&(this.readingFrame=(3-parseInt(e.phase))%3)}popupData(e){const t=this.geneObject?this.geneObject.popupData():[];if(this.geneObject&&t.push("<hr/>"),this.name&&t.push({name:"Name",value:this.name}),t.push({name:"Type",value:this.type}),t.push({name:"Source",value:this.source}),void 0!==this.score&&t.push({name:"Score",value:this.score}),t.push({name:"Phase",value:this.phase}),this.attributeString){const e=Oc(this.attributeString,this.delim);for(let[i,n]of e)void 0!==n&&n.length>0&&!ml.has(i.toLowerCase())&&t.push({name:i+":",value:n})}return t.push({name:"Location",value:`${this.chr}:${Rt(this.start+1)}-${Rt(this.end)}`}),t}getAttributeValue(e){if(this.hasOwnProperty(e))return this[e];if(this._attributeCache||(this._attributeCache=new Map),this._attributeCache.has(e))return this._attributeCache.get(e);{const t=Oc(this.attributeString,this.delim);let i;for(let[n,r]of t)if(n===e){i=r;break}return this._attributeCache.set(e,i),i}}}class bl extends wl{constructor(e){super(e),this.exons=[],this.parts=[]}addExon(e){this.exons.push(e),this.start=Math.min(this.start,e.start),this.end=Math.max(this.end,e.end)}addPart(e){this.parts.push(e)}assembleParts(){if(0===this.parts.length)return;this.parts.sort((function(e,t){return e.start-t.start}));let e=this.parts[0].start,t=this.parts[0].end;for(let i=1;i<this.parts.length;i++){const n=this.parts[i];if(!dl(n.type))if(n.start<=t)t=Math.max(t,n.end);else{this.findExonContaining({start:e,end:t})||this.exons.push({start:e,end:t,psuedo:!0}),e=n.start,t=n.end}}this.findExonContaining({start:e,end:t})||(this.exons.push({start:e,end:t,psuedo:!0}),this.start=Math.min(this.start,e),this.end=Math.max(this.end,t));for(let e of this.parts){const t=e.type;ul(t)?this.addCDS(e):fl(t)&&this.addUTR(e)}}findExonContaining({start:e,end:t}){for(let i of this.exons)if(i.end>=t&&i.start<=e)return i}addCDS(e){let t;const i=this.exons;for(let n of i)if(n.start<=e.start&&n.end>=e.end){t=n;break}t?(t.cdStart=t.cdStart?Math.min(e.start,t.cdStart):e.start,t.cdEnd=t.cdEnd?Math.max(e.end,t.cdEnd):e.end,t.readingFrame=e.readingFrame):console.error("No exon found spanning "+e.start+"-"+e.end),this.cdStart=this.cdStart?Math.min(e.start,this.cdStart):e.start,this.cdEnd=this.cdEnd?Math.max(e.end,this.cdEnd):e.end}addUTR(e){let t;const i=this.exons;for(let n=0;n<i.length;n++)if(i[n].start<=e.start&&i[n].end>=e.end){t=i[n];break}t?e.start===t.start&&e.end===t.end?t.utr=!0:(e.end<t.end&&(t.cdStart=e.end),e.start>t.start&&(t.cdEnd=e.start)):console.error("No exon found spanning "+cds.start+"-"+cds.end)}finish(){this.assembleParts();var e=this.cdStart,t=this.cdEnd;this.exons.sort((function(e,t){return e.start-t.start})),e&&this.exons.forEach((function(i){(i.end<e||i.start>t)&&(i.utr=!0)}))}popupData(e){const t=super.popupData(e);for(let i of this.exons)if(!i.pseudo&&e>=i.start&&e<i.end&&"function"==typeof i.popupData){t.push("<hr/>");const n=i.popupData(e);for(let e of n)t.push(e)}for(let i of this.parts)if(e>=i.start&&e<i.end&&"function"==typeof i.popupData){t.push("<hr/>");const n=i.popupData(e);for(let e of n)t.push(e)}return t}}function Fl(e,t){const i=t.format;if(e.length<9)return;const n="gff3"===i?"=":" ";return new wl({source:Pc(e[1]),type:e[2],chr:e[0],start:parseInt(e[3])-1,end:parseInt(e[4]),score:"."===e[5]?void 0:Number(e[5]),strand:e[6],phase:"."===e[7]?".":parseInt(e[7]),attributeString:e[8],delim:n})}function vl(e,t){const i=Fl(e,t);if(!i)return;const n=Oc(i.attributeString,i.delim);for(let[e,t]of n){const n=e.toLowerCase();"color"===n||"colour"===n?i.color=_s.createColorString(t):"ID"===e?i.id=t:"Parent"===e&&(i.parent=t)}return i}function yl(e,t){const i=Fl(e,t);if(!i)return;const n=Oc(i.attributeString,i.delim);let r,s;switch(i.type){case"gene":r="gene_id";break;case"transcript":r="transcript_id",s="gene_id";break;default:s="transcript_id"}for(let[e,t]of n){const n=e.toLowerCase();"color"===n||"colour"===n?i.color=_s.createColorString(t):e===r?i.id=t:e===s&&(i.parent=t)}return i}function Al(e,t){if(!(e.length<7)){var i=e[0],n=e[1],r=parseInt(e[2]),s=parseInt(e[3]),o=parseInt(e[4]),a=parseInt(e[5]),c=e[6],l={chr:i,name:n,junction_left:r,junction_right:s,num_junction_reads:o,num_spanning_frags:a,spanning_frag_coords:[],start:-1,end:-1},h=r,d=s;if(a>0)for(var u=c.split(","),f=0;f<u.length;f++){var p=u[f].split("-"),g=p[0],m=p[1];g<h&&(h=g),m>d&&(d=m),l.spanning_frag_coords.push({left:g,right:m})}return l.start=h,l.end=d,l}}function Cl(e,t){if(e.length<7)return null;const i={chr:e[0],start:parseInt(e[1])-1,end:parseInt(e[2]),"Strongest SNP-risk allele":e[3],"Disease/Phenotype":e[4],"P-value":e[5],"Odds ratio or beta":e[6]};return e.length>6&&(i.PUBMEDID=`<a target = "blank" href = "https://www.ncbi.nlm.nih.gov/pubmed/${e[7]}">${e[7]}</a>`),i}function _l(e,t){const i=t.customFormat;if(e.length<i.fields.length)return;const n=i.coords||0,r=e[i.chr],s=parseInt(e[i.start])-n,o={chr:r,start:s,end:void 0!==i.end?parseInt(e[i.end]):s+1};return i.fields&&i.fields.forEach((function(t,n){n!==i.chr&&n!==i.start&&n!==i.end&&(o[t]=e[n])})),o}function xl(e,t){const i=t.columnNames;if(!i)throw Error("Sample names are not defined.   Missing column headers?");const n=i.length-3,r=e[0],s=parseInt(e[1]),o=parseInt(e[2]),a=e.slice(3).map(Number);return a.length==n?{chr:r,start:s,end:o,values:a}:void console.warn(`${r}:${s}-${o} row contains ${a.length} sample columns instead of the expected ${n} columns. Skipping...`)}const kl=["Name","transcript_id","gene_name","gene","gene_id","alias","locus","name"];class Il{constructor(e){this.format=e.format,this.nameField=e.nameField,this.filterTypes=void 0===e.filterTypes?new Set(["chromosome"]):new Set(e.filterTypes)}combineFeatures(e,t){let i;const n=this.filterTypes;if(e=e.filter((e=>void 0===n||!n.has(e.type))),"gff3"===this.format){const t=this.combineFeaturesById(e);i=this.combineFeaturesByType(t)}else i=this.combineFeaturesByType(e);return i.sort((function(e,t){return e.start-t.start})),this.numberExons(i,t),this.nameFeatures(i),i}combineFeaturesById(e){const t=new Map,i=[];for(let n of e)if(gl(n.type)||pl(n.type)||!n.id)i.push(n);else{let e=t.get(n.chr);e||(e=new Map,t.set(n.chr,e));let i=e.get(n.id);i?i.push(n):e.set(n.id,[n])}for(let e of t.values())for(let t of e.values())if(t.length>1){const e=t[0];e.exons=[];for(let i of t)e.start=Math.min(e.start,i.start),e.end=Math.max(e.end,i.end),e.exons.push({start:i.start,end:i.end});i.push(e)}else i.push(t[0]);return i}combineFeaturesByType(e){const t=e.filter((e=>"gene"===e.type||e.type.endsWith("_gene"))),i=Object.create(null);for(let e of t)i[e.id]=e;const n=Object.create(null),r=[],s=new Set,o=this.filterTypes;e=e.filter((e=>void 0===o||!o.has(e.type)));for(let t of e)if(pl(t.type)){const e=t.id;if(void 0!==e){const o=new bl(t);n[e]=o,r.push(o),s.add(t);const a=i[t.parent];a&&(o.geneObject=a,s.add(a))}}for(let t of e)if(gl(t.type)){const e=l(t);if(e)for(let i of e){let o=n[i];if(!o&&"gtf"===this.format){const e=Object.assign({},t);e.type="transcript",o=new bl(e),n[i]=o,r.push(o)}if(void 0!==o){if(a=t.type,ll.has(a))if(e.length>1){const e=new wl(t);o.addExon(e)}else o.addExon(t);else o.addPart(t);s.add(t)}}}var a;r.forEach((function(e){"function"==typeof e.finish&&e.finish()}));const c=e.filter((e=>!s.has(e)));for(let e of c)r.push(e);return r;function l(e){return e.parent&&""!==e.parent.trim()?e.parent.trim().split(","):null}}numberExons(e,t){for(let i of e)if(i.exons&&(!t||i.end<=t.end&&i.start>t.start))for(let e=0;e<i.exons.length;e++){i.exons[e].number="-"===i.strand?i.exons.length-e:e+1}}nameFeatures(e){for(let t of e)if("function"==typeof t.getAttributeValue)if(this.nameField)t.name=t.getAttributeValue(this.nameField);else for(let e of kl){const i=t.getAttributeValue(e);if(i){t.name=i;break}}}}const Sl={gwascatalog:{fields:["bin","chr","start","end","name","pubMedID","author","pubDate","journal","title","trait","initSample","replSample","region","genes","riskAllele","riskAlFreq","pValue","pValueDesc","orOrBeta","ci95","platform","cnv"]},wgrna:{fields:["bin","chr","start","end","name","score","strand","thickStart","thickEnd","type"]},cpgislandext:{fields:["bin","chr","start","end","name","length","cpgNum","gcNum","perCpg","perGc","obsExp"]},clinVarMain:{fields:["chr1","start","end","name","score","strand","thickStart","thickEnd","reserved","blockCount","blockSizes","chromStarts","origName","clinSign","reviewStatus","type","geneId","snpId","nsvId","rcvAcc","testedInGtr","phenotypeList","phenotype","origin","assembly","cytogenetic","hgvsCod","hgvsProt","numSubmit","lastEval","guidelines","otherIds"]}};class El{constructor(e){this.config=e,this.header={},e.nameField&&(this.header.nameField=e.nameField),this.skipRows=0,e.decode?(this.decode=e.decode,this.delimiter=e.delimiter||"\t"):e.format&&(this.header.format=e.format.toLowerCase(),this.setDecoder(this.header.format)),this.delimiter||(this.delimiter="\t")}async parseHeader(e){let t,i,n=this.header;for(;void 0!==(i=await e.nextLine());)if(i.startsWith("track")||i.startsWith("#track")){let e=Nl(i);Object.assign(n,e)}else if(i.startsWith("browser"));else if(i.startsWith("#columns")){let e=Bl(i);Object.assign(n,e)}else if(i.startsWith("##gff-version 3"))n.format="gff3";else if(i.startsWith("#gffTags"))n.gffTags=!0;else{if(i.startsWith("fixedStep")||i.startsWith("variableStep"))break;if(i.startsWith("#")){const e=i.split(this.delimiter||"\t");e.length>1&&(t=e)}else{this.setDecoder(n.format);const e=i.split(this.delimiter||"\t");try{const i=Object.assign({columnNames:t},n);if(this.decode(e,i))break;e.length>1&&(t=e)}catch(i){e.length>1&&(t=e)}}}if(t){n.columnNames=t;for(let e=0;e<t.length;e++)"color"===t[e]||"colour"===t[e]?n.colorColumn=e:"thickness"===t[e]&&(n.thicknessColumn=e)}return this.header=n,n}async parseFeatures(e){const t=[],i=this.decode,n=this.header.format,r=this.delimiter||"\t";let s,o=0,a=0;for(;void 0!==(s=await e.nextLine());){if(o++,o<=this.skipRows)continue;if(!s||s.startsWith("track")||s.startsWith("#")||s.startsWith("browser"))continue;if("wig"===n&&s.startsWith("fixedStep")){this.header.wig=Ml(s);continue}if("wig"===n&&s.startsWith("variableStep")){this.header.wig=Rl(s);continue}const e=s.split(r);if(e.length<1)continue;const c=i(e,this.header);c instanceof zc?(a++,a>0&&console.error(`Error parsing line '${s}': ${c.message}`)):c&&t.push(c)}return i===Rc&&function(e){if(0==e.length)return;const t=e[0];if(void 0===t.score&&void 0!==t.name){for(let t of e)if(!ja(t.name)&&"."!==t.name)return;for(let t of e)t.score=Number(t.name),delete t.name}const i=e.filter((e=>e.chr1!==e.chr2));for(let t of i){const i=Object.assign({},t);i.dup=!0,e.push(i),t.chr=t.chr1,t.start=t.start1,t.end=t.end1,i.chr=i.chr2,i.start=i.start2,i.end=i.end2}}(t),"gtf"!==this.config.format&&"gff3"!==this.config.format&&"gff"!==this.config.format||!1===this.config.assembleGFF?t:new Il(this.config).combineFeatures(t)}setDecoder(e){switch(e){case"broadpeak":case"regionpeak":case"peaks":this.decode=Zc,this.delimiter=this.config.delimiter||/\s+/;break;case"narrowpeak":this.decode=Jc,this.delimiter=this.config.delimiter||/\s+/;break;case"bedgraph":this.decode=el,this.delimiter=/\s+/;break;case"wig":this.decode=tl,this.delimiter=this.config.delimiter||/\s+/;break;case"gff3":case"gff":this.decode=vl,this.delimiter="\t";break;case"gtf":this.decode=yl,this.delimiter="\t";break;case"fusionjuncspan":this.decode=Al,this.delimiter=this.config.delimiter||/\s+/;break;case"gtexgwas":this.skipRows=1,this.decode=Cl,this.delimiter="\t";break;case"refflat":this.decode=$c,this.delimiter=this.config.delimiter||/\s+/;break;case"genepred":this.decode=Wc,this.delimiter=this.config.delimiter||/\s+/;break;case"genepredext":this.decode=Gc,this.delimiter=this.config.delimiter||/\s+/;break;case"ensgene":this.decode=Wc,this.header.shift=1,this.delimiter=this.config.delimiter||/\s+/;break;case"refgene":this.decode=Gc,this.delimiter=this.config.delimiter||/\s+/,this.header.shift=1;break;case"bed":this.decode=qc,this.delimiter=this.config.delimiter||/\s+/;break;case"gappedpeak":this.decode=Qc,this.delimiter=this.config.delimiter||/\s+/;break;case"bedmethyl":this.decode=Vc,this.delimiter=this.config.delimiter||/\s+/;break;case"bedpe":case"hiccups":this.decode=Rc,this.delimiter=this.config.delimiter||"\t";break;case"bedpe-domain":this.decode=Dc,this.headerLine=!0,this.delimiter=this.config.delimiter||"\t";break;case"bedpe-loop":this.decode=Rc,this.delimiter=this.config.delimiter||"\t",this.header={colorColumn:7};break;case"interact":this.decode=Lc,this.delimiter=this.config.delimiter||/\s+/;break;case"snp":this.decode=il,this.delimiter="\t";break;case"rmsk":this.decode=jc,this.delimiter="\t";break;case"gcnv":this.decode=xl,this.delimiter="\t";break;default:const t=function(e){return Sl&&Sl[e]?function(e){const t=e.fields,i=["chr","start","end"];for(let n=0;n<t.length;n++)for(let r of i)r===t[n]&&(e[r]=n);return e}(Sl[e]):void 0}(e);void 0!==t?(this.decode=_l,this.header.customFormat=t,this.delimiter=t.delimiter||"\t"):(this.decode=qc,this.delimiter=this.config.delimiter||/\s+/)}}}function Nl(e){const t={},i=e.split(/(?:")([^"]+)(?:")|([^\s"]+)(?=\s+|$)/g);let n;const r=[];for(let e of i)e&&0!==e.trim().length&&(e.endsWith("=")?n=e:n?(r.push(n+e),n=void 0):r.push(e));for(let e of r){if(!e)return;var s=e.split("=",2);if(2===s.length){const e=s[0].trim(),i=s[1].trim();if(t.hasOwnProperty(e)){let n=t[e];Array.isArray(n)?n.push(i):t[e]=[n,i]}else t[e]=i}}return"interact"==t.type?t.format="interact":"gcnv"===t.type&&(t.format="gcnv"),t}function Bl(e){let t={},i=e.split(/\s+/);if(2===i.length){i[1].split(";").forEach((function(e){let i=e.split("=");"color"===i[0]?t.colorColumn=Number.parseInt(i[1])-1:"thickness"===i[0]&&(t.thicknessColumn=Number.parseInt(i[1])-1)}))}return t}function Ml(e){const t=e.split(/\s+/);return{format:"fixedStep",chrom:t[1].split("=")[1],start:parseInt(t[2].split("=")[1],10)-1,step:parseInt(t[3].split("=")[1],10),span:t.length>4?parseInt(t[4].split("=")[1],10):1,index:0}}function Rl(e){const t=e.split(/\s+/);return{format:"variableStep",chrom:t[1].split("=")[1],span:t.length>2?parseInt(t[2].split("=")[1],10):1}}function Dl(t,i){const n=e({class:"igv-menu-popup-check-container"}),r=e();n.appendChild(r);const s=l("check",!0===i?"#444":"transparent");r.appendChild(s);const o=e();return o.innerText=t,n.appendChild(o),n}function Tl(e,t){t=t||Number.MAX_SAFE_INTEGER;const i=[];e.sort((function(e,t){return e.start-t.start})),i.push(-1e3);for(let n of e){let e=0;const r=Math.min(i.length,t);for(e=0;e<r;e++)if(n.start>=i[e]){n.row=e,i[e]=n.end;break}n.row=e,i[e]=n.end}}async function Ll(e,t,i){const n=e=>{const i=Object.assign({},e);return i.chr="all",i.start=t.getGenomeCoordinate(e.chr,e.start),i.end=t.getGenomeCoordinate(e.chr,e.end),i._f=e,i.exons&&delete i.exons,i},r=new Set(t.wgChromosomeNames),s=[];let o=0;for(let a of t.wgChromosomeNames){if(Array.isArray(e)){const i={};for(let n of e){const e=t.getChromosomeName(n.chr);i.hasOwnProperty(e)||(i[e]=[]),i[e].push(n)}e=i}const c=e[a];if(c){const e=i||1e4;for(let i of c){let a=t.getChromosomeName(i.chr);if(r.has(a))if(s.length<e)s.push(n(i));else{const t=e/(o+1);if(Math.random()<t){s[Math.floor(Math.random()*(e-1))]=n(i)}}o++}}}return s.sort((function(e,t){return e.start-t.start})),s}function zl(e,t){if(t=t||1e3,null==e||0===e.length)return;const i={},n=[];for(let t of e){const e=t.chr;let r=i[e];r||(r=[],i[e]=r,n.push(e)),r.push(t)}for(let e of n)Tl(i[e],t)}class Hl{static defaults={height:50,autoHeight:!1,visibilityWindow:void 0,color:void 0,altColor:void 0,supportHiDPI:!0,selected:!1};constructor(e,t){this.browser=t,this.init(e)}init(e){this.config=e,e.displayMode&&(e.displayMode=e.displayMode.toUpperCase());const t=Object.assign({},Hl.defaults);if(this.constructor.defaults)for(let e of Object.keys(this.constructor.defaults))t[e]=this.constructor.defaults[e];for(let n of Object.keys(t))this[n]=e.hasOwnProperty(n)?e[n]:t[n],"color"!==n&&"altColor"!==n||!this[n]||(this[n]=Mt(i=this[n])&&i.indexOf(",")>0&&!i.startsWith("rgb(")&&!i.startsWith("rgba(")?`rgb(${i})`:i);var i;e.name||e.label?this.name=e.name||e.label:Ht(e.url)?this.name=e.url.name:Mt(e.url)&&!e.url.startsWith("data:")&&(this.name=zt(e.url)),this.url=e.url,this.config.type&&(this.type=this.config.type),this.id=void 0===this.config.id?this.name:this.config.id,this.order=e.order,this.autoscaleGroup=e.autoscaleGroup,this.removable=void 0===e.removable||e.removable,this.minHeight=e.minHeight||Math.min(25,this.height),this.maxHeight=e.maxHeight||Math.max(1e3,this.height),e.onclick&&(this.onclick=e.onclick,e.onclick=void 0),e.description&&("function"==typeof e.description?this.description=e.description:this.description=()=>e.description),e.hoverTextFields?this.hoverText=Pl.bind(this):"function"==typeof this.config.hoverText&&(this.hoverText=this.config.hoverText)}get name(){return this._name}set name(e){this._name=e,this.trackView&&this.trackView.setTrackLabelName(e)}clearCachedFeatures(){this.trackView&&this.trackView.clearCachedFeatures()}updateViews(){this.trackView&&this.trackView.updateViews()}repaintViews(){this.trackView&&this.trackView.repaintViews()}getState(){const e={},t=Object.keys(this.config).filter((e=>{return!(void 0===(t=this.config[e])||"function"==typeof t||t instanceof Promise);var t}));for(const i of t)i.startsWith("_")||(e[i]=this.config[i]);for(let t of Object.keys(e)){if(t.startsWith("_"))continue;const i=this[t];void 0===i||!Ua(i)&&"boolean"!=typeof i&&"metadata"!==t||(e[t]=i)}const i=Object.assign({},Hl.defaults);if(this.constructor.defaults)for(let e of Object.keys(this.constructor.defaults))i[e]=this.constructor.defaults[e];for(let t of Object.keys(i))void 0!==this[t]&&i[t]!==this[t]&&(e[t]=this[t]);return!this.autoscale&&this.dataRange&&(e.min=this.dataRange.min,e.max=this.dataRange.max),this.autoscaleGroup&&(e.autoscaleGroup=this.autoscaleGroup),e}get supportsWholeGenome(){return!0===this.config.supportsWholeGenome}hasSamples(){return!1}getGenomeId(){return this.browser.genome?this.browser.genome.id:void 0}setTrackProperties(e){if(this.disposed)return;const t={};let i;for(let n of Object.keys(e))switch(n.toLowerCase()){case"usescore":t.useScore=1===e[n]||"1"===e[n]||"on"===e[n]||!0===e[n];break;case"visibility":switch(e[n]){case"2":case"3":case"pack":case"full":t.displayMode="EXPANDED";break;case"4":case"squish":t.displayMode="SQUISHED";break;case"1":case"dense":t.displayMode="COLLAPSED"}break;case"color":case"altcolor":t[n]=e[n].startsWith("rgb(")?e[n]:"rgb("+e[n]+")";break;case"featurevisiblitywindow":case"visibilitywindow":t.visibilityWindow=Number.parseInt(e[n]);break;case"maxheightpixels":i=e[n].split(":"),3===i.length&&(t.minHeight=Number.parseInt(i[2]),t.height=Number.parseInt(i[1]),t.maxHeight=Number.parseInt(i[0]));break;case"viewlimits":if(!this.config.autoscale){i=e[n].split(":");let r,s=0;1==i.length?r=Number(i[0]):2==i.length&&(s=Number(i[0]),r=Number(i[1])),Number.isNaN(r)||Number.isNaN(s)?console.warn(`Unexpected viewLimits value in track line: ${e.viewLimits}`):(t.autoscale=!1,t.dataRange={min:s,max:r},this.viewLimitMin=s,this.viewLimitMax=r)}case"name":t[n]=e[n];break;case"url":t.infoURL=e[n];break;case"type":const r=e[n];Ol.has(r)?t[n]=Ol.get(r):t[n]=r;break;case"graphtype":t.graphType=e[n];break;default:t[n]=e[n]}for(let e of Object.keys(t))if(!this.config.hasOwnProperty(e)||"name"===e&&this.config._derivedName){let i=t[e];if("true"===i&&(i=!0),"false"===i&&(i=!1),this[e]=i,"height"===e&&this.trackView)try{const e=Number.parseInt(i);this.trackView.setTrackHeight(e)}catch(e){console.error(e)}}}clickedFeatures(e){const t=e.viewport.cachedFeatures;if(!t||!Array.isArray(t)||0===t.length)return[];const i=e.genomicLocation,n=e.referenceFrame.bpPerPixel>.2?3*e.referenceFrame.bpPerPixel:.2;return to(t,i-n,i+n)}extractPopupData(e,t){const i=new Set(["row","color","chr","start","end","cdStart","cdEnd","strand","alpha"]),n=[];let r,s;for(let t in e)if(e.hasOwnProperty(t)&&!i.has(t)&&Ua(e[t])){let i=e[t];n.push({name:Lt(t),value:i}),"alleles"===t?r=e[t]:"alleleFreqs"===t&&(s=e[t])}if(r&&s){r.endsWith(",")&&(r=r.substr(0,r.length-1)),s.endsWith(",")&&(s=s.substr(0,s.length-1));let i=r.split(","),o=s.split(",");if(o.length>1){let r=[];for(let e=0;e<o.length;e++)r.push({a:i[e],af:Number(o[e])});r.sort((function(e,t){return e.af-t.af}));let s=r[r.length-1].a;if(1===s.length)for(let i=r.length-2;i>=0;i--){let o=r[i].a;if(1===o.length){t||(t=this.getGenomeId());const i=Hl.getCravatLink(e.chr,e.start+1,s,o,t);console.log(i),i&&(n.push("<hr/>"),n.push({html:i}),n.push("<hr/>"))}}}}if(e.attributes)for(let t of Object.keys(e.attributes))n.push({name:t,value:e.attributes[t]});let o=`${e.chr}:${Rt(e.start+1)}-${Rt(e.end)}`;return e.strand&&(o+=` (${e.strand})`),n.push({name:"Location",value:o}),n}description(){const e=(e,t)=>`<div class="igv-track-label-popup-shim"><b>${e}: </b>${t}</div>`;let t='<div class="igv-track-label-popup">';if(this.url?Ht(this.url)?t+=e("Filename",this.url.name):t+=e("URL",this.url):t=this.name,this.config){if(this.config.metadata)for(let i of Object.keys(this.config.metadata)){t+=e(i,this.config.metadata[i])}for(let i of Object.keys(this.config)){if(i.startsWith("_"))continue;let n=i.substr(0,1);if(n!==n.toLowerCase()){const n=this.config[i];n&&Ua(n)&&(t+=e(i,n))}}}return t+="</div>",t}getColorForFeature(e){return"function"==typeof this.color?this.color(feature):this.color}numericDataMenuItems(){const e=[];e.push("<hr/>");let t=Bt("<div>");if(t.text("Set data range"),e.push({object:t,dialog:function(){this.trackView.track.selected?this.browser.dataRangeDialog.configure(this.trackView.browser.getSelectedTrackViews()):this.browser.dataRangeDialog.configure(this.trackView),this.browser.dataRangeDialog.present(Bt(this.browser.columnContainer))}}),void 0!==this.logScale){function i(){this.logScale=!this.logScale,this.trackView.repaintViews()}t=Bt(Dl("Log scale",this.logScale)),e.push({object:t,click:i})}return t=Bt(Dl("Autoscale",this.autoscale)),e.push({object:t,click:function(){this.autoscaleGroup=void 0,this.autoscale=!this.autoscale,this.browser.updateViews()}}),e}setDataRange({min:e,max:t}){this.dataRange={min:e,max:t},this.autoscale=!1,this.autoscaleGroup=void 0,this.trackView.repaintViews()}async nextFeatureAfter(e,t,i){let n=this.trackView.viewports[0].cachedFeatures;if(n&&Array.isArray(n)&&n.length>0){if(this.browser.genome.getChromosomeName(n[0].chr)===e){const e=function(e,t,i=!0){const n=e=>(e.start+e.end)/2,r=i?(e,t)=>e.start-t.start+e.end-t.end:(e,t)=>t.start-e.start+t.end-e.end,s=Array.from(e);s.sort(r);let o=0,a=s.length;for(;o<a;){let e=Math.floor((o+a)/2);i?n(s[e])<=t?o=e+1:a=e:n(s[e])>=t?o=e+1:a=e}return s[o]}(n,t,i);if(e)return e}}if("function"==typeof this.featureSource.nextFeature)return this.featureSource.nextFeature(e,t,i,this.visibilityWindow)}dispose(){this.disposed=!0;for(let e of Object.keys(this))this[e]=void 0}static getCravatLink(e,t,i,n,r){if("hg38"===r||"GRCh38"===r){return`<a target="_blank" href="https://run.opencravat.org/result/nocache/variant.html?chrom=${e.startsWith("chr")?e:"chr"+e}&pos=${t}&ref_base=${i}&alt_base=${n}"><b>Cravat ${i}->${n}</b></a>`}}static localFileInspection(e){const t=Object.assign({},e),i={url:"file",indexURL:"indexFile"};for(const e of["url","indexURL"])t[e]&&t[e]instanceof File&&(t[i[e]]=t[e].name,delete t[e]);return t}}function Pl(e){if(!this.hoverTextFields)return;const t=this.clickedFeatures(e);if(t&&t.length>0){let e="";for(let i=0;i<t.length;i++){if(10===i){e+="; ...";break}if(!t[i])continue;const n=t[i]._f||t[i];e.length>0&&(e+="\n"),e="";for(let t of this.hoverTextFields)e.length>0&&(e+="\n"),n.hasOwnProperty(t)?e+=n[t]:"function"==typeof n.getAttribute&&(e+=n.getAttribute(t))}return e}}const Ol=new Map([["wiggle_0","wig"],["bed","bed"],["bigBed","bigBed"],["bigWig","bigWig"]]);class Ul{constructor(e){switch(this.type=e||"seg",this.type){case"mut":this.sampleColumn=3,this.chrColumn=0,this.startColumn=1,this.endColumn=2,this.dataColumn=4;break;case"maf":this.sampleColumn=15,this.chrColumn=4,this.startColumn=5,this.endColumn=6,this.dataColumn=8;break;default:this.sampleColumn=0,this.chrColumn=1,this.startColumn=2,this.endColumn=3}}async parseHeader(e){let t;for(;void 0!==(t=await e.nextLine());)if(!t.startsWith("#")){const e=t.split("\t");this.header={headings:e};break}return this.header}async parseFeatures(e){const t=[];let i;this.header||(this.header=await this.parseHeader(e)),"seg"===this.type&&(this.dataColumn=this.header.headings.length-1),this.header.headings.length>5&&(i=this.extractExtraColumns(this.header.headings));const n=this.header.headings[this.dataColumn];let r;for(;void 0!==(r=await e.nextLine());){const e=r.split("\t"),s="seg"===this.type?Number(e[this.dataColumn]):e[this.dataColumn];if(e.length>this.dataColumn){const r=new ql({sample:e[this.sampleColumn],chr:e[this.chrColumn],start:parseInt(e[this.startColumn])-1,end:parseInt(e[this.endColumn]),value:s,valueColumnName:n});if(i){const t=this.extractExtraColumns(e);r.setAttributes({names:i,values:t})}t.push(r)}}return t}extractExtraColumns(e){const t=[];for(let i=0;i<e.length;i++)i!==this.chrColumn&&i!==this.startColumn&&i!==this.endColumn&&i!==this.sampleColumn&&t.push(e[i]);return t}}class ql{constructor({sample:e,chr:t,start:i,end:n,value:r,valueColumnName:s}){this.sample=e,this.chr=t,this.start=i,this.end=n,this.value=r,this.valueColumnName=s}setAttributes({names:e,values:t}){this.attributeNames=e,this.attributeValues=t}getAttribute(e){if(this.attributeNames){const t=this.attributeNames.indexOf(e);if(t>=0)return this.attributeValues[t]}}popupData(e,t){const i=new Set(["chr","start","end","sample","value","row","color","sampleKey","uniqueSampleKey","sampleId","chromosome","uniquePatientKey"]),n=this.chr+":"+Rt(this.start+1)+"-"+Rt(this.end),r=[{name:"Sample",value:this.sample},{name:"Location",value:n},{name:this.valueColumnName?Lt(this.valueColumnName):"Value",value:this.value}];if("mut"===e&&"hg38"===t){const e=this.extractCravatLink(t);e&&(r.push("<hr/>"),r.push({html:e}),r.push("<hr/>"))}if(this.attributeNames&&this.attributeNames.length>0)for(let e=0;e<this.attributeNames.length;e++)!i.has(this.attributeNames[e])&this.valueColumnName!==this.attributeNames[e]&&r.push({name:Lt(this.attributeNames[e]),value:this.attributeValues[e]});return r}extractCravatLink(e){let t,i;if(this.attributeNames&&this.attributeNames.length>0)for(let n=0;n<this.attributeNames.length;n++)if(t||"Reference_Allele"!==this.attributeNames[n]||(t=this.attributeValues[n]),!i&&this.attributeNames[n].startsWith("Tumor_Seq_Allele")&&this.attributeValues[n]!==t&&(i=this.attributeValues[n]),t&&i)return Hl.getCravatLink(this.chr,this.start+1,t,i,e)}}const Ql=new Map([["REF","referenceBases"],["ALT","alternateBases"],["QUAL","quality"],["FILTER","filter"]]);class Vl{constructor(e){this.chr=e[0],this.pos=parseInt(e[1]),this.names=e[2],this.referenceBases=e[3],this.alternateBases=e[4],this.quality=e[5],this.filter=e[6],this.info={};const t=e[7];if(t&&"."!==t)for(let e of t.split(";")){var i=e.split("=");this.info[i[0]]=i[1]}this.init()}getAttributeValue(e){return Ql.has(e)&&(e=Ql.get(e)),this.hasOwnProperty(e)?this[e]:this.info[e]}init(){const e=this.referenceBases,t=this.alternateBases;if(this.info&&(this.info.VT?this.type=this.info.VT:this.info.SVTYPE?this.type="SV":this.info.PERIOD&&(this.type="STR")),void 0===this.type&&(this.type=function(e,t){const i=e.length;if(void 0===t)return"UNKNOWN";if(0===t.trim().length||"<NON_REF>"===t||"<*>"===t||"."===t)return"NONVARIANT";{const e=t.split(",").map((function(e){return 1===i&&1===e.length?"SNP":"<NON_REF>"===e?"NONVARIANT":e.length>i&&$l(e)?"INSERTION":e.length<i&&$l(e)?"DELETION":"OTHER"}));let n=e[0];for(let t of e)if(t!==n)return"MIXED";return n}}(e,t)),this.info.END)this.start=this.pos-1,this.info.CHR2&&this.info.CHR2!==this.chr?this.end=this.start+1:this.end=Number.parseInt(this.info.END);else if("NONVARIANT"===this.type)this.start=this.pos-1,this.end=this.start+e.length;else{const i=t.split(",").filter((e=>e.length>0));this.alleles=[],this.start=void 0,this.end=void 0;for(let t of i)if(this.alleles.push(t),"SV"!==this.type&&$l(t)){let i=t.length,n=e.length;const r=Math.min(i,n);let s=0;for(;s<r&&e.charCodeAt(s)===t.charCodeAt(s);)s++,i--,n--;for(;i>0&&n>0;){const r=s+i-1,o=s+n-1;if(t.charCodeAt(r)!==e.charCodeAt(o))break;i--,n--}for(;i>0&&n>0;){const r=s,o=s;if(t.charCodeAt(r)!==e.charCodeAt(o))break;s++,i--,n--}const o=this.pos+s-1,a=o+n;this.start=void 0===this.start?o:Math.min(this.start,o),this.end=void 0===this.end?a:Math.max(this.end,a)}void 0===this.start&&(this.start=this.pos-1,this.end=this.pos),this.start===this.end&&(this.start-=.5,this.end+=.5)}}popupData(e,t){const i=`${Rt(this.pos)}`,n=this.start===this.end?`${Rt(this.start)} | ${Rt(this.start+1)}`:`${Rt(this.start+1)}-${Rt(this.end)}`,r=[{name:"Chr",value:this.chr},{name:"Pos",value:i},{name:"Loc",value:n},{name:"ID",value:this.names?this.names:""},{name:"Ref",value:this.referenceBases},{name:"Alt",value:this.alternateBases.replace("<","&lt;")},{name:"Qual",value:this.quality},{name:"Filter",value:this.filter}];if(this.type&&r.push({name:"Type",value:this.type}),"SNP"===this.type){let e=this.referenceBases;if(1===e.length){let i=this.alternateBases.split(",");for(let n of i)if(1===n.length){let i=Hl.getCravatLink(this.chr,this.pos,e,n,t);i&&(r.push("<hr/>"),r.push({html:i}))}}}const s=Object.keys(this.info);if(this.info&&s.length>0){r.push({html:'<hr style="border-top: dotted 1px;border-color: #c9c3ba" />'});for(let e of s)r.push({name:e,value:Kl(decodeURIComponent(this.info[e]))})}return r}getInfo(e){return this.info?this.info[e]:void 0}isRefBlock(){return"NONVARIANT"===this.type}isFiltered(){return!("."===this.filter||"PASS"===this.filter)}alleleFreq(){return this.info?this.info.AF:void 0}}class jl{constructor(e){this.mate=e,this.chr=e.info.CHR2,this.pos=Number.parseInt(e.info.END),this.start=this.pos-1,this.end=this.pos}get info(){return this.mate.info}get names(){return this.mate.names}get referenceBases(){return this.mate.referenceBases}get alternateBases(){return this.mate.alternateBases}get quality(){return this.mate.quality}get filter(){return this.mate.filter}get calls(){return this.mate.calls}getAttributeValue(e){return this.mate.getAttributeValue(e)}getInfo(e){this.mate.getInfo(e)}isFiltered(){return this.mate.isFiltered()}alleleFreq(){return this.mate.alleleFreq()}popupData(e,t){const i=[];return i.push("SV Breakpoint"),i.push({name:"Chr",value:this.chr}),i.push({name:"Pos",value:`${Rt(this.pos)}`}),i.push({html:'<hr style="border-top: dotted 1px;border-color: #c9c3ba" />'}),i.push("SV"),i.push(...this.mate.popupData(e,t)),i}}class Wl{constructor({formatFields:e,sample:t,token:i}){this.info={},this.sample=t;const n=i.split(":");for(let t=0;t<n.length;t++){const i=n[t];if(t==e.genotypeIndex){this.genotype=[];for(let e of i.split(/[\|\/]/))this.genotype.push("."===e?e:parseInt(e))}else this.info[e.fields[t]]=i}}get zygosity(){if(!this._zygosity)if(this.genotype){let e=!0,t=!0,i=!1;for(let n of this.genotype){if("."===n){i=!0;break}0!==n&&(t=!1),0===n&&(e=!1)}this._zygosity=i?"nocall":t?"homref":e?"homvar":"hetvar"}else this._zygosity="unknown";return this._zygosity}zygosityScore(){switch(this.zygosity){case"homvar":return 4;case"hetvar":return 3;case"homref":return 2;case"nocall":return 1;default:return 0}}#l(){switch(this.zygosity){case"homref":return"Homozygous reference";case"homvar":return"Homozygous variant";case"hetvar":return"Heterozygous";default:return""}}popupData(e,t){const i=[];void 0!==this.sample&&i.push({name:"Sample",value:this.sample}),this.genotypeString&&i.push({name:"Genotype",value:this.genotypeString});const n=this.#l();n&&i.push({name:"Zygosity",value:n});var r=Object.keys(this.info);r.length&&i.push("<hr/>");for(let e of r)i.push({name:e,value:decodeURIComponent(this.info[e])});return i}}const Gl=new Set(["A","C","T","G"].map((e=>e.charCodeAt(0))));function $l(e){for(let t=0;t<e.length;t++)if(!Gl.has(e.charCodeAt(t)))return!1;return!0}function Kl(e,t){return void 0===t&&(t=","),Array.isArray(e)?e.join(t):e}class Yl{construtor(){}async parseHeader(e,t){const i={};i.chrAliasTable=new Map;let n=await e.nextLine();if(!n.startsWith("##fileformat"))throw new Error("Invalid VCF file: missing fileformat line");for(i.version=n.substr(13);void 0!==(n=await e.nextLine())&&n.startsWith("#");){let e;const s={};if(n.startsWith("##")){if(n.startsWith("##INFO")||n.startsWith("##FILTER")||n.startsWith("##FORMAT")){const t=n.indexOf("<"),o=n.lastIndexOf(">");if(!(t>2&&o>0)){console.log("Malformed VCF header line: "+n);continue}const a=n.substring(2,t-1);i[a]||(i[a]={});const c=Tt(n.substring(t+1,o-1),",");for(let t of c){var r=t.split("=");r.length>1&&("ID"===r[0]?e=r[1]:s[r[0]]=r[1])}e&&(i[a][e]=s)}else if(n.startsWith("##contig")&&t){const e=n.indexOf("<ID=");let r=n.indexOf(",",e);-1==r&&(r=n.indexOf(">",e));const s=n.substring(e+4,r),o=t.getChromosomeName(s);i.chrAliasTable.set(o,s)}}else if(n.startsWith("#CHROM")){const e=n.split("\t");if(e.length>8){i.sampleNameMap=new Map;for(let t=9;t<e.length;t++)i.sampleNameMap.set(e[t],t-9)}}}return this.header=i,i}async parseFeatures(e){const t=[],i=this.header.sampleNameMap?Array.from(this.header.sampleNameMap.keys()):void 0,n=8+(i?i.length+1:0);let r;for(;void 0!==(r=await e.nextLine());)if(r&&!r.startsWith("#")){const e=r.split("\t");if(e.length===n){const n=new Vl(e);if(n.header=this.header,t.push(n),e.length>9){const r=Xl(e[8].split(":"));n.calls=[];for(let t=9;t<e.length;t++){const s=i[t-9],o=e[t],a=new Wl({formatFields:r,sample:s,token:o});n.calls.push(a)}n.info&&n.info.CHR2&&n.info.END&&t.push(new jl(n))}}}return t}}function Xl(e){const t={genotypeIndex:-1,fields:e};for(let i=0;i<e.length;i++)"GT"===e[i]&&(t.genotypeIndex=i);return t}const Zl=Math.log10(Number.MIN_VALUE);class Jl{constructor(e){if(this.config=e,e.columns){if(void 0===e.columns.chromosome||void 0===e.columns.position||void 0===e.columns.value)throw Error("columns property must define chrCol, posCol, and valueCol");this.posCol=e.columns.position-1,this.chrCol=e.columns.chromosome-1,this.valueCol=e.columns.value-1}else this.posCol=2,this.chrCol=1,this.valueCol=3}async parseHeader(e){const t=await e.nextLine();return this.parseHeaderLine(t)}parseHeaderLine(e){if(this.columns=e.split(/\t/),!this.config.columns)for(let e=0;e<this.columns.length;e++){switch(this.columns[e].toLowerCase()){case"chr":case"chromosome":case"chr_id":this.chrCol=e;break;case"bp":case"pos":case"position":case"chr_pos":this.posCol=e;break;case"p":case"pval":case"pvalue":case"p-value":case"p.value":this.valueCol=e}}return this.columns}async parseFeatures(e){const t=[],i=e.nextLine();let n;this.columns||this.parseHeaderLine(i);const r=e=>{const t=e.indexOf("E");if(t>0){if(Number.parseInt(e.substring(t+1))<Zl)return Number.MIN_VALUE}return Number(e)};for(;void 0!==(n=e.nextLine());){const e=n.split(/\t/);if(e.length===this.columns.length){const i=e[this.posCol];if(i.indexOf(";")>0||0==i.length||i.indexOf("x")>0)continue;const s=e[this.chrCol],o=r(e[this.valueCol]),a=parseInt(i)-1,c=a+1;t.push(new eh({chr:s,start:a,end:c,value:o,line:n,columns:this.columns}))}}return t}static isGWAS(e){const t=e.split("\t");if(t.length<5)return!1;const i=[["chr","chromosome","chr_id","chrom"],["bp","pos","position","chr_pos","chromEnd"],["p","pval","p-value","p.value"]];for(let e of i)if(!t.some((t=>e.includes(t.toLowerCase()))))return!1;return!0}}class eh{constructor({chr:e,start:t,end:i,value:n,line:r,columns:s}){this.chr=e,this.start=t,this.end=i,this.value=n,this.line=r,this.columns=s}popupData(){const e=this.line.split(/\t/);return this.columns.map((function(t,i){return{name:t,value:e[i]}}))}getAttribute(e){const t=this.line.split(/\t/);for(let i=0;i<this.columns.length;i++)if(this.columns[i]===e)return t[i]}}var th=new RegExp("([^:]*)\\(([^)]*)\\)"),ih=new RegExp("([^:]*):([^(]*)\\(([^)]*)\\)");class nh{constructor(e){const t=e?e.decode:void 0;this.nameField=e?e.nameField:void 0,this.skipRows=0,this.decode=t||lh,this.delimiter="\t"}async parseHeader(e){let t,i;for(;(t=await e.nextLine())&&(t.startsWith("track")||t.startsWith("#")||t.startsWith("browser"));)if(t.startsWith("track")||t.startsWith("#track")){let e=oh(t);i?Object.assign(i,e):i=e}else if(t.startsWith("#columns")){let e=ah(t);i?Object.assign(i,e):i=e}else t.startsWith("##gff-version 3")&&(this.format="gff3",i||(i={}),i.format="gff3");return this.header=i,i}async parseFeatures(e){const t=[],i=this.decode,n=this.delimiter||"\t";let r,s=0;for(;void 0!==(r=e.nextLine());){if(s++,s<=this.skipRows||r.startsWith("track")||r.startsWith("#")||r.startsWith("browser"))continue;let e=o();if(e.length<1)continue;if(!this.aed){this.aed=sh(e);continue}const n=i.call(this,e,undefined);n&&t.push(n)}return t;function o(){for(var e,t,i=[],s="",o=!1;r||""===r;){for(e=0;e<r.length;e++)(t=r.charAt(e))===n?o?s+=t:(i.push(s),s=""):'"'===t?e+1<r.length&&'"'===r.charAt(e+1)?(o&&(s+='"'),e++):o=!o:s+=t;if(!o)break;s+="\n",r=nextLine()}return i.push(s),i}}}function rh(e){var t=ih.exec(e);if(t)return{namespace:t[1],name:t[2],type:t[3]};if(t=th.exec(e))return{namespace:"?",name:t[1],type:t[2]};throw new Error("Error parsing the header row of AED file - column not in ns:name(ns:type) format")}function sh(e){var t,i,n;for(t={columns:[],metadata:{}},i=0;i<e.length;i++)n=rh(e[i]),t.columns.push(n);return t}function oh(e){const t={},i=e.split(/(?:")([^"]+)(?:")|([^\s"]+)(?=\s+|$)/g);let n;const r=[];for(let e of i)e&&0!==e.trim().length&&(e.endsWith("=")>0?n=e:n?(r.push(n+e),n=void 0):r.push(e));for(let e of r){if(!e)return;var s=e.split("=",2);if(2===s.length){const e=s[0].trim(),i=s[1].trim();t[e]=i}}return t}function ah(e){let t={},i=e.split(/\s+/);if(2===i.length){i[1].split(";").forEach((function(e){let i=e.split("=");"color"===i[0]?t.colorColumn=Number.parseInt(i[1])-1:"thickness"===i[0]&&(t.thicknessColumn=Number.parseInt(i[1])-1)}))}return t}function ch(e,t){var i,n,r=e.columns;this.aed=e,this.allColumns=t,this.chr=null,this.start=null,this.end=null,this.score=1e3,this.strand=".",this.cdStart=null,this.cdEnd=null,this.name=null,this.color=null;for(let e=0;e<t.length;e++)if(i=t[e]){"aed:Integer"===(n=r[e]).type&&(i=parseInt(i));var s=[];if(n.namespace.length>0)for(let e=0;e<n.namespace.length;e++)s.push(n.namespace.charCodeAt(e));"bio"===n.namespace.trim()?"sequence"===n.name?this.chr=i:"start"===n.name?this.start=i:"end"===n.name?this.end=i:"cdsMin"===n.name?this.cdStart=i:"cdsMax"===n.name?this.cdEnd=i:"strand"===n.name&&(this.strand=i):"aed"===n.namespace?"name"===n.name&&(this.name=i):"style"===n.namespace&&"color"===n.name&&(this.color=_s.createColorString(i))}}function lh(e,t){var i,n,r,s,o,a,c=0,l=this.aed.columns;if(e.length===l.length){for(a=0;a<e.length;a++)s=l[a],""!==(r=e[a])&&c++,"name"===s.name&&"aed"===s.namespace?i=r:"value"===s.name&&"aed"===s.namespace&&(n=r);if(2===c&&i&&n)return o=rh(i),this.aed.metadata[o.namespace]||(this.aed.metadata[o.namespace]={}),void(this.aed.metadata[o.namespace][o.name]||(this.aed.metadata[o.namespace][o.name]={type:o.type,value:n}));var h=new ch(this.aed,e);if(h.chr&&(h.start||0===h.start)&&h.end)return h;console.log("Cannot parse feature: "+e.join(","))}else console.log("Corrupted AED file row: "+e.join(","))}function hh(e,t){if(0===e.length)return e;if(e.sort((function(e,t){const i=e.minv.block-t.minv.block;return 0!==i?i:e.minv.offset-t.minv.offset})),e.length<=1)return e;t&&(e=e.filter((e=>e.maxv.isGreaterThan(t))));const i=[];let n;for(let t of e)n&&dh(n,t)?t.maxv.isGreaterThan(n.maxv)&&(n.maxv=t.maxv):(i.push(t),n=t);return i}function dh(e,t){const i=t.minv.block-e.maxv.block;return t.maxv.block-e.minv.block<5e6&&i<65e3}ch.prototype.popupData=function(){for(var e=[],t=this.aed,i=0;i<this.allColumns.length;i++){var n=this.allColumns[i],r=t.columns[i].name;"sequence"!==r&&"color"!==r&&n&&e.push({name:r,value:n})}return e};class uh{constructor(){this.tabix=!0}parse(e){const t=new Ac(new DataView(e)),i=t.getInt();if(21582659!==i)throw 38359875===i?Error("CSI version 2 is not supported.  Please enter an issue at https://github.com/igvteam/igv.js"):Error("Not a CSI index");this.indices=[],this.blockMin=Number.MAX_SAFE_INTEGER,this.lastBlockPosition=[],this.sequenceIndexMap={},this.minShift=t.getInt(),this.depth=t.getInt();const n=[];let r=0;if(t.getInt()>=28){t.getInt(),t.getInt(),t.getInt(),t.getInt(),t.getInt(),t.getInt();const e=t.getInt(),i=t.position+e;let r=0;for(;t.position<i;){let e=t.getString();this.sequenceIndexMap[e]=r,n[r]=e,r++}}const s=this.bin_limit()+1,o=t.getInt();for(let e=0;e<o;e++){const i=[],n=[],o=t.getInt();for(let e=0;e<o;e++){const e=t.getInt();if(n[e]=t.getVPointer(),e>s)t.getInt(),t.getVPointer(),t.getVPointer(),t.getLong(),t.getLong();else{i[e]=[];const n=t.getInt();for(let s=0;s<n;s++){const n=t.getVPointer(),s=t.getVPointer();n&&s&&(n.block<this.blockMin&&(this.blockMin=n.block),s.block>r&&(r=s.block),i[e].push([n,s]))}}}o>0&&(this.indices[e]={binIndex:i,loffset:n})}this.lastBlockPosition=r}get sequenceNames(){return Object.keys(this.sequenceIndexMap)}chunksForRange(e,t,i){const n=this.indices[e];if(n){const e=this.reg2bins(t,i);if(0==e.length)return[];const r=[];for(let t of e)for(let e=t[0];e<=t[1];e++)if(n.binIndex[e]){const t=n.binIndex[e];for(let i of t){const t=i[0],n=i[1];r.push({minv:t,maxv:n,bin:e})}}let s=e[this.depth][0];do{if(n.binIndex[s])break;s>1+(this.getParentBin(s)<<3)?s--:s=this.getParentBin(s)}while(0!=s);return hh(r,n.loffset[s])}return[]}getParentBin(e){return 0==e?0:e-1>>3}reg2bins(e,t){(e-=1)<1&&(e=1),t>2**34&&(t=2**34),t-=1;let i=0,n=0,r=this.minShift+3*this.depth;const s=[];for(;i<=this.depth;r-=3,n+=1<<3*i,i+=1){const i=n+(e>>r),o=n+(t>>r);s.push([i,o])}return s}bin_limit(){return((1<<3*(this.depth+1))-1)/7}}class fh{constructor(){}async parse(e,t){const i=[];let n=Number.MAX_SAFE_INTEGER,r=0;const s=new Ac(new DataView(e)),o=s.getInt(),a={};if(!(21578050===o||t&&21578324===o))throw new Error(indexURL+" is not a "+(t?"tabix":"bai")+" file");{const e=s.getInt();if(t){s.getInt(),s.getInt(),s.getInt(),s.getInt(),s.getInt(),s.getInt(),s.getInt();for(let t=0;t<e;t++){a[s.getString()]=t}}for(let t=0;t<e;t++){const e={},o=[],a=s.getInt();for(let t=0;t<a;t++){const t=s.getInt();if(37450===t)s.getInt(),s.getVPointer(),s.getVPointer(),s.getLong(),s.getLong();else{e[t]=[];const i=s.getInt();for(let o=0;o<i;o++){const i=s.getVPointer(),o=s.getVPointer();i&&o&&(i.block<n&&(n=i.block),o.block>r&&(r=o.block),e[t].push([i,o]))}}}const c=s.getInt();for(let e=0;e<c;e++){const e=s.getVPointer();o.push(e)}a>0&&(i[t]={binIndex:e,linearIndex:o})}this.firstBlockPosition=n,this.lastBlockPosition=r,this.indices=i,this.sequenceIndexMap=a,this.tabix=t}}get sequenceNames(){return Object.keys(this.sequenceIndexMap)}chunksForRange(e,t,i){const n=this.indices[e];if(n){const e=function(e,t){const i=[];t>=1<<29&&(t=1<<29);return--t,i.push([0,0]),i.push([1+(e>>26),1+(t>>26)]),i.push([9+(e>>23),9+(t>>23)]),i.push([73+(e>>20),73+(t>>20)]),i.push([585+(e>>17),585+(t>>17)]),i.push([4681+(e>>14),4681+(t>>14)]),i}(t,i),r=[];for(let t of e)for(let e=t[0];e<=t[1];e++)if(n.binIndex[e]){const t=n.binIndex[e];for(let e of t){const t=e[0],i=e[1];r.push({minv:t,maxv:i})}}const s=n.linearIndex.length;let o;const a=Math.min(t>>14,s-1),c=Math.min(i>>14,s-1);for(let e=a;e<=c;e++){const t=n.linearIndex[e];if(t){o=t;break}}return hh(r,o)}return[]}}class ph{constructor(){this.tribble=!0}async parse(e){let t=0;this.chrIndex={},this.lastBlockPosition=[];const i=new Ac(new DataView(e));!function(e){e.getInt(),e.getInt();const t=e.getInt();if(e.getString(),e.getLong(),e.getLong(),e.getString(),e.getInt(),t>=3){let t=e.getInt();for(;t-- >0;)e.getString(),e.getString()}}(i);let n=i.getInt();for(;n-- >0;){let e=i.getString();const n=i.getInt(),r=i.getInt(),s=i.getInt();i.getInt(),i.getInt();let o=i.getLong();const a=[];for(let e=0;e<r;e++){const e=i.getLong();a.push({min:o,max:e}),o=e,e>t&&(t=e)}this.chrIndex[e]={chr:e,blocks:a,longestFeature:s,binWidth:n}}this.lastBlockPosition=t}get sequenceNames(){return Object.keys(this.chrIndex)}chunksForRange(e,t,i){const n=this.chrIndex[e];if(n){const e=n.blocks,r=n.longestFeature,s=n.binWidth,o=Math.max(t-r,0),a=Math.floor(o/s);if(a>=e.length)return[];{const t=Math.min(Math.floor((i-1)/s),e.length-1),n=e[a].min,r=e[t].max;if(0===r-n)return[];return[{minv:{block:n,offset:0},maxv:{block:r,offset:0}}]}}}}async function gh(e,t){let i=await Qs.loadArrayBuffer(e,qa(t)),n=new DataView(i);if(31===n.getUint8(0)&&139===n.getUint8(1)){i=gs(i).buffer,n=new DataView(i)}switch(n.getInt32(0,!0)){case 21578050:return async function(e){const t=new fh;return await t.parse(e,!1),t}(i);case 21578324:return async function(e){const t=new fh;return await t.parse(e,!0),t}(i);case 21582659:return async function(e){const t=new uh;return t.parse(e),t}(i);case 1480870228:return async function(e){const t=new ph;return t.parse(e),t}(i);case 38359875:throw Error("CSI version 2 is not supported.");default:throw Error(`Unrecognized index type: ${e}`)}}function mh(e){return"string"==typeof e||e instanceof String?new wh(e):new bh(e)}class wh{constructor(e){this.data=e,this.ptr=0}nextLine(){var e=this.ptr,t=this.data.indexOf("\n",e),i=this.data;if(t>0)return this.ptr=t+1,t>e&&"\r"===i.charAt(t-1)?i.substring(e,t-1):i.substring(e,t);var n=i.length;return this.ptr=n,e>=n?void 0:i.substring(e)}}class bh{constructor(e){this.data=e,this.length=this.data.length,this.ptr=0}nextLine(){if(this.ptr>=this.data.length)return;let e=this.ptr;const t=this.data;let i="",n=!1;for(;e<t.length;){var r=t[e],s=0,o=0;if(r<=127?(s=0,o=255&r):r<=223?(s=1,o=31&r):r<=239?(s=2,o=15&r):r<=244&&(s=3,o=7&r),t.length-e-s>0)for(var a=0;a<s;)o=o<<6|63&(r=t[e+a+1]),a+=1;else o=65533,s=t.length-e;e+=s+1;const c=String.fromCodePoint(o);if("\r"===c)n=!0;else{if("\n"===c)break;n&&(i+="\r",n=!1),i+=c}}return this.ptr=e,i}}class Fh{constructor(e){this.config=e,this.filePtr=0,this.bufferPtr=0,this.buffer}async nextLine(){let e;try{for(;;){const t=this.buffer?this.buffer.length:0;for(;this.bufferPtr<t;){const t=String.fromCharCode(this.buffer[this.bufferPtr++]);if("\r"!==t){if("\n"===t)return e;e=e?e+t:t}}if(this.eof)return e;await this.readNextBlock()}}catch(t){return console.warn(t),this.eof=!0,e}}async readNextBlock(){const e=qa(this.config,{range:{start:this.filePtr,size:26}}),t=ms(await Qs.loadArrayBuffer(this.config.url,e));if(0===t)this.eof=!0,this.buffer=void 0;else{const e=qa(this.config,{range:{start:this.filePtr,size:t}}),i=await Qs.loadArrayBuffer(this.config.url,e);i.byteLength<t&&(this.eof=!0),this.buffer=gs(i),0==this.buffer.byteLength&&(this.eof=!0),this.bufferPtr=0,this.filePtr+=i.byteLength}}}const vh=e=>{const t=ArrayBuffer.isView(e)?e:new Uint8Array(e);return 1+(t[17]<<8|t[16])};class yh{constructor(e){this.config=e,this.cacheBlocks=0!=e.cacheBlocks,this.cache=void 0}async getData(e,t){const i=e.block,n=t.block,r=0===t.offset,s=await this.getInflatedBlocks(i,n,r);if(1===s.length)return s[0];let o=0;for(const e of s)o+=e.byteLength;const a=new Uint8Array(o);let c=0;for(const e of s)a.set(e,c),c+=e.byteLength;return a}async getInflatedBlocks(e,t,i){if(this.cacheBlocks){const n=this.cache;if(n&&n.startBlock<=e&&(n.endBlock>=t||i&&n.nextEndBlock===t)){const i=e-n.startBlock,r=t-n.startBlock;return Ch(n.buffer,i,r)}{let r;if(!n||n.startBlock>t||n.endBlock<e)r=await this.loadBLockData(e,t,{skipEnd:i});else{const s=[];if(e<n.startBlock){const t=await this.loadBLockData(e,n.startBlock,{skipEnd:!0});s.push(t)}let o;if(e<=n.startBlock&&t>=n.endBlock)o=n.buffer;else{const i=Math.max(0,e-n.startBlock);let r;if(t>=n.endBlock)r=n.buffer.byteLength;else{const e=Ah(n.buffer);for(let i=0;i<e.length-1;i++)if(n.startBlock+e[i]===t){r=e[i+1];break}}o=n.buffer.slice(i,r)}if(s.push(o),t>n.endBlock){const e=await this.loadBLockData(n.endBlock,t,{skipStart:!0,skipEnd:i});s.push(e)}r=function(e){if(1===e.length)return e[0];let t=0;for(const i of e)t+=i.byteLength;const i=new Uint8Array(t);let n=0;for(const t of e)i.set(new Uint8Array(t),n),n+=t.byteLength;return i.buffer}(s)}let s=t;if(i){const e=Ah(r);t=e[e.length-1]}return this.cache={startBlock:e,endBlock:t,nextEndBlock:s,buffer:r},Ch(r)}}return Ch(await this.loadBLockData(e,t,{skipEnd:i}))}async loadBLockData(e,t,i){const n=this.config,r=i&&i.skipStart;let s=0;if(!(i&&i.skipEnd)){const e=qa(n,{range:{start:t,size:26}}),i=await Qs.loadArrayBuffer(n.url,e);s=vh(i)}if(r){const t=qa(n,{range:{start:e,size:26}}),i=await Qs.loadArrayBuffer(n.url,t);e+=vh(i)}const o=qa(n,{range:{start:e,size:t+s-e}});return Qs.loadArrayBuffer(n.url,o)}}function Ah(e){const t=e.byteLength;let i=0;const n=[0];for(;i<t;){const r=new Uint8Array(e,i);i+=1+(r[17]<<8|r[16]),i<t&&n.push(i)}return n}function Ch(e,t,i){const n=[];let r=t=t||0;const s=e.byteLength-18;for(;r<s;)try{const t=new Uint8Array(e,r,18),s=t[11]<<8|t[10],o=t[17]<<8|t[16],a=12+s+r,c=e.byteLength-a,l=o-s-18;if(c<l||l<=0)break;const h=new Uint8Array(e,a,l),d=hs(h);if(n.push(d),i===r)break;r+=o+1}catch(e){console.error(e);break}return n}const _h=Math.log10(Number.MIN_VALUE);class xh{chrCol=-1;snpCol=-1;posCol=-1;pValueCol=-1;phenotypeColumn=-1;delimiter="\t";constructor(e){this.config=e}async parseHeader(e){const t=this.config;t.delimiter&&(this.delimiter=t.delimiter);const i=await e.nextLine(),n=this.parseHeaderLine(i);return t.chrColumn&&(this.chrColumn=t.chrColumn-1),t.snpColumn&&(this.snpColumn=t.snpColumn-1),t.posColumn&&(this.posColumn=t.posColumn-1),t.pValueColumn&&(this.pValueColumn=t.pValueColumn-1),t.phenotypeColumn&&(this.phenotypeColumn=t.phenotypeColumn-1),n}parseHeaderLine(e){this.columns=e.split(this.delimiter);for(let e=0;e<this.columns.length;e++){switch(this.columns[e].toLowerCase()){case"chr":case"chromosome":case"chr_id":case"chrom":this.chrColumn=e;break;case"bp":case"pos":case"position":case"chr_pos":case"chromEnd":this.posColumn=e;break;case"p":case"pval":case"pvalue":case"p-value":case"p.value":this.pValueColumn=e;break;case"rsid":case"variant":case"snp":this.snpColumn=e;break;case"phenotype":case"gene":case"gene_id":case"molecular_trait_id":this.phenotypeColumn=e}}return this.columns}async parseFeatures(e){const t=[],i=e.nextLine();let n;this.columns||this.parseHeaderLine(i);const r=e=>{const t=e.indexOf("E");if(t>0){if(Number.parseInt(e.substring(t+1))<_h)return Number.MIN_VALUE}return Number(e)};for(;void 0!==(n=e.nextLine());){const e=n.split(this.delimiter);if(e.length===this.columns.length){const i=e[this.posColumn];if(i.indexOf(";")>0||0==i.length||i.indexOf("x")>0)continue;const n=e[this.chrColumn],s=r(e[this.pValueColumn]),o=parseInt(i)-1,a=o+1,c=e[this.snpColumn],l=e[this.phenotypeColumn],h=new kh({chr:n,start:o,end:a,pValue:s,snp:c,phenotype:l},this.columns,e);t.push(h)}}return t}static isQTL(e){const t=e.split("\t");if(t.length<5)return!1;const i=[["chr","chromosome","chr_id","chrom"],["bp","pos","position","chr_pos","chromEnd"],["p","pval","p-value","p.value"],["rsid","variant","snp"],["phenotype","gene","gene_id","molecular_trait_id"]];for(let e of i)if(!t.some((t=>e.includes(t.toLowerCase()))))return!1;return!0}}class kh{constructor({chr:e,start:t,end:i,pValue:n,snp:r,phenotype:s},o,a){this.chr=e,this.start=t,this.end=i,this.pValue=n,this.snp=r,this.phenotype=s,this.headers=o,this.tokens=a}popupData(){const e=[];for(let t=0;t<this.headers.length;t++)e.push({name:this.headers[t],value:this.tokens[t]});return e}}class Ih{sequenceNames;constructor(e,t){if(this.config=e||{},this.genome=t,this.indexURL=e.indexURL,this.indexed=e.indexed||void 0!==this.indexURL,this.queryable=this.indexed,Ht(this.config.url))this.filename=this.config.url.name;else if($a(this.config.url))this.indexed=!1,this.dataURI=e.url;else{const t=Ot(this.config.url);this.filename=e.filename||t.file}this.parser=this.getParser(this.config),"vcf"!==this.config.format||this.config.indexURL||console.warn("Warning: index file not specified.  The entire vcf file will be loaded.")}async defaultVisibilityWindow(){if(this.config.indexURL){const e=await this.getIndex();if(e&&e.lastBlockPosition){let t=0;const i=1e4;for(let i of e.sequenceNames){const e=this.genome.getChromosome(i);e&&(t+=e.bpLength)}return Math.round(t/e.lastBlockPosition*i)}}}async readFeatures(e,t,i){this.dataURI||this.header||await this.readHeader();return await this.getIndex()?(this.indexed=!0,this.loadFeaturesWithIndex(e,t,i)):this.dataURI?(this.indexed=!1,this.loadFeaturesFromDataURI()):"service"===this.config.sourceType?this.loadFeaturesFromService(e,t,i):(this.indexed=!1,this.loadFeaturesNoIndex())}async readHeader(){if(this.dataURI)return await this.loadFeaturesFromDataURI(this.dataURI),this.header;if(this.config.indexURL){const e=await this.getIndex();if(!e)throw new Error("Unable to load index: "+this.config.indexURL);let t;if(this.sequenceNames=new Set(e.sequenceNames),e.tabix)this._blockLoader=new yh(this.config),t=new Fh(this.config);else{const i=Object.values(e.chrIndex).flatMap((e=>e.blocks)).map((e=>e.max)).reduce(((e,t)=>Math.min(e,t)),Number.MAX_SAFE_INTEGER),n=qa(this.config,{bgz:e.tabix,range:{start:0,size:i}});t=mh(await Qs.loadString(this.config.url,n))}return this.header=await this.parser.parseHeader(t),this.header}if("service"!==this.config.sourceType){let e;if(this.config._filecontents)e=this.config._filecontents,delete this.config._filecontents;else{const t=qa(this.config);e=await Qs.loadByteArray(this.config.url,t)}e.length<5e8&&(e=(new TextDecoder).decode(e));let t=mh(e);this.header=await this.parser.parseHeader(t),t=mh(e),this.features=await this.parser.parseFeatures(t),this.sequenceNames=new Set;for(let e of this.features)this.sequenceNames.add(e.chr);return this.header}if(this.config.seqnamesURL){const e=qa(this.config,{}),t=await Qs.loadString(this.config.seqnamesURL,e);t&&(this.sequenceNames=new Set(t.split(",").map((e=>e.trim())).filter((e=>e))))}if(this.config.headerURL){const e=qa(this.config,{}),t=mh(await Qs.loadString(this.config.headerURL,e));return this.header=await this.parser.parseHeader(t),this.header}}getParser(e){switch(e.format){case"vcf":return new Yl(e);case"seg":return new Ul("seg");case"mut":return new Ul("mut");case"maf":return new Ul("maf");case"gwas":return new Jl(e);case"qtl":return new xh(e);case"aed":return new nh(e);default:return new El(e)}}async loadFeaturesNoIndex(){if(this.features){const e=this.features;return delete this.features,e}{const e=qa(this.config),t=await Qs.loadByteArray(this.config.url,e);if(!this.header){const e=mh(t);this.header=await this.parser.parseHeader(e)}const i=mh(t),n=[];return await this._parse(n,i),n}}async loadFeaturesWithIndex(e,t,i){const n=this.config;this.parser;const r=this.index.tabix,s=r?this.index.sequenceIndexMap[e]:e;if(void 0===s)return[];const o=this.index.chunksForRange(s,t,i);if(o&&0!==o.length){const s=[];for(let a of o){let o;if(r)o=await this._blockLoader.getData(a.minv,a.maxv);else{const e=qa(n,{range:{start:a.minv.block,size:a.maxv.block-a.minv.block+1}});o=await Qs.loadString(n.url,e)}const c=mh(a.minv.offset?o.slice(a.minv.offset):o);await this._parse(s,c,e,i,t)}return s.sort((function(e,t){return e.start-t.start})),s}return[]}async loadFeaturesFromService(e,t,i){let n;n="function"==typeof this.config.url?this.config.url({chr:e,start:t,end:i}):this.config.url.replace("$CHR",e).replace("$START",t).replace("$END",i);const r=qa(this.config),s=mh(await Qs.loadString(n,r)),o=[];return await this._parse(o,s),o}async _parse(e,t,i,n,r){let s=await this.parser.parseFeatures(t);if(void 0===i)for(let t of s)e.push(t);else{let t=!1;for(let o=0;o<s.length;o++){const a=s[o];if(a.chr!==i){if(0===e.length)continue;break}if(a.start>n){e.push(a);break}a.end>=r&&a.start<=n&&(t||(t=!0,o>0&&e.push(s[o-1])),e.push(a))}}}async getIndex(){return this.index?this.index:this.config.indexURL?(this.index=await this.loadIndex(),this.index):void 0}async loadIndex(){return gh(this.config.indexURL,this.config)}async loadFeaturesFromDataURI(){if(this.features){const e=this.features;return delete this.features,e}{const e=vs(this.dataURI);let t=mh(e);this.header=await this.parser.parseHeader(t),this.header instanceof String&&this.header.startsWith("##gff-version 3")&&(this.format="gff3"),t=mh(e);const i=[];return await this._parse(i,t),i}}}const Sh=Mt;class Eh{constructor(e){this.config=e}async readFeatures(e,t,i){let n;n="function"==typeof this.config.url?this.config.url({chr:e,start:t,end:i}):this.config.url.replace("$CHR",e).replace("$START",t).replace("$END",i);let r,s=Object.assign({},this.config);void 0!==this.config.body&&("function"==typeof this.config.body?s.body=this.config.body({chr:e,start:t,end:i}):s.body=this.config.body.replace("$CHR",e).replace("$START",t).replace("$END",i));const o=await Qs.load(n,s);if(o&&(r="function"==typeof this.config.parser?this.config.parser(o):Sh(o)?JSON.parse(o):o),this.config.mappings){let e=Object.keys(this.config.mappings);for(let t of r)for(let i of e)t[i]=t[this.config.mappings[i]]}return r}}const Nh=function(e,t){this.config=e,this.genome=t,this.expandQueryInterval=!1};Nh.prototype.readFeatures=function(e,t,i){const n=Math.max(0,Math.floor(t));let r=Math.ceil(i);if(this.genome){const t=this.genome.getChromosome(e);t&&r>t.bpLength&&(r=t.bpLength)}const s=this.config.url+"?db="+this.config.db+"&table="+this.config.tableName+"&chr="+e+"&start="+n+"&end="+r;return Qs.loadJson(s,this.config).then((function(e){return e?(e.forEach((function(e){e.hasOwnProperty("exonStarts")&&e.hasOwnProperty("exonEnds")&&e.hasOwnProperty("exonCount")&&e.hasOwnProperty("cdsStart")&&e.hasOwnProperty("cdsEnd")&&function(e){var t,i,n,r,s,o;t=e.exonCount,i=e.exonStarts.split(","),n=e.exonEnds.split(","),r=[];for(var a=0;a<t;a++){var c={start:s=parseInt(i[a]),end:o=parseInt(n[a])};(e.cdsStart>o||e.cdsEnd<e.cdsStart)&&(c.utr=!0),e.cdsStart>=s&&e.cdsStart<=o&&(c.cdStart=e.cdsStart),e.cdsEnd>=s&&e.cdsEnd<=o&&(c.cdEnd=e.cdsEnd),r.push(c)}e.exons=r}(e)})),e):null}))};class Bh{featureCaches=[];gtexChrs=new Set(["chr1","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chr2","chr20","chr21","chr22","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chrM","chrX","chrY"]);constructor(e){this.config=e,this.url=e.url,this.tissueId=e.tissueSiteDetailId,this.datasetId=e.datasetId||"gtex_v8"}async readFeatures(e,t,i){const n=e.startsWith("chr")?e:"MT"===e?"chrM":"chr"+e;if(!this.gtexChrs.has(n))return[];const r=Math.floor(t),s=Math.ceil(i),o=this.datasetId,a=this.url+"?chromosome="+n+"&start="+r+"&end="+s+"&tissueSiteDetailId="+this.tissueId+"&datasetId="+o,c=await Qs.loadJson(a,{withCredentials:this.config.withCredentials});return c&&c.singleTissueEqtl?c.singleTissueEqtl.map((e=>new Mh(e))):[]}}class Mh{constructor(e){this.chr=e.chromosome,this.start=e.pos-1,this.end=this.start+1,this.snp=e.snpId,this.phenotype=e.geneSymbol,this.pValue=e.pValue,this.json=e}popupData(){return Object.keys(this.json).map((e=>({name:e,value:this.json[e]})))}}class Rh{constructor(e,t){if(this.config=e,this.genome=t,!e.format)throw Error('Format is required, and must be either "bam" or "cram"');if(this.format=e.format.toUpperCase(),"BAM"!==this.format&&"VCF"!==this.format)throw Error(`htsget format ${e.format} is not supported`)}async readHeaderData(){const e=`${Dh(this.config)}?class=header&format=${this.format}`,t=await Qs.loadJson(e,qa(this.config));return await this.loadUrls(t.htsget.urls)}async readData(e,t,i){const n=`${Dh(this.config)}?format=${this.format}&referenceName=${e}&start=${Math.floor(t)}&end=${Math.ceil(i)}`,r=await Qs.loadJson(n,qa(this.config));return this.loadUrls(r.htsget.urls)}async loadUrls(e){const t=[];for(let i of e)if(i.url.startsWith("data:"))t.push(Promise.resolve(Th(i.url)));else{const e=qa(this.config||{});i.headers&&(e.headers=Object.assign(e.headers||{},i.headers)),t.push(Qs.loadArrayBuffer(i.url,e))}return function(e){let t=0;for(let i of e)t+=i.byteLength;let i=0;const n=new Uint8Array(t);for(let t of e){const e=new Uint8Array(t);n.set(e,i),i+=e.length}return n}(await Promise.all(t))}static async inferFormat(e){try{const t=Dh(e),i=`${t}${t.includes("?")?"&":"?"}class=header`,n=await Qs.loadJson(i,qa(e));if(n.htsget){const t=n.htsget.format;if("BAM"!==t&&"VCF"!==t)throw Error(`htsget format ${t} is not supported`);e.format=t.toLowerCase(),e.sourceType="htsget",e.name||(e.name=await Wa(e.url))}}catch(e){}}}function Dh(e){if(e.url&&e.endpoint&&e.id)return e.url+e.endpoint+e.id;if(e.endpoint&&e.id)return e.endpoint+e.id;if(e.url)return e.url.startsWith("htsget://")?e.url.replace("htsget://","https://"):e.url;throw Error("Must specify either 'url', or 'endpoint' and 'id")}function Th(e){const t=e.split(","),i=t[0].split(":")[1];let n=t[1];n=i.indexOf("base64")>=0?atob(n):decodeURI(n);const r=new Uint8Array(n.length);for(var s=0;s<n.length;s++)r[s]=n.charCodeAt(s);return r}class Lh extends Rh{constructor(e,t){super(e,t),this.parser=new Yl}async readHeader(){if(!this.header){let e=await this.readHeaderData();fs(e)&&(e=ps(e));const t=mh(e);this.header=await this.parser.parseHeader(t,this.genome),this.chrAliasTable=this.header.chrAliasTable}return this.header}async readFeatures(e,t,i){if(this.config.format&&"VCF"!==this.config.format.toUpperCase())throw Error(`htsget format ${this.config.format} is not supported`);this.chrAliasTable||await this.readHeader();let n=this.chrAliasTable.has(e)?this.chrAliasTable.get(e):e,r=await this.readData(n,t,i);fs(r)&&(r=ps(r));const s=mh(r);return this.parser.parseFeatures(s)}}class zh{chrAliasTable=new Map;constructor(e,t){this.sequenceNames=new Set(e),this.genome=t}async getAliasName(e){if(!this.genome)return e;if(!this.chrAliasTable.has(e)){const t=await this.genome.getAliasRecord(e);if(t){let i;const n=Object.keys(t).filter((e=>"start"!==e&&"end"!==e)).map((e=>t[e])).filter((e=>this.sequenceNames.has(e)));n.length>0&&(i=n[0]),this.chrAliasTable.set(e,i)}else this.chrAliasTable.set(e,void 0)}return this.chrAliasTable.get(e)}}class Hh{constructor(e){this.genome=e}async nextFeature(e,t,i,n){let r=this.genome.chromosomeNames||[e],s=r.indexOf(e);if(s<0)return;const o=Math.min(1e4,n||1e4);let a=i?t:Math.max(t-o,0);for(;s<r.length&&s>=0;){e=r[s];const c=this.genome.getChromosome(e).bpLength;for(;a<c&&a>=0;){let r=i?a+o:Math.min(t,a+o);const s=await this.getFeatures({chr:e,start:a,end:r,visibilityWindow:n});if(s){const e=(e,t)=>e.start-t.start+e.end-t.end,n=Array.from(s);n.sort(e);let r=i?0:n.length-1;for(;r>=0&&r<n.length;){const e=n[r],s=(e.start+e.end)/2;if(i){if(s>t)return e;r++}else{if(s<t)return e;r--}}}a=i?r:a-o}if(i)s++,a=0,t=0;else{if(s--,s<0)break;a=(t=this.genome.getChromosome(r[s]).bpLength)-o}}}async previousFeature(e,t,i,n){let r=this.genome.chromosomeNames||[e],s=r.indexOf(e);if(s<0)return;const o=Math.min(1e4,n||1e4);let a=i?t:Math.max(t-o,0);for(;s<r.length&&s>=0;){e=r[s];const c=this.genome.getChromosome(e).bpLength;for(;a<c&&a>=0;){let r=Math.min(t,a+o);const s=await this.getFeatures({chr:e,start:a,end:r,visibilityWindow:n});if(s){const e=(e,t)=>e.start-t.start+e.end-t.end,n=Array.from(s);n.sort(e);let r=i?0:n.length-1;for(;r>=0&&r<n.length;){const e=n[r],s=(e.start+e.end)/2;if(i){if(s>t)return e;r++}else{if(s<t)return e;r--}}}a=i?r:a-o}if(i)s++,a=0,t=0;else{if(s--,s<0)break;a=(t=this.genome.getChromosome(r[s]).bpLength)-o}}}}class Ph extends Hh{constructor(e,t){super(t),this.config=e||{},this.genome=t,this.sourceType=void 0===e.sourceType?"file":e.sourceType,this.maxWGCount=e.maxWGCount||1e4,this.windowFunctions=["mean","min","max","none"];const i=new Set(["bigwig","bw","bigbed","bb","biginteract","biggenepred","bignarrowpeak","tdf"]);if(this.queryable=e.indexURL||!0===e.queryable,e.reader)this.reader=e.reader,this.queryable=!1!==e.queryable;else{if("ga4gh"===e.sourceType)throw Error("Unsupported source type 'ga4gh'");"eqtl"!==e.type&&"qtl"!==e.type||"gtex-ws"!==e.sourceType?"htsget"===e.sourceType?(this.reader=new Lh(e,t),this.queryable=!0):"ucscservice"===e.sourceType?(this.reader=new Nh(e.source),this.queryable=!0):"custom"===e.sourceType?(this.reader=new Eh(e.source),this.queryable=!1!==e.source.queryable):"service"===e.sourceType?(this.reader=new Ih(e,t),this.queryable=!0):(this.reader=new Ih(e,t),void 0!==e.queryable?this.queryable=e.queryable:(i.has(e.format)||this.reader.indexed)&&(this.queryable=!0)):(this.reader=new Bh(e),this.queryable=!0)}this.searchable=!1!==e.searchable}async defaultVisibilityWindow(){if(this.reader&&"function"==typeof this.reader.defaultVisibilityWindow)return this.reader.defaultVisibilityWindow()}async trackType(){const e=await this.getHeader();return e?e.type:void 0}async getHeader(){if(!this.header)if(this.reader&&"function"==typeof this.reader.readHeader){const e=await this.reader.readHeader();e?(this.header=e,e.format&&(this.config.format=e.format)):this.header={}}else this.header={};return this.header}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r}){const s="all"===e.toLowerCase();return t=t||0,i=i||Number.MAX_SAFE_INTEGER,(s&&!this.wgFeatures&&this.supportsWholeGenome()||this.config.disableCache||!this.featureCache||!this.featureCache.containsRange(new dc(e,t,i)))&&await this.loadFeatures(e,t,i,r),s?(this.wgFeatures||(this.supportsWholeGenome()?this.wgFeatures=await Ll(this.featureCache.getAllFeatures(),this.genome,this.maxWGCount):this.wgFeatures=[]),this.wgFeatures):this.featureCache.queryFeatures(e,t,i)}async findFeatures(e){return this.featureCache?this.featureCache.findFeatures(e):[]}supportsWholeGenome(){return!this.queryable}getAllFeatures(){return this.queryable||!this.featureCache?[]:this.featureCache.getAllFeatures()}async loadFeatures(e,t,i,n){await this.getHeader();const r=this.reader;let s=t,o=i,a=e;if(!this.chrAliasManager&&this.reader&&this.reader.sequenceNames&&(this.chrAliasManager=new zh(this.reader.sequenceNames,this.genome)),this.chrAliasManager&&(a=await this.chrAliasManager.getAliasName(e)),(!n||n<=0)&&!1!==this.config.expandQuery){const e=this.genome?this.genome.getChromosome(a):void 0;s=0,o=Math.max(e?e.bpLength:Number.MAX_SAFE_INTEGER,i)}else if(n>i-t&&!1!==this.config.expandQuery){let e=Math.min(4.1*(i-t),n);this.config.minQuerySize&&e<this.config.minQuerySize&&(e=this.config.minQuerySize),s=Math.max(0,(t+i-e)/2),o=s+e}let c=await r.readFeatures(a,s,o);void 0===this.queryable&&(this.queryable=r.indexed);const l=this.queryable?new dc(e,s,o):void 0;if(c){if("wig"!==this.config.format&&"junctions"!==this.config.type){zl(c,this.config.maxRows||Number.MAX_SAFE_INTEGER)}this.featureCache=new Zs(c,this.genome,l),this.searchable&&this.addFeaturesToDB(c,this.config)}else this.featureCache=new Zs([],l)}addFeaturesToDB(e,t){this.featureMap||(this.featureMap=new Map);const i=t.searchableFields||["name","transcript_id","gene_id","gene_name","id"];for(let t of e)for(let e of i){let i;if("function"==typeof t.getAttributeValue&&(i=t.getAttributeValue(e)),i){if(i=i.replaceAll(" ","+").toUpperCase(),this.featureMap.has(i)){const e=this.featureMap.get(i);if(t.end-t.start<e.end-e.start)continue}this.featureMap.set(i,t)}}}search(e){if(this.featureMap)return this.featureMap.get(e.toUpperCase())}}class Oh{constructor(e,t,i,n){this.header=e,this.nameToId=t,this.idToName=i,this.sumLengths=n}static parseTree(e,t,i=!1){{const n=e.getInt(),r=e.getInt(),s=e.getInt(),o=e.getInt(),a=e.getLong(),c=e.getLong(),l={magic:n,blockSize:r,keySize:s,valSize:o,itemCount:a,reserved:c},h=new Map,d=[];let u=0;const f=n=>{n>=0&&(e.position=n);const r=e.getByte();e.getByte();const a=e.getUShort();if(1===r)for(let t=0;t<a;t++){let t,n=e.getFixedLengthString(s);if(8!==o)throw Error(`Unexpected "valSize" value in chromosome tree.  Expected 8, actual value is ${o}`);{t=e.getInt();const r=e.getInt();u+=r,i&&(n=i.getChromosomeName(n)),h.set(n,t),d[t]=n}}else for(let i=0;i<a;i++){e.getFixedLengthString(s);const i=e.getLong()-t,n=e.position;f(i),e.position=n}};return f(e),new Oh(l,h,d,u)}}}class Uh{static magic=610839776;littleEndian=!0;nodeCache=new Map;constructor(e,t,i){this.path=e,this.config=t,this.startOffset=i}async init(){const e=await this.#t(this.startOffset,48);let t=e.getInt();if(t!==Uh.magic&&(e.setPosition(0),this.littleEndian=!this.littleEndian,e.littleEndian=this.littleEndian,t=e.getInt(),t!==Uh.magic))throw Error(`Bad magic number ${t}`);const i=e.getUInt(),n=e.getLong(),r=e.getUInt(),s=e.getUInt(),o=e.getUInt(),a=e.getUInt(),c=e.getLong(),l=e.getUInt(),h=e.getUInt(),d=this.startOffset+48;return this.header={magic:t,blockSize:i,itemCount:n,startChromIx:r,startBase:s,endChromIx:o,endBase:a,endFileOffset:c,itemsPerSlot:l,reserved:h,rootNodeOffset:d},this}async#t(e,t){const i=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:e,size:t}}));return new Ac(new DataView(i),this.littleEndian)}async findLeafItemsOverlapping(e,t,i,n){const r=[],s=async o=>{const a=await this.readNode(o);for(let o of a.items)qh(o,e,t,i,n)&&(1===a.type?r.push(o):await s(o.childOffset))};return await s(this.header.rootNodeOffset),r}async readNode(e){const t=e;if(this.nodeCache.has(t))return this.nodeCache.get(t);let i=await this.#t(e,4);const n=i.getByte(),r=1===n;i.getByte();const s=i.getUShort();let o=s*(r?32:24);i=await this.#t(e+4,o);const a=[];for(let e=0;e<s;e++){let e={isLeaf:r,startChrom:i.getInt(),startBase:i.getInt(),endChrom:i.getInt(),endBase:i.getInt(),childOffset:i.getLong()};r&&(e.dataSize=i.getLong(),e.dataOffset=e.childOffset),a.push(e)}const c={type:n,items:a};return this.nodeCache.set(t,c),c}}function qh(e,t,i,n,r){return e?(n>e.startChrom||n===e.startChrom&&r>=e.startBase)&&(t<e.endChrom||t===e.endChrom&&i<=e.endBase):(console.log("null item for "+t+" "+i+" "+r),!1)}class Qh{ixFile;ixxFile;bufferCache=new Map;constructor(e,t){this.ixFile=t,this.ixxFile=e}async search(e,t){const i=e.split(" ")[0].toLowerCase(),n=await this._getBuffer(i,t);if(!n)return;const r=n.slice(0,n.lastIndexOf("\n")).split("\n").filter((e=>!!e)),s=[];for(let e of r){const t=e.split(" ")[0];if(t.startsWith(i)&&s.push(e),t.slice(0,i.length)>i)break}if(0!==s.length){const e=new Map;for(let t of s){const[i,...n]=t.split(" ");e.set(i,n.map((e=>e.split(",")[0])))}return e}}async getIndex(e){return this.index||(this.index=await this._readIndex()),this.index}async _readIndex(e){return(await Qs.loadString(this.ixxFile)).split("\n").filter((e=>!!e)).map((e=>{const t=e.length-10,i=e.slice(0,t),n=e.slice(t);return[i,Number.parseInt(n,16)]}))}async _getBuffer(e,t){let i=0,n=65536;const r=await this.getIndex(t);for(let t=0;t<r.length;t++){const[s,o]=r[t],a=Math.min(s.length,e.length);s.slice(0,a)<e&&(i=o,n=o+65536)}const s=n-i;if(!(s<0)){if(this.bufferCache.has(i))return this.bufferCache.get(i);{const e=await Qs.loadString(this.ixFile,{range:{start:i,size:s}});return this.bufferCache.set(i,e),e}}}}class Vh{chrAliasTable=new Map;rpTreeCache=new Map;constructor(e,t){this.path=e.url,this.format=e.format||"bigwig",this.genome=t,this.config=e,this.bufferSize=512e3,this.loader=$a(this.path)?new Xh(this.path):Qs,e.searchTrix&&(this._trix=new Qh(`${e.searchTrix}x`,e.searchTrix))}async readWGFeatures(e,t){await this.loadHeader();const i=this.chromTree.idToName.length-1,n=this.chromTree.idToName[0],r=this.chromTree.idToName[i];return this.readFeatures(n,0,r,Number.MAX_VALUE,e,t)}async readFeatures(e,t,i,n,r,s="mean"){t||(t=0),n||(n=Number.MAX_SAFE_INTEGER),await this.loadHeader();let o,a,c=await this.#h(e),l=await this.#h(i);if(void 0===c||void 0===l)return[];if("bigwig"===this.type){const e=await this.getZoomHeaders();let t=r?function(e,t){let i;for(let n=0;n<t.length;n++){const r=t[n];if(r.reductionLevel<e){i=r;break}}return i}(r,e):void 0;t?(o=t.indexOffset,a=Yh):(o=this.header.fullIndexOffset,a=$h)}else o=this.header.fullIndexOffset,a=Kh.call(this);const h=await this.loadRPTree(o),d=await h.findLeafItemsOverlapping(c,t,l,n);if(d&&0!==d.length){let e=Number.MAX_VALUE,i=0;for(let t of d)e=Math.min(e,t.dataOffset),i=Math.max(i,t.dataOffset+t.dataSize);const r=i-e,o=await this.loader.loadArrayBuffer(this.config.url,qa(this.config,{range:{start:e,size:r}})),h=[];for(let i of d){const r=new Uint8Array(o,i.dataOffset-e,i.dataSize);let d;d=this.header.uncompressBuffSize>0?ls(r):r,a.call(this,new DataView(d.buffer),c,t,l,n,h,this.chromTree.idToName,s,this.littleEndian)}return h.sort((function(e,t){return e.start-t.start})),h}return[]}async#h(e){if(this.chrAliasTable.has(e)&&void 0===(e=this.chrAliasTable.get(e)))return;let t=this.chromTree.nameToId.get(e);if(void 0===t&&this.genome){const i=await this.genome.getAliasRecord(e);let n;if(i){const e=Object.keys(i).filter((e=>"start"!==e&&"end"!==e)).map((e=>i[e])).filter((e=>this.chromTree.nameToId.has(e)));e.length>0&&(n=e[0],t=this.chromTree.nameToId.get(e[0]))}this.chrAliasTable.set(e,n)}return t}get searchable(){return"bigbed"===this.type}async search(e){if(this.header||await this.loadHeader(),!this.header||!this.header.extraIndexCount)return;const t=await this._searchForRegions(e);if(t){const i=await this._loadFeaturesForRange(t.offset,t.length);if(i){const t=i.filter((t=>{for(let i of Object.keys(t)){const n=t[i];if(Mt(n)&&n.toLowerCase()===e.toLowerCase())return!0}return!1}));return t.length>0?t.reduce(((e,t)=>e.end-e.start>t.end-t.start?e:t),i[0]):void 0}}}async _searchForRegions(e){const t=await this.#d();if(t){if(this._trix){const t=e.toLowerCase(),i=await this._trix.search(t);i&&i.has(t)&&(e=i.get(t)[0])}for(let i of t){const t=await i.search(e);if(t)return t}}}async#d(){if(void 0===this._searchTrees&&this.header.extraIndexOffsets&&this.header.extraIndexOffsets.length>0){this._searchTrees=[];for(let e of this.header.extraIndexOffsets){const t=await _c.loadBpTree(this.path,this.config,e);this._searchTrees.push(t)}}return this._searchTrees}async getZoomHeaders(){return this.zoomLevelHeaders||await this.loadHeader(),this.zoomLevelHeaders}async loadHeader(){if(this.header)return this.header;{let e,t=await this.loader.loadArrayBuffer(this.path,qa(this.config,{range:{start:0,size:64}}));this.littleEndian=!0;let i=new Ac(new DataView(t),this.littleEndian),n=i.getUInt();if(2291137574===n)this.type="bigwig";else if(2273964779===n)this.type="bigbed";else{this.littleEndian=!1,i.littleEndian=!1,i.position=0;let e=i.getUInt();654085990===e?this.type="bigwig":3958540679===e&&(this.type="bigbed")}e={bwVersion:i.getUShort(),nZoomLevels:i.getUShort(),chromTreeOffset:i.getLong(),fullDataOffset:i.getLong(),fullIndexOffset:i.getLong(),fieldCount:i.getUShort(),definedFieldCount:i.getUShort(),autoSqlOffset:i.getLong(),totalSummaryOffset:i.getLong(),uncompressBuffSize:i.getInt(),extensionOffset:i.getLong()};const r=64;let s={start:r,size:e.fullDataOffset-r+4};t=await this.loader.loadArrayBuffer(this.path,qa(this.config,{range:s}));const o=e.nZoomLevels;i=new Ac(new DataView(t),this.littleEndian),this.zoomLevelHeaders=[],this.firstZoomDataOffset=Number.MAX_SAFE_INTEGER;for(let e=1;e<=o;e++){const t=o-e,n=new jh(t,i);this.firstZoomDataOffset=Math.min(n.dataOffset,this.firstZoomDataOffset),this.zoomLevelHeaders[t]=n}if(e.autoSqlOffset>0){i.position=e.autoSqlOffset-r;const t=i.getString();t&&(this.autoSql=function(e){let t;const i=[];let n=!1;const r=e.trim().split(/\s*[\r\n]+\s*/g);for(let e of r)if(e.startsWith("table"))t=e.split(/\s+/)[1].trim();else if(e.startsWith("("))n=!0;else if(e.startsWith(")"));else if(n&&e.length>0){const t=e.indexOf(";"),n=e.substr(0,t).split(/\s+/),r=e.substr(t+1).replace(/"/g,"").trim();i.push({type:n[0],name:n[1],description:r})}return{table:t,fields:i}}(t))}if(e.totalSummaryOffset>0&&(i.position=e.totalSummaryOffset-r,this.totalSummary=new Wh(i)),!(e.chromTreeOffset>0))throw"BigWig chromosome tree offset <= 0";return i.position=e.chromTreeOffset-r,this.chromTree=await Oh.parseTree(i,r,this.genome),this.chrNames=new Set(this.chromTree.idToName),i.position=e.fullDataOffset-r,e.dataCount=i.getInt(),this.featureDensity=e.dataCount/this.chromTree.sumLengths,this.header=e,e.extensionOffset>0&&await this.loadExtendedHeader(e.extensionOffset),this.header}}async loadExtendedHeader(e){let t=await this.loader.loadArrayBuffer(this.path,qa(this.config,{range:{start:e,size:64}})),i=new Ac(new DataView(t),this.littleEndian);i.getUShort();const n=i.getUShort(),r=i.getLong();if(0===n)return;let s=56*n;t=await this.loader.loadArrayBuffer(this.path,qa(this.config,{range:{start:r,size:s}})),i=new Ac(new DataView(t),this.littleEndian);const o=[],a=[],c=[];for(let e=0;e<n;e++){o.push(i.getUShort());const e=i.getUShort();c.push(i.getLong()),a.push(i.getInt());for(let t=0;t<e;t++)i.getUShort(),a.push(i.getUShort())}this.header.extraIndexCount=n,this.header.extraIndexOffsets=c}async loadRPTree(e){let t=this.rpTreeCache.get(e);return t||(t=new Uh(this.path,this.config,e),await t.init(),this.rpTreeCache.set(e,t),t)}async getType(){return await this.loadHeader(),this.type}async getTrackType(){return await this.loadHeader(),"bigwig"===this.type?"wig":this.autoSql&&"chromatinInteract"===this.autoSql.table?"interact":"annotation"}async _loadFeaturesForRange(e,t){const i=await this.loader.loadArrayBuffer(this.config.url,qa(this.config,{range:{start:e,size:t}})),n=new Uint8Array(i),r=this.header.uncompressBuffSize>0?ls(n):n,s=[];return Kh.call(this).call(this,new DataView(r.buffer),0,0,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,s,this.chromTree.idToName),s}}class jh{constructor(e,t){this.index=e,this.reductionLevel=t.getInt(),this.reserved=t.getInt(),this.dataOffset=t.getLong(),this.indexOffset=t.getLong()}}class Wh{constructor(e){e?(this.basesCovered=e.getLong(),this.minVal=e.getDouble(),this.maxVal=e.getDouble(),this.sumData=e.getDouble(),this.sumSquares=e.getDouble(),Gh.call(this)):(this.basesCovered=0,this.minVal=0,this.maxVal=0,this.sumData=0,this.sumSquares=0,this.mean=0,this.stddev=0)}}function Gh(){let e=this.basesCovered;if(e>0){this.mean=this.sumData/e,this.stddev=Math.sqrt(this.sumSquares/(e-1));let t=this.minVal<0?this.mean-2*this.stddev:0,i=this.maxVal>0?this.mean+2*this.stddev:0;this.defaultRange={min:t,max:i}}}function $h(e,t,i,n,r,s,o,a,c){const l=new Ac(e,c),h=l.getInt(),d=l.getInt();let u=d,f=l.getInt();const p=l.getInt(),g=l.getInt(),m=l.getByte();l.getByte();let w=l.getUShort();if(h>=t&&h<=n){let e=0;for(;w-- >0;){let a;switch(m){case 1:u=l.getInt(),f=l.getInt(),a=l.getFloat();break;case 2:u=l.getInt(),a=l.getFloat(),f=u+g;break;case 3:a=l.getFloat(),u=d+e*p,f=u+g,e++}if(!(h<t||h===t&&f<i)){if(h>n||h===n&&u>=r)break;if(Number.isFinite(a)){const e=o[h];s.push({chr:e,start:u,end:f,value:a})}}}}}function Kh(){const e=function(e,t,i,n){if("biginteract"===n||i&&("chromatinInteract"===i.table||"interact"===i.table))return function(e,t){return e.chr1=t[5],e.start1=Number.parseInt(t[6]),e.end1=Number.parseInt(t[7]),e.chr2=t[10],e.start2=Number.parseInt(t[11]),e.end2=Number.parseInt(t[12]),e.name=t[0],e.score=Number(t[1]),e.value=Number(t[2]),e.color="."===t[4]?void 0:"0"===t[4]?"rgb(0,0,0)":t[4],e};{const n=e-3;return function(r,s){if(n>0&&(r.name=s[0]),n>1&&(r.score=Number(s[1])),n>2&&(r.strand=s[2]),n>3&&(r.cdStart=parseInt(s[3])),n>4&&(r.cdEnd=parseInt(s[4])),n>5&&"."!==s[5]&&"0"!==s[5]&&"-1"!==s[5]){const e=_s.createColorString(s[5]);r.color=e.startsWith("rgb")?e:void 0}if(n>8){const e=parseInt(s[6]),t=s[7].split(","),i=s[8].split(","),n=[];for(let s=0;s<e;s++){const e=r.start+parseInt(i[s]),o=e+parseInt(t[s]);n.push({start:e,end:o})}!function(e,t,i){for(let n of e){const e=n.end,r=n.start;e<t||r>i?n.utr=!0:(t>=r&&t<=e&&(n.cdStart=t),i>=r&&i<=e&&(n.cdEnd=i))}}(n,r.cdStart,r.cdEnd),r.exons=n}if(i)for(let n=e;n<t;n++)if(n<i.fields.length){const e=i.fields[n].name,t=s[n-3];r[e]=t}}}}(this.header.definedFieldCount,this.header.fieldCount,this.autoSql,this.format);return function(t,i,n,r,s,o,a,c,l){const h=new Ac(t,l);for(;h.remLength()>=13;){const t=h.getInt(),c=a[t],l=h.getInt(),d=h.getInt(),u=h.getString();if(!(t<i||t===i&&d<n)){if(t>r||t===r&&l>=s)break;if(d>0){const t={chr:c,start:l,end:d};o.push(t);const i=u.split("\t");e(t,i)}}}}}function Yh(e,t,i,n,r,s,o,a,c){const l=new Ac(e,c);for(;l.remLength()>=32;){const e=l.getInt(),c=l.getInt(),h=l.getInt(),d=l.getInt(),u=l.getFloat(),f=l.getFloat(),p=l.getFloat();let g;switch(l.getFloat(),a){case"min":g=u;break;case"max":g=f;break;default:g=0===d?0:p/d}if(!(e<t||e===t&&h<i)){if(e>n||e===n&&c>=r)break;if(Number.isFinite(g)){const t=o[e];s.push({chr:t,start:c,end:h,value:g})}}}}class Xh{constructor(e){this.data=vs(e).buffer}loadArrayBuffer(e,t){const i=t.range;return i?this.data.slice(i.start,i.start+i.size):this.data}async dataViewForRange(e,t){const i=Math.min(this.data.byteLength-e.start,e.size);return t?new Uint8Array(this.data,e.start,i):new DataView(this.data,e.start,i)}}class Zh extends Hh{queryable=!0;wgValues={};windowFunctions=["mean","min","max"];constructor(e,t){super(t),this.reader=new Vh(e,t),this.genome=t,this.format=e.format||"bigwig"}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,windowFunction:r}){await this.reader.loadHeader();const s="bigwig"===this.reader.type,o="all"===e.toLowerCase()?s?await this.getWGValues(r):[]:await this.reader.readFeatures(e,t,e,i,n,r);return s||Tl(o),o}async getHeader(){return this.reader.loadHeader()}async defaultVisibilityWindow(){return"bigwig"===this.reader.type?-1:this.reader.featureDensity?Math.floor(1e4/this.reader.featureDensity):-1}async getWGValues(e){const t=this.genome;if(this.wgValues[e])return this.wgValues[e];{const i=t.getGenomeLength()/1e3,n=await this.reader.readWGFeatures(i,e);let r=[];for(let e of n){const i=e.chr,n=t.getCumulativeOffset(i),s=Object.assign({},e);s.chr="all",s.start=n+e.start,s.end=n+e.end,s._f=e,r.push(s)}return r.sort(((e,t)=>e.start-t.start)),this.wgValues[e]=r,r}}supportsWholeGenome(){return"bigwig"===this.reader.type}async trackType(){return this.reader.getTrackType()}get searchable(){return this.reader.searchable}async search(e){return this.reader.search(e)}}class Jh{constructor(e,t){this.config=e,this.genome=t,this.path=e.url,this.groupCache={},this.datasetCache={}}async readHeader(){if(void 0!==this.magic)return this;let e=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:0,size:64e3}})),t=new Ac(new DataView(e));if(this.magic=t.getInt(),this.version=t.getInt(),this.indexPos=t.getLong(),this.indexSize=t.getInt(),t.getInt(),this.version>=2){let e=t.getInt();for(this.windowFunctions=[];e-- >0;)this.windowFunctions.push(t.getString())}this.trackType=t.getString(),this.trackLine=t.getString();let i=t.getInt();for(this.trackNames=[];i-- >0;)this.trackNames.push(t.getString());this.genomeID=t.getString(),this.flags=t.getInt(),this.compressed=!!(1&this.flags),e=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:this.indexPos,size:this.indexSize}})),t=new Ac(new DataView(e)),this.datasetIndex={};let n=t.getInt();for(;n-- >0;){const e=t.getString(),i=t.getLong(),n=t.getInt();this.datasetIndex[e]={position:i,size:n}}for(this.groupIndex={},n=t.getInt();n-- >0;){const e=t.getString(),i=t.getLong(),n=t.getInt();this.groupIndex[e]={position:i,size:n}}return this}async readDataset(e,t,i){const n=e+"_"+t+"_"+i;if(this.datasetCache[n])return this.datasetCache[n];{await this.readHeader();const r=this.version<2?"":"/"+t,s="all"===e.toLowerCase()||void 0===i?"0":i.toString();let o;o="raw"===t?"/"+e+"/raw":"/"+e+"/z"+s+r;const a=this.datasetIndex[o];if(void 0===a)return;const c=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:a.position,size:a.size}}));if(!c)return;const l=new Ac(new DataView(c));let h=l.getInt();const d={};for(;h-- >0;)d[l.getString()]=l.getString();const u=l.getString(),f=l.getFloat();let p=l.getInt();const g=[];for(;p-- >0;)g.push({position:l.getLong(),size:l.getInt()});const m={name:o,attributes:d,dataType:u,tileWidth:f,tiles:g};return this.datasetCache[n]=m,m}}async readRootGroup(){const e=this.genome,t=this.groupCache["/"];if(t)return t;{const t=await this.readGroup("/"),i=t.chromosomes,n=t.maxZoom;n&&(this.maxZoom=Number(n));const r=t.totalCount;r&&(t.totalCount=Number(r));const s={};return i&&i.split(",").forEach((function(t){const i=e.getChromosomeName(t);s[i]=t})),this.chrAliasTable=s,this.groupCache["/"]=t,t}}async readGroup(e){const t=this.groupCache[e];if(t)return t;{await this.readHeader();const t=this.groupIndex[e];if(void 0===t)return;const i=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:t.position,size:t.size}}));if(!i)return;const n=new Ac(new DataView(i)),r={name:e};let s=n.getInt();for(;s-- >0;){const e=n.getString(),t=n.getString();r[e]=t}return this.groupCache[e]=r,r}}async readTiles(e,t){if(e.sort((function(e,t){return e.position-t.position})),0===(e=e.filter((function(e){return e.size>0}))).length)return[];e=function(e){const t=[];let i=e[0];for(let n=1;n<e.length;n++){const r=e[n];r.position>i.position+i.size?(t.push(i),i=r):i.size=r.position+r.size-i.position}return t.push(i),t}(e);const i=[];for(let n of e){const e=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:n.position,size:n.size}})),r=this.compressed?ls(e).buffer:e,s=new Ac(new DataView(r)),o=s.getString();let a;switch(o){case"fixedStep":a=ed(s,t);break;case"variableStep":a=td(s,t);break;case"bed":case"bedWithName":a=id(s,t,o);break;default:throw"Unknown tile type: "+o}i.push(a)}return i}async readTile(e,t){let i=await Qs.loadArrayBuffer(this.path,qa(this.config,{range:{start:e.position,size:e.size}}));if(this.compressed){i=ls(i).buffer}const n=new Ac(new DataView(i)),r=n.getString();switch(r){case"fixedStep":return ed(n,t);case"variableStep":return td(n,t);case"bed":case"bedWithName":return id(n,t,r);default:throw"Unknown tile type: "+r}}}function ed(e,t){const i=e.getInt(),n=e.getInt(),r=e.getFloat(),s=[];let o=t;for(;o-- >0;){let t=i;const n=[];for(;t-- >0;)n.push(e.getFloat());s.push(n)}return{type:"fixedStep",start:n,span:r,data:s,nTracks:t,nPositions:i}}function td(e,t){const i=e.getInt(),n=e.getFloat(),r=e.getInt(),s=[];let o=r;for(;o-- >0;)s.push(e.getInt());e.getInt();const a=[];let c=t;for(;c-- >0;){o=r;const t=[];for(;o-- >0;)t.push(e.getFloat());a.push(t)}return{type:"variableStep",tileStart:i,span:n,start:s,data:a,nTracks:t,nPositions:r}}function id(e,t,i){const n=e.getInt();let r=n;const s=[];for(;r-- >0;)s.push(e.getInt());r=n;const o=[];for(;r-- >0;)o.push(e.getInt());e.getInt();const a=[];let c=t;for(;c-- >0;){let t=n;const i=[];for(;t-- >0;)i.push(e.getFloat());a.push(i)}if("bedWithName"===i){r=n;const t=[];for(;r-- >0;)t.push(e.getString())}return{type:i,start:s,end:o,data:a,nTracks:t,nPositions:n}}class nd extends Hh{searchable=!1;constructor(e,t){super(t),this.genome=t,this.reader=new Jh(e,t),this.queryable=!0}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,windowFunction:r="mean"}){if("all"===e.toLowerCase()){const e=[],t=this.genome;if(this.genome.wgChromosomeNames)for(let i of t.wgChromosomeNames){const s=t.getChromosome(i).bpLength;n=s/1e3;const o=await this._getFeatures(i,0,s,n,r);if(o)for(let i of o){const n=Object.assign({},i);n.chr="all",n.start=t.getGenomeCoordinate(i.chr,i.start),n.end=t.getGenomeCoordinate(i.chr,i.end),n._f=i,e.push(n)}}return e}return this._getFeatures(e,t,i,n,r)}async _getFeatures(e,t,i,n,r){const s=new dc(e,t,i),o=this.genome;if(!this.rootGroup&&(this.rootGroup=await this.reader.readRootGroup(),!this.normalizationFactor)){const e=this.rootGroup.totalCount;e&&(this.normalizationFactor=1e6/e)}s.bpPerPixel=n;const a=function(e,t,i){var n=i.getChromosome(e).bpLength;return Math.ceil(Math.log(Math.max(0,n/(700*t)))/ad)}(e,n,o);let c=this.reader.chrAliasTable[e],l=this.reader.maxZoom;void 0===c&&(c=e),void 0===l&&(l=-1);const h=a>l?"raw":r,d=await this.reader.readDataset(c,h,a);if(null==d)return[];const u=d.tileWidth,f=Math.floor(t/u),p=Math.floor(i/u),g=await this.reader.readTiles(d.tiles.slice(f,p+1),1),m=[];for(let r of g)switch(r.type){case"bed":rd(r,e,t,i,n,m);break;case"variableStep":sd(r,e,t,i,n,m);break;case"fixedStep":od(r,e,t,i,n,m);break;default:throw"Unknown tile type: "+r.type}return m.sort((function(e,t){return e.start-t.start})),m}get supportsWholeGenome(){return!0}get windowFunctions(){return this.reader.windowFunctions}}function rd(e,t,i,n,r,s){const o=e.nPositions,a=e.start,c=e.end,l=e.data[0];for(let e=0;e<o;e++){const r=a[e],o=c[e];if(!(o<i)){if(r>n)break;s.push({chr:t,start:r,end:o,value:l[e]})}}}function sd(e,t,i,n,r,s){const o=e.nPositions,a=e.start,c=e.span,l=e.data[0];for(let e=0;e<o;e++){const r=a[e],o=r+c;if(!(o<i)){if(r>n)break;s.push({chr:t,start:r,end:o,value:l[e]})}}}function od(e,t,i,n,r,s){const o=e.nPositions;let a=e.start;const c=e.span,l=e.data[0];for(let e=0;e<o;e++){const r=a+c;if(a>n)break;r>=i&&(Number.isNaN(l[e])||s.push({chr:t,start:a,end:r,value:l[e]})),a=r}}var ad=Math.log(2);class cd extends Hh{constructor(e,t){super(t),this.config=e,this.genome=t,this.queryable=!1,this.searchable=!1!==e.searchable,this.updateFeatures(e.features)}updateFeatures(e){zl(e=function(e,t){if(t)for(let i of e)i.chr=t.getChromosomeName(i.chr);return e}(e,this.genome)),this.config.mappings&&function(e,t){let i=Object.keys(t);e.forEach((function(e){i.forEach((function(i){e[i]=e[t[i]]}))}))}(e,this.config.mappings),this.featureCache=new Zs(e,this.genome),(this.searchable||this.config.searchableFields)&&this.addFeaturesToDB(e,this.config)}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r}){const s=this.genome,o=s?s.getChromosomeName(e):e;return"all"===o.toLowerCase()?Ll(this.featureCache.getAllFeatures(),this.genome,this.maxWGCount):this.featureCache.queryFeatures(o,t,i)}getAllFeatures(){return this.featureCache.getAllFeatures()}supportsWholeGenome(){return!0}addFeaturesToDB(e,t){this.featureMap||(this.featureMap=new Map);const i=t.searchableFields||["name"];for(let t of e)for(let e of i){let i;if("function"==typeof t.getAttributeValue&&(i=t.getAttributeValue(e)),i||(i=t[e]),i){i=i.replaceAll(" ","+");const e=this.featureMap.get(i.toUpperCase());if(e&&e.end-e.start>t.end-t.start)continue;this.featureMap.set(i.toUpperCase(),t)}}}search(e){if(this.featureMap)return this.featureMap.get(e.toUpperCase())}}class ld{constructor({chr:e,locus:t,accession:i,aliases:n,features:r,sequence:s}){this.chr=e,this.locus=t,this.accession=i,this.aliases=n,this.features=r,this.sequence=s,this.bpLength=s.length}toJSON(){return{gbkURL:this.url}}getSequenceRecord(e){return{chr:this.chr,bpLength:this.bpLength}}get chromosomeNames(){return[this.chr]}getFirstChromosomeName(){return this.chr}get id(){return this.accession}get name(){return this.locus}get initialLocus(){return this.chr}get description(){return this.locus}get infoURL(){return this.url}showWholeGenomeView(){return!1}getHomeChromosomeName(){return this.chr}getChromosomeName(e){return e}getChromosomeDisplayName(e){return this.chr}getChromosome(e){if(e===this.chr)return{name:this.chr,bpLength:this.bpLength}}async loadChromosome(e){return this.getChromosome(e)}async getAliasRecord(e){}getCytobands(e){return[]}getChromosomes(){return[this.getChromosome(this.chr)]}get wgChromosomeNames(){}getGenomeCoordinate(e,t){if(e===this.chr)return t}getChromosomeCoordinate(e){return{chr:this.chr,position:e}}getCumulativeOffset(e){return 0}getGenomeLength(){return this.bpLength}async getSequence(e,t,i){return e===this.chr?this.sequence.substring(t,i):void 0}getSequenceInterval(e,t,i){return e===this.chr?new uc(this.chr,0,this.sequence.length,this.sequence):void 0}}const hd=/\s+/,dd=new Map;async function ud(e){let t=dd.get(e);if(!t){t=function(e){if(!e)return null;const t=mh(e);let i=t.nextLine();const n=i.split(/\s+/);if("LOCUS"!==n[0].toUpperCase())throw Error("Expected `LOCUS` line.  Found: "+i);const r=n[1].trim();let s,o;do{if(i=t.nextLine(),i.startsWith("ACCESSION")){const e=i.split(hd);if(e.length<2)throw Error("Genbank file missing ACCESSION number.");s=e[1].trim()}else if(i.startsWith("ALIASES")){const e=i.split(hd);e.length>1&&(o=e[1].split(","))}}while(i&&!i.startsWith("FEATURES"));const a=s||r,c=function(e,t){const i=[];let n,r,s,o=0;for(;;)if(r=t.nextLine(),""!==r){if(!r||r.startsWith("ORIGIN"))break;if(r.length<6)o<10&&console("Unexpected line in genbank file (skipping): "+r),o++;else if(" "!==r.charAt(5)){let t=r.substring(5,21).trim();s={chr:e,type:t,attributes:{},getAttributeValue:function(e){return this.attributes[e]}},n=r.substring(21),"source"!==t.toLowerCase()&&i.push(s)}else{let t=r.substring(21).trim();if(t.length>0)if(47===t.charCodeAt(0)){if(47===n.charCodeAt(0)){let e=n.split("=",2);if(e.length>1){let t=e[0].length>1?e[0].substring(1):"",i=pd(e[1]);s.attributes[t]=i}}else{const t=n.includes("complement")?"-":"+";s.strand=t;let i=n.replace("join","").replace("order","").replace("complement","").replace("(","").replace(")","");if(i.includes("..")){i=i.replace("<","").replace(">","");const n=fd(i,e,t),r=n[0];s.start=r.start;const o=n[n.length-1];s.end=o.end,n.length>1&&(s.exons=n)}else s.start=parseInt(i)-1,s.end=s.start+1}n=t}else n+=t}}return i}(a,t),l=function(e){let t,i="";for(;(t=e.nextLine())&&!t.startsWith("//");){t=t.trim();const e=t.split(/\s+/);for(let t=1;t<e.length;t++)i+=e[t]}return i}(t);return new ld({chr:a,locus:r,accession:s,aliases:o,features:c,sequence:l})}(await Qs.loadString(e,{})),t.url=e,dd.set(e,t)}return t}function fd(e,t,i){const n=e.split(","),r=[];e.includes("complement");for(const e of n){const n=e.split("..");let s=0;try{s=parseInt(n[0])-1}catch(e){console.error(e)}let o=s+1;n.length>1&&(o=parseInt(n[1])),r.push({chr:t,start:s,end:o,strand:i})}return r.sort((function(e,t){return e.start-t.start})),r}function pd(e){return e.startsWith('"')&&e.endsWith('"')&&(e=e.substring(1,e.length-2)),e}class gd extends Hh{constructor(e,t){super(t),this.config=e,this.searchable=!0}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r}){if(!this.featureSource){const e=await ud(this.config.url);this.featureSource=new cd({genome:this.config.genome,features:e.features,searchableFields:["gene","db_xref","locus_tag","transcript_id"]})}return this.featureSource.getFeatures({chr:e,start:t,end:i})}supportsWholeGenome(){return!1}search(e){return this.featureSource.search(e)}}const md=new Set(["bigwig","bw","bigbed","bb","biginteract","biggenepred","bignarrowpeak"]);function wd(e,t){const i=e.format?e.format.toLowerCase():void 0;return e.features?new cd(e,t):md.has(i)?new Zh(e,t):"tdf"===i?new nd(e,t):"gbk"===i?new gd(e,t):new Ph(e,t)}function bd(e){return(3-e.readingFrame)%3}function Fd(e){return e.cdStart||e.start}function vd(e){return e.cdEnd||e.end}const yd=.25;function Ad(e,t,i){let n=(e.start-t)/i,r=(e.end-t)/i,s=r-n;return s<3&&(s=3,n-=1.5),{px:n,px1:r,pw:s}}function Cd(e,t,i,n,r,s){try{r.save(),r.fillStyle=this.color,r.strokeStyle=this.color;const n=this.getColorForFeature(e);let o,a;r.fillStyle=n,r.strokeStyle=n,"SQUISHED"===this.displayMode&&void 0!==e.row?(o=this.featureHeight/2,a=this.margin+this.squishedRowHeight*e.row):"EXPANDED"===this.displayMode&&void 0!==e.row?(o=this.featureHeight,a=this.margin+this.expandedRowHeight*e.row):(o=this.featureHeight,a=this.margin);const c=s.pixelWidth,l=a+o/2,h=o/2,d=l-h/2,u=e.exons?e.exons.length:0,f=Ad(e,t,i),p=this.arrowSpacing,g="+"===e.strand?1:"-"===e.strand?-1:0;if(0===u){const e=Math.max(0,f.px),t=Math.min(c,f.px1),i=t-e;if(r.fillRect(e,a,i,o),0!==g){r.fillStyle="white",r.strokeStyle="white";for(let i=e+p/2;i<t;i+=p)xo.strokeLine(r,i-2*g,l-2,i,l),xo.strokeLine(r,i-2*g,l+2,i,l);r.fillStyle=n,r.strokeStyle=n}}else{xo.strokeLine(r,f.px+1,l,f.px1-1,l);const u=Math.max(0,f.px)+p/2,m=Math.min(c,f.px1);for(let e=u;e<m;e+=p)xo.strokeLine(r,e-2*g,l-2,e,l),xo.strokeLine(r,e-2*g,l+2,e,l);for(let u=0;u<e.exons.length;u++){const f=e.exons[u];let m,w=Math.round((f.start-t)/i),b=Math.round((f.end-t)/i),F=Math.max(1,b-w);if(!(w+F<0)){if(w>c)break;if(f.utr)r.fillRect(w,d,F,h);else{if(f.cdStart&&(m=Math.round((f.cdStart-t)/i),r.fillRect(w,d,m-w,h),F-=m-w,w=m),f.cdEnd&&(m=Math.round((f.cdEnd-t)/i),r.fillRect(m,d,b-m,h),F-=b-m,b=m),F=Math.max(F,1),r.fillRect(w,a,F,o),void 0!==f.readingFrame&&s.bpPerPixel<yd&&s.sequenceInterval){const i=u>0&&void 0!==e.exons[u-1].readingFrame?e.exons[u-1]:void 0,n=u<e.exons.length-1&&void 0!==e.exons[u+1].readingFrame?e.exons[u+1]:void 0;_d.call(this,r,e.strand,i,f,n,t,s.bpPerPixel,a,o,s.sequenceInterval)}if(F>p+5&&0!==g&&s.bpPerPixel>yd){r.fillStyle="white",r.strokeStyle="white";for(let e=w+p/2;e<b;e+=p)xo.strokeLine(r,e-2*g,l-2,e,l),xo.strokeLine(r,e-2*g,l+2,e,l);r.fillStyle=n,r.strokeStyle=n}}}}}s.drawLabel&&"SQUISHED"!==this.displayMode&&xd.call(this,r,e,f.px,f.px1,a,s.referenceFrame,s)}finally{r.restore()}}function _d(e,t,i,n,r,s,o,a,c,l){const h=["rgb(124,124,204)","rgb(12, 12, 120)"];e.save();const d=(t,i,n,r,d,u)=>{const f=Math.round((i-s)/o),p=Math.round((n-s)/o)-f;let g;if(void 0===r){if(l.hasSequence(i,n)){const e=l.getSequence(i,n);if(e&&3===e.length){const i="+"===t?e:cc(e.split("").reverse().join(""));g=qd[i]}}}else g=r;e.fillStyle="M"===r||"M"===g&&0===u?"#83f902":"STOP"===g?"#ff2101":h[d],e.fillRect(f,a,p,c),g&&(e.save(),((t,i,n,r,s)=>{"STOP"===s&&(s="*");const o=e.measureText(s).width;xo.fillText(e,s,n+(i-o)/2,r-4,{fillStyle:"#ffffff"})})(0,p,f,a+c,g),e.restore());const m=n-i;return m>0&&m<3?{start:i,end:n}:void 0},u=bd(n);let f,p,g,m,w,b=Fd(n),F=vd(n),v=1;if("+"===t){for(u>0&&(b+=u),v=1,w=0,f=b;f<F;w++,f+=3)m=v%2,p=Math.min(F,f+3),g=d(t,f,p,void 0,v%2,w),++v;if(u>0||g){const e=u>0?kd.call(this,t,u,b-u,b,g,i,n,r,l):kd.call(this,t,void 0,void 0,void 0,g,i,n,r,l);if(e){const{left:i,rite:n}=e;i&&d(t,b-u,b,i.aminoAcidLetter,0,void 0),n&&d(t,g.start,g.end,n.aminoAcidLetter,m,void 0)}}}else{for(u>0&&(F-=u),v=1,w=0,w=0,p=F;p>b;w++,p-=3)m=v%2,f=Math.max(b,p-3),g=d(t,f,p,void 0,v%2,w),++v;if(u>0||g){const e=u>0?kd.call(this,t,u,F,F+u,g,i,n,r,l):kd.call(this,t,void 0,void 0,void 0,g,i,n,r,l);if(e){const{left:i,rite:n}=e;n&&d(t,F,F+u,n.aminoAcidLetter,0,void 0),i&&d(t,g.start,g.end,i.aminoAcidLetter,m,void 0)}}}e.restore()}function xd(e,t,i,n,r,s,o){try{e.save();let s=t.name;if(void 0===s&&t.gene&&(s=t.gene.name),void 0===s&&(s=t.id||t.ID),!s||"."===s)return;let a,c=(i+n)/2;"COLLAPSED"===this.displayMode&&"SLANT"===this.labelDisplayMode&&(a={rotate:{angle:45}});const l=function(e,t){return t?e+20:e+25}(r,a);let h=this.getColorForFeature(t),d=this.browser.qtlSelections.hasPhenotype(t.name);const u={textAlign:"SLANT"===this.labelDisplayMode?void 0:"center",fillStyle:h,strokeStyle:h},f=e.measureText(s),p=c-f.width/2,g=c+f.width/2,m=o.rowLastLabelX[t.row]||-Number.MAX_SAFE_INTEGER;(o.labelAllFeatures||p>m||d)&&(o.rowLastLabelX[t.row]=g,"y"===o.axis?(e.save(),xo.labelTransformWithContext(e,c),xo.fillText(e,s,c,l,u,a),e.restore()):(e.clearRect(c-f.width/2-1,l-f.actualBoundingBoxAscent-1,f.width+2,f.actualBoundingBoxAscent+f.actualBoundingBoxDescent+2),xo.fillText(e,s,c,l,u,a)))}finally{e.restore()}}function kd(e,t,i,n,r,s,o,a,c){let l,h,d="",u="",f="";const p={left:void 0,rite:void 0};if("+"===e){if(t){if(u=c.getSequence(i,n),!u)return;if([l,h]=[vd(s)-(3-t),vd(s)],d=c.getSequence(l,h),!d)return;f=d+u,p.left={triplet:f,aminoAcidLetter:qd[f]}}if(r){if(d=c.getSequence(r.start,r.end),!d)return;const e=bd(a),t=Fd(a);if(u=c.getSequence(t,t+e),!u)return;f=d+u,p.rite={triplet:f,aminoAcidLetter:qd[f]}}}else{if(t){if(d=c.getSequence(i,n),void 0===d)return;if([l,h]=[Fd(a),Fd(a)+(3-t)],u=c.getSequence(l,h),void 0===u)return;f=d+u,f=cc(f.split("").reverse().join("")),p.rite={triplet:f,aminoAcidLetter:qd[f]}}if(r){if(u=c.getSequence(r.start,r.end),void 0===u)return;const e=bd(s),t=vd(s);if(d=c.getSequence(t-e,t),void 0===d)return;f=d+u,f=cc(f.split("").reverse().join("")),p.left={triplet:f,aminoAcidLetter:qd[f]}}}return p}const Id=new Set(["nonsense","missense","stop-loss","frameshift","cds-indel"]),Sd=new Set(["coding-synon"]),Ed=new Set(["splice-3","splice-5"]),Nd=new Set(["untranslated-5","untranslated-3"]);function Bd(e,t,i,n,r){var s,o,a,c,l,h,d=Ad(e,t,i),u=this.margin,f=this.snpColors.length;switch(s="squished"===this.displayMode?this.squishedRowHeight:this.expandedRowHeight,this.colorBy){case"function":c=e.func,h=c.split(","),l=h.map((function(e){return Id.has(e)||Ed.has(e)?f-1:Sd.has(e)?f-2:Nd.has(e)?f-3:0})),o=l.reduce((function(e,t){return Math.max(e,t)}));break;case"class":o="deletion"===(a=e.class)?f-1:"mnp"===a?f-2:"microsatellite"===a||"named"===a?f-3:0}r.fillStyle=this.snpColors[o],r.fillRect(d.px,u,d.pw,s)}function Md(e,t,i,n,r){const s="EXPANDED"===this.displayMode?this.expandedRowHeight:this.squishedRowHeight;let o=this.margin;"COLLAPSED"!==this.displayMode&&void 0!==e.row&&(o+=e.row*s);const a=o+.5*s,c=a-.5*s,l=a+.5*s,h=Math.round((e.junction_left-t)/i),d=Math.round((e.junction_right-t)/i);r.beginPath(),r.moveTo(h,a),r.bezierCurveTo(h,c,d,c,d,a),r.lineWidth=1+Math.log(e.num_junction_reads)/Math.log(2),r.strokeStyle="blue",r.stroke();const u=e.spanning_frag_coords;for(let e=0;e<u.length;e++){const n=u[e],s=Math.round((n.left-t)/i),o=Math.round((n.right-t)/i);r.beginPath(),r.moveTo(s,a),r.bezierCurveTo(s,l,o,l,o,a),r.lineWidth=1,r.strokeStyle="purple",r.stroke()}}class Rd extends Hl{static defaults={type:"annotation",maxRows:1e3,displayMode:"EXPANDED",margin:10,featureHeight:14,autoHeight:!1,useScore:!1};constructor(e,t){super(e,t)}init(e){super.init(e),this.labelDisplayMode=e.labelDisplayMode,e._featureSource?(this.featureSource=e._featureSource,delete e._featureSource):"blat"!==e.type&&(this.featureSource=e.featureSource?e.featureSource:wd(e,this.browser.genome)),"FusionJuncSpan"===e.type?(this.render=e.render||Md,this.squishedRowHeight=e.squishedRowHeight||50,this.expandedRowHeight=e.expandedRowHeight||50,this.height=e.height||this.margin+2*this.expandedRowHeight):"snp"===e.type?(this.render=e.render||Bd,this.snpColors=["rgb(0,0,0)","rgb(0,0,255)","rgb(0,255,0)","rgb(255,0,0)"],this.colorBy="function",this.expandedRowHeight=e.expandedRowHeight||10,this.squishedRowHeight=e.squishedRowHeight||5,this.height=e.height||30):(this.render=e.render||Cd,this.arrowSpacing=30,function(e){e.browser.on&&(e.browser.on("trackdragend",t),e.browser.on("trackremoved",i));function t(){e.trackView&&"SQUISHED"!==e.displayMode&&e.trackView.updateViews()}function i(n){e.browser.un&&e===n&&(e.browser.un("trackdragend",t),e.browser.un("trackremoved",i))}}(this),this.squishedRowHeight=e.squishedRowHeight||15,this.expandedRowHeight=e.expandedRowHeight||30,this.height=e.height||this.margin+2*this.expandedRowHeight,e.colorBy&&(e.colorBy.field&&(e.colorTable=e.colorBy.pallete||e.colorBy.palette,e.colorBy=e.colorBy.field),this.colorBy=e.colorBy,e.colorTable?this.colorTable=new ao(e.colorTable):this.colorTable=new oo("Set1")))}async postInit(){if("function"!=typeof this.featureSource.getHeader||(this.header=await this.featureSource.getHeader(),!this.disposed))return this.header&&this.setTrackProperties(this.header),void 0===this.visibilityWindow&&"function"==typeof this.featureSource.defaultVisibilityWindow&&(this.visibilityWindow=await this.featureSource.defaultVisibilityWindow()),this}get searchable(){return this.featureSource.searchable}async search(e){return this.featureSource&&this.featureSource.searchable?this.featureSource.search(e):void 0}get supportsWholeGenome(){return void 0!==this.config.supportsWholeGenome?this.config.supportsWholeGenome:this.featureSource&&"function"==typeof this.featureSource.supportsWholeGenome?this.featureSource.supportsWholeGenome():!(void 0!==this.visibilityWindow||!1!==this.config.indexed&&this.config.indexURL)||void 0}async getFeatures(e,t,i,n){const r=this.visibilityWindow;return this.featureSource.getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r})}computePixelHeight(e){if("COLLAPSED"===this.displayMode)return this.margin+this.expandedRowHeight;{let t=0;if(e&&"function"==typeof e.forEach)for(let i of e)i.row&&i.row>t&&(t=i.row);return this.margin+(t+1)*("SQUISHED"===this.displayMode?this.squishedRowHeight:this.expandedRowHeight)}}draw(e){const{features:t,context:i,bpPerPixel:n,bpStart:r,bpEnd:s,pixelWidth:o,pixelHeight:a,referenceFrame:c}=e;if(n<yd&&(e.sequenceInterval=this.browser.genome.getSequenceInterval(c.chr,r,s)),this.isMergedTrack||xo.fillRect(i,0,e.pixelTop,o,a,{fillStyle:"rgb(255, 255, 255)"}),t){const c=[];e.rowLastX=[],e.rowLastLabelX=[];for(let i of t)if(i.start>r&&i.end<s){const t="COLLAPSED"===this.displayMode?0:i.row||0;c[t]?c[t]++:c[t]=1,e.rowLastX[t]=-Number.MAX_SAFE_INTEGER,e.rowLastLabelX[t]=-Number.MAX_SAFE_INTEGER}const l=o/Math.max(1,Math.max(...c.filter((e=>!isNaN(e)))));let h=[];const d=[];for(let o of t){if(o.end<r)continue;if(o.start>s)break;"COLLAPSED"===this.displayMode&&this.browser.qtlSelections.hasPhenotype(o.name)&&d.push(o);const t="COLLAPSED"===this.displayMode?0:o.row;e.drawLabel=e.labelAllFeatures||l>10;const c=Math.ceil((o.end-r)/n),u=h[t];if(!u||c>u){this.render.call(this,o,r,n,a,i,e);const s=Math.floor((o.start-r)/n);u&&s-u<=0&&(i.globalAlpha=.5,xo.strokeLine(i,s,0,s,a,{strokeStyle:"rgb(255, 255, 255)"}),i.globalAlpha=1),h[t]=c}}for(let t of d)e.drawLabel=!0,this.render.call(this,t,r,n,a,i,e)}else console.log("No feature list")}clickedFeatures(e){const t=e.y-this.margin,i=super.clickedFeatures(e);let n;switch(this.displayMode){case"SQUISHED":n=Math.floor(t/this.squishedRowHeight);break;case"EXPANDED":n=Math.floor(t/this.expandedRowHeight);break;default:n=void 0}return i.filter((function(e){return void 0===n||void 0===e.row||n===e.row}))}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=e.genomicLocation,n=[];for(let e of t){const t=e._f||e,r="function"==typeof t.popupData?t.popupData(i):this.extractPopupData(t);if(r){n.length>0&&n.push("<hr/><hr/>");const s=this.infoURL||this.config.infoURL;for(let t of r)if(n.push(t),s&&t.name&&"name"===t.name.toLowerCase()&&t.value&&Mt(t.value)&&!t.value.startsWith("<")){const i=s.replace("$$",e.name);t.value=`<a target=_blank href=${i}>${t.value}</a>`}const o="gff"===this.config.format||"gff3"===this.config.format||"gtf"===this.config.format;if(t.exons&&t.exons.length>1)for(let e=0;e<t.exons.length;e++){const r=t.exons[e];if(i>=r.start&&i<=r.end){const i=o?r.number:"-"===t.strand?t.exons.length-e:e+1;i&&(n.push("<hr/>"),n.push({name:"Exon Number",value:i}));break}}}}return n}menuItemList(){const e=[];if(this.render===Bd){e.push("<hr/>");for(const i of["function","class"]){const n=Bt(Dl(`Color by ${i}`,i===this.colorBy));function r(){this.colorBy=i,this.trackView.repaintViews()}e.push({object:n,click:r})}}e.push("<hr/>");const t={COLLAPSED:"Collapse",SQUISHED:"Squish",EXPANDED:"Expand"};for(const s of["COLLAPSED","SQUISHED","EXPANDED"]){const o=Bt(Dl(t[s],s===this.displayMode));function a(){this.displayMode=s,this.config.displayMode=s,this.trackView.checkContentHeight(),this.trackView.repaintViews()}e.push({object:o,click:a})}return e}contextMenuItemList(e){const t=this.clickedFeatures(e);if(void 0===t||0===t.length)return;t.length>1&&t.sort(((e,t)=>t.end-t.start-(e.end-e.start)));const i=t[0];if(i.end-i.start<=1e6){const e=[{label:"View feature sequence",click:async()=>{let e=await this.browser.genome.getSequence(i.chr,i.start,i.end);e?"-"===i.strand&&(e=lc(e)):e="Unknown sequence",this.browser.alert.present(e)}}];return Za()&&void 0!==navigator.clipboard&&e.push({label:"Copy feature sequence",click:async()=>{let e=await this.browser.genome.getSequence(i.chr,i.start,i.end);e?"-"===i.strand&&(e=lc(e)):e="Unknown sequence";try{await navigator.clipboard.writeText(e)}catch(e){console.error(e),this.browser.alert.present(`error copying sequence to clipboard ${e}`)}}}),e.push("<hr/>"),e}}description(){if(Bd===this.render){let e="<html>"+this.name+"<hr/>";return e+="<em>Color By Function:</em><br>",e+='<span style="color:red">Red</span>: Coding-Non-Synonymous, Splice Site<br>',e+='<span style="color:green">Green</span>: Coding-Synonymous<br>',e+='<span style="color:blue">Blue</span>: Untranslated<br>',e+='<span style="color:black">Black</span>: Intron, Locus, Unknown<br><br>',e+="<em>Color By Class:</em><br>",e+='<span style="color:red">Red</span>: Deletion<br>',e+='<span style="color:green">Green</span>: MNP<br>',e+='<span style="color:blue">Blue</span>: Microsatellite, Named<br>',e+='<span style="color:black">Black</span>: Indel, Insertion, SNP',e+="</html>",e}return super.description()}getColorForFeature(e){const t=e._f||e;let i;if(e.name&&this.browser.qtlSelections.hasPhenotype(e.name))i=this.browser.qtlSelections.colorForGene(e.name);else if(this.altColor&&"-"===t.strand)i="function"==typeof this.altColor?this.altColor(t):this.altColor;else if(this.color)i="function"==typeof this.color?this.color(t):this.color;else if(this.colorBy){const e=t.getAttributeValue?t.getAttributeValue(this.colorBy):t[this.colorBy];i=this.colorTable.getColor(e)}else t.color&&(i=t.color);if(i||(i="rgb(0, 0, 150)"),t.alpha&&1!==t.alpha)i=_s.addAlpha(i,t.alpha);else if(this.useScore&&t.score&&!Number.isNaN(t.score)){const e=function(e,t,i){const n=(t-e)/9,r=Math.floor((i-e)/n);return Math.min(1,.2+.8*r/9)}(this.config.min?this.config.min:this.viewLimitMin?this.viewLimitMin:0,this.config.max?this.config.max:this.viewLimitMax?this.viewLimitMax:1e3,t.score);t.alpha=e,i=_s.addAlpha(i,e)}return i}dispose(){this.trackView=void 0}}class Dd{constructor(t){if(this.config=t,this.browser=t.browser,this.columnFormat=t.columnFormat,this.tableRowSelectionList=[],this.tableDOM=e({class:"igv-roi-table"}),t.width){let[e]=t.width.split("px");e=parseInt(e,10),this.tableDOM.style.width=`${Math.min(e,1600)}px`}t.parent.appendChild(this.tableDOM),this.headerDOM=t,this.tableColumnTitles=this.tableDOM,this.tableRowContainer=this.tableDOM,this.footerDOM=t.gotoButtonHandler}set headerDOM({browser:t,parent:i,headerTitle:n,dismissHandler:r}){const s=e();this.tableDOM.appendChild(s);const o=e();s.appendChild(o),o.innerHTML=n;const a=e();s.appendChild(a),a.appendChild(l("times")),this.boundDismissHandler=function(e){e.stopPropagation(),r()}.bind(this),a.addEventListener("click",this.boundDismissHandler);const{y:c}=t.root.getBoundingClientRect(),{y:h}=i.getBoundingClientRect(),d=-(h-c);p(this.tableDOM,s,{minX:0,minY:d}),this.tableDOM.style.display="none",this._headerDOM=s}set tableColumnTitles(t){const i=e({class:"igv-roi-table-column-titles"});t.appendChild(i);for(const{label:t,width:n}of this.columnFormat){const r=e();i.appendChild(r),r.style.width=n,r.innerText=t}this._tableColumnTitlesDOM=i}get tableColumnTitles(){return this._tableColumnTitlesDOM}set tableRowContainer(t){const i=e({class:"igv-roi-table-row-container"});t.appendChild(i),this._tableRowContainerDOM=i}get tableRowContainer(){return this._tableRowContainerDOM}set footerDOM(t){const i=e();this.tableDOM.appendChild(i);const n=e({class:"igv-roi-table-button"});i.appendChild(n),n.id="igv-roi-table-view-button",n.textContent="Go To",n.style.pointerEvents="none",this._footerDOM=i,this.gotoButton=n,this.boundGotoButtonHandler=t.bind(this),this.gotoButton.addEventListener("click",this.boundGotoButtonHandler)}tableRowDOMHelper(e){e.addEventListener("mousedown",(t=>{t.stopPropagation(),e.classList.toggle("igv-roi-table-row-selected"),e.classList.contains("igv-roi-table-row-selected")?e.classList.remove("igv-roi-table-row-hover"):e.classList.add("igv-roi-table-row-hover"),this.setTableRowSelectionState(e.classList.contains("igv-roi-table-row-selected"))})),e.addEventListener("mouseover",(t=>{e.classList.contains("igv-roi-table-row-selected")?e.classList.remove("igv-roi-table-row-hover"):e.classList.add("igv-roi-table-row-hover")})),e.addEventListener("mouseout",(t=>{e.classList.remove("igv-roi-table-row-hover")}))}clearTable(){const e=this.tableRowContainer.querySelectorAll(".igv-roi-table-row");for(let t of e)t.remove()}setTableRowSelectionState(e){e?this.tableRowSelectionList.push(1):this.tableRowSelectionList.pop(),this.gotoButton.style.pointerEvents=this.tableRowSelectionList.length>0?"auto":"none"}present(){this.tableDOM.style.left="0px";const{y:e}=this.browser.root.getBoundingClientRect(),{y:t}=this.config.parent.getBoundingClientRect();this.tableDOM.style.top=e-t+"px",this.tableDOM.style.display="flex"}dismiss(){this.tableDOM.style.display="none"}isVisible(){return"none"!==this.tableDOM.style.display}dispose(){this.tableDOM.innerHTML="",this.tableDOM.remove();for(const e of Object.keys(this))this[e]=void 0;document.removeEventListener("click",this.boundDismissHandler)}}class Td extends Dd{constructor(e){super(Object.assign({width:"1024px"},e)),this.descriptionDOM=e}set descriptionDOM(t){if(t.description){let i;i=e({class:"igv-roi-table-description"}),this.tableDOM.insertBefore(i,this.tableColumnTitles),i.style.height="auto",i.innerHTML="BLAT result for query sequence:",i=e({class:"igv-roi-table-description"}),this.tableDOM.insertBefore(i,this.tableColumnTitles),i.style.height="auto",i.style.maxHeight="128px",i.innerHTML=t.description,i=e({class:"igv-roi-table-goto-explainer"}),this.tableDOM.insertBefore(i,this.tableColumnTitles),i.innerHTML="Select one or more rows and click Go To to view the regions"}}tableRowDOM(t){const i=e({class:"igv-roi-table-row"}),n=t.map((e=>isFinite(e)?Rt(e):e));for(let t=0;t<n.length;t++){const r=e();i.appendChild(r);const s=this.columnFormat[t];r.style.width=s.width||"fit-content",r.innerText=n[t]}return this.tableRowDOMHelper(i),i}renderTable(e){if(Array.from(this.tableRowContainer.querySelectorAll(".igv-roi-table-row")).forEach((e=>e.remove())),e.length>0)for(let t of e){const e=this.tableRowDOM(t);this.tableRowContainer.appendChild(e)}}static getColumnFormatConfiguration(){return[{label:"chr",width:"7%"},{label:"start",width:"12%"},{label:"end",width:"12%"},{label:"strand",width:"5%"},{label:"score",width:"5%"},{label:"match",width:"5%"},{label:"mis-match",width:"7%"},{label:"rep. match",width:"7%"},{label:"N's",width:"3%"},{label:"Q gap count",width:"9%"},{label:"Q gap bases",width:"9%"},{label:"T gap count",width:"9%"},{label:"T gap bases",width:"9%"}]}static gotoButtonHandler(e){e.stopPropagation();const t=this.tableDOM.querySelectorAll(".igv-roi-table-row-selected"),i=[];for(const e of t){const t=[];e.querySelectorAll("div").forEach((e=>t.push(e.innerText)));const[n,r,s]=t;i.push(`${n}:${r}-${s}`)}for(const e of this.tableDOM.querySelectorAll(".igv-roi-table-row"))e.classList.remove("igv-roi-table-row-selected");this.setTableRowSelectionState(!1),this.browser.search(i.join(" "))}}const Ld="https://igv.org/services/blatUCSC.php";async function zd({url:e,userSeq:t,db:i}){if(e=e||Ld,!i)throw Error("Blat database is not defined");const n=await async function(e="",t,i){const n=new URLSearchParams;n.append("userSeq",t),n.append("db",i);const r=await fetch(e,{method:"post",body:n});return r.json()}(e,t,i);n.fields;return n.blat.map(Kc)}const Hd=25e3;class Pd extends Rd{constructor(e,t){super(e,t),this.name||(this.name="Blat Results"),this.sequence=e.sequence,this.table=void 0,e.features&&(this._features=e.features,this.featureSource=new cd({features:e.features},this.browser.genome),delete e.features)}async postInit(){if(!this.featureSource){const e=this.browser.genome.id,t=this.browser.config.blatServerURL,i=await zd({url:t,userSeq:this.sequence,db:e});this._features=i,this.featureSource=new cd({features:i},this.browser.genome)}}openTableView(){if(void 0===this.table){const e=this._features.map((e=>[e.chr,e.start+1,e.end,e.strand,e.score,e.matches,e.misMatches,e.repMatches,e.nCount,e.qNumInsert,e.qBaseInsert,e.tNumInsert,e.tBaseInsert])),t={browser:this.browser,parent:this.browser.columnContainer,headerTitle:this.config.title,description:this.sequence,dismissHandler:()=>{this.table.dismiss(),this.table.dispose(),this.table=void 0},columnFormat:Td.getColumnFormatConfiguration(),gotoButtonHandler:Td.gotoButtonHandler};this.table=new Td(t),this.table.renderTable(e)}this.table.present()}menuItemList(){const e=super.menuItemList();return e.push("<hr/>"),e.push({label:"Open table view",click:function(){this.openTableView()}}),e}dispose(){super.dispose(),this.table&&this.table.popover.parentElement.removeChild(this.table.popover)}}async function Od({sequence:e,browser:t,name:i,title:n}){if(e.length>Hd)t.alert.present(`Sequence size exceeds maximum allowed length (${e.length} > 25000)`);else try{const r=t.genome.id,s=t.config.blatServerURL||"https://igv.org/services/blatUCSC.php",o={type:"blat",name:i||"blat results",title:n||"blat results",sequence:e,altColor:"rgb(176, 176, 236)",color:"rgb(236, 176, 176)",searchable:!1,features:await zd({url:s,userSeq:e,db:r})};(await t.loadTrack(o)).openTableView()}catch(e){t.alert.present(`Error performing blat search:  ${e}`)}}const Ud=Number.MIN_SAFE_INTEGER,qd={TTT:"F",TTC:"F",TTA:"L",TTG:"L",CTT:"L",CTC:"L",CTA:"L",CTG:"L",ATT:"I",ATC:"I",ATA:"I",ATG:"M",GTT:"V",GTC:"V",GTA:"V",GTG:"V",TCT:"S",TCC:"S",TCA:"S",TCG:"S",CCT:"P",CCC:"P",CCA:"P",CCG:"P",ACT:"T",ACC:"T",ACA:"T",ACG:"T",GCT:"A",GCC:"A",GCA:"A",GCG:"A",TAT:"Y",TAC:"Y",TAA:"STOP",TAG:"STOP",CAT:"H",CAC:"H",CAA:"Q",CAG:"Q",AAT:"N",AAC:"N",AAA:"K",AAG:"K",GAT:"D",GAC:"D",GAA:"E",GAG:"E",TGT:"C",TGC:"C",TGA:"STOP",TGG:"W",CGT:"R",CGC:"R",CGA:"R",CGG:"R",AGT:"S",AGC:"S",AGA:"R",AGG:"R",GGT:"G",GGC:"G",GGA:"G",GGG:"G"},Qd={},Vd=["A","G","C","T","Y","R","W","S","K","M","D","V","H","B","N","X"],jd=["T","C","G","A","R","Y","W","S","M","K","H","B","D","V","N","X"];for(let IA=0;IA<Vd.length;IA++)Qd[Vd[IA]]=jd[IA],Qd[Vd[IA].toLowerCase()]=jd[IA].toLowerCase();const Wd=115;class Gd{constructor(e,t){this.config=e,this.browser=t,this.type="sequence",this.removable=!0===e.removable,this.name=e.name,this.id=e.id,this.sequenceType=e.sequenceType||"dna",this.disableButtons=!1,this.order=e.order||Ud,this.ignoreTrackMenu=!1,this.reversed=!0===e.reversed,this.frameTranslate=!0===e.frameTranslate,this.height=this.frameTranslate?Wd:25,e.url&&(e.fastaURL=e.url),e.fastaURL||(this.id=e.id||"sequence")}menuItemList(){return[{name:this.reversed?"Forward":"Reverse",click:()=>{this.reversed=!this.reversed,this.trackView.repaintViews()}},{name:this.frameTranslate?"Close Translation":"Three-frame Translate",click:()=>{if(this.frameTranslate=!this.frameTranslate,this.frameTranslate){for(let e of this.trackView.viewports)e.setContentHeight(Wd);this.trackView.setTrackHeight(Wd)}else{for(let e of this.trackView.viewports)e.setContentHeight(25);this.trackView.setTrackHeight(25)}this.trackView.repaintViews()}}]}contextMenuItemList(e){const t=e.viewport;if(t.referenceFrame.bpPerPixel<=1){const e=t.getWidth()*t.referenceFrame.bpPerPixel,i=t.referenceFrame.chr,n=Math.floor(t.referenceFrame.start),r=Math.ceil(n+e),s=[{label:this.reversed?"View visible sequence (reversed)...":"View visible sequence...",click:async()=>{let e=await this.browser.genome.getSequence(i,n,r);e?this.reversed&&(e=lc(e)):e="Unknown sequence",this.browser.alert.present(e)}}];return Za()&&s.push({label:"Copy visible sequence",click:async()=>{let e=await this.browser.genome.getSequence(i,n,r);e?this.reversed&&(e=lc(e)):e="Unknown sequence";try{await navigator.clipboard.writeText(e)}catch(e){console.error(e),this.browser.alert.present(`error copying sequence to clipboard ${e}`)}}}),s.push({label:"BLAT read sequence",click:async()=>{let e=await this.browser.genome.getSequence(i,n,r);if(e){this.reversed&&(e=lc(e));const t=`blat: ${i}:${n+1}-${r}`,s=`blat: ${i}:${n+1}-${r}`;Od({sequence:e,browser:this.browser,name:t,title:s})}}}),s.push("<hr/>"),s}}translateSequence(e){const t=[[],[],[]];for(let i of[0,1,2]){let n=i;for(;e.length-n>=3;){let r=e.slice(n,n+3);this.reversed&&(r=r.split("").reverse().join(""));const s=qd[r.toUpperCase()]||"";t[i].push({codons:r,aminoA:s}),n+=3}}return t}async getSequenceSource(){return this.config.fastaURL?(this.fasta||(this.fasta=new $d(this.config,this.browser.genome),await this.fasta.init()),this.fasta):this.browser.genome}async getFeatures(e,t,i,n){if(t=Math.floor(t),i=Math.floor(i),n&&n>10)return null;{const n=await this.getSequenceSource();return{bpStart:t,sequence:await n.getSequence(e,t,i)}}}draw(e){const t=e.context;if(e.features){let i=e.features.sequence;if(!i)return;this.reversed&&(i=i.split("").map((function(e){return Qd[e]})).join(""));const n=e.features.bpStart,r=1+e.bpStart+e.pixelWidth*e.bpPerPixel;for(let s=Math.floor(e.bpStart);s<=r;s++){const r=Math.floor(s-n);if(r>=0&&r<i.length){const n=(s-e.bpStart)/e.bpPerPixel,o=1/e.bpPerPixel,a=i[r],c=this.fillColor(a.toUpperCase());if(e.bpPerPixel>.1)xo.fillRect(t,n,5,o,10,{fillStyle:c});else{const i=n+.5*(o-t.measureText(a).width);"y"===e.axis?(t.save(),xo.labelTransformWithContext(t,i),xo.strokeText(t,a,i,15,{strokeStyle:c}),t.restore()):xo.strokeText(t,a,i,15,{strokeStyle:c})}}}if(this.frameTranslate){let r=25;const s=this.translateSequence(i);for(let i=0;i<s.length;i++){const o=s[i];for(let s=0;s<o.length;s++){let a=0==s%2?"rgb(160,160,160)":"rgb(224,224,224)";const c=o[s],l=n+i+3*s-e.bpStart,h=Math.floor(l/e.bpPerPixel),d=Math.floor((l+3)/e.bpPerPixel),u=Math.round((h+d)/2);if(d<0)continue;if(h>e.pixelWidth)break;let f=c.aminoA;c.aminoA.indexOf("STOP")>-1?(a="rgb(255, 0, 0)",f="STOP"):"M"===c.aminoA&&(a="rgb(0, 153, 0)",f="START"),xo.fillRect(t,h,r,d-h,25,{fillStyle:a}),e.bpPerPixel<=.1&&xo.strokeText(t,f,u-t.measureText(f).width/2,r+15)}r+=30}}}}get supportsWholeGenome(){return!1}computePixelHeight(e){return this.height=this.frameTranslate?Wd:25,this.height}fillColor(e){return this.color?this.color:"dna"===this.sequenceType?this.browser.nucleotideColors[e]||"gray":"rgb(0, 0, 150)"}getState(){const e={type:"sequence"};return this.order!==Ud&&(e.order=this.order),this.reversed&&(e.revealed=!0),e}}class $d{constructor(e,t){this.config=e,this.genome=t}async init(){this.fasta=await Bc(this.config),this.chrNameMap=new Map;for(let e of this.fasta.chromosomeNames)this.chrNameMap.set(this.genome.getChromosomeName(e),e)}async getSequence(e,t,i){const n=this.chrNameMap.has(e)?this.chrNameMap.get(e):e;return this.fasta.getSequence(n,t,i)}}class Kd{constructor(e,t,i,n){this.guid=s(),this.trackView=e,this.referenceFrame=i,this.browser=e.browser,this.$viewport=Bt('<div class="igv-viewport">'),t.appendChild(this.$viewport.get(0)),e.track.height&&(this.$viewport.get(0).style.height=`${e.track.height}px`),e.track instanceof Gd&&(this.alert=new La(this.$viewport.get(0))),this.contentTop=0,this.contentHeight=this.$viewport.height(),this.$viewport.width(n),this.initializationHelper()}initializationHelper(){}showMessage(e){this.messageDiv||(this.messageDiv=document.createElement("div"),this.messageDiv.className="igv-viewport-message",this.$viewport.append(Bt(this.messageDiv))),this.messageDiv.textContent=e,this.messageDiv.style.display="inline-block"}hideMessage(e){this.messageDiv&&(this.messageDiv.style.display="none")}setTrackLabel(e){}startSpinner(){}stopSpinner(){}checkZoomIn(){return!0}shift(){}setTop(e){this.contentTop=e,this.$viewport.height()}async loadFeatures(){}clearCache(){}repaint(){}draw(e,t,i){console.log("Viewport - draw(drawConfiguration, features, roiFeatures)")}checkContentHeight(e){let t=this.trackView.track;if(e=e||this.cachedFeatures,"FILL"===t.displayMode)this.setContentHeight(this.$viewport.height());else if("function"==typeof t.computePixelHeight&&e&&e.length>0){let i=t.computePixelHeight(e);i!==this.contentHeight&&this.setContentHeight(i)}}getContentHeight(){return this.contentHeight}setContentHeight(e){this.contentHeight=e}isLoading(){return!1}saveSVG(){}isVisible(){return this.$viewport.width()}setWidth(e){this.$viewport.width(e)}getWidth(){return this.$viewport.width()}getContentTop(){return this.contentTop}containsPosition(e,t){console.log("Viewport - containsPosition(chr, position)")}addMouseHandlers(){}removeMouseHandlers(){}dispose(){this.$viewport.get(0).remove();for(let e of Object.keys(this))this[e]=void 0}}
/*!!
     *  Canvas 2 Svg v1.0.19
     *  A low level canvas to SVG converter. Uses a mock canvas context to build an SVG document.
     *
     *  Licensed under the MIT license:
     *  http://www.opensource.org/licenses/mit-license.php
     *
     *  Author:
     *  Kerry Liu
     *
     *  Copyright (c) 2014 Gliffy Inc.
     */function Yd(e,t){var i,n=Object.keys(t);for(i=0;i<n.length;i++)e=e.replace(new RegExp("\\{"+n[i]+"\\}","gi"),t[n[i]]);return e}function Xd(e){var t,i,n;if(!e)throw new Error("cannot create a random attribute name for an undefined object");t="ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz",i="";do{for(i="",n=0;n<12;n++)i+=t[Math.floor(51*Math.random())]}while(e[i]);return i}function Zd(e){var t={alphabetic:"alphabetic",hanging:"hanging",top:"text-before-edge",bottom:"text-after-edge",middle:"central"};return t[e]||t.alphabetic}function Jd(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]);return[e[0]/t,e[1]/t]}const eu=function(e,t){var i,n,r,s={};for(e=e.split(","),t=t||10,i=0;i<e.length;i+=2)n="&"+e[i+1]+";",r=parseInt(e[i],t),s[n]="&#"+r+";";return s["\\xa0"]="&#160;",s}("50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro",32),tu={strokeStyle:{svgAttr:"stroke",canvas:"#000000",svg:"none",apply:"stroke"},fillStyle:{svgAttr:"fill",canvas:"#000000",svg:null,apply:"fill"},lineCap:{svgAttr:"stroke-linecap",canvas:"butt",svg:"butt",apply:"stroke"},lineJoin:{svgAttr:"stroke-linejoin",canvas:"miter",svg:"miter",apply:"stroke"},miterLimit:{svgAttr:"stroke-miterlimit",canvas:10,svg:4,apply:"stroke"},lineWidth:{svgAttr:"stroke-width",canvas:1,svg:1,apply:"stroke"},globalAlpha:{svgAttr:"opacity",canvas:1,svg:1,apply:"fill stroke"},font:{canvas:"10px sans-serif"},shadowColor:{canvas:"#000000"},shadowOffsetX:{canvas:0},shadowOffsetY:{canvas:0},shadowBlur:{canvas:0},textAlign:{canvas:"start"},textBaseline:{canvas:"alphabetic"},lineDash:{svgAttr:"stroke-dasharray",canvas:[],svg:null,apply:"stroke"}};class iu{constructor(e,t){this.__root=e,this.__ctx=t}addColorStop(e,t){var i,n=this.__ctx.__createElement("stop");n.setAttribute("offset",e),t&&-1!==t.indexOf("rgba")?(i=/rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi.exec(t),n.setAttribute("stop-color",Yd("rgb({r},{g},{b})",{r:i[1],g:i[2],b:i[3]})),n.setAttribute("stop-opacity",i[4])):n.setAttribute("stop-color",t),this.__root.appendChild(n)}}class nu{constructor(e,t){this.__root=e,this.__ctx=t}}class ru{constructor(e){if(!(this instanceof ru))return new ru(e);if(this.config=e,this.width=e.width,this.height=e.height,this.enableMirroring=e.enableMirroring||!1,this.canvas=this,this.__document=document,e.ctx?this.__ctx=e.ctx:(this.__canvas=this.__document.createElement("canvas"),this.__ctx=this.__canvas.getContext("2d")),this.isSVG=!0,this.__setDefaultStyles(),this.__stack=[this.__getStyleState()],this.__groupStack=[],this.__root=this.__createElement("svg"),this.__root.setAttribute("width",this.width),this.__root.setAttribute("height",this.height),this.__root.setAttribute("overflow","visible"),e.viewbox){const t=e.viewbox.x+" "+e.viewbox.y+" "+e.viewbox.width+" "+e.viewbox.height;this.__root.setAttribute("viewBox",t),this.viewbox=e.viewbox}this.__ids={},this.__defs=this.__createElement("defs"),this.__root.appendChild(this.__defs),this.multiLocusGap=e.multiLocusGap;let t={id:"svg_output_backdrop",width:"100%",height:"100%",fill:e.backdropColor||"white"},i=this.__createElement("rect",t);this.__root.appendChild(i),this.__rootGroup=this.__createElement("g",{id:"root-group"}),this.__root.appendChild(this.__rootGroup),this.__currentElement=this.__rootGroup}setWidth(e){this.width=e,this.__root.setAttribute("width",this.width);const t=this.config.viewbox.x+" "+this.config.viewbox.y+" "+e+" "+this.config.viewbox.height;this.__root.setAttribute("viewBox",t)}setHeight(e){this.height=e,this.__root.setAttribute("height",this.height);const t=this.config.viewbox.x+" "+this.config.viewbox.y+" "+this.config.viewbox.width+" "+e;this.__root.setAttribute("viewBox",t)}__createElement(e,t,i){void 0===t&&(t={});let n=this.__document.createElementNS("http://www.w3.org/2000/svg",e);i&&(n.setAttribute("fill","none"),n.setAttribute("stroke","none"));for(let e of Object.keys(t))n.setAttribute(e,t[e]);return n}__setDefaultStyles(){var e,t,i=Object.keys(tu);for(e=0;e<i.length;e++)this[t=i[e]]=tu[t].canvas}__applyStyleState(e){var t,i,n=Object.keys(e);for(t=0;t<n.length;t++)this[i=n[t]]=e[i]}__getStyleState(){var e,t,i={},n=Object.keys(tu);for(e=0;e<n.length;e++)i[t=n[e]]=this[t];return i}__applyStyleToCurrentElement(e){var t=this.__currentElement,i=this.__currentElementsToStyle;i&&(t.setAttribute(e,""),t=i.element,i.children.forEach((function(t){t.setAttribute(e,"")})));var n,r,s,o,a,c=Object.keys(tu);for(n=0;n<c.length;n++)if(r=tu[c[n]],s=this[c[n]],r.apply)if(s instanceof nu){if(s.__ctx)for(;s.__ctx.__defs.childNodes.length;)o=s.__ctx.__defs.childNodes[0].getAttribute("id"),this.__ids[o]=o,this.__defs.appendChild(s.__ctx.__defs.childNodes[0]);t.setAttribute(r.apply,Yd("url(#{id})",{id:s.__root.getAttribute("id")}))}else if(s instanceof iu)t.setAttribute(r.apply,Yd("url(#{id})",{id:s.__root.getAttribute("id")}));else if(r&&-1!==r.apply.indexOf(e)&&r.svg!==s)if("stroke"!==r.svgAttr&&"fill"!==r.svgAttr||!s||-1===s.indexOf("rgba")){var l=r.svgAttr;if("globalAlpha"===c[n]&&(l=e+"-"+r.svgAttr,t.getAttribute(l)))continue;t.setAttribute(l,s)}else{a=/rgba\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?\.?\d*)\s*\)/gi.exec(s),t.setAttribute(r.svgAttr,Yd("rgb({r},{g},{b})",{r:a[1],g:a[2],b:a[3]}));var h=a[4],d=this.globalAlpha;null!=d&&(h*=d),t.setAttribute(r.svgAttr+"-opacity",h)}}__closestGroupOrSvg(e){return"g"===(e=e||this.__currentElement).nodeName||"svg"===e.nodeName?e:this.__closestGroupOrSvg(e.parentNode)}getSerializedSvg(e){var t,i,n,r,s,o=(new XMLSerializer).serializeToString(this.__root);if(e)for(t=Object.keys(eu),i=0;i<t.length;i++)n=t[i],r=eu[n],(s=new RegExp(n,"gi")).test(o)&&(o=o.replace(s,r));return o}getSvg(){return this.__root}saveWithTranslationAndClipRect(e,t,i,n,r,s){const o=`${e}_clip_rect`;let a=this.__createElement("clipPath",{id:o});this.__defs.appendChild(a);const c={x:"0",y:s.toString(),width:n.toString(),height:r.toString()};a.appendChild(this.__createElement("rect",c));const l=this.__createElement("g");l.setAttribute("transform",Yd("translate({x},{y})",{x:t,y:i})),l.setAttribute("clip-path",Yd("url(#{id})",{id:o}));const h=this.__closestGroupOrSvg();h.appendChild(l),this.__groupStack.push(h),this.__currentElement=l,this.__stack.push(this.__getStyleState())}save(){var e=this.__createElement("g"),t=this.__closestGroupOrSvg();this.__groupStack.push(t),t.appendChild(e),this.__currentElement=e,this.__stack.push(this.__getStyleState())}restore(){this.__currentElement=this.__groupStack.pop(),this.__currentElementsToStyle=null,this.__currentElement||(this.__currentElement=this.__root.childNodes[1]);var e=this.__stack.pop();this.__applyStyleState(e)}__addTransform(e){var t=this.__closestGroupOrSvg();if(t.childNodes.length>0){"path"===this.__currentElement.nodeName&&(this.__currentElementsToStyle||(this.__currentElementsToStyle={element:t,children:[]}),this.__currentElementsToStyle.children.push(this.__currentElement),this.__applyCurrentDefaultPath());var i=this.__createElement("g");t.appendChild(i),this.__currentElement=i}var n=this.__currentElement.getAttribute("transform");n?n+=" ":n="",n+=e,this.__currentElement.setAttribute("transform",n)}addTrackGroupWithTranslationAndClipRect(e,t,i,n,r,s){const o=e+"_clip_rect";let a=this.__createElement("clipPath",{id:o});this.__defs.appendChild(a),a.appendChild(this.__createElement("rect",{x:"0",y:s.toString(),width:n.toString(),height:r.toString()}));let c=this.__createElement("g");this.__rootGroup.appendChild(c),c.setAttribute("transform",Yd("translate({x},{y})",{x:t,y:i})),c.setAttribute("id",e+"_group"),c.setAttribute("clip-path",Yd("url(#{id})",{id:o})),this.__currentElement=c}scale(e,t){void 0===t&&(t=e),this.__addTransform(Yd("scale({x},{y})",{x:e,y:t}))}rotate(e){var t=180*e/Math.PI;this.__addTransform(Yd("rotate({angle},{cx},{cy})",{angle:t,cx:0,cy:0}))}translate(e,t){this.__addTransform(Yd("translate({x},{y})",{x:e,y:t}))}transform(e,t,i,n,r,s){this.__addTransform(Yd("matrix({a},{b},{c},{d},{e},{f})",{a:e,b:t,c:i,d:n,e:r,f:s}))}beginPath(){var e;this.__currentDefaultPath="",this.__currentPosition={},e=this.__createElement("path",{},!0),this.__closestGroupOrSvg().appendChild(e),this.__currentElement=e}__applyCurrentDefaultPath(){var e=this.__currentElement;"path"===e.nodeName?e.setAttribute("d",this.__currentDefaultPath):console.error("Attempted to apply path command to node",e.nodeName)}__addPathCommand(e){this.__currentDefaultPath+=" ",this.__currentDefaultPath+=e}moveTo(e,t){"path"!==this.__currentElement.nodeName&&this.beginPath(),this.__currentPosition={x:e,y:t},this.__addPathCommand(Yd("M {x} {y}",{x:e,y:t}))}closePath(){this.__currentDefaultPath&&this.__addPathCommand("Z")}lineTo(e,t){this.__currentPosition={x:e,y:t},this.__currentDefaultPath&&this.__currentDefaultPath.indexOf("M")>-1?this.__addPathCommand(Yd("L {x} {y}",{x:e,y:t})):this.__addPathCommand(Yd("M {x} {y}",{x:e,y:t}))}bezierCurveTo(e,t,i,n,r,s){this.__currentPosition={x:r,y:s},this.__addPathCommand(Yd("C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}",{cp1x:e,cp1y:t,cp2x:i,cp2y:n,x:r,y:s}))}quadraticCurveTo(e,t,i,n){this.__currentPosition={x:i,y:n},this.__addPathCommand(Yd("Q {cpx} {cpy} {x} {y}",{cpx:e,cpy:t,x:i,y:n}))}arcTo(e,t,i,n,r){var s=this.__currentPosition&&this.__currentPosition.x,o=this.__currentPosition&&this.__currentPosition.y;if(void 0!==s&&void 0!==o){if(r<0)throw new Error("IndexSizeError: The radius provided ("+r+") is negative.");if(s===e&&o===t||e===i&&t===n||0===r)this.lineTo(e,t);else{var a=Jd([s-e,o-t]),c=Jd([i-e,n-t]);if(a[0]*c[1]!=a[1]*c[0]){var l=a[0]*c[0]+a[1]*c[1],h=Math.acos(Math.abs(l)),d=Jd([a[0]+c[0],a[1]+c[1]]),u=r/Math.sin(h/2),f=e+u*d[0],p=t+u*d[1],g=[-a[1],a[0]],m=[c[1],-c[0]],w=function(e){var t=e[0];return e[1]>=0?Math.acos(t):-Math.acos(t)},b=w(g),F=w(m);this.lineTo(f+g[0]*r,p+g[1]*r),this.arc(f,p,r,b,F)}else this.lineTo(e,t)}}}stroke(){"path"===this.__currentElement.nodeName&&this.__currentElement.setAttribute("paint-order","fill stroke markers"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement("stroke")}fill(){"path"===this.__currentElement.nodeName&&this.__currentElement.setAttribute("paint-order","stroke fill markers"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement("fill")}rect(e,t,i,n){"path"!==this.__currentElement.nodeName&&this.beginPath(),this.moveTo(e,t),this.lineTo(e+i,t),this.lineTo(e+i,t+n),this.lineTo(e,t+n),this.lineTo(e,t),this.closePath()}fillRect(e,t,i,n){n<0&&(t+=n,n=-n),i<0&&(e+=i,i=-i);var r,s,o,a={x:e,y:t,width:i,height:n};(!this.viewbox||(r=this.viewbox,s=a,r.x<s.x+s.width&&r.x+r.width>s.x&&r.y<s.y+s.height&&r.y+r.height>s.y))&&(o=this.__createElement("rect",a,!0),this.__closestGroupOrSvg().appendChild(o),this.__currentElement=o,this.__applyStyleToCurrentElement("fill"))}strokeRect(e,t,i,n){var r;r=this.__createElement("rect",{x:e,y:t,width:i,height:n},!0),this.__closestGroupOrSvg().appendChild(r),this.__currentElement=r,this.__applyStyleToCurrentElement("stroke")}strokeEllipse(e,t,i,n,r,s,o,a){this.__ellipse(e,t,i,n,r,s,o,a,"stroke")}fillEllipse(e,t,i,n,r,s,o,a){this.__ellipse(e,t,i,n,r,s,o,a,"fill")}__ellipse(e,t,i,n,r,s,o,a,c){const l={cx:e,cy:t,rx:i,ry:n},h=this.__createElement("ellipse",l,!0);this.__closestGroupOrSvg().appendChild(h),this.__currentElement=h,this.__applyStyleToCurrentElement(c)}__clearCanvas(){for(var e=this.__closestGroupOrSvg().getAttribute("transform"),t=this.__root.childNodes[1],i=t.childNodes,n=i.length-1;n>=0;n--)i[n]&&t.removeChild(i[n]);this.__currentElement=t,this.__groupStack=[],e&&this.__addTransform(e)}clearRect(e,t,i,n){if(0!==e||0!==t||i!==this.width||n!==this.height){var r,s=this.__closestGroupOrSvg();r=this.__createElement("rect",{x:e,y:t,width:i,height:n,fill:"#FFFFFF"},!0),s.appendChild(r)}else this.__clearCanvas()}createLinearGradient(e,t,i,n){var r=this.__createElement("linearGradient",{id:Xd(this.__ids),x1:e+"px",x2:i+"px",y1:t+"px",y2:n+"px",gradientUnits:"userSpaceOnUse"},!1);return this.__defs.appendChild(r),new iu(r,this)}createRadialGradient(e,t,i,n,r,s){var o=this.__createElement("radialGradient",{id:Xd(this.__ids),cx:n+"px",cy:r+"px",r:s+"px",fx:e+"px",fy:t+"px",gradientUnits:"userSpaceOnUse"},!1);return this.__defs.appendChild(o),new iu(o,this)}__parseFont(){var e=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-,\'\"\sa-z0-9]+?)\s*$/i.exec(this.font),t={style:e[1]||"normal",size:e[4]||"10px",family:e[6]||"sans-serif",weight:e[3]||"normal",decoration:e[2]||"normal",href:null};return"underline"===this.__fontUnderline&&(t.decoration="underline"),this.__fontHref&&(t.href=this.__fontHref),t}__wrapTextLink(e,t){if(e.href){var i=this.__createElement("a");return i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e.href),i.appendChild(t),i}return t}__applyText(e,t,i,n){var r,s,o=this.__parseFont(),a=this.__closestGroupOrSvg(),c=this.__createElement("text",{"font-family":o.family,"font-size":o.size,"font-style":o.style,"font-weight":o.weight,"text-decoration":o.decoration,x:t,y:i,"text-anchor":(r=this.textAlign,s={left:"start",right:"end",center:"middle",start:"start",end:"end"},s[r]||s.start),"dominant-baseline":Zd(this.textBaseline)},!0);c.appendChild(this.__document.createTextNode(e)),this.__currentElement=c,this.__applyStyleToCurrentElement(n),a.appendChild(this.__wrapTextLink(o,c))}fillText(e,t,i){this.__applyText(e,t,i,"fill")}strokeText(e,t,i){this.__applyText(e,t,i,"stroke")}measureText(e){return this.__ctx.font=this.font,this.__ctx.measureText(e)}arc(e,t,i,n,r,s){if(n!==r){(n%=2*Math.PI)===(r%=2*Math.PI)&&(r=(r+2*Math.PI-.001*(s?-1:1))%(2*Math.PI));var o=e+i*Math.cos(r),a=t+i*Math.sin(r),c=e+i*Math.cos(n),l=t+i*Math.sin(n),h=s?0:1,d=0,u=r-n;u<0&&(u+=2*Math.PI),d=s?u>Math.PI?0:1:u>Math.PI?1:0,this.lineTo(c,l),this.__addPathCommand(Yd("A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}",{rx:i,ry:i,xAxisRotation:0,largeArcFlag:d,sweepFlag:h,endX:o,endY:a})),this.__currentPosition={x:o,y:a}}}clip(){var e=this.__closestGroupOrSvg(),t=this.__createElement("clipPath"),i=Xd(this.__ids),n=this.__createElement("g");this.__applyCurrentDefaultPath(),e.removeChild(this.__currentElement),t.setAttribute("id",i),t.appendChild(this.__currentElement),this.__defs.appendChild(t),e.setAttribute("clip-path",Yd("url(#{id})",{id:i})),e.appendChild(n),this.__currentElement=n}drawImage(){var e,t,i,n,r,s,o,a,c,l,h,d,u,f=Array.prototype.slice.call(arguments),p=f[0],g=0,m=0;if(3===f.length)e=f[1],t=f[2],i=r=p.width,n=s=p.height;else if(5===f.length)e=f[1],t=f[2],i=f[3],n=f[4],r=p.width,s=p.height;else{if(9!==f.length)throw new Error("Invalid number of arguments passed to drawImage: "+arguments.length);g=f[1],m=f[2],r=f[3],s=f[4],e=f[5],t=f[6],i=f[7],n=f[8]}o=this.__closestGroupOrSvg(),this.__currentElement;var w="translate("+e+", "+t+")";if(p instanceof ru){if((a=p.getSvg().cloneNode(!0)).childNodes&&a.childNodes.length>1){for(c=a.childNodes[0];c.childNodes.length;)u=c.childNodes[0].getAttribute("id"),this.__ids[u]=u,this.__defs.appendChild(c.childNodes[0]);if(l=a.childNodes[1]){var b,F=l.getAttribute("transform");b=F?F+" "+w:w,l.setAttribute("transform",b),o.appendChild(l)}}}else"CANVAS"!==p.nodeName&&"IMG"!==p.nodeName||((h=this.__createElement("image")).setAttribute("width",i),h.setAttribute("height",n),h.setAttribute("preserveAspectRatio","none"),(g||m||r!==p.width||s!==p.height)&&((d=this.__document.createElement("canvas")).width=i,d.height=n,d.getContext("2d").drawImage(p,g,m,r,s,0,0,i,n),p=d),h.setAttribute("transform",w),h.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","CANVAS"===p.nodeName?p.toDataURL():p.getAttribute("src")),o.appendChild(h))}createPattern(e,t){let i,n=this.__document.__createElement("pattern"),r=Xd(this.__ids);return n.setAttribute("id",r),n.setAttribute("width",e.width),n.setAttribute("height",e.height),"CANVAS"===e.nodeName||"IMG"===e.nodeName?(i=this.__createElement("image"),i.setAttribute("width",e.width),i.setAttribute("height",e.height),i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href","CANVAS"===e.nodeName?e.toDataURL():e.getAttribute("src")),n.appendChild(i),this.__defs.appendChild(n)):e instanceof ru&&(n.appendChild(e.__root.childNodes[1]),this.__defs.appendChild(n)),new nu(n,this)}setLineDash(e){e&&e.length>0?this.lineDash=e.join(","):this.lineDash=null}drawFocusRing(){}createImageData(){}getImageData(){}putImageData(){}globalCompositeOperation(){}setTransform(){}}class su{static supportedTypes=new Set(["bigBed","bigWig","bigGenePred","vcfTabix"]);static filterTracks=new Set(["cytoBandIdeo","assembly","gap","gapOverlap","allGaps","cpgIslandExtUnmasked","windowMasker"]);static async loadHub(e){const t=e.lastIndexOf("/"),i=e.substring(0,t+1),n=await cu(e);let r;if("genome"===n[1].type){const e=n[1];if(e.hasProperty("groups")){const t=i+e.getProperty("groups");r=await cu(t)}}return new su(e,n,r)}constructor(e,t,i){this.url=e;const n=e.lastIndexOf("/");if(this.baseURL=e.substring(0,n+1),"hub"!==t[0].type)throw Error("Unexpected hub.txt file -- does the first line start with 'hub'?");if(this.hubStanza=t[0],"on"!==this.hubStanza.getProperty("useOneFile"))throw Error("Only 'useOneFile' hubs are currently supported");if(t.length<2)throw Error("Expected at least 2 stanzas, hub and genome");if("genome"!==t[1].type)throw Error(`Unexpected hub file -- expected "genome" stanza but found "${t[1].type}"`);this.genomeStanza=t[1],this.trackStanzas=[];for(let e=2;e<t.length;e++)"track"===t[e].type&&this.trackStanzas.push(t[e]);if(i){this.groupStanzas=i,this.groupPriorityMap=new Map;for(let e of i)e.hasProperty("priority")&&this.groupPriorityMap.set(e.getProperty("name"),10*Number.parseInt(e.getProperty("priority")))}}getDefaultPosition(){return this.genomeStanza.getProperty("defaultPos")}getGenomeConfig(e={}){const t=this.genomeStanza.getProperty("genome"),i=this.hubStanza.getProperty("shortLabel")||this.genomeStanza.getProperty("scientificName")||this.genomeStanza.getProperty("organism")||this.genomeStanza.getProperty("description"),n=i+(i?` (${t})`:` ${t}`),r={hubURL:this.url,id:t,name:n,twoBitURL:this.baseURL+this.genomeStanza.getProperty("twoBitPath"),nameSet:"ucsc",wholeGenomeView:!1,showChromosomeWidget:!1};if(this.genomeStanza.hasProperty("defaultPos")){const e=this.genomeStanza.getProperty("defaultPos");if(e){const t=e.lastIndexOf(":");r.locus=t>0?e.substring(0,t):e}}this.genomeStanza.hasProperty("blat")&&(r.blat=this.baseURL+this.genomeStanza.getProperty("blat")),this.genomeStanza.hasProperty("chromAliasBb")&&(r.chromAliasBbURL=this.baseURL+this.genomeStanza.getProperty("chromAliasBb")),this.genomeStanza.hasProperty("chromAlias")&&(r.aliasURL=this.baseURL+this.genomeStanza.getProperty("chromAlias")),this.genomeStanza.hasProperty("twoBitBptURL")&&(r.twoBitBptURL=this.baseURL+this.genomeStanza.getProperty("twoBitBptURL")),this.genomeStanza.hasProperty("twoBitBptUrl")&&(r.twoBitBptURL=this.baseURL+this.genomeStanza.getProperty("twoBitBptUrl")),e.includeChromSizes&&this.genomeStanza.hasProperty("chromSizes")&&(r.chromSizesURL=this.baseURL+this.genomeStanza.getProperty("chromSizes")),this.hubStanza.hasProperty("longLabel")?r.description=this.hubStanza.getProperty("longLabel").replace("/","\n"):(r.description=r.id,this.genomeStanza.hasProperty("description")&&(r.description+=`\n${this.genomeStanza.getProperty("description")}`),this.genomeStanza.hasProperty("organism")&&(r.description+=`\n${this.genomeStanza.getProperty("organism")}`),this.genomeStanza.hasProperty("scientificName")&&(r.description+=`\n${this.genomeStanza.getProperty("scientificName")}`),this.genomeStanza.hasProperty("htmlPath")&&(r.infoURL=this.baseURL+this.genomeStanza.getProperty("htmlPath")));const s=this.trackStanzas.filter((e=>"cytoBandIdeo"===e.name&&e.hasProperty("bigDataUrl")));s.length>0&&(r.cytobandBbURL=this.baseURL+s[0].getProperty("bigDataUrl"));return r.tracks=this.#u((e=>!su.filterTracks.has(e.name)&&"hide"!==e.getProperty("visibility"))),r}getGroupedTrackConfigurations(){const e=new Map;for(let t of this.#u()){if("cytoBandIdeo"===t.name)continue;const i=t.group||"other";e.has(i)?e.get(i).push(t):e.set(i,[t])}const t=this.groupStanzas?new Map(this.groupStanzas.map((e=>[e.getProperty("name"),e]))):new Map;return Array.from(e.keys()).map((i=>({label:t.has(i)?t.get(i).getProperty("label"):i,tracks:e.get(i)})))}#u(e){return this.trackStanzas.filter((t=>su.supportedTypes.has(t.format)&&t.hasProperty("bigDataUrl")&&(!e||e(t)))).map((e=>this.#f(e)))}#f(e){const t=e.format,i={id:e.getProperty("track"),name:e.getProperty("shortLabel"),format:t,url:this.baseURL+e.getProperty("bigDataUrl"),displayMode:e.displayMode};if("vcfTabix"===t&&(i.indexURL=i.url+".tbi"),e.hasProperty("longLabel")&&e.hasProperty("html")?(i.description&&(i.description+="<br/>"),i.description=`<a target="_blank" href="${this.baseURL+e.getProperty("html")}">${e.getProperty("longLabel")}</a>`):e.hasProperty("longLabel")&&(i.description=e.getProperty("longLabel")),e.hasProperty("autoScale")&&(i.autoscale="on"===e.getProperty("autoScale").toLowerCase()),e.hasProperty("maxHeightPixels")){const t=e.getProperty("maxHeightPixels").split(":");i.maxHeight=Number.parseInt(t[0]),i.height=Number.parseInt(t[1]),i.minHeight=Number.parseInt(t[2])}if(e.hasProperty("color")){const t=e.getProperty("color");i.color=t.indexOf(",")>0?`rgb(${t})`:t}if(e.hasProperty("altColor")){const t=e.getProperty("altColor");i.altColor=t.indexOf(",")>0?`rgb(${t})`:t}if(e.hasProperty("viewLimits")){const t=e.getProperty("viewLimits").split(":");let n,r;t.length>1&&(n=Number.parseInt(t[0]),r=Number.parseInt(t[1])),Number.isNaN(r)||Number.isNaN(n)?console.warn(`Unexpected viewLimits value in track line: ${properties.viewLimits}`):(i.min=n,i.max=r)}if(e.hasProperty("itemRgb"),"hide"===e.getProperty("visibility")&&(i.visible=!1),e.hasProperty("url")&&(i.infoURL=e.getProperty("url")),e.hasProperty("searchIndex")&&(i.searchIndex=e.getProperty("searchIndex")),e.hasProperty("searchTrix")&&(i.searchTrix=this.baseURL+e.getProperty("searchTrix")),e.hasProperty("group")&&(i.group=e.getProperty("group"),this.groupPriorityMap&&this.groupPriorityMap.has(i.group))){const e=this.groupPriorityMap.get(i.group)+1;i.order=e,this.groupPriorityMap.set(i.group,e)}return i}}function ou(e){const t=e.indexOf(" ");return t>0?e.substring(0,t):e}class au{properties=new Map;constructor(e,t){this.type=e,this.name=t}setProperty(e,t){this.properties.set(e,t)}getProperty(e){return this.properties.has(e)?this.properties.get(e):this.parent?this.parent.getProperty(e):void 0}hasProperty(e){return!!this.properties.has(e)||!!this.parent&&this.parent.hasProperty(e)}get format(){const e=this.getProperty("type");if(e)return ou(e)}get displayMode(){let e=this.getProperty("visibility");if(!e)return"COLLAPSED";switch(e=e.toLowerCase(),e){case"dense":default:return"COLLAPSED";case"pack":return"EXPANDED";case"squish":return"SQUISHED"}}}async function cu(e){const t=await fetch(e),i=(await t.text()).split(/\n|\r\n|\r/g),n=[];let r,s=!0;for(let e of i){const t=lu(e),i=e.indexOf(" ",t);if(i<0)s=!0;else{const o=e.substring(t,i).trim();if(o.startsWith("#"))continue;const a=e.substring(i+1).trim();if(s){const e=new au(o,a);n.push(e),r=e,s=!1}r.setProperty(o,a)}}return function(e){const t=new Map;for(let i of e)t.set(i.name,i);for(let i of e)if(i.properties.has("parent")){const e=ou(i.properties.get("parent"));i.parent=t.get(e)}return e}(n)}function lu(e){let t=0;for(t=0;t<e.length;t++){const i=e.charAt(t);if(" "!==i&&"\t"!==i)break}return t}const hu={initializeGenomes:async function(e){if(!hu.KNOWN_GENOMES){const t={};if(!1!==e.loadDefaultGenomes)try{const r="https://igv.org/genomes/genomes.json";n(await Qs.loadJson(r,{timeout:5e3}))}catch(s){console.error(s);try{const o="https://s3.amazonaws.com/igv.org.genomes/genomes.json";n(await Qs.loadJson(o,{}))}catch(a){console.error(a),console.warn("Errors loading default genome definitions.")}}const i=e.genomeList||e.genomes;if(i)if("string"==typeof i){n(await Qs.loadJson(i,{}))}else n(i);function n(e){return e.forEach((function(e){t[e.id]=e})),t}hu.KNOWN_GENOMES=t}},isWholeGenomeView:function(e){return"all"===e.toLowerCase()},expandReference:async function(e,t){if(Mt(t)&&t.startsWith("{"))try{t=JSON.parse(t)}catch(e){}let i;if(Mt(t)?i=t:t.genome?i=t.genome:void 0===t.id||t.fastaURL||t.twobitURL||(i=t.id),i){let t=hu.KNOWN_GENOMES[i];if(!t){if((i.startsWith("GCA_")||i.startsWith("GCF_"))&&i.length>=13)try{const e=function(e){if(e.startsWith("GCF")||e.startsWith("GCA")&&e.length>=13)return"https://hgdownload.soe.ucsc.edu/hubs/"+e.substring(0,3)+"/"+e.substring(4,7)+"/"+e.substring(7,10)+"/"+e.substring(10,13)+"/"+e+"/hub.txt"}(i);t=(await su.loadHub(e)).getGenomeConfig()}catch(e){console.error(e)}t||e.present(new Error(`Unknown genome id: ${i}`),void 0)}return t}return t}};let du,uu,fu=0,pu=0,gu=[];class mu extends Kd{constructor(e,t,i,n){super(e,t,i,n)}initializationHelper(){this.$spinner=Bt("<div>",{class:"igv-loading-spinner-container"}),this.$viewport.append(this.$spinner),this.$spinner.append(Bt("<div>"));const e=this.trackView.track;"sequence"!==e.type&&(this.$zoomInNotice=this.createZoomInNotice(this.$viewport)),"sequence"!==e.id&&(this.$trackLabel=Bt('<div class="igv-track-label">'),this.$viewport.append(this.$trackLabel),this.setTrackLabel(e.name||""),!1===this.browser.doShowTrackLabels&&this.$trackLabel.hide()),this.stopSpinner(),this.addMouseHandlers()}setContentHeight(e){super.setContentHeight(e),this.featureCache&&(this.featureCache.redraw=!0)}setTrackLabel(e){this.$trackLabel.empty(),this.$trackLabel.html(e);const t=this.$trackLabel.text();this.$trackLabel.attr("title",t)}startSpinner(){this.$spinner.show()}stopSpinner(){this.$spinner&&this.$spinner.hide()}checkZoomIn(){if(this.trackView.track&&"sequence"===this.trackView.track.type&&this.referenceFrame.bpPerPixel>10)return Bt(this.canvas).remove(),this.canvas=void 0,!1;if(!this.viewIsReady())return!1;if((()=>{if("all"!==this.referenceFrame.chr.toLowerCase()||this.trackView.track.supportsWholeGenome){const e=this.trackView.track.visibilityWindow;return void 0!==e&&e>0&&this.referenceFrame.bpPerPixel*this.$viewport.width()>e}return!0})()){if(this.canvas&&(Bt(this.canvas).remove(),this.canvas=void 0),this.trackView.track.autoHeight){const e=this.trackView.minHeight||0;this.setContentHeight(e)}return this.$zoomInNotice&&this.$zoomInNotice.show(),!1}return this.$zoomInNotice&&this.$zoomInNotice.hide(),!0}shift(){const e=this.referenceFrame;this.canvas&&this.canvas._data&&this.canvas._data.referenceFrame.chr===this.referenceFrame.chr&&this.canvas._data.bpPerPixel===e.bpPerPixel&&(this.canvas._data.pixelShift=Math.round((this.canvas._data.bpStart-e.start)/e.bpPerPixel),this.canvas.style.left=this.canvas._data.pixelShift+"px")}genomicRange(){return{start:this.referenceFrame.start,end:this.referenceFrame.start+this.referenceFrame.bpPerPixel*this.$viewport.width()}}setTop(e){if(super.setTop(e),this.canvas){const t=this.$viewport.height(),i=e+this.canvas._data.pixelTop,n=i+this.canvas._data.pixelHeight;(i>0||n<t)&&this.repaint()}else this.repaint();if(this.canvas&&this.canvas._data){let t=e+this.canvas._data.pixelTop;this.canvas.style.top=`${t}px`}}async loadFeatures(){const e=this.referenceFrame,t=e.chr,i=await this.browser.genome.loadChromosome(t),n=i?i.bpLength:Number.MAX_SAFE_INTEGER,r=this.$viewport.width()*e.bpPerPixel,s=Math.floor(Math.max(0,e.start-r)),o=Math.ceil(Math.min(n,e.start+r+r));if(!this.loading||this.loading.start!==s||this.loading.end!==o){this.loading={start:s,end:o},this.startSpinner();try{const i=this.trackView.track,n=await this.getFeatures(i,t,s,o,e.bpPerPixel);if(n){let r=[];if(i.roiSets&&i.roiSets.length>0)for(let n of i.roiSets){const i=await n.getFeatures(t,s,o,e.bpPerPixel);r.push({track:n,features:i})}const a=i&&i.resolutionAware,c=this.windowFunction;return this.featureCache=new wu(t,s,o,e.bpPerPixel,n,r,a,c),this.loading=!1,this.hideMessage(),this.stopSpinner(),this.featureCache}}catch(e){this.trackView&&!0!==this.trackView.disposed&&(this.showMessage("Error loading track data"),this.browser.alert.present(e),console.error(e))}finally{this.loading=!1,this.stopSpinner()}}}get track(){return this.trackView.track}get windowFunction(){return this.track?this.track.windowFunction:void 0}repaintDimensions(){const e=hu.isWholeGenomeView(this.referenceFrame.chr),t=e?this.$viewport.width():3*this.$viewport.width(),i=this.referenceFrame.bpPerPixel;return{bpStart:this.referenceFrame.start-(e?0:this.$viewport.width()*i),bpEnd:e?Number.MAX_SAFE_INTEGER:this.referenceFrame.start+2*this.$viewport.width()*i+1,pixelWidth:t}}repaint(){if(void 0===this.featureCache)return;const{features:e,roiFeatures:t}=this.featureCache,{bpStart:i,bpEnd:n,pixelWidth:r}=this.repaintDimensions(),s=this.$viewport.height(),o=this.getContentHeight(),a=t?Math.max(o,s):o,c=Math.min(a,3*s);if(0===r||0===c)return void(this.canvas&&Bt(this.canvas).remove());const l=Math.max(0,-this.contentTop-Math.floor(c/3)),h=this.referenceFrame.bpPerPixel,d=Math.round((i-this.referenceFrame.start)/h),u=(this.contentTop||0)+l,f=document.createElement("canvas");f.style.position="relative",f.style.display="block",f.style.width=r+"px",f.style.height=c+"px",f.style.left=d+"px",f.style.top=u+"px";const p="FILL"===this.trackView.track.displayMode||!1!==this.trackView.track.supportHiDPI?window.devicePixelRatio:1;f.width=p*r,f.height=p*c;const g=f.getContext("2d");g.scale(p,p),g.translate(0,-l);const m={context:g,pixelXOffset:d,pixelWidth:r,pixelHeight:c,pixelTop:l,bpStart:i,bpEnd:n,bpPerPixel:h,pixelShift:d,windowFunction:this.windowFunction,referenceFrame:this.referenceFrame,selection:this.selection,viewport:this,viewportWidth:this.$viewport.width()};this.draw(m,e,t),this.canvas&&Bt(this.canvas).remove(),f._data=m,this.canvas=f,this.$viewport.append(Bt(f))}refresh(){if(!this.canvas||!this.featureCache)return;const e=this.canvas._data;e.context.clearRect(0,0,this.canvas.width,this.canvas.height);const{features:t,roiFeatures:i}=this.featureCache;this.draw(e,t,i)}draw(e,t,i){if(t&&(e.features=t,this.trackView.track.draw(e)),i&&i.length>0)for(let t of i)e.features=t.features,t.track.draw(e)}containsPosition(e,t){return this.referenceFrame.chr===e&&t>=this.referenceFrame.start&&t<=this.referenceFrame.calculateEnd(this.getWidth())}isLoading(){return this.loading}savePNG(){if(!this.canvas)return;const e=this.canvas._data,t=e?e.pixelTop:0,i=window.devicePixelRatio,n=this.$viewport.width()*i,r=this.$viewport.height()*i,s=-Bt(this.canvas).position().left*i,o=(-this.contentTop-t)*i,a=this.canvas.getContext("2d").getImageData(s,o,n,r),c=document.createElement("canvas"),l=c.getContext("2d");c.width=a.width,c.height=a.height,l.putImageData(a,0,0);Pt((this.$trackLabel.text()?this.$trackLabel.text():"image")+".png",c.toDataURL("image/png"))}saveSVG(){let{width:e,height:t}=this.browser.columnContainer.getBoundingClientRect();const i=new ru({width:e,height:8e3,backdropColor:"white",multiLocusGap:0,viewbox:{x:0,y:0,width:e,height:8e3}}),n={deltaX:32,deltaY:32};this.renderSVGContext(i,n,!1),i.setHeight(t);const r=(this.trackView.track.name||this.trackView.track.id).replace(/\W/g,""),o=this.browser.referenceFrameList.indexOf(this.referenceFrame),a=i.getSerializedSvg(!0),c=URL.createObjectURL(new Blob([a],{type:"application/octet-stream"}));Pt(`${`${r}_referenceFrame_${o}_guid_${s()}`}.svg`,c)}renderSVGContext(e,{deltaX:t,deltaY:i},n=!0){if(!(this.$zoomInNotice&&this.$zoomInNotice.is(":visible"))){const{width:n,height:r}=this.$viewport.get(0).getBoundingClientRect(),o=`${(this.trackView.track.name||this.trackView.track.id).replace(/\W/g,"")}_referenceFrame_${this.browser.referenceFrameList.indexOf(this.referenceFrame)}_guid_${s()}`,a=t,c=i+this.contentTop,l=-this.contentTop;e.saveWithTranslationAndClipRect(o,a,c,n,r,l);let{start:h,bpPerPixel:d}=this.referenceFrame;const u={context:e,viewport:this,referenceFrame:this.referenceFrame,top:l,pixelTop:l,pixelWidth:n,pixelHeight:r,bpStart:h,bpEnd:h+n*d,bpPerPixel:d,viewportWidth:n,selection:this.selection},f=this.featureCache?this.featureCache.features:void 0,p=this.featureCache?this.featureCache.roiFeatures:void 0;this.draw(u,f,p),e.restore()}if(n&&this.$trackLabel&&this.browser.doShowTrackLabels){const{x:n,y:r,width:s,height:o}=((e,t)=>{const{x:i,y:n,width:r,height:s}=e.getBoundingClientRect(),{x:o,y:a,width:c,height:l}=t.getBoundingClientRect();return{x:o-i,y:a-n,width:c,height:l}})(this.$viewport.get(0),this.$trackLabel.get(0));this.renderTrackLabelSVG(e,t+n,i+r,s,o)}}renderTrackLabelSVG(e,t,i,n,r){const o=`${(this.trackView.track.name||this.trackView.track.id).replace(/\W/g,"")}_track_label_guid_${s()}`;e.saveWithTranslationAndClipRect(o,t,i,n,r,0),e.fillStyle="white",e.fillRect(0,0,n,r),e.font="12px Arial",e.fillStyle="rgb(68, 68, 68)";const{width:a}=e.measureText(this.$trackLabel.text()),c=.25*(n-a),l=.7*(r-12);e.fillText(this.$trackLabel.text(),c,r-l),e.strokeStyle="rgb(68, 68, 68)",e.strokeRect(0,0,n,r),e.restore()}get cachedFeatures(){return this.featureCache?this.featureCache.features:[]}clearCache(){this.featureCache=void 0,this.canvas&&(this.canvas._data=void 0)}async getFeatures(e,t,i,n,r){if(this.featureCache&&this.featureCache.containsRange(t,i,n,r,this.windowFunction))return this.featureCache.features;if("function"==typeof e.getFeatures){const s=await e.getFeatures(t,i,n,r,this);return this.checkContentHeight(s),s}}needsRepaint(){if(!this.canvas)return!0;const e=this.canvas._data;return!e||this.referenceFrame.start<e.bpStart||this.referenceFrame.end>e.bpEnd||this.referenceFrame.chr!==e.referenceFrame.chr||this.referenceFrame.bpPerPixel!=e.bpPerPixel||this.windowFunction!=e.windowFunction}needsReload(){if(!this.featureCache)return!0;const{chr:e,bpPerPixel:t}=this.referenceFrame,{bpStart:i,bpEnd:n}=this.repaintDimensions();return!this.featureCache.containsRange(e,i,n,t,this.windowFunction)}createZoomInNotice(e){const t=Bt("<div>",{class:"igv-zoom-in-notice-container"});e.append(t);const i=Bt("<div>");return t.append(i),i.text("Zoom in to see features"),t.hide(),t}viewIsReady(){return this.browser&&this.browser.referenceFrameList&&this.referenceFrame}addMouseHandlers(){const e=this.$viewport.get(0);this.addViewportContextMenuHandler(e);const t=e=>{this.enableClick=!0,this.browser.mouseDownOnViewport(e,this),r(e)};e.addEventListener("mousedown",t),e.addEventListener("touchstart",t);const i=e=>{this.browser.dragObject||this.browser.isScrolling?(this.browser.cancelTrackPan(),this.enableClick=!1):(this.browser.cancelTrackPan(),this.browser.endTrackDrag())};e.addEventListener("mouseup",i),e.addEventListener("touchend",i),"function"==typeof this.trackView.track.hoverText&&e.addEventListener("mousemove",(e=>{if(0===e.buttons&&Date.now()-pu>100){pu=Date.now();const t=this.createClickState(e);if(t){const e=this.trackView.track.hoverText(t);e?this.$viewport[0].setAttribute("title",e):this.$viewport[0].removeAttribute("title")}}})),this.addViewportClickHandler(this.$viewport.get(0)),this.trackView.track.name&&"sequence"!==this.trackView.track.config.type&&this.addTrackLabelClickHandler(this.$trackLabel.get(0))}addViewportContextMenuHandler(e){e.addEventListener("contextmenu",(e=>{if(this.browser.dragObject)return!1;const t=this.createClickState(e);if(void 0===t)return!1;e.preventDefault();let i=[];if("function"==typeof this.trackView.track.contextMenuItemList){const e=this.trackView.track.contextMenuItemList(t);e&&(i=e)}i.length>0&&i.push({label:Bt("<HR>")}),i.push({label:"Save Image (PNG)",click:()=>this.savePNG()}),i.push({label:"Save Image (SVG)",click:()=>this.saveSVG()}),this.browser.menuPopup.presentTrackContextMenu(e,i)}))}addViewportClickHandler(e){e.addEventListener("click",(e=>{if(this.enableClick&&this.canvas){if(3===e.which||e.ctrlKey)return;if(this.browser.dragObject||this.browser.isScrolling)return;e.preventDefault();const t=a(e,this.$viewport.get(0)).x,i=a(e,this.canvas).x,n=this.referenceFrame;Math.floor(n.start+n.toBP(i));const r=Date.now();if(r-fu<this.browser.constants.doubleClickDelay){du&&(window.clearTimeout(du),du=void 0);const e=Math.round(n.start+n.toBP(t));let i;if("all"===this.referenceFrame.chr.toLowerCase()){const t=this.browser.genome.getChromosomeCoordinate(e).chr;if(1===this.browser.referenceFrameList.length)i=t;else{const e=this.browser.referenceFrameList.map((({locusSearchString:e})=>e));e[this.browser.referenceFrameList.indexOf(this.referenceFrame)]=t,i=e.join(" ")}this.browser.search(i)}else this.browser.zoomWithScaleFactor(.5,e,this.referenceFrame)}else"function"==typeof this.trackView.track.popupData&&(du=setTimeout((()=>{const t=this.getPopupContent(e);if(t)if(!1===e.shiftKey){if(uu&&uu.dispose(),gu.length>0){for(const e of gu)e.dispose();gu.length=0}uu=new ic(this.$viewport.get(0).parentElement,!0,void 0,(()=>{uu.dispose()})),uu.presentContentWithEvent(e,t)}else{let i=new ic(this.$viewport.get(0).parentElement,!0,void 0,(()=>{const e=gu.indexOf(i);gu.splice(e,1),i.dispose()}));gu.push(i),i.presentContentWithEvent(e,t)}window.clearTimeout(du),du=void 0}),this.browser.constants.doubleClickDelay));fu=r}}))}addTrackLabelClickHandler(e){e.addEventListener("click",(e=>{e.stopPropagation();const{track:t}=this.trackView;let i;"function"==typeof t.description?i=t.description():t.description&&(i=`<div>${t.description}</div>`),i&&(void 0===this.popover&&(this.popover=new ic(this.browser.columnContainer,!0,t.name||"",void 0)),this.popover.presentContentWithEvent(e,i))}))}createClickState(e){if(!this.canvas)return;const t=this.referenceFrame,i=a(e,this.$viewport.get(0)),n=a(e,this.canvas),r=t.start+t.toBP(i.x);return{event:e,viewport:this,referenceFrame:t,genomicLocation:r,y:i.y-this.contentTop,canvasX:n.x,canvasY:n.y}}getPopupContent(e){const t=this.createClickState(e);if(void 0===t)return;let i=this.trackView.track;const n=i.popupData(t),r=this.browser.fireEvent("trackclick",[i,n]);let s;return void 0===r||!0===r?n&&n.length>0&&(s=n.map((e=>{if(e.name){const t=`<span>${e.name}</span>&nbsp&nbsp&nbsp${e.value}`;return`<div title="${e.value}">${t}</div>`}return"<hr>"===e?e:e.html?e.html:`<div title="${e}">${e}</div>`})).join("")):"string"==typeof r&&(s=r),s}dispose(){this.popover&&this.popover.dispose(),super.dispose()}}class wu{constructor(e,t,i,n,r,s,o,a){this.chr=e,this.bpStart=t,this.bpEnd=i,this.bpPerPixel=n,this.features=r,this.roiFeatures=s,this.multiresolution=o,this.windowFunction=a}containsRange(e,t,i,n,r){if(r&&r!==this.windowFunction)return!1;const s=this.multiresolution?this.bpPerPixel/n:1;return t>=this.bpStart&&i<=this.bpEnd&&e===this.chr&&s>.5&&s<2}overlapsRange(e,t,i){return this.chr===e&&i>=this.bpStart&&t<=this.bpEnd}}const bu=function(e,t){const{r:i,g:n,b:r}=no[e];return`rgba(${i},${n},${r},${t})`}("nickel",2/16),Fu=bu;class vu{constructor(e,t){if(this.url=e.url,e.name&&(this.name=e.name),this.isUserDefined=e.isUserDefined,e.featureSource)this.featureSource=e.featureSource;else if(e.features)this.featureSource=new Au(e.features,t);else{if(!e.format)throw Error("ROI configuration must define either features or file format");this.featureSource=wd(e,t)}!0===this.isUserDefined?(this.color=e.color||Fu,this.headerColor="rgba(155,185,129)"):(this.color=e.color||bu,this.headerColor="rgb(190,190,190)"),this.isVisible=void 0===e.isVisible||e.isVisible}async getFeatures(e,t,i){return this.featureSource.getFeatures({chr:e,start:t,end:i})}async getAllFeatures(){return"function"==typeof this.featureSource.getAllFeatures?await this.featureSource.getAllFeatures():{}}addFeature(e){this.featureSource.addFeature(e)}removeFeature(e){this.featureSource.removeFeature(e)}toJSON(){if(this.url)return{name:this.name,color:this.color,url:this.url,isUserDefined:this.isUserDefined,isVisible:this.isVisible};{const e=this.featureSource.getAllFeatures(),t=[];for(let i of Object.keys(e))for(let n of e[i])t.push(n);return{name:this.name,color:this.color,features:t,isUserDefined:this.isUserDefined,isVisible:this.isVisible}}}dispose(){for(let e of Object.keys(this))this[e]=void 0}}function yu(e,t,i,n){let r=Math.round((e-i)/n);let s=Math.round((t-i)/n)-r;return s<3&&(s=3,r-=1),{x:r,width:s}}class Au{constructor(e,t){this.featureMap={},this.genome=t;for(let i of e){const e=t?t.getChromosomeName(i.chr):i.chr;let n=this.featureMap[e];n||(n=[],this.featureMap[e]=n),n.push(i)}for(let e of Object.keys(this.featureMap))this.featureMap[e].sort(((e,t)=>e.start-t.start))}async getFeatures({chr:e,start:t,end:i}){if("all"===e.toLowerCase())return Ll(this.featureMap,this.genome);{const n=this.featureMap[e];return n?n.filter((e=>e.end>t&&e.start<i)):[]}}getAllFeatures(){return this.featureMap}supportsWholeGenome(){return!0}addFeature(e){let t=this.featureMap[e.chr];t||(t=[],this.featureMap[e.chr]=t),t.push(e),t.sort(((e,t)=>e.start-t.start))}removeFeature({chr:e,start:t,end:i}){if(this.featureMap[e]){const n=`${e}-${t}-${i}`;this.featureMap[e]=this.featureMap[e].filter((e=>n!==`${e.chr}-${e.start}-${e.end}`))}}}class Cu{constructor(t,i,n,r){this.rulerViewport=t,this.rulerSweeper=e({class:"igv-ruler-sweeper"}),i.appendChild(this.rulerSweeper),this.browser=n,this.referenceFrame=r,this.isMouseHandlers=void 0,this.addBrowserObserver()}addBrowserObserver(){this.boundObserverHandler=(()=>{this.referenceFrame&&(hu.isWholeGenomeView(this.referenceFrame.chr)?this.removeMouseHandlers():this.addMouseHandlers())}).bind(this),this.browser.on("locuschange",this.boundObserverHandler)}removeBrowserObserver(){this.browser.off("locuschange",this.boundObserverHandler)}addMouseHandlers(){if(!0===this.isMouseHandlers)return;let e,t,i,n,r,s;this.boundContentMouseDownHandler=function(s){e=!0,t=!0;const{x:o}=a(s,this.rulerViewport.contentDiv);n=i=o,r=1,this.rulerSweeper.style.display="block",this.rulerSweeper.style.backgroundColor=!0===s.shiftKey?Fu:"rgba(68, 134, 247, 0.25)",this.rulerSweeper.style.left=`${n}px`,this.rulerSweeper.style.width=`${r}px`}.bind(this),this.rulerViewport.contentDiv.addEventListener("mousedown",this.boundContentMouseDownHandler),this.boundDocumentMouseMoveHandler=function(o){let c;if(e&&t){const{x:e}=a(o,this.rulerViewport.contentDiv);c=Math.max(Math.min(e,this.rulerViewport.contentDiv.clientWidth),0),s=c-i,r=Math.abs(s),this.rulerSweeper.style.width=`${r}px`,s<0&&(n=i+s,this.rulerSweeper.style.left=`${n}px`)}}.bind(this),document.addEventListener("mousemove",this.boundDocumentMouseMoveHandler),this.boundDocumentMouseUpHandler=function(i){let s;if(!0===e&&!0===t&&(e=t=void 0,this.rulerSweeper.style.display="none",r>1)){s={start:Math.floor(this.referenceFrame.calculateEnd(n)),end:Math.floor(this.referenceFrame.calculateEnd(n+r))};!0===i.shiftKey?this.browser.roiManager.updateUserDefinedROISet(Object.assign({chr:this.referenceFrame.chr},s)):(Va(this.browser.genome.getChromosome(this.referenceFrame.chr).bpLength,s,this.browser.minimumBases()),function(e,t,i){e.start=Math.round(t.start),e.end=Math.round(t.end),e.bpPerPixel=(e.end-e.start)/i}(this.referenceFrame,s,this.rulerViewport.contentDiv.clientWidth),this.browser.updateViews(this.referenceFrame))}}.bind(this),document.addEventListener("mouseup",this.boundDocumentMouseUpHandler),this.isMouseHandlers=!0}removeMouseHandlers(){this.rulerViewport.contentDiv.removeEventListener("mousedown",this.boundContentMouseDownHandler),document.removeEventListener("mousemove",this.boundDocumentMouseMoveHandler),document.removeEventListener("mouseup",this.boundDocumentMouseUpHandler),this.isMouseHandlers=!1}dispose(){this.removeBrowserObserver(),this.removeMouseHandlers(),this.rulerSweeper.remove()}}function _u(e){if(xu[e])return xu[e];if(xu["chr"+e]){const t=xu["chr"+e];return xu[e]=t,t}{const t=_s.randomRGB(0,255);return xu[e]=t,t}}const xu={chrX:"rgb(204, 153, 0)",chrY:"rgb(153, 204, 0)",chrUn:"rgb(50, 50, 50)",chr1:"rgb(80, 80, 255)",chrI:"rgb(139, 155, 187)",chr2:"rgb(206, 61, 50)",chrII:"rgb(206, 61, 50)",chr2a:"rgb(216, 71, 60)",chr2b:"rgb(226, 81, 70)",chr3:"rgb(116, 155, 88)",chrIII:"rgb(116, 155, 88)",chr4:"rgb(240, 230, 133)",chrIV:"rgb(240, 230, 133)",chr5:"rgb(70, 105, 131)",chr6:"rgb(186, 99, 56)",chr7:"rgb(93, 177, 221)",chr8:"rgb(128, 34, 104)",chr9:"rgb(107, 215, 107)",chr10:"rgb(213, 149, 167)",chr11:"rgb(146, 72, 34)",chr12:"rgb(131, 123, 141)",chr13:"rgb(199, 81, 39)",chr14:"rgb(213, 143, 92)",chr15:"rgb(122, 101, 165)",chr16:"rgb(228, 175, 105)",chr17:"rgb(59, 27, 83)",chr18:"rgb(205, 222, 183)",chr19:"rgb(97, 42, 121)",chr20:"rgb(174, 31, 99)",chr21:"rgb(231, 199, 111)",chr22:"rgb(90, 101, 94)",chr23:"rgb(204, 153, 0)",chr24:"rgb(153, 204, 0)",chr25:"rgb(51, 204, 0)",chr26:"rgb(0, 204, 51)",chr27:"rgb(0, 204, 153)",chr28:"rgb(0, 153, 204)",chr29:"rgb(10, 71, 255)",chr30:"rgb(71, 117, 255)",chr31:"rgb(255, 194, 10)",chr32:"rgb(255, 209, 71)",chr33:"rgb(153, 0, 51)",chr34:"rgb(153, 26, 0)",chr35:"rgb(153, 102, 0)",chr36:"rgb(128, 153, 0)",chr37:"rgb(51, 153, 0)",chr38:"rgb(0, 153, 26)",chr39:"rgb(0, 153, 102)",chr40:"rgb(0, 128, 153)",chr41:"rgb(0, 51, 153)",chr42:"rgb(26, 0, 153)",chr43:"rgb(102, 0, 153)",chr44:"rgb(153, 0, 128)",chr45:"rgb(214, 0, 71)",chr46:"rgb(255, 20, 99)",chr47:"rgb(0, 214, 143)",chr48:"rgb(20, 255, 177)"};let ku,Iu;class Su extends mu{constructor(e,t,i,n){super(e,t,i,n)}get contentDiv(){return this.$viewport.get(0)}initializationHelper(){let e;this.$multiLocusCloseButton=Bt("<div>",{class:"igv-multi-locus-close-button"}),this.$viewport.append(this.$multiLocusCloseButton),this.$multiLocusCloseButton.get(0).appendChild(l("times-circle")),this.$multiLocusCloseButton.click((()=>{this.browser.removeMultiLocusPanel(this.referenceFrame)})),this.$rulerLabel=Bt("<div>",{class:"igv-multi-locus-ruler-label"}),this.$viewport.append(this.$rulerLabel),e=document.createElement("div"),this.$rulerLabel.append(Bt(e)),this.$rulerLabel.get(0).addEventListener("click",(async e=>{e.stopPropagation(),await this.browser.gotoMultilocusPanel(this.referenceFrame)})),this.$tooltip=Bt("<div>",{class:"igv-ruler-tooltip"}),this.$tooltip.height(this.$viewport.height()),this.$viewport.append(this.$tooltip),this.$tooltipContent=Bt("<div>"),this.$tooltip.append(this.$tooltipContent),this.rulerSweeper=new Cu(this,this.$viewport.get(0).parentElement,this.browser,this.referenceFrame),this.attachMouseHandlers(hu.isWholeGenomeView(this.referenceFrame.chr)),this.$tooltip.hide(),this.dismissLocusLabel()}presentLocusLabel(e){this.$multiLocusCloseButton.show(),this.$rulerLabel.show(),this.$rulerLabel.get(0).style.backgroundColor=_u(this.referenceFrame.chr);const t=this.$rulerLabel.get(0).querySelector("div"),{width:i}=this.$rulerLabel.get(0).getBoundingClientRect();t.innerHTML=`${this.referenceFrame.getMultiLocusLabel(e)}`;const{width:n}=t.getBoundingClientRect();n/i>.5&&(t.innerHTML=`${this.referenceFrame.getMultiLocusLabelBPLengthOnly(e)}`)}dismissLocusLabel(){this.$rulerLabel.hide(),this.$multiLocusCloseButton.hide()}attachMouseHandlers(e){if(this.namespace=`.ruler_track_viewport_${this.browser.referenceFrameList.indexOf(this.referenceFrame)}`,this.$viewport.off(this.namespace),!0===e){const e=this.browser.referenceFrameList.indexOf(this.referenceFrame),t=`click${this.namespace}`;this.$viewport.on(t,(t=>{const{x:i}=a(t,this.$viewport.get(0)),n=Math.round(this.referenceFrame.start+this.referenceFrame.toBP(i));let r;const{chr:s}=this.browser.genome.getChromosomeCoordinate(n);if(1===this.browser.referenceFrameList.length)r=s;else{let t=this.browser.referenceFrameList.map((({locusSearchString:e})=>e));t[e]=s,r=t.join(" ")}this.browser.search(r)})),this.$viewport.get(0).style.cursor="pointer"}else this.$viewport.get(0).style.cursor="default"}mouseMove(e){if(!0===this.browser.doShowCursorGuide){void 0===Iu?(Iu=this,this.$tooltip.show()):Iu.guid!==this.guid?(Iu.$tooltip&&Iu.$tooltip.hide(),this.$tooltip.show(),Iu=this):this.$tooltip.show();if(this.browser.isMultiLocusWholeGenomeView()||hu.isWholeGenomeView(this.referenceFrame.chr))return void this.$tooltip.hide();const{x:t}=a(e,this.$viewport.get(0)),{start:i,end:n,bpPerPixel:r}=this.referenceFrame,s=Math.round(.5+i+Math.max(0,t)*r);this.$tooltipContent.text(Rt(s));const{width:o}=this.$tooltipContent.get(0).getBoundingClientRect(),{width:c}=this.$viewport.get(0).getBoundingClientRect();return this.$tooltip.css({left:`${ys.clamp(t,0,c-o)}px`}),clearTimeout(ku),ku=setTimeout((()=>{this.$tooltip&&this.$tooltip.hide()}),1e4),{start:i,bp:s,end:n}}}startSpinner(){}stopSpinner(){}dispose(){this.rulerSweeper.dispose(),super.dispose()}}class Eu extends mu{featureCache=new Nu;constructor(e,t,i,n){super(e,t,i,n)}initializationHelper(){this.canvas=document.createElement("canvas"),this.canvas.className="igv-ideogram-canvas",this.$viewport.append(Bt(this.canvas)),this.ideogram_ctx=this.canvas.getContext("2d"),this.addMouseHandlers()}async getFeatures(e,t,i,n){return this.featureCache.containsRange(e)?this.featureCache.get(e):this.loadFeatures()}async loadFeatures(){const e=this.referenceFrame.chr,t=await this.referenceFrame.genome.getCytobands(e);return this.featureCache.set(e,t),t}repaint(){if(void 0===this.featureCache)return;const{width:e,height:t}=this.$viewport[0].getBoundingClientRect();xo.configureHighDPICanvas(this.ideogram_ctx,e,t);const i=this.referenceFrame.chr,n=this.featureCache.get(i),r={context:this.ideogram_ctx,pixelWidth:e,pixelHeight:t,referenceFrame:this.referenceFrame,features:n};this.trackView.track.draw(r)}addMouseHandlers(){this.addViewportClickHandler(this.$viewport.get(0))}addViewportClickHandler(e){this.boundClickHandler=function(e){const{xNormalized:t,width:i}=a(e,this.ideogram_ctx.canvas),{bpLength:n}=this.browser.genome.getChromosome(this.referenceFrame.chr),r=this.referenceFrame.bpPerPixel*i/n;let s=t;s-r/2<0&&(s=r/2);s+r/2>1&&(s=1-r/2);const o=Math.round((s-r/2)*n),c=Math.round((s+r/2)*n);this.referenceFrame.start=o,this.referenceFrame.end=c,this.referenceFrame.bpPerPixel=(c-o)/i,this.browser.updateViews(this.referenceFrame,this.browser.trackViews,!0)}.bind(this),e.addEventListener("click",this.boundClickHandler)}setWidth(e){this.$viewport.width(e)}renderSVGContext(e,{deltaX:t,deltaY:i},n=!0){const{width:r,height:o}=this.$viewport.get(0).getBoundingClientRect(),a=`ideogram_referenceFrame_${this.browser.referenceFrameList.indexOf(this.referenceFrame)}_guid_${s()}`,c=t,l=i+this.contentTop,h=-this.contentTop;e.saveWithTranslationAndClipRect(a,c,l,r,o,h),this.trackView.track.draw({context:e,pixelWidth:r,pixelHeight:o,referenceFrame:this.referenceFrame,features:this.featureCache.get(this.referenceFrame.chr)}),e.restore()}startSpinner(){}stopSpinner(){}}class Nu{features=new Map;containsRange(e){return this.features.has(e)}set(e,t){this.features.set(e,t)}get(e){return this.features.get(e)}}function Bu(e,t,i,n){if("ruler"===e.track.type)return new Su(e,t,i,n);if("ideogram"===e.track.id)return new Eu(e,t,i,n);{const r=new mu(e,t,i,n);return i.viewport=r,r}}const Mu=["rgb(255, 0, 0)","rgb(0, 255, 0)","rgb(0, 0, 255)","rgb(255, 0, 255)","rgb(0, 255, 255)","rgb(128, 0, 128)","rgb(255, 165, 0)","rgb(255, 105, 180)","rgb(255, 127, 80)","rgb(220, 20, 60)","rgb(255, 99, 71)","rgb(173, 216, 230)","rgb(144, 238, 144)","rgb(224, 255, 255)","rgb(250, 250, 210)","rgb(152, 251, 152)","rgb(70, 130, 180)","rgb(102, 205, 170)"].map((e=>{const[t,i,n]=e.split(","),[r,s]=t.split("("),[o,a]=n.split(")");return[s,i,o]})),Ru=ro("magnesium"),Du=["#sampleTable","#sampleMapping","#colors"];class Tu{static emptySpaceReplacement="|";sampleDictionary={};attributeNames=[];sampleMappingDictionary={};colorDictionary={};attributeRangeLUT={};constructor(e){e.tracks.some((e=>"function"==typeof e.getSamples)).length>0&&e.sampleInfoControl.setButtonVisibility(!0),this.initialize()}initialize(){this.sampleInfoFiles=[],this.attributeNames=[],this.sampleDictionary={},this.sampleMappingDictionary={},this.colorDictionary={},this.attributeRangeLUT={},this.initialized=!1}get attributeCount(){return this.attributeNames?this.attributeNames.length:0}isInitialized(){return this.initialized}hasAttributes(){return this.attributeCount>0}getAttributes(e){const t=0===Object.keys(this.sampleMappingDictionary)?e:this.sampleMappingDictionary[e]||e;return this.sampleDictionary[t]}async loadSampleInfoFile(e){try{const t=await Qs.loadString(e);this.#p(t),this.sampleInfoFiles.push(e)}catch(e){console.error(e.message)}}#p(e){const t=function(e){const t={},i=e.split(/\r?\n|\r/).map((e=>e.trim())).filter((e=>""!==e));let n;Du.includes(i[0])||(n="#sampleTable",t[n]=[]);for(const e of i)Du.includes(e)?(n=e,t[n]=[]):n&&!1===e.startsWith("#")&&t[n].push(e);return t}(e);for(const[e,i]of Object.entries(t))switch(e){case"#sampleTable":this.#g(i);break;case"#sampleMapping":this.#m(i);break;case"#colors":this.#w(i)}this.initialized=!0}getAttributeColor(e,t){let i;if("-"===t)i=ro("snow");else if("string"==typeof t&&this.colorDictionary[t])i=this.colorDictionary[t]();else if(this.colorDictionary[e])i=this.colorDictionary[e](t);else if("string"==typeof t)i="NA"===t?Ru:function(e){let t=0;for(let i=0;i<e.length;i++)t=e.charCodeAt(i)+((t<<5)-t);let i=[];for(let e=0;e<3;e++){const n=t>>8*e&255;i.push(n)}return`rgb(${i.join(", ")})`}(t);else{const[n,r]=this.attributeRangeLUT[e],s=.2,o=Math.max((t-n)/(r-n),s),[a,c,l]=Mu[Object.keys(this.attributeRangeLUT).indexOf(e)];i=`rgba(${a},${c},${l},${o})`}return i}getSortedSampleKeysByAttribute(e,t,i){i=i||1;const n=e.filter((e=>"number"==typeof this.getAttributes(e)[t])),r=e.filter((e=>"string"==typeof this.getAttributes(e)[t])),s=(e,n)=>{const r=this.getAttributes(e)[t],s=this.getAttributes(n)[t];return"string"==typeof r&&"string"==typeof s?i*r.localeCompare(s):"number"==typeof r&&"number"==typeof s?i*(r-s):void 0};return n.sort(s),r.sort(s),-1===i?[...n,...r]:[...r,...n]}toJSON(){const e=[];for(const t of this.sampleInfoFiles){const i={url:t},n=Hl.localFileInspection(i);e.push(n)}return e}#g(e){const t=e.shift().split("\t").filter((e=>e.length>0));t.shift();const i=t.map((e=>e.split(" ").join(Tu.emptySpaceReplacement))),n=e.filter((e=>e.length>0));let r;for(const e of n){const t=e.split("\t"),n=t.shift();void 0===r&&(r={}),r[n]={};for(let e=0;e<t.length;e++){const s={};""===t[e]?s[i[e]]="-":s[i[e]]=t[e],Object.assign(r[n],s)}}for(const[e,t]of Object.entries(r))r[e]=zu(t);const s=function(e,t){const i={};for(const n of Object.values(t))for(const t of e){let e=n[t];void 0===i[t]&&(i[t]=[]),i[t].push(e)}const n=e=>"number"==typeof e,r=e=>"string"==typeof e;for(const e of Object.keys(i)){const t=i[e],s=new Set(t),o=Array.from(s);if(!0===o.some(r)&&!0===o.some(n)?i[e]=o.filter((e=>!r(e))):i[e]=o,!i[e].some(r)){const t=i[e].slice();i[e]=[Math.min(...t),Math.max(...t)]}}return i}(i,r);Lu(this.attributeRangeLUT,s);const o=new Set(this.attributeNames);for(const e of i)o.has(e)||this.attributeNames.push(e);Lu(this.sampleDictionary,r)}#m(e){for(const t of e){const[e,i]=t.split("\t");this.sampleMappingDictionary[e]=i}}#w(e){const t=(e,t,i)=>{let n;switch(t){case 0:n=e.split(" ").join(Tu.emptySpaceReplacement);break;case 1:n=e.includes(":")?e.split(":").map((e=>parseFloat(e))):e;break;case 2:case 3:n=`rgb(${e})`}return n},i=e.map((e=>e.split("\t").map(t))),n=i.filter((e=>3===e.length&&!e.includes("*"))).filter((([e,t,i])=>!Array.isArray(t))),r={};for(const e of n){const[t,i,n]=e;void 0===r[t]&&(r[t]={}),r[t][i.toUpperCase()]=n}for(const[e,t]of Object.entries(r)){const i=Object.assign({},t);this.colorDictionary[e]=e=>{const t=e.toUpperCase();return i[t]||ro("snow")}}const s=i.filter((e=>Array.isArray(e[1])));for(const e of s){const[t,i]=e[1],n=e[0];if(3===e.length){const[r,s,o]=uo(e[2]);this.colorDictionary[n]=e=>{e=ys.clamp(e,t,i);return lo(r,s,o,(e-t)/(i-t))}}else if(4===e.length){const[t,i]=e[1],[n,r,s,o]=e;this.colorDictionary[n]=e=>{e=ys.clamp(e,t,i);return fo(s,o,(e-t)/(i-t))}}}const o=i.filter((e=>3===e.length&&e.includes("*")));for(const e of o)if("*"===e[1]){const[t,i,n]=e;this.colorDictionary[t]=e=>{if("NA"===e)return Ru;{const[i,r]=this.attributeRangeLUT[t],s=(e-i)/(r-i),[o,a,c]=uo(n);return lo(o,a,c,s)}}}else if("*"===e[0]){const[t,i,n]=e;this.colorDictionary[i]=()=>n}}}function Lu(e,t){for(const[i,n]of Object.entries(t))i in e&&e[i]===n||(e[i]=n)}function zu(e){const t=Object.assign({},e);for(const[e,i]of Object.entries(t))"string"!=typeof i||isNaN(i)||(t[e]=Number(i));return t}const Hu=16,Pu=Rt;class Ou{constructor(e){this.browser=e,this.height=40,this.name="",this.id="ruler",this.disableButtons=!0,this.ignoreTrackMenu=!0,this.order=.01*Number.MIN_SAFE_INTEGER,this.removable=!1,this.type="ruler"}async getFeatures(e,t,i){return[]}computePixelHeight(e){return this.height}draw({context:e,referenceFrame:t,pixelWidth:i,pixelHeight:n,bpPerPixel:r,bpStart:s}){hu.isWholeGenomeView(t.chr)?this.drawWholeGenome({context:e,pixelWidth:i,pixelHeight:n,bpPerPixel:r}):this.doDraw({context:e,referenceFrame:t,pixelWidth:i,pixelHeight:n,bpStart:s})}drawWholeGenome({context:e,pixelWidth:t,pixelHeight:i,bpPerPixel:n}){e.save(),xo.fillRect(e,0,0,t,i,{fillStyle:"white"});for(let t of this.browser.genome.wgChromosomeNames){let r=this.browser.genome.getCumulativeOffset(t),s=this.browser.genome.getChromosome(t).bpLength,o=Math.round(r/n),a=Math.round(s/n);this.renderChromosomeRect(e,o,0,a,i,t)}e.restore()}doDraw({context:e,referenceFrame:t,pixelWidth:i,pixelHeight:n,bpStart:r}){e.clearRect(0,0,i,n);const s=function(e,t){if(e<10)return new Uu(1,"bp",1);const i=Math.floor(Math.log10(e));let n="bp",r=1;i>9?(n="gb",r=1e9):i>6?(n="mb",r=1e6):i>3&&(n="kb",r=1e3);const s=Math.pow(10,i-1),o=e/s,a=75,c=Math.pow(10,i-1),l=Math.pow(10,i)/2;return new Uu(o<a&&!0!==t?c:l,n,r)}(Math.floor(t.toBP(i)),e.isSVG);let o=Math.floor(r/s.majorTick)-1;const{tickDelta:a,labelLength:c}=function(e,t,i,n,r){const s=l(t,c(1+n,r),i)-l(t,c(n,r),i),o=`${Rt(Math.floor(c(n,r)/r.unitMultiplier))} ${r.majorUnit}`,a=Math.floor(e.measureText(o).width);return{tickDelta:s,labelLength:a};function c(e,t){return Math.floor(e*t.majorTick)}function l(e,t,i){return Math.round(e.toPixels(t-1-i+.5))}}(e,t,r,o,s);let l,h;this.browser.referenceFrameList.indexOf(t);let d=a;const u=.25*c;do{h=Math.floor(o*s.majorTick);const i=`${Rt(Math.floor(h/s.unitMultiplier))} ${s.majorUnit}`;l=Math.round(t.toPixels(h-1-r+.5));const n=Math.round(l-e.measureText(i).width/2);n>0&&u+c<=d&&(xo.fillText(e,i,n,this.height-8),d=0),l>0&&xo.strokeLine(e,l,this.height-6,l,this.height-2),h=Math.floor((1+o)*s.majorTick);let f=l+(Math.round(t.toPixels(h-1-r+.5))-l)/2;f>0&&xo.strokeLine(e,f,this.height-6,f,this.height-2),++o,d+=a}while(l<i);xo.strokeLine(e,0,this.height-2,i,this.height-2)}renderChromosomeRect(e,t,i,n,r,s){e.textAlign="center",e.textBaseline="middle",e.font="12px sans-serif",xo.strokeLine(e,t+n,i,t+n,i+r,{strokeStyle:_s.greyScale(191)});const o=(s=this.browser.genome.getChromosomeDisplayName(s)).startsWith("chr")?s.substring(3):s;n>e.measureText(o).width&&xo.fillText(e,o,t+n/2,i+r/2,{fillStyle:_s.greyScale(68)})}get supportsWholeGenome(){return!0}dispose(){}}class Uu{constructor(e,t,i){this.majorTick=e,this.minorTick=e/10,this.majorUnit=t,this.unitMultiplier=i}description(e){console.log((e||"")+" tick "+Pu(this.majorTick)+" label width "+Pu(this.labelWidthBP)+" multiplier "+this.unitMultiplier)}}class qu{constructor(t,i,n){this.guid=s(),this.trackView=t,this.browser=t.browser,this.viewport=e({class:"igv-viewport"}),i.appendChild(this.viewport),this.viewport.style.height=`${t.track.height}px`,null===this.viewport.previousElementSibling&&(this.viewport.style.zIndex=16,this.viewport.style.overflow="visible"),this.canvas=document.createElement("canvas"),this.viewport.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.ctx.font="10px verdana",this.contentTop=0,this.hitList=void 0,this.sortDirection=1,this.setWidth(n),this.addMouseHandlers()}resizeCanvas(){const e=window.devicePixelRatio,t=this.browser.getSampleInfoViewportWidth();let i;if(this.browser.trackViews.length>1&&null===this.viewport.previousElementSibling){const[e,t]=[this.browser.ideogramTrackView.track,this.browser.rulerTrackView.track];i=e.height+t.height}else i=this.viewport.clientHeight;if(this.canvas.width!==t*e||this.canvas.height!==i*e){const n=this.canvas;n.width=t*e,n.height=i*e,n.style.width=`${t}px`,n.style.height=`${i}px`,this.ctx=this.canvas.getContext("2d"),this.ctx.scale(e,e),null===this.viewport.previousElementSibling&&xo.fillRect(this.ctx,0,0,this.ctx.canvas.width,this.ctx.canvas.height,{fillStyle:ro("snow")})}}setTop(e){"function"==typeof this.trackView.track.getSamples&&(this.contentTop=e,this.repaint())}setWidth(e){this.viewport.innerWidth=e,this.resizeCanvas()}setHeight(e){const t=this.browser.getSampleInfoViewportWidth();this.viewport.style.width=`${t}px`,this.viewport.style.height=`${e}px`;const i=window.devicePixelRatio;this.canvas.width=t*i,this.canvas.height=e*i,this.canvas.style.width=`${t}px`,this.canvas.style.height=`${e}px`,this.ctx=this.canvas.getContext("2d"),this.ctx.scale(i,i),null===this.viewport.previousElementSibling&&xo.fillRect(this.ctx,0,0,this.ctx.canvas.width,this.ctx.canvas.height,{fillStyle:ro("snow")})}async repaint(){if(this.resizeCanvas(),"function"==typeof this.trackView.track.getSamples){const e=this.trackView.track.getSamples();e.names&&e.names.length>0&&this.draw({context:this.ctx,samples:e})}else null===this.viewport.previousElementSibling&&(this.browser.rulerTrackView&&this.browser.rulerTrackView.setTrackHeight(!0===this.browser.sampleInfoControl.showSampleInfo?this.calculateSampleInfoColumnHeight():40,!0),this.renderSampleInfoColumns(this.ctx))}calculateSampleInfoColumnHeight(){const e=this.browser.sampleInfo.attributeNames.map((e=>this.ctx.measureText(e).width));return 4+Math.min(Math.max(...e),128)}draw({context:e,samples:t}){if(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillStyle=ro("snow"),e.fillRect(0,0,e.canvas.width,e.canvas.height),t&&t.names.length>0){const i=this.browser.sampleInfo.attributeNames,n=this.viewport.getBoundingClientRect().height;let r=1;const s=t.height;r=s-2*r<=1?0:1;let o=this.contentTop+t.yOffset;this.hitList={};for(const a of t.names){if(o>n)break;if(o+s>0){const t=this.browser.sampleInfo.getAttributes(a);if(t){const n=Object.entries(t);for(const t of n){const[n,a]=t;e.fillStyle=this.browser.sampleInfo.getAttributeColor(n,a);const c=8+i.indexOf(n)*Hu,l=o+r,h=s-2*r;e.fillRect(c,l,15,h);const d=`${Math.floor(c)}#${Math.floor(l)}#16#${Math.ceil(h)}`;this.hitList[d]=`${n}#${a}`}}}o+=s}}}renderSampleInfoColumns(e){const t=(e,t,i,n,r,s)=>{e.save(),e.font="10px verdana",e.translate(i+r/2,n+s),e.rotate(-Math.PI/2),e.textAlign="left",e.fillStyle=ro("lead"),e.fillText(t,2,2),e.restore()},i=this.browser.sampleInfo.attributeNames;this.hitList={};for(let n=0;n<i.length;n++){const r=8+n*Hu,s=15,o=Math.round(e.canvas.height/window.devicePixelRatio);xo.fillRect(e,r,0,s,o,{fillStyle:ro("snow")}),t(e,i[n],r,0,s,o);const a=`${Math.floor(r)}#0#${s}#${Math.ceil(o)}`;this.hitList[a]=`${i[n]}`}}renderSVGContext(e,{deltaX:t,deltaY:i}){if("function"==typeof this.trackView.track.getSamples){const n=this.trackView.track.getSamples(),r=0,{width:o,height:a}=this.viewport.getBoundingClientRect(),c=`${(this.trackView.track.name||this.trackView.track.id).replace(/\W/g,"")}_sample_names_guid_${s()}`;e.saveWithTranslationAndClipRect(c,t,i+r,o,a,-r),this.draw({context:e,samples:n}),e.restore()}}addMouseHandlers(){this.addMouseMoveHandler()}addMouseMoveHandler(){this.boundMouseMoveHandler=function(e){if(this.hitList){const t=Object.entries(this.hitList);if(null===this.viewport.previousElementSibling){const i=(t,i)=>{const{marginTop:n}=window.getComputedStyle(i),{x:r,y:s}=a(e,this.browser.columnContainer.querySelector(".igv-sample-info-column"));return{x:Math.floor(r),y:Math.floor(s-parseInt(n,10))}},n=this.browser.columnContainer.querySelector(".igv-sample-info-column"),{x:r,y:s}=i(n,this.viewport);n.setAttribute("title","");for(const[e,i]of t){const[t,o,a,c]=e.split("#").map((e=>parseInt(e,10)));if(!(r<t||r>t+a||s<o||s>o+c)){n.setAttribute("title",`${i}`);break}}}else{const{x:i,y:n}=a(e,this.viewport);this.viewport.setAttribute("title","");for(const[e,r]of t){const[t,s,o,a]=e.split("#").map((e=>parseInt(e,10)));if(!(i<t||i>t+o||n<s||n>s+a)){const[e,t]=r.split("#");this.viewport.setAttribute("title",`${e.split(Tu.emptySpaceReplacement).join(" ")}: ${"-"===t?"":t}`);break}}}}}.bind(this),this.viewport.addEventListener("mousemove",this.boundMouseMoveHandler)}removeMouseHandlers(){this.viewport.removeEventListener("mousemove",this.boundMouseMoveHandler)}dispose(){this.removeMouseHandlers(),this.viewport.remove()}show(){this.viewport.style.display="block"}hide(){this.viewport.style.display="none"}}class Qu{constructor(t,i,n,r){this.guid=s(),this.trackView=t,this.browser=t.browser,this.viewport=e({class:"igv-viewport"}),i.appendChild(this.viewport),t.track.height&&(this.viewport.style.height=`${t.track.height}px`),this.canvas=document.createElement("canvas"),this.viewport.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.trackScrollDelta=0,this.contentTop=0,this.hitList=void 0,this.sortDirection=1,this.setWidth(r),this.addMouseHandlers()}checkCanvas(){const e=this.browser.sampleNameViewportWidth||0;this.ctx.canvas.width=e*window.devicePixelRatio,this.ctx.canvas.style.width=`${e}px`,this.ctx.canvas.height=this.viewport.clientHeight*window.devicePixelRatio,this.ctx.canvas.style.height=`${this.viewport.clientHeight}px`,this.ctx.scale(window.devicePixelRatio,window.devicePixelRatio)}setTop(e){if("function"==typeof this.trackView.track.getSamples){this.contentTop=e;const t=this.trackView.track.getSamples();this.repaint(t)}}setWidth(e){this.viewport.innerWidth=e,this.checkCanvas()}async repaint(e){if(e.names.length>0&&!0===this.browser.showSampleNames&&(this.checkCanvas(),this.draw({context:this.ctx,samples:e}),void 0===this.browser.sampleNameViewportWidth)){const t=e.names.map((e=>this.ctx.measureText(e).width));this.browser.sampleNameViewportWidth=Math.min(200,4+Math.ceil(Math.max(...t))),this.browser.layoutChange()}}draw({context:e,samples:t}){if(xo.fillRect(e,0,0,e.canvas.width,t.height,{fillStyle:ro("snow")}),t&&t.names.length>0){const i=this.viewport.getBoundingClientRect().height,n=t.height,r=n-2<=1?0:1;let s=this.contentTop+t.yOffset;this.hitList={};for(const o of t.names){if(s>i)break;if(s+n>0){const t=n-2*r;Vu(e,o,0+2,s+r,e.canvas.width,t)}s+=n}}}renderSVGContext(e,{deltaX:t,deltaY:i}){if("function"==typeof this.trackView.track.getSamples){const n=this.trackView.track.getSamples(),r=0,{width:o,height:a}=this.viewport.getBoundingClientRect(),c=`${(this.trackView.track.name||this.trackView.track.id).replace(/\W/g,"")}_sample_names_guid_${s()}`;e.saveWithTranslationAndClipRect(c,t,i+r,o,a,-r),this.draw({context:e,samples:n}),e.restore()}}addMouseHandlers(){this.boundClickHandler=function(e){e.preventDefault();const t={label:"Name Panel Width",value:this.browser.sampleNameViewportWidth,callback:e=>{this.browser.sampleNameViewportWidth=parseInt(e),this.browser.layoutChange()}};this.browser.inputDialog.present(t,e)}.bind(this),this.viewport.addEventListener("contextmenu",this.boundClickHandler),this.boundMouseMoveHandler=function(e){if(this.hitList){const t=Object.entries(this.hitList),{x:i,y:n}=a(e,this.viewport);this.viewport.setAttribute("title","");for(const[e,r]of t){const[t,s,o,a]=e.split("#").map((e=>parseInt(e,10)));if(!(i<t||i>t+o||n<s||n>s+a)){this.viewport.setAttribute("title",`${r}`);break}}}}.bind(this),this.viewport.addEventListener("mousemove",this.boundMouseMoveHandler)}removeMouseHandlers(){this.viewport.removeEventListener("contextmenu",this.boundClickHandler),this.viewport.removeEventListener("mousemove",this.boundMouseMoveHandler)}dispose(){this.removeMouseHandlers(),this.viewport.remove()}}function Vu(e,t,i,n,r,s){const o=Math.min(s,10);e.font=`${o}px sans-serif`,e.textAlign="start",e.fillStyle=ro("lead");const a=i,c=e.measureText(t),l=n+s/2+(c.actualBoundingBoxAscent+c.actualBoundingBoxDescent)/2;e.fillText(t,a,l)}class ju{constructor(t){this.popover=e({class:"igv-menu-popup"}),t.appendChild(this.popover),this.parent=t;const i=e({class:"igv-menu-popup-header"});this.popover.appendChild(i),u(i,(()=>this.popover.style.display="none")),this.popoverContent=e(),this.popover.appendChild(this.popoverContent),p(this.popover,i),i.addEventListener("click",(e=>{e.stopPropagation(),e.preventDefault()})),this.popover.style.display="none"}presentMenuList(e,t){if(Wu(this.parent),t.length>0){this.popoverContent.innerHTML="";const i=this.parseMenuList(e,t);for(let e of i){e.init&&e.init();let t=e.object;0===i.indexOf(e)&&t.removeClass("igv-track-menu-border-top"),t.hasClass("igv-track-menu-border-top")||t.hasClass("igv-menu-popup-check-container")||t.is("div")&&t.addClass("igv-menu-popup-shim"),this.popoverContent.appendChild(t.get(0))}this.popover.style.display="flex";const{width:n}=this.popover.getBoundingClientRect();this.popover.style.left=-n+"px",this.popover.style.top="0px"}}parseMenuList(e,t){return t.map(((t,i)=>{let n;if(t.name?(n=Bt("<div>"),n.text(t.name)):t.object?n=t.object:"string"==typeof t.label?(n=Bt("<div>"),n.html(t.label)):"string"==typeof t&&(n=t.startsWith("<")?Bt(t):Bt("<div>"+t+"</div>")),0===i&&n.addClass("igv-track-menu-border-top"),t.click||t.dialog){const i=i=>{if(i.preventDefault(),i.stopPropagation(),t.click)if(e.track.selected){const n=e.browser.getSelectedTrackViews();if(!0===t.doAllMultiSelectedTracks)t.click.call(e.track,i);else if("removeTrack"===t.menuItemType){const r=()=>{e.browser.overlayTrackButton.setVisibility(!1);for(const{track:e}of n)t.click.call(e,i)},s={html:`Are you sure you want to delete ${n.length} tracks?`,callback:r};e.browser.menuUtils.dialog.present(s,i)}else for(const{track:e}of n)t.click.call(e,i)}else t.click.call(e.track,i);else t.dialog&&t.dialog.call(e.track,i);this.popover.style.display="none"};n.on("click",i),n.on("touchend",(e=>i(e))),n.on("mouseup",(function(e){e.preventDefault(),e.stopPropagation()}))}return{object:n,init:t.init||void 0}}))}presentTrackContextMenu(t,n){this.popoverContent.innerHTML="";const r=function(t,n){return t.map((t=>{let r;if("string"==typeof t&&"<hr/>"===t)r=document.createElement("hr");else if("string"==typeof t)r=e({class:"context-menu"}),r.innerHTML=t;else if("Node"==typeof t)r=t;else{if("function"==typeof t.init&&t.init(),"checkbox"===t.type)r=Dl("Show all bases",t.value);else if("color"===t.type){const s=new Da(n.parentElement);s.configure({color:"grey"}),r=e({class:"context-menu"}),"string"==typeof t.label&&(r.innerHTML=t.label);const o=e=>{s.show(),i(n),e.preventDefault(),e.stopPropagation()};r.addEventListener("click",o),r.addEventListener("touchend",o),r.addEventListener("mouseup",(function(e){e.preventDefault(),e.stopPropagation()}))}else r=e({class:"context-menu"}),"string"==typeof t.label&&(r.innerHTML=t.label);if(t.click&&"color"!==t.type){function a(e){t.click(),i(n),e.preventDefault(),e.stopPropagation()}r.addEventListener("click",a),r.addEventListener("touchend",a),r.addEventListener("mouseup",(function(e){e.preventDefault(),e.stopPropagation()}))}}return{el:r,init:t.init}}))}(n,this.popover);for(let{el:e}of r)this.popoverContent.appendChild(e);!function(e,t){t.style.display="flex";const{x:i,y:n}=a(e,t.parentNode),{width:r}=t.getBoundingClientRect(),s=i+r,{width:o}=t.parentNode.getBoundingClientRect();t.style.left=`${s>o?i-(s-o):i}px`,t.style.top=`${n}px`}(t,this.popover)}hide(){this.popover.style.display="none"}dispose(){this.popoverContent.innerHTML="",this.popover.innerHTML="",Object.keys(this).forEach((function(e){this[e]=void 0}))}}const Wu=e=>{const t=e.querySelectorAll(".igv-menu-popup");for(const e of t)e.style.display="none"};class Gu{constructor(t,i,n,r,s,o,a){this.browser=t,this.button=e({class:"igv-navbar-text-button"}),i.appendChild(this.button),Array.isArray(n)?(this.textContent=n[0],this.title=n[1]):this.textContent=this.title=n,this.buttonLabel=r,this.imageDictionary={image:`url("data:image/svg+xml,${encodeURIComponent(s)}")`,imageHover:`url("data:image/svg+xml,${encodeURIComponent(o)}")`},this.responsiveKey="text",this.configureButton(this.textContent,this.title),this.setState(a),t.on("navbar-resize",(e=>{this.navbarResizeHandler(e)}))}navbarResizeHandler(e){const t="igv-navbar-icon-button"===e?"image":"text";t!==this.responsiveKey&&(this.responsiveKey=t,this.configureButton(this.textContent,this.title),this.setState(void 0))}configureButton(e,t){this.groupElement=void 0,this.button.title=t,this.button.innerHTML="",this.button.style.backgroundImage="none",this.button.classList.remove("igv-navbar-icon-button"),this.button.classList.remove("igv-navbar-text-button"),"text"===this.responsiveKey?this.configureTextButton(e):this.configureIconButton()}configureTextButton(e){this.button.classList.add("igv-navbar-text-button");const t=document.createElement("div");t.innerHTML=this.buttonLabel;const i=t.firstChild;this.button.appendChild(i),this.groupElement=i.querySelector("#igv-navbar-button-group");i.querySelector("#igv-navbar-button-label").textContent=e}configureIconButton(){this.button.classList.add("igv-navbar-icon-button")}setState(e){void 0!==e&&(this.doHover=e),"text"===this.responsiveKey?this.setTextButtonState(this.doHover):this.setIconButtonState(this.doHover)}setTextButtonState(e){this.groupElement.classList.remove(...this.groupElement.classList);const t=!0===e?"igv-navbar-text-button-svg-hover":"igv-navbar-text-button-svg-inactive";this.groupElement.classList.add(t)}setIconButtonState(e){this.button.style.backgroundImage=!0===e?this.imageDictionary.imageHover:this.imageDictionary.image}show(){this.button.style.display="flex"}hide(){this.button.style.display="none"}setVisibility(e){!0===e?this.show():this.hide()}static currentNavbarButtonClass(e){return e.$navigation.get(0).querySelector(".igv-navbar-text-button")?"igv-navbar-text-button":"igv-navbar-icon-button"}}const $u='<svg width="80px" height="18px" viewBox="0 0 80 18" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="igv-navbar-button-group">\n            <rect id="Rectangle" x="0.5" y="0.5" width="79" height="17" rx="6"></rect>\n            <text id="igv-text-button-label" x="50%" y="50%" dy=".1em" font-family="Helvetica" font-size="12" font-weight="normal" letter-spacing="-0.372">\n                <tspan id="igv-navbar-button-label"></tspan>\n            </text>\n        </g>\n    </g>\n</svg>',Ku=.01;function Yu(e,t,i,n){if(void 0===this.dataRange||void 0===this.dataRange.max||void 0===this.dataRange.min)return;xo.fillRect(e,0,0,t,i,{fillStyle:"white"}),n&&xo.fillRect(e,t-4-2,0,4,i,{fillStyle:n});const r=void 0!==this.flipAxis&&this.flipAxis,s=.95*t-8-5,o=.95*t-5,a={font:"normal 10px Arial",textAlign:"right",fillStyle:"black",strokeStyle:"black"};xo.strokeLine(e,s,Ku*i,o,Ku*i,a),xo.fillText(e,l(r?this.dataRange.min:this.dataRange.max),s+4,Ku*i+12,a);const c=.99*i;function l(e){return 0===e?"0":Math.abs(e)>=10?e.toFixed():Math.abs(e)>=1?e.toFixed(1):Math.abs(e)>=.1?e.toFixed(2):e.toExponential(1)}xo.strokeLine(e,s,c,o,c,a),xo.fillText(e,l(r?this.dataRange.max:this.dataRange.min),s+4,c-4,a),xo.strokeLine(e,o,Ku*i,o,c,a)}class Xu extends Hl{static defaults={autoscale:void 0,alpha:.5,height:50};constructor(e,t,i){super(e,t),this.type="merged",this.paintAxis=Yu,this.graphType=e.graphType,this.tracks=i||[]}async postInit(){if(this.config.tracks){for(let e of this.config.tracks){const t=await this.browser.createTrack(e);t?this.tracks.push(t):console.warn("Could not create track "+e),"function"==typeof t.postInit&&await t.postInit()}this.config.tracks.every((e=>void 0!==e.autoscale||void 0!==e.max))||(this.config.autoscale=void 0===this.config.max)}for(let e of this.tracks)e.isMergedTrack=!0;if(this.config.autoscale?this.autoscale=this.config.autoscale:void 0!==this.config.max&&this.setDataRange({min:this.config.min||0,max:this.config.max}),void 0!==this.config.flipAxis)for(let e of this.tracks)e.flipAxis=this.config.flipAxis;if(void 0!==this.config.logScale)for(let e of this.tracks)e.logScale=this.config.logScale;this.resolutionAware=this.tracks.some((e=>e.resolutionAware))}set flipAxis(e){this.config.flipAxis=e;for(let t of Ju(this.tracks))t.flipAxis=e}get flipAxis(){return Ju(this.tracks).every((e=>e.flipAxis))}set logScale(e){this.config.logScale=e;for(let t of Ju(this.tracks))t.logScale=e}get logScale(){return Ju(this.tracks).every((e=>e.logScale))}get height(){return this._height}set height(e){if(this.config.height=e,this._height=e,this.tracks)for(let t of this.tracks)t.height=e,t.config.height=e}set autoscale(e){if(this._autoscale=e,!1===e&&this.tracks)for(let e of this.tracks)e.autoscale=!1}get autoscale(){return this._autoscale}setDataRange({min:e,max:t}){this.autoscale=!1;for(const i of Ju(this.tracks))i.dataRange={min:e,max:t},i.autoscale=!1,i.autoscaleGroup=!1}set dataRange({min:e,max:t}){for(const i of Ju(this.tracks))i.dataRange={min:e,max:t}}get dataRange(){if(this.tracks){const e=Ju(this.tracks);if(e.length>0){const t=e[0].dataRange;if(e.every((e=>e.dataRange&&e.dataRange.min===t.min&&e.dataRange.max===t.max)))return t}}}menuItemList(){const e=[];return Ju(this.tracks).length>0&&(void 0!==this.flipAxis&&e.push({label:"Flip y-axis",click:function(){this.flipAxis=!this.flipAxis,this.trackView.repaintViews()}}),e.push(...this.numericDataMenuItems())),e.push("<hr/>"),e.push(this.overlayTrackAlphaAdjustmentMenuItem()),e.push(this.trackSeparationMenuItem()),e}async getFeatures(e,t,i,n){const r=this.tracks.map((r=>r.getFeatures(e,t,i,n))),s=await Promise.all(r);if(s.every((e=>0===e.length)))return new Zu([],[]);{const e=this.tracks.map((e=>e.name));return new Zu(s,e)}}draw(e){const t=e.features;for(let i=0,n=this.tracks.length;i<n;i++){const n=Object.assign({},e);n.features=t.featureArrays[i],n.alpha=this.alpha,this.graphType&&(this.tracks[i].graphType=this.graphType),this.tracks[i].draw(n)}}popupData(e){const t=this.clickedFeatures(e);if(t&&t.length===this.tracks.length){const i=[];let n=!0;for(let r=0;r<t.length;r++)if(r>0&&i.push("<hr/>"),i.push(`<div style=background-color:rgb(245,245,245);border-bottom-style:dashed;border-bottom-width:1px;padding-bottom:5px;padding-top:10px;font-weight:bold;font-size:larger >${t[r].trackName}</div>`),t[r].features.length>0){n=!1;const s=this.tracks[r].popupData(e,t[r].features);i.push(...s)}else i.push("Missing or 0 value(s)");return!0===n?[]:i}}clickedFeatures(e){const t=e.viewport.cachedFeatures;if(!t||!t.featureArrays||!Array.isArray(t.featureArrays)||0===t.featureArrays.length)return[];const i=e.genomicLocation,n=[],r=e.referenceFrame.bpPerPixel>.2?3*e.referenceFrame.bpPerPixel:.2,s=i-r,o=i+r;for(let e=0;e<t.featureArrays.length;e++){const i=to(t.featureArrays[e],s,o);n.push({trackName:t.trackNames[e],features:i})}return n}get supportsWholeGenome(){return this.tracks.every((e=>e.supportsWholeGenome))}getState(){const e=super.getState(),t=[];for(let e of this.tracks)t.push(e.getState());return e.tracks=t,e}updateScales(e){let t;if(this.autoscale){t=!0;let i=[];for(let t of e){if(t.featureCache&&t.featureCache.features){const e=t.referenceFrame,n=e.start,r=n+e.toBP(t.getWidth()),s=t.featureCache.features;this.autoscale&&(i.push({value:s.getMax(n,r)}),i.push({value:s.getMin(n,r)}))}const e=Qa(i);for(const t of Ju(this.tracks))t.dataRange=e}}else{let i=-1;for(let n of this.tracks)if(++i,n.autoscale){t=!0;let r=[];for(let t of e)if(t.featureCache&&t.featureCache.features){const e=t.referenceFrame,n=e.start,s=n+e.toBP(t.getWidth()),o=t.featureCache.features.featureArrays[i];if(o)for(let e of o)if(!(e.end<n)){if(e.start>s)break;r.push(e)}}n.dataRange=Qa(r)}}return t}overlayTrackAlphaAdjustmentMenuItem(){const t=e();return t.innerText="Set transparency",{object:Bt(t),dialog:function(e){const t={label:"Transparency",value:this.alpha,min:0,max:1,scaleFactor:1e3,callback:e=>{this.alpha=Math.max(.001,e),this.repaintViews()}};this.browser.sliderDialog.present(t,e)}}}trackSeparationMenuItem(){const e=Bt("<div>");return e.text("Separate tracks"),{object:e,click:function(e){const t=this.autoscale,i=this.name,n=this.tracks,r=this.browser,s=this.order;r.removeTrack(this);for(let e of n)e.order=s,t&&(e.autoscaleGroup=i),e.isMergedTrack=!1,r.addTrack(e.config,e);r.updateViews()}}}}class Zu{constructor(e,t){this.featureArrays=e,this.trackNames=t}getMax(e,t){let i=-Number.MAX_VALUE;for(let n of this.featureArrays)if(Array.isArray(n))for(let r of n)if(!(void 0===r.value||Number.isNaN(r.value)||r.end<e)){if(r.start>t)break;i=Math.max(i,r.value)}return i!==-Number.MAX_VALUE?i:100}getMin(e,t){let i=0;for(let n of this.featureArrays)if(Array.isArray(n))for(let r of n)if(void 0!==r.value&&!Number.isNaN(r.value)){if(r.end<e)continue;if(r.start>t)break;i=Math.min(i,r.value)}return i}}const Ju=e=>e?e.filter((e=>void 0!==e.dataRange||void 0!==e.autoscale||void 0!==e.autoscaleGroup)):[];class ef extends Gu{constructor(e,t){super(e,t,"Overlay Tracks",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>Overlay Tracks</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Overlay-Tracks">\n            <rect id="backdrop" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="layer-group" transform="translate(3, 127)">\n                <rect id="a" stroke="#737373" stroke-width="24" fill="#A1A1A1" x="12" y="12" width="332" height="139"></rect>\n                <rect id="a---hold-out" fill="#A1A1A1" x="9" y="25" width="324" height="115"></rect>\n                <rect id="b" stroke="#737373" stroke-width="24" fill="#C9C9C9" x="81" y="103" width="474" height="139"></rect>\n                <rect id="c" stroke="#737373" stroke-width="24" fill="#ECECEC" x="238" y="214" width="372" height="139"></rect>\n                <rect id="c---hold-out" fill="#ECECEC" x="250" y="226" width="372" height="115"></rect>\n            </g>\n            <rect id="over-border" stroke="#737373" stroke-width="12" x="6" y="6" width="613" height="613" rx="135"></rect>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>Overlay Tracks Hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="Overlay-Tracks-Hover">\n            <rect id="backdrop-copy" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="layer-group" transform="translate(3, 127)">\n                <rect id="a" stroke="#FFFFFF" stroke-width="24" fill="#A1A1A1" x="12" y="12" width="332" height="139"></rect>\n                <rect id="a---hold-out" fill="#A1A1A1" x="9" y="25" width="324" height="115"></rect>\n                <rect id="b" stroke="#FFFFFF" stroke-width="24" fill="#C9C9C9" x="81" y="103" width="474" height="139"></rect>\n                <rect id="c" stroke="#FFFFFF" stroke-width="24" fill="#ECECEC" x="238" y="214" width="372" height="139"></rect>\n                <rect id="c---hold-out" fill="#ECECEC" x="250" y="226" width="372" height="115"></rect>\n            </g>\n            <rect id="over-border-copy" stroke="#737373" stroke-width="12" x="6" y="6" width="613" height="613" rx="135"></rect>\n        </g>\n    </g>\n</svg>',!1),this.button.addEventListener("mouseenter",(()=>this.setState(!0))),this.button.addEventListener("mouseleave",(()=>this.setState(!1)));this.boundMouseClickHandler=(()=>{this.setVisibility(!1),tf.call(this)}).bind(this),this.button.addEventListener("click",this.boundMouseClickHandler),this.setVisibility(!0)}}function tf(e){if(!0===nf(this.browser)){const e=this.browser.getSelectedTrackViews().map((({track:e})=>e));for(const t of e)t.selected=!1;const t=[];for(let i of e)"merged"===i.type?t.push(...i.tracks):t.push(i);const i={name:"Overlay",type:"merged",autoscale:!1,alpha:.5,height:Math.max(...e.map((({height:e})=>e))),order:Math.min(...e.map((({order:e})=>e)))},n=new Xu(i,this.browser,t);for(const t of e)this.browser.removeTrack(t);this.browser.addTrack(i,n)}}function nf(e){const t=e.getSelectedTrackViews();if(t&&t.length>1){const e=new Set(["wig","merged"]);return t.filter((({track:t})=>e.has(t.type))).length>1}return!1}const rf=new Set(["sequence","ruler","ideogram"]),sf=new Set(["ruler","sequence","ideogram"]);class of{constructor(e,t,i){this.namespace=`trackview-${s()}`,this.browser=e,this.track=i,i.trackView=this,this.addDOMToColumnContainer(e,t,e.referenceFrameList)}startSpinner(){this.viewports&&this.viewports.length>0&&this.viewports[0].startSpinner()}stopSpinner(){this.viewports&&this.viewports.length>0&&this.viewports[0].stopSpinner()}addDOMToColumnContainer(e,t,i){this.axis=this.createAxis(e,this.track),this.createViewports(e,t,i),this.sampleInfoViewport=new qu(this,e.columnContainer.querySelector(".igv-sample-info-column"),e.getSampleInfoViewportWidth()),this.sampleNameViewport=new Qu(this,e.columnContainer.querySelector(".igv-sample-name-column"),void 0,e.getSampleNameViewportWidth()),this.createTrackScrollbar(e),this.createTrackDragHandle(e),this.createTrackGearPopup(e)}createViewports(e,t,i){this.viewports=[];const n=e.calculateViewportWidth(i.length),r=t.querySelectorAll(".igv-column");for(let e=0;e<r.length;e++){const t=Bu(this,r[e],i[e],n);this.viewports.push(t)}}createAxis(t,i){const n=e();if(t.columnContainer.querySelector(".igv-axis-column").appendChild(n),n.dataset.tracktype=i.type,n.style.height=`${i.height}px`,"function"==typeof i.paintAxis){const{width:e,height:t}=n.getBoundingClientRect();this.axisCanvas=document.createElement("canvas"),this.axisCanvas.style.width=`${e}px`,this.axisCanvas.style.height=`${t}px`,n.appendChild(this.axisCanvas)}if(!1===mo.has(this.track.type)){const t=e();n.appendChild(t);const i='<input type="checkbox" name="track-select">',r=document.createRange().createContextualFragment(i).firstChild;t.appendChild(r),r.checked=this.track.selected||!1,r.addEventListener("change",(e=>{e.preventDefault(),e.stopPropagation(),this.track.selected=e.target.checked,this.setDragHandleSelectionState(e.target.checked),this.browser.overlayTrackButton.setVisibility(nf(this.browser))})),this.setTrackSelectionState(n,!1)}return n}resizeAxisCanvas(e,t){this.axis.style.width=`${e}px`,this.axis.style.height=`${t}px`,"function"==typeof this.track.paintAxis&&(this.axisCanvas.style.width=`${e}px`,this.axisCanvas.style.height=`${t}px`)}renderSVGContext(e,{deltaX:t,deltaY:i}){!function(e,t,i,n,r){if("function"==typeof t.paintAxis){const{y:o,width:a,height:c}=i.getBoundingClientRect(),l=`${(t.name||t.id).replace(/\W/g,"")}_axis_guid_${s()}`;e.saveWithTranslationAndClipRect(l,n,o+r,a,c,0),t.paintAxis(e,a,c),e.restore()}}(e,this.track,this.axisCanvas,t,i);const{width:n}=this.axis.getBoundingClientRect(),{y:r}=this.viewports[0].$viewport.get(0).getBoundingClientRect();let o={deltaX:n+t,deltaY:r+i};for(let t of this.viewports){t.renderSVGContext(e,o);const{width:i}=t.$viewport.get(0).getBoundingClientRect();o.deltaX+=i}if(!0===this.browser.sampleInfo.isInitialized()&&!0===this.browser.sampleInfoControl.showSampleInfo){this.sampleInfoViewport.renderSVGContext(e,o);const{width:t}=this.sampleInfoViewport.viewport.getBoundingClientRect();o.deltaX+=t}!0===this.browser.showSampleNames&&this.sampleNameViewport.renderSVGContext(e,o)}presentColorPicker(e){if(!1===sf.has(this.track.type)){const t=[],i=this.track.color||this.track.defaultColor;Mt(i)&&t.push(i),this.track.altColor&&Mt(this.track.altColor)&&t.push(this.track.altColor);let n=t.map((e=>e.startsWith("#")?e:e.startsWith("rgb(")?_s.rgbToHex(e):_s.colorNameToHex(e))),r={color:e=>{this.track.color=io(e),this.repaintViews()},altColor:e=>{this.track.altColor=io(e),this.repaintViews()}};const s=this.browser.getSelectedTrackViews();s.length>0&&new Set(s).has(this)?(r={color:e=>{for(let t of s)t.track.color=e,t.repaintViews()}},this.browser.genericColorPicker.configure(n,r)):this.browser.genericColorPicker.configure(n,r),this.browser.genericColorPicker.setActiveColorHandler(e),this.browser.genericColorPicker.show()}}setTrackHeight(e,t){t||(this.track.minHeight&&(e=Math.max(this.track.minHeight,e)),this.track.maxHeight&&(e=Math.min(this.track.maxHeight,e))),this.track.height=e,this.resizeAxisCanvas(this.axis.clientWidth,this.track.height),"function"==typeof this.track.paintAxis&&this.paintAxis();for(let{$viewport:t}of this.viewports)t.height(e);if(this.sampleInfoViewport.setHeight(e),this.sampleNameViewport.viewport.style.height=`${e}px`,"function"!=typeof this.track.computePixelHeight)for(let t of this.viewports)t.setContentHeight(e);this.repaintViews(),this.updateScrollbar(),this.dragHandle.style.height=`${e}px`,this.gearContainer.style.height=`${e}px`}updateScrollbar(){const e=this.viewports[0].$viewport.height();if(this.outerScroll.style.height=`${e}px`,!1===rf.has(this.track.type)){const t=this.maxViewportContentHeight(),i=Math.round(e/t*e);t>e?(this.innerScroll.style.display="block",this.innerScroll.style.height=`${i}px`):this.innerScroll.style.display="none"}}moveScroller(e){const t=Bt(this.innerScroll).position().top+e,i=Math.min(Math.max(0,t),this.outerScroll.clientHeight-this.innerScroll.clientHeight);Bt(this.innerScroll).css("top",`${i}px`);const n=this.maxViewportContentHeight(),r=-Math.round(i*(n/this.viewports[0].$viewport.height()));for(let e of this.viewports)e.setTop(r);this.sampleInfoViewport.setTop(r),this.sampleNameViewport.trackScrollDelta=e,this.sampleNameViewport.setTop(r)}isLoading(){for(let e of this.viewports)if(e.isLoading())return!0}repaintViews(){for(let e of this.viewports)e.isVisible()&&e.repaint();"function"==typeof this.track.paintAxis&&this.paintAxis(),this.repaintSampleInfo(),this.repaintSamples()}repaintSampleInfo(){this.sampleInfoViewport.repaint()}repaintSamples(){if("function"==typeof this.track.getSamples){const e=this.track.getSamples();e.names&&e.names.length>0&&this.sampleNameViewport.repaint(e)}}setTrackLabelName(e){this.viewports.forEach((t=>t.setTrackLabel(e)))}resize(e){for(let t of this.viewports)t.setWidth(e)}async updateViews(){if(!this.browser||!this.browser.referenceFrameList)return;const e=this.viewports.filter((e=>e.isVisible()));if(e.forEach((e=>e.shift())),this.browser.dragObject)return;const t=e.filter((e=>e.needsRepaint())).filter((e=>e.checkZoomIn())),i=t.filter((e=>e.needsReload()));for(let e of i)await e.loadFeatures();if(this.disposed)return;if(this.track&&"function"==typeof this.track.variantRowCount&&i.length>0){let e=0;for(let t of this.viewports)t.featureCache&&t.featureCache.features&&(e=Math.max(e,t.featureCache.features.reduce(((e,t)=>Math.max(e,t.row||0)),0)));if(this.track.nVariantRows!==e+1){this.track.variantRowCount(e+1);for(let e of this.viewports)e.checkContentHeight()}}let n;if("merged"===this.track.type)n=this.track.updateScales(e);else if(this.track.autoscale){let t=[];for(let i of e){const e=i.referenceFrame,n=e.start,r=n+e.toBP(i.getWidth());if(i.featureCache&&i.featureCache.features)if("function"==typeof i.featureCache.features.getMax){const e=i.featureCache.features.getMax(n,r);if(t.push({value:e}),"function"==typeof i.featureCache.features.getMin){const e=i.featureCache.features.getMin(n,r);t.push({value:e})}}else{const e=to(i.featureCache.features,n,r);for(let i of e)t.push(i)}}"function"==typeof this.track.doAutoscale?this.track.dataRange=this.track.doAutoscale(t):this.track.dataRange=Qa(t)}const r=this.track.autoscale||this.track.autoscaleGroup||"ruler"===this.track.type||n||this.track.groupBy;for(let i of e)t.includes(i)?i.repaint():r&&i.refresh();this.adjustTrackHeight(),this.repaintSampleInfo(),this.repaintSamples(),this.updateRulerViewportLabels()}clearCachedFeatures(){for(let e of this.viewports)e.clearCache()}updateRulerViewportLabels(){const e=this.browser.calculateViewportWidth(this.viewports.length);for(let t of this.viewports)"ruler"===this.track.type&&(this.viewports.length>1?t.presentLocusLabel(e):t.dismissLocusLabel())}async getInViewFeatures(){if(!this.browser||!this.browser.referenceFrameList)return[];let e=[];const t=this.viewports.filter((e=>e.isVisible()));for(let i of t){const t=i.referenceFrame,{chr:n,start:r,bpPerPixel:s}=i.referenceFrame,o=r+t.toBP(i.getWidth());if((!i.featureCache||!i.featureCache.containsRange(n,r,o,s))&&await i.loadFeatures(),i.featureCache&&i.featureCache.features)if("function"==typeof i.featureCache.features.getMax){const t=i.featureCache.features.getMax(r,o);e.push({value:t})}else{const t="function"==typeof i.featureCache.queryFeatures?i.featureCache.queryFeatures(n,r,o):to(i.featureCache.features,r,o);e=e.concat(t)}}return e}checkContentHeight(){for(let e of this.viewports)e.checkContentHeight();this.adjustTrackHeight()}adjustTrackHeight(){var e=this.maxViewportContentHeight();if(this.track.autoHeight?this.setTrackHeight(e,!1):this.track.paintAxis&&this.paintAxis(),!1===rf.has(this.track.type)){const t=this.viewports[0].getContentTop(),i=this.viewports[0].$viewport.height(),n=Math.min(0,i-e);if(t<n)for(let e of this.viewports)e.setTop(n);this.updateScrollbar()}}viewportsToReload(e){return this.viewports.filter((t=>{if(!t.isVisible())return!1;if(t.checkZoomIn()){const i=t.referenceFrame,n=t.referenceFrame.chr,r=i.start,s=r+i.toBP(Bt(t.contentDiv).width()),o=i.bpPerPixel;return e||!t.tile||t.tile.invalidate||!t.tile.containsRange(n,r,s,o)}return!1}))}createTrackScrollbar(t){const i=e();if(t.columnContainer.querySelector(".igv-scrollbar-column").appendChild(i),i.style.height=`${this.track.height}px`,this.outerScroll=i,!1===rf.has(this.track.type)){const n=e();i.appendChild(n),this.innerScroll=n,this.addTrackScrollMouseHandlers(t)}}createTrackDragHandle(t){"sequence"!==this.track.type&&!0===mo.has(this.track.type)?this.dragHandle=e({class:"igv-track-drag-shim"}):(this.dragHandle=e({class:"igv-track-drag-handle"}),this.dragHandle.classList.add("igv-track-drag-handle-color")),t.columnContainer.querySelector(".igv-track-drag-column").appendChild(this.dragHandle),this.dragHandle.style.height=`${this.track.height}px`,this.addTrackDragMouseHandlers(t)}createTrackGearPopup(t){if(this.gearContainer=e(),t.columnContainer.querySelector(".igv-gear-menu-column").appendChild(this.gearContainer),this.gearContainer.style.height=`${this.track.height}px`,!0===this.track.ignoreTrackMenu);else{function i(e){if(e.preventDefault(),e.stopPropagation(),"none"===this.trackGearPopup.popover.style.display){for(const e of t.trackViews.filter((e=>e!==this&&void 0!==e.trackGearPopup)))e.trackGearPopup.popover.style.display="none";this.trackGearPopup.presentMenuList(this,t.menuUtils.trackMenuItemList(this))}else this.trackGearPopup.popover.style.display="none"}this.gear=e(),this.gearContainer.appendChild(this.gear),this.gear.appendChild(l("cog")),this.trackGearPopup=new ju(this.gear),this.boundTrackGearClickHandler=i.bind(this),this.gear.addEventListener("click",this.boundTrackGearClickHandler)}}addTrackScrollMouseHandlers(e){this.boundTrackScrollMouseDownHandler=function(t){t.stopPropagation();const{y:i}=r(t);Bt(this.innerScroll).data("yDown",i.toString()),this.boundColumnContainerMouseMoveHandler=function(e){e.stopPropagation();const{y:t}=r(e);this.moveScroller(t-parseInt(Bt(this.innerScroll).data("yDown"))),Bt(this.innerScroll).data("yDown",t.toString())}.bind(this),e.columnContainer.addEventListener("mousemove",this.boundColumnContainerMouseMoveHandler)}.bind(this),this.innerScroll.addEventListener("mousedown",this.boundTrackScrollMouseDownHandler),this.boundColumnContainerMouseUpHandler=function(t){e.columnContainer.removeEventListener("mousemove",this.boundColumnContainerMouseMoveHandler)}.bind(this),e.columnContainer.addEventListener("mouseup",this.boundColumnContainerMouseUpHandler),e.columnContainer.addEventListener("mouseleave",this.boundColumnContainerMouseUpHandler)}removeTrackScrollMouseHandlers(){!1===rf.has(this.track.type)&&(this.innerScroll.removeEventListener("mousedown",this.boundTrackScrollMouseDownHandler),this.browser.columnContainer.removeEventListener("mouseup",this.boundColumnContainerMouseUpHandler),this.browser.columnContainer.removeEventListener("mousemove",this.boundColumnContainerMouseMoveHandler),this.browser.columnContainer.removeEventListener("mouseleave",this.boundColumnContainerMouseMoveHandler))}addTrackDragMouseHandlers(e){if("sequence"===this.track.type||!1===mo.has(this.track.type)){let t;function i(i){i.preventDefault(),t=i.target,!1===this.track.selected&&(t.classList.remove("igv-track-drag-handle-color"),t.classList.add("igv-track-drag-handle-hover-color")),e.startTrackDrag(this)}function n(i){e.endTrackDrag(),t&&i.target!==t&&!1===this.track.selected&&(t.classList.remove("igv-track-drag-handle-hover-color"),t.classList.add("igv-track-drag-handle-color")),t=void 0}function r(i){i.preventDefault(),void 0===t&&!1===this.track.selected&&(i.target.classList.remove("igv-track-drag-handle-color"),i.target.classList.add("igv-track-drag-handle-hover-color")),e.updateTrackDrag(this)}function s(e){e.preventDefault(),void 0===t&&!1===this.track.selected&&(e.target.classList.remove("igv-track-drag-handle-hover-color"),e.target.classList.add("igv-track-drag-handle-color"))}this.boundTrackDragMouseDownHandler=i.bind(this),this.dragHandle.addEventListener("mousedown",this.boundTrackDragMouseDownHandler),this.boundDocumentTrackDragMouseUpHandler=n.bind(this),document.addEventListener("mouseup",this.boundDocumentTrackDragMouseUpHandler),this.boundTrackDragMouseEnterHandler=r.bind(this),this.dragHandle.addEventListener("mouseenter",this.boundTrackDragMouseEnterHandler),this.dragHandle.addEventListener("mouseout",(e=>{e.preventDefault(),void 0===t&&!1===this.track.selected&&(e.target.classList.remove("igv-track-drag-handle-hover-color"),e.target.classList.add("igv-track-drag-handle-color"))})),this.boundTrackDragMouseOutHandler=s.bind(this),this.dragHandle.addEventListener("mouseout",this.boundTrackDragMouseOutHandler)}}removeTrackDragMouseHandlers(){"ideogram"===this.track.type||"ruler"===this.track.type||(this.dragHandle.removeEventListener("mousedown",this.boundTrackDragMouseDownHandler),document.removeEventListener("mouseup",this.boundDocumentTrackDragMouseUpHandler),this.dragHandle.removeEventListener("mouseup",this.boundTrackDragMouseEnterHandler),this.dragHandle.removeEventListener("mouseout",this.boundTrackDragMouseOutHandler))}removeTrackGearMouseHandlers(){!0===this.track.ignoreTrackMenu||this.gear.removeEventListener("click",this.boundTrackGearClickHandler)}removeDOMFromColumnContainer(){this.axis.remove(),this.removeViewportsFromColumnContainer(),this.sampleInfoViewport.dispose(),this.sampleNameViewport.dispose(),this.removeTrackScrollMouseHandlers(),this.outerScroll.remove(),this.removeTrackDragMouseHandlers(),this.dragHandle.remove(),this.removeTrackGearMouseHandlers(),this.gearContainer.remove()}removeViewportsFromColumnContainer(){for(let e of this.viewports)e.$viewport.remove()}dispose(){this.axis.remove();for(let e of this.viewports)e.dispose();this.sampleInfoViewport.dispose(),this.sampleNameViewport.dispose(),this.removeTrackScrollMouseHandlers(),this.outerScroll.remove(),this.removeTrackDragMouseHandlers(),this.dragHandle.remove(),this.removeTrackGearMouseHandlers(),this.gearContainer.remove(),"function"==typeof this.track.dispose&&this.track.dispose();for(let e of Object.keys(this))this[e]=void 0;this.alert&&this.alert.container.remove(),this.disposed=!0}paintAxis(){if("function"==typeof this.track.paintAxis){const{width:e,height:t}=this.axisCanvas.getBoundingClientRect(),i=window.devicePixelRatio||1;this.axisCanvas.height=i*t,this.axisCanvas.width=i*e;const n=this.axisCanvas.getContext("2d");if(n.scale(i,i),this.track.autoscaleGroup){if(void 0===wo[this.track.autoscaleGroup]){const e=so.Dark2,t=Math.floor(Math.random()*so.Dark2.length);wo[this.track.autoscaleGroup]=e[t]}const i=_s.addAlpha(wo[this.track.autoscaleGroup],.75);this.track.paintAxis(n,e,t,i)}else this.track.paintAxis(n,e,t,void 0)}}maxViewportContentHeight(){return Math.max(...this.viewports.map((e=>e.getContentHeight())))}setTrackSelectionState(e,t){const i=e.querySelector("div");if(!1!==t)i.style.display="grid";else{i.querySelector("[name=track-select]").checked=this.track.selected,this.dragHandle&&this.setDragHandleSelectionState(!1),i.style.display="none"}}setDragHandleSelectionState(e){const t=this.dragHandle;e?(t.classList.remove("igv-track-drag-handle-color"),t.classList.remove("igv-track-drag-handle-hover-color"),t.classList.add("igv-track-drag-handle-selected-color")):(t.classList.remove("igv-track-drag-handle-hover-color"),t.classList.remove("igv-track-drag-handle-selected-color"),t.classList.add("igv-track-drag-handle-color"))}}const af="rgb(150, 150, 150)";class cf extends Hl{static defaults={height:50,flipAxis:!1,logScale:!1,windowFunction:"mean",graphType:"bar",normalize:void 0,scaleFactor:void 0,overflowColor:"rgb(255, 32, 255)",baselineColor:"lightGray",summarize:!0};constructor(e,t){super(e,t)}init(e){super.init(e),this.type="wig",this.featureType="numeric",this.resolutionAware=!0,this.paintAxis=Yu;const t=e.format?e.format.toLowerCase():e.format;e.featureSource?(this.featureSource=e.featureSource,delete e.featureSource):this.featureSource="bigwig"===t?new Zh(e,this.browser.genome):"tdf"===t?new nd(e,this.browser.genome):wd(e,this.browser.genome),void 0===e.max||!0===e.autoscale?this.autoscale=!0:this.dataRange={min:e.min||0,max:e.max}}async postInit(){const e=await this.getHeader();this.disposed||e&&this.setTrackProperties(e)}async getFeatures(e,t,i,n){const r=this.windowFunction,s=await this.featureSource.getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:this.visibilityWindow,windowFunction:r});if(this.normalize&&this.featureSource.normalizationFactor){const e=this.featureSource.normalizationFactor;for(let t of s)t.value*=e}if(this.scaleFactor){const e=this.scaleFactor;for(let t of s)t.value*=e}return!this.summarize||"mean"!==r&&"min"!==r&&"max"!==r?s:function(e,t,i,n="mean"){if(i<=1||!e||0===e.length)return e;const r=e[0].chr,s=i,o=[],a=e=>{const i=t+e.bin*s,a=i+s;let c;switch(n){case"mean":c=e.sumData/e.count;break;case"max":c=e.max;break;case"min":c=e.min;break;default:throw Error(`Unknown window function: ${n}`)}const l=`${n} of ${e.count} values`;o.push({chr:r,start:i,end:a,value:c,description:l})};let c;for(let i of e){let e=Math.floor((i.start-t)/s);const n=Math.floor((i.end-t)/s);if(c&&e===c.bin&&(c.add(i),e++),!c||n>c.bin){if(c&&a(c),n>e){const e=t+n*s;o.push({chr:r,start:i.start,end:e,value:i.value})}c=new lf(n,i)}}c&&a(c);const l=[];let h=o[0];for(let e of o)h.value===e.value&&e.start<=h.end?h.end=e.end:(l.push(h),h=e);return l.push(h),l}(s,t,n,r)}menuItemList(){const e=[];if(void 0!==this.flipAxis){function t(){this.flipAxis=!this.flipAxis,this.trackView.repaintViews()}e.push("<hr>"),e.push({label:"Flip y-axis",click:t})}return this.featureSource.windowFunctions&&e.push(...this.wigSummarizationItems()),e.push(...this.numericDataMenuItems()),e}wigSummarizationItems(){const e=this.featureSource.windowFunctions,t=[];t.push("<hr/>"),t.push("<div>Windowing function</div>");for(const i of e){const n=Bt(Dl(i,this.windowFunction===i));function r(){this.windowFunction=i,this.trackView.updateViews()}t.push({object:n,click:r})}return t}async getHeader(){return"function"==typeof this.featureSource.getHeader&&(this.header=await this.featureSource.getHeader()),this.header}getScaleFactor(e,t,i,n){return n?i/(Math.log10(t+1)-(e<=0?0:Math.log10(e+1))):i/(t-e)}computeYPixelValue(e,t){return(this.flipAxis?e-this.dataRange.min:this.dataRange.max-e)*t}computeYPixelValueInLogScale(e,t){let i=this.dataRange.max,n=this.dataRange.min;return i<=0?0:(n<=-1&&(n=0),n=n<=0?0:Math.log10(n+1),i=Math.log10(i+1),e=Math.log10(e+1),(this.flipAxis?e-n:i-e)*t)}draw(e){const t=e.features,i=e.context,n=e.bpPerPixel,r=e.bpStart,s=e.pixelWidth,o=e.pixelHeight,a=r+s*n+1;this.color;const c=this.getScaleFactor(this.dataRange.min,this.dataRange.max,e.pixelHeight,this.logScale),l=e=>this.logScale?this.computeYPixelValueInLogScale(e,c):this.computeYPixelValue(e,c);if(t&&t.length>0&&(void 0===this.dataRange.min&&(this.dataRange.min=0),this.dataRange.max>this.dataRange.min)){let s,c=-1;const h=l(0);for(let d of t){if(d.end<r)continue;if(d.start>a)break;const t=(d.start-r)/n;if(isNaN(t))continue;let u=l(d.value);const f=(d.end-r)/n-t,p=e.alpha?_s.addAlpha(this.getColorForFeature(d),e.alpha):this.getColorForFeature(d);if("line"===this.graphType)void 0!==s&&xo.strokeLine(i,c,s,t,u,{fillStyle:p,strokeStyle:p}),xo.strokeLine(i,t,u,t+f,u,{fillStyle:p,strokeStyle:p});else if("points"===this.graphType){const e=this.config.pointSize||3,n=t+f/2;xo.fillCircle(i,n,u,e/2,{fillStyle:p,strokeStyle:p}),d.value>this.dataRange.max?xo.fillCircle(i,n,e/2,e/2,3,{fillStyle:this.overflowColor}):d.value<this.dataRange.min&&xo.fillCircle(i,n,o-e/2,e/2,3,{fillStyle:this.overflowColor})}else{const e=Math.min(o,u-h);xo.fillRect(i,t,h,f,e,{fillStyle:p}),d.value>this.dataRange.max?xo.fillRect(i,t,0,f,3,{fillStyle:this.overflowColor}):d.value<this.dataRange.min&&xo.fillRect(i,t,o-3,f,3,{fillStyle:this.overflowColor})}c=t+f,s=u}if(this.dataRange.min<0){const t=this.dataRange.max/(this.dataRange.max-this.dataRange.min),n=this.flipAxis?(1-t)*e.pixelHeight:t*e.pixelHeight;xo.strokeLine(i,0,n,e.pixelWidth,n,{strokeStyle:this.baselineColor})}}if(this.config.hasOwnProperty("guideLines"))for(let t of this.config.guideLines)if(t.hasOwnProperty("color")&&t.hasOwnProperty("y")&&t.hasOwnProperty("dotted")){let i=l(t.y),n={strokeStyle:t.color,strokeWidth:2};t.dotted?xo.dashedLine(e.context,0,i,e.pixelWidth,i,5,n):xo.strokeLine(e.context,0,i,e.pixelWidth,i,n)}}popupData(e,t){if(void 0===t&&(t=this.clickedFeatures(e)),t&&t.length>0){const i=e.genomicLocation,n=[];t.sort((function(e,t){return Math.abs((e.start+e.end)/2-i)-Math.abs((t.start+t.end)/2-i)}));const r=t.length>10?t.slice(0,10):t;r.sort((function(e,t){return e.start-t.start}));for(let e of r)if(e){n.length>0&&n.push("<hr/>");let t=e.end-e.start==1?Rt(Math.floor(e.start)+1):Rt(Math.floor(e.start)+1)+"-"+Rt(Math.floor(e.end));n.push({name:"Position:",value:t}),n.push({name:"Value:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",value:Rt(e.value.toFixed(4))})}return r.length<t.length&&n.push("<hr/>..."),n}return[]}get supportsWholeGenome(){return!this.config.indexURL&&!1!==this.config.supportsWholeGenome}getColorForFeature(e){let t=e.value<0&&this.altColor?this.altColor:this.color||af;return"function"==typeof t?t(e.value):t}dispose(){this.trackView=void 0}}class lf{constructor(e,t){this.bin=e,this.sumData=t.value,this.count=1,this.min=t.value,this.max=t.value}add(e){this.sumData+=e.value,this.max=Math.max(e.value,this.max),this.min=Math.min(e.value,this.min),this.count++}get mean(){return this.sumData/this.count}}function hf(e){this.thresholds=e.thresholds,this.colors=e.colors}function df(e){this.scale=e,this.lowColor="rgb("+e.lowR+","+e.lowG+","+e.lowB+")",this.highColor="rgb("+e.highR+","+e.highG+","+e.highB+")",this.diff=e.high-e.low}hf.prototype.getColor=function(e){for(let t of this.thresholds)if(e<t)return this.colors[this.thresholds.indexOf(t)];return this.colors[this.colors.length-1]},df.prototype.getColor=function(e){var t,i=this.scale;return e<=i.low?this.lowColor:e>=i.high?this.highColor:(t=(e-i.low)/this.diff,"rgb("+Math.floor(i.lowR+t*(i.highR-i.lowR))+","+Math.floor(i.lowG+t*(i.highG-i.lowG))+","+Math.floor(i.lowB+t*(i.highB-i.lowB))+")")};class uf{constructor(e){this.color=e}getColor(){return this.color}}const ff={threshold:2e3,r:0,g:0,b:255};class pf{constructor(e){e=e||ff,this.threshold=e.threshold,this.r=e.r,this.g=e.g,this.b=e.b,this.cache=[],this.nbins=2e3,this.binsize=this.threshold/this.nbins}setThreshold(e){this.threshold=e,this.cache=[],this.binsize=this.threshold/this.nbins}getThreshold(){return this.threshold}setColorComponents(e){this.r=e.r,this.g=e.g,this.b=e.b,this.cache=[]}getColorComponents(){return{r:this.r,g:this.g,b:this.b}}equals(e){return JSON.stringify(this)===JSON.stringify(e)}getColor(e){const t=Math.floor(Math.min(this.threshold,e)/this.binsize);if(void 0===this.cache[t]){const i=(ys.clamp(e,0,this.threshold)-0)/(this.threshold-0);this.cache[t]=`rgba(${this.r},${this.g},${this.b}, ${i})`}return this.cache[t]}stringify(){return this.threshold+","+this.r+","+this.g+","+this.b}static parse(e){var t,i;return e.startsWith("R:")?(t=e.substring(2).split(":"),(i=new RatioColorScale(Number.parseFloat(t[0]))).positiveScale=n(t[1]),i.negativeScale=n(t[2]),i):n(e);function n(e){var t,i;return t={threshold:(i=e.split(","))[0],r:i[1],g:i[2],b:i[3]},new pf(t)}}}class gf{constructor(e){this.config=e,this.url=e.path||e.url}async read(e,t){const i={start:e,size:t};return Qs.loadArrayBuffer(this.url,{range:i})}}class mf{constructor(e){this.file=e}async read(e,t){const i=this.file;return void 0!==e?i.slice(e,e+t).arrayBuffer():i.arrayBuffer()}}class wf{constructor(e,t){this.file=e,this.rateLimiter=t}async read(e,t){const i=this.file,n=this.rateLimiter;return new Promise((function(r,s){n.limiter((async function(i){try{const n=await i.read(e,t);r(n)}catch(e){s(e)}}))(i)}))}}class bf{constructor(e){this.file=e.file,this.size=e.size||64e3,this.position=0,this.bufferStart=0,this.bufferLength=0,this.buffer=void 0}async read(e,t){const i=e,n=e+t,r=this.bufferStart,s=this.bufferStart+this.bufferLength;if(t>this.size)return this.buffer=void 0,this.bufferStart=0,this.bufferLength=0,this.file.read(e,t);if(i>=r&&n<=s){const e=i-r,n=e+t;return this.buffer.slice(e,n)}if(i<r&&n>r){const n=r-i,s=await this.file.read(e,n),o=t-n;if(o>0){const e=this.buffer.slice(0,o);return Ff(s,e)}return s}if(!(i<s&&n>s))return this.buffer=await this.file.read(e,this.size),this.bufferStart=e,this.bufferLength=this.buffer.byteLength,this.buffer.slice(0,t);{const e=s-i,n=this.bufferLength-e,r=this.buffer.slice(n,this.bufferLength),o=t-e;if(!(o>0))return r;try{this.buffer=await this.file.read(s,this.size),this.bufferStart=s,this.bufferLength=this.buffer.byteLength;const e=this.buffer.slice(0,o);return Ff(r,e)}catch(e){if(e.code&&416===e.code)return r;throw e}}}}var Ff=function(e,t){var i=new Uint8Array(e.byteLength+t.byteLength);return i.set(new Uint8Array(e),0),i.set(new Uint8Array(t),e.byteLength),i.buffer};const vf=function(e,t){this.littleEndian=void 0===t||t,this.position=0,this.view=e,this.length=e.byteLength};function yf(e,t){this.block=e,this.offset=t}vf.prototype.available=function(){return this.length-this.position},vf.prototype.remLength=function(){return this.length-this.position},vf.prototype.hasNext=function(){return this.position<this.length-1},vf.prototype.getByte=function(){var e=this.view.getUint8(this.position,this.littleEndian);return this.position++,e},vf.prototype.getShort=function(){var e=this.view.getInt16(this.position,this.littleEndian);return this.position+=2,e},vf.prototype.getUShort=function(){var e=this.view.getUint16(this.position,this.littleEndian);return this.position+=2,e},vf.prototype.getInt=function(){var e=this.view.getInt32(this.position,this.littleEndian);return this.position+=4,e},vf.prototype.getUInt=function(){var e=this.view.getUint32(this.position,this.littleEndian);return this.position+=4,e},vf.prototype.getLong=function(){var e=[];e[0]=this.view.getUint8(this.position),e[1]=this.view.getUint8(this.position+1),e[2]=this.view.getUint8(this.position+2),e[3]=this.view.getUint8(this.position+3),e[4]=this.view.getUint8(this.position+4),e[5]=this.view.getUint8(this.position+5),e[6]=this.view.getUint8(this.position+6),e[7]=this.view.getUint8(this.position+7);var t=0;if(this.littleEndian)for(var i=e.length-1;i>=0;i--)t=256*t+e[i];else for(i=0;i<e.length;i++)t=256*t+e[i];return this.position+=8,t},vf.prototype.getString=function(e){for(var t,i="";0!=(t=this.view.getUint8(this.position++))&&(i+=String.fromCharCode(t),!e||i.length!=e););return i},vf.prototype.getFixedLengthString=function(e){var t,i,n="";for(t=0;t<e;t++)(i=this.view.getUint8(this.position++))>0&&(n+=String.fromCharCode(i));return n},vf.prototype.getFixedLengthTrimmedString=function(e){var t,i,n="";for(t=0;t<e;t++)(i=this.view.getUint8(this.position++))>32&&(n+=String.fromCharCode(i));return n},vf.prototype.getFloat=function(){var e=this.view.getFloat32(this.position,this.littleEndian);return this.position+=4,e},vf.prototype.getDouble=function(){var e=this.view.getFloat64(this.position,this.littleEndian);return this.position+=8,e},vf.prototype.skip=function(e){return this.position+=e,this.position},vf.prototype.getVPointer=function(){var e=this.position,t=this.view.getUint8(e+1)<<8|this.view.getUint8(e),i=4294967296*(255&this.view.getUint8(e+6))+16777216*(255&this.view.getUint8(e+5))+65536*(255&this.view.getUint8(e+4))+256*(255&this.view.getUint8(e+3))+(255&this.view.getUint8(e+2));return this.position+=8,new yf(i,t)},yf.prototype.isLessThan=function(e){return this.block<e.block||this.block===e.block&&this.offset<e.offset},yf.prototype.isGreaterThan=function(e){return this.block>e.block||this.block===e.block&&this.offset>e.offset},yf.prototype.print=function(){return this.block+":"+this.offset};class Af{constructor(e,t){this.chr1=e,this.chr2=t}getKey(){return this.chr1.name+"_"+this.chr2.name+"_"+this.zoom.unit+"_"+this.zoom.binSize}getBlockNumbers(e,t,i){if(e.chr==this.chr2&&t.chr===this.chr1){const i=e;e=t,t=i}const n=this.chr1===this.chr2,r=this.zoom.binSize,s=this.blockBinCount,o=this.blockColumnCount;return i<9||!n?function(){const i=e.start/r,a=e.end/r,c=t.start/r,l=t.end/r,h=Math.floor(i/s),d=Math.floor((a-1)/s),u=Math.floor(c/s),f=Math.floor((l-1)/s),p=[];for(let e=u;e<=f;e++)for(let t=h;t<=d;t++){let i;i=n&&e<t?t*o+e:e*o+t,p.includes(i)||p.push(i)}return p}():function(){const i=e.start/r,n=e.end/r,a=t.start/r,c=t.end/r,l=Math.floor((i+a)/2/s),h=Math.floor((n+c)/2/s),d=Math.floor(Math.log2(1+Math.abs(i-c)/Math.sqrt(2)/s)),u=Math.floor(Math.log2(1+Math.abs(n-a)/Math.sqrt(2)/s)),f=(n-a)*(i-c)<0?0:Math.min(d,u),p=Math.max(d,u),g=[];for(let e=f;e<=p;e++)for(let t=l;t<=h;t++){const i=e*o+t;g.push(i)}return g}()}static parseMatrixZoomData(e,t,i){const n=new Af(e,t),r=i.getString(),s=i.getInt(),o=i.getFloat(),a=i.getFloat(),c=i.getFloat(),l=i.getFloat(),h=i.getInt();n.blockBinCount=i.getInt(),n.blockColumnCount=i.getInt();const d=i.getInt();n.zoom={index:s,unit:r,binSize:h},n.blockIndex=new Cf(d,i);const u=o/(e.size/h)/(t.size/h);return n.averageCount=u,n.sumCounts=o,n.stdDev=c,n.occupiedCellCount=a,n.percent95=l,n}}class Cf{constructor(e,t){for(this.blockIndex={};e-- >0;){const e=t.getInt(),i=t.getLong(),n=t.getInt();this.blockIndex[e]={filePosition:i,size:n}}}getBlockIndexEntry(e){return this.blockIndex[e]}}class _f{constructor(e,t,i){this.chr1=e,this.chr2=t,this.bpZoomData=[],this.fragZoomData=[];for(let e of i)"BP"===e.zoom.unit?this.bpZoomData.push(e):this.fragZoomData.push(e)}findZoomForResolution(e,t){const i="FRAG"===t?this.fragZoomData:this.bpZoomData;for(let t=1;t<i.length;t++){if(i[t].zoom.binSize<e)return t-1}return i.length-1}getZoomData(e,t){const i="BP"===(t=t||"BP")?this.bpZoomData:this.fragZoomData;for(let t=0;t<i.length;t++){var n=i[t];if(e===n.zoom.binSize)return n}}getZoomDataByIndex(e,t){return("FRAG"===t?this.fragZoomData:this.bpZoomData)[e]}static getKey(e,t){if(e>t){const i=e;e=t,t=i}return`${e}_${t}`}static parseMatrix(e,t){const i=new vf(new DataView(e)),n=i.getInt(),r=i.getInt(),s=t[n],o=t[r];let a=i.getInt();const c=[];for(;a-- >0;){const e=Af.parseMatrixZoomData(s,o,i);c.push(e)}return new _f(n,r,c)}}class xf{constructor(e,t,i){this.bin1=e,this.bin2=t,this.counts=i}getKey(){return this.bin1+"_"+this.bin2}}class kf{constructor(e=10){this.max=e,this.map=new Map}get(e){let t=this.map.get(e);return t&&(this.map.delete(e),this.map.set(e,t)),t}set(e,t){this.map.has(e)?this.map.delete(e):this.map.size===this.max&&this.map.delete(this.first()),this.map.set(e,t)}has(e){return this.map.has(e)}clear(){this.map.clear()}first(){return this.map.keys().next().value}}class If{constructor(e,t,i,n){this.file=e,this.filePosition=t,this.nValues=i,this.dataType=n,this.cache=void 0}async getValues(e,t){if(!this.cache||e<this.cache.start||t>this.cache.end){const i=Math.max(0,e-1e3),n=Math.min(this.nValues,t+1e3),r=this.filePosition+i*this.dataType,s=n-i,o=s*this.dataType,a=await this.file.read(r,o);if(!a)return;const c=new vf(new DataView(a)),l=[];for(let e=0;e<s;e++)l[e]=8===this.dataType?c.getDouble():c.getFloat();this.cache={start:i,end:n,values:l}}const i=e-this.cache.start,n=i+(t-e);return this.cache.values.slice(i,n)}getKey(){return If.getKey(this.type,this.chrIdx,this.unit,this.resolution)}static getNormalizationVectorKey(e,t,i,n){return e+"_"+t+"_"+i+"_"+n}}var Sf={"hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fcombined.hic":"54386046426,55860","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fprimary.hic":"33860030033,37504","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Freplicate.hic":"30849652794,55832","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fmaternal.hic":"1380542661,17185","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fpaternal.hic":"1389001777,17185","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2Fcombined.hic":"13433880319,35723","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC001.hic":"3409347253,35975","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC002.hic":"4529947083,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC003.hic":"6894962500,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC004.hic":"3395593338,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC005.hic":"5204128636,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC006.hic":"3278363811,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC007.hic":"3585547340,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC008.hic":"4134197273,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC009.hic":"2851728310,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC010.hic":"1754216102,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC011.hic":"1716829574,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC012.hic":"4367980375,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC013.hic":"2309654671,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC014.hic":"5324950266,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC015.hic":"3132333594,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC016.hic":"3159154704,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC017.hic":"3262554627,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC018.hic":"3014216364,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC019.hic":"5025753246,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC020.hic":"5861584507,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC021.hic":"3542263275,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC022.hic":"5061949378,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC023.hic":"4816423919,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC024.hic":"2683781104,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC025.hic":"6522701781,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC026.hic":"6748846520,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC027.hic":"5642693007,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC028.hic":"2098921691,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC029.hic":"3886454027,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fagar%2FHIC030.hic":"2288984204,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fagar%2FHIC031.hic":"2115342419,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fpellet%2FHIC032.hic":"2063314324,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fsupernatant%2FHIC033.hic":"1933908457,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fdilution%2FHIC034.hic":"13555514595,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fdilution%2FHIC035.hic":"6129650900,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fdilution%2FHIC036.hic":"4307445019,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fdilution%2FHIC037.hic":"9375139867,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fdilution%2Fcombined.hic":"11664249584,33929","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fcombined_DpnII.hic":"7003537290,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC038.hic":"2099825544,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC039.hic":"2096900138,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC040.hic":"2593642141,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC041.hic":"2263919098,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC042.hic":"2684774693,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2Fcombined_noXlink.hic":"5574807456,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC043.hic":"2986114347,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC044.hic":"1916378621,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC045.hic":"746463126,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC046.hic":"2338476164,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC047.hic":"1167496250,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC048.hic":"2231690794,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fin-situ%2FHIC049.hic":"2782308678,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC050.hic":"3633531346,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC051.hic":"4063486444,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC052.hic":"929756278,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC053.hic":"2489657204,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC054.hic":"4036419444,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC055.hic":"4284185549,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fin-situ%2FHIC056.hic":"4410546240,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fimr90%2Fdilution%2FHIC057.hic":"1491998259,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2Fcombined.hic":"7266425111,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC058.hic":"6532635593,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC059.hic":"400684530,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC060.hic":"645352187,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC061.hic":"736291871,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC062.hic":"762731037,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fin-situ%2FHIC063.hic":"682917431,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhmec%2Fdilution%2FHIC064.hic":"4550171307,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fnhek%2Fin-situ%2Fcombined.hic":"11897184911,35789","hicfiles.s3.amazonaws.com%2Fhiseq%2Fnhek%2Fin-situ%2FHIC065.hic":"5425943567,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fnhek%2Fin-situ%2FHIC066.hic":"5942869818,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fnhek%2Fin-situ%2FHIC067.hic":"5191049261,35647","hicfiles.s3.amazonaws.com%2Fhiseq%2Fnhek%2Fdilution%2FHIC068.hic":"2713318801,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2Fcombined.hic":"12641555389,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC069.hic":"5630177461,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC070.hic":"5926611269,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC071.hic":"2486191351,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC072.hic":"2281343366,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC073.hic":"2173074239,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fk562%2Fin-situ%2FHIC074.hic":"2463700999,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2Fcombined.hic":"14661922519,35639","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2FHIC075.hic":"3685310515,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2FHIC076.hic":"5833658487,35891","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2FHIC077.hic":"2406346486,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2FHIC078.hic":"5241454987,35919","hicfiles.s3.amazonaws.com%2Fhiseq%2Fkbm7%2Fin-situ%2FHIC079.hic":"6297234263,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhuvec%2Fin-situ%2Fcombined.hic":"9193858096,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhuvec%2Fin-situ%2FHIC080.hic":"5171405536,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhuvec%2Fin-situ%2FHIC081.hic":"3489767688,35891","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhuvec%2Fin-situ%2FHIC082.hic":"4243339375,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhuvec%2Fdilution%2FHIC083.hic":"1497495406,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhela%2Fin-situ%2Fcombined.hic":"7923332224,35593","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhela%2Fin-situ%2FHIC084.hic":"867699123,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhela%2Fin-situ%2FHIC085.hic":"3669518514,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhela%2Fin-situ%2FHIC086.hic":"5306474712,35595","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhela%2Fin-situ%2FHIC087.hic":"1490963755,36397","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2Fcombined.hic":"8956382853,50248","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC088.hic":"1874185366,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC089.hic":"1301165236,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC090.hic":"1105246282,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC091.hic":"1338325770,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC092.hic":"1307918730,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC093.hic":"755136918,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC094.hic":"1606583694,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC095.hic":"2039711245,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC096.hic":"1909573053,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC097.hic":"1826710712,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC098.hic":"1998793575,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC099.hic":"1007740962,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC100.hic":"736464120,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC101.hic":"980505082,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fin-situ%2FHIC102.hic":"1116083646,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fdilution%2FHIC103.hic":"1096994310,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fch12-lx-b-lymphoblasts%2Fdilution%2FHIC104.hic":"841063882,32102","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC105.hic":"107742864,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC106.hic":"134295912,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC107.hic":"110228014,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC108.hic":"102761401,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC109.hic":"100461491,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC110.hic":"88828472,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC111.hic":"81471064,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC112.hic":"92297035,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC113.hic":"65503916,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC114.hic":"49181188,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC115.hic":"46471102,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC116.hic":"64284432,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC117.hic":"60434076,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC118.hic":"45248563,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC119.hic":"60288782,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC120.hic":"136888414,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC121.hic":"125009003,33681","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC122.hic":"154011688,34127","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC123.hic":"177663372,35293","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC124.hic":"382186226,35245","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC125.hic":"158160717,35271","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC127.hic":"110261177,34659","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC128.hic":"246131875,35509","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC129.hic":"260160119,35667","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC130.hic":"117479562,34681","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC131.hic":"81508929,34673","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC132.hic":"105959102,34895","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC133.hic":"91504812,33451","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC134.hic":"52222546,33737","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC135.hic":"57763085,34159","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC136.hic":"50618489,33731","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC137.hic":"193163606,33363","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC138.hic":"229876152,33777","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC139.hic":"201783666,33571","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC140.hic":"281163862,34125","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC141.hic":"275969727,33935","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC142.hic":"275020431,34125","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC144.hic":"223834810,34177","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC145.hic":"296632653,33937","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC146.hic":"290945216,33961","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC147.hic":"234459964,34231","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC148.hic":"295457850,34039","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC149.hic":"113569632,35695","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC150.hic":"304381897,33963","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC151.hic":"289314545,33805","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC152.hic":"284320182,33803","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC153.hic":"401393947,34659","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC154.hic":"188065488,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC155.hic":"299157119,33967","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC156.hic":"279289244,33787","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC157.hic":"254852119,33917","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC158.hic":"195969660,33477","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC159.hic":"185720388,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC160.hic":"227709279,33599","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC161.hic":"157225076,33209","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC162.hic":"105703444,32033","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC163.hic":"122665658,32121","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC164.hic":"228048231,33761","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC165.hic":"114440819,32011","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC166.hic":"285147558,33891","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC167.hic":"363116754,33943","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC168.hic":"119592158,31937","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC169.hic":"236853872,33785","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC170.hic":"195187639,33395","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC171.hic":"208044058,33309","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC172.hic":"144645916,32877","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC173.hic":"119115941,32203","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC175.hic":"178030481,33525","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC176.hic":"117220136,32169","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC177.hic":"128586196,32659","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC178.hic":"191419141,33629","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC179.hic":"141556748,32959","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC180.hic":"199825102,33185","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC181.hic":"301022688,33783","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC182.hic":"185384453,33205","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC183.hic":"202189264,36367","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC184.hic":"37464475,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC185.hic":"161938278,36099","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC186.hic":"133853166,36179","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC188.hic":"128068030,36237","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC189.hic":"148053886,36177","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC190.hic":"198946958,35803","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC191.hic":"226584564,36063","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC192.hic":"194412797,36341","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC193.hic":"176408194,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC194.hic":"207215649,36055","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC195.hic":"175185530,36315","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC196.hic":"168969337,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC197.hic":"121231252,36339","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC198.hic":"92713752,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC199.hic":"105130500,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC200.hic":"114526350,36479","hicfiles.s3.amazonaws.com%2Fmiseq%2Frh2014%2FHIC201.hic":"122689717,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fhap1%2Fin-situ%2Fcombined.hic":"9614983328,36479","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fctbp_8_4_17%2Fall_intra_megabase_michrom.hic":"154205644,10960","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2Fdel-Xa-combined.hic":"8843305329,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FdelXa-chrX-diploid.hic":"11173520,1498","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FWT-combined.hic":"13365182403,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FWT-chrX-diploid.hic":"17343459,1498","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC002.hic":"4279298739,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC003.hic":"3027365532,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC004.hic":"2896130835,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC005.hic":"4717830071,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC006.hic":"5066210154,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC007.hic":"3069516128,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2Fdel-Xi-combined.hic":"14551096423,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FdelXi-chrX-diploid.hic":"17362477,1498","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC008.hic":"2572386655,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC009.hic":"2935931663,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC010.hic":"2019085070,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC011.hic":"6087610814,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC012.hic":"2809618194,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Frpe1%2FDarrowHuntley-2015%2FHIC013.hic":"2572386655,36479","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2Fcombined.hic":"6950423609,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2Fpaternal.hic":"220592749,15691","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2Fmaternal.hic":"323233095,15691","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC014.hic":"3183235800,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC015.hic":"1739539801,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC016.hic":"1105912758,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC017.hic":"1060773319,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC018.hic":"1203679874,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fpatski%2FDarrowHuntley-2015%2FHIC019.hic":"3321955269,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Frhesus%2FDarrowHuntley-2015%2FHIC020.hic":"7108980626,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2Fgm12878%2Fcola%2FDarrowHuntley-2015%2FHIC021.hic":"3906448676,34955","hicfiles.s3.amazonaws.com%2Fhiseq%2Fassembly%2Faedes%2Fcombined.hic":"390780490,2245","hicfiles.s3.amazonaws.com%2Fhiseq%2Fassembly%2Fhs2-hic.hic":"1960284186,33561","hicfiles.s3.amazonaws.com%2Fhiseq%2Fassembly%2FCpipJ3.hic":"766279097,4381","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fphanstiel%2Fupdated_O%2FSnyder_O.hic":"8046980555,18679","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fphanstiel%2FA_inter.hic":"10986005145,18679","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2Fcombined.hic":"30439217680,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2Fcombined.hic":"33255540403,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Fdeep%2F20min_withdraw_combined.hic":"11078436933,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Fdeep%2F40min_withdraw_combined.hic":"11031830038,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Fdeep%2F60min_withdraw_combined.hic":"10312725340,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Fdeep%2F180min_withdraw_combined.hic":"10038610214,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC001.hic":"8004335785,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC002.hic":"8453215933,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC003.hic":"9118406189,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC004.hic":"5973342894,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC005.hic":"6846576837,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC006.hic":"6075148017,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Funsynchronized%2FHIC007.hic":"8192366992,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC008.hic":"6844159653,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC009.hic":"7282063059,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC010.hic":"10410578833,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC011.hic":"8192366992,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC012.hic":"7223422850,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC013.hic":"7435986997,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Funsynchronized%2FHIC014.hic":"9120113605,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Fsynchronized%2Fcombined.hic":"4170577904,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Fsynchronized%2FHIC015.hic":"1504084990,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Fsynchronized%2FHIC016.hic":"1686244500,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Fsynchronized%2FHIC017.hic":"1804802410,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Funtreated%2Fsynchronized%2FHIC018.hic":"1533942067,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Fsynchronized%2Fcombined.hic":"4572390198,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Fsynchronized%2FHIC019.hic":"1543609666,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Fsynchronized%2FHIC020.hic":"1814133288,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Fsynchronized%2FHIC021.hic":"1942698243,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftreated_6hr%2Fsynchronized%2FHIC022.hic":"1873587413,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Funtreated%2FRao-2017-HIC049.hic":"405127557,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Funtreated%2FRao-2017-HIC060.hic":"326681741,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2Funtreated%2FRao-2017-HIC061.hic":"300908673,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_20min%2FRao-2017-HIC050.hic":"481758242,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_20min%2FRao-2017-HIC051.hic":"417577401,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_40min%2FRao-2017-HIC052.hic":"419353227,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_40min%2FRao-2017-HIC053.hic":"411554953,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_60min%2FRao-2017-HIC054.hic":"386655891,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_60min%2FRao-2017-HIC055.hic":"402170701,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_240min%2FRao-2017-HIC057.hic":"735906308,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min%2FRao-2017-HIC058.hic":"443789827,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min%2FRao-2017-HIC059.hic":"491422615,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min%2FRao-2017-HIC062.hic":"320261375,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min%2FRao-2017-HIC063.hic":"306590499,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_20min%2FRao-2017-HIC032S.hic":"367051742,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_20min%2FRao-2017-HIC033S.hic":"344555339,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_40min%2FRao-2017-HIC036S.hic":"349392947,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_40min%2FRao-2017-HIC037S.hic":"317714554,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_60min%2FRao-2017-HIC040S.hic":"266786397,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_60min%2FRao-2017-HIC041S.hic":"279445530,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_180min%2FRao-2017-HIC044S.hic":"898418269,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_180min%2FRao-2017-HIC045S.hic":"961006347,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_360min%2FRao-2017-HIC064.hic":"833576408,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_360min%2FRao-2017-HIC065.hic":"840881418,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_1080min%2FRao-2017-HIC066.hic":"980958864,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_1080min%2FRao-2017-HIC067.hic":"882023129,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_1440min%2FRao-2017-HIC068.hic":"1110292630,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fdegron%2Ftime_course%2FAuxin_treated_360min_withdraw_1440min%2FRao-2017-HIC069.hic":"1001747023,36479","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FCP190_HiChIP.hic":"144107588,6976","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FH3K27ac_HiChIP_combined.hic":"43171370,5233","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FH3K27me3_HiChIP_combined.hic":"42906472,5233","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FPol2_ChIAPET.hic":"41992430,6976","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FPol2S2_HiChIP.hic":"145842743,6976","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FArabidopsis_Wang2015_Liu2016.hic":"1134391078,4984","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FElegans_Crane2015.hic":"387127568,8758","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FNcrassa_Galazka2016.hic":"26555511,27725","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fexternal%2Frowley_nichols_mol_cell_2017%2FPfalciparum_trophozoite_Ay2014.hic":"15640893,13948","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FE-Me-A.hic":"6897251,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FE-Me-B.hic":"4959088,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FE-Mp-A.hic":"5232286,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FE-Mp-B.hic":"5105292,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FH-Me-A.hic":"6900072,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FH-Me-B.hic":"8653258,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FH-Mp-A.hic":"7999058,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fduan%2FH-Mp-B.hic":"8774657,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fdekker%2F4dn%2Fh1hesc.hic":"23671753603,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fdekker%2F4dn%2Fh1hesc_rep1.hic":"23671754721,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fdekker%2F4dn%2Fh1hesc_rep2.hic":"22269909910,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fdekker%2F4dn%2Fhffc6_rep1.hic":"19016661622,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Flieberman_aiden_van_berkum%2FGM06990_NcoI.hic":"480725203,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Flieberman_aiden_van_berkum%2F302NH.hic":"99948617,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Flieberman_aiden_van_berkum%2FK562.hic":"470263605,36151","hicfiles.s3.amazonaws.com%2Fexternal%2Flieberman_aiden_van_berkum%2FGM06990_HindIII.hic":"293706559,36289","hicfiles.s3.amazonaws.com%2Fexternal%2Flieberman_aiden_van_berkum%2FGM06990_rep_HindIII.hic":"309673862,36087","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Fcanis-lupus-rep1.hic":"1531151371,56905","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Fcanis-lupus-rep2.hic":"2851437676,56905","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Fmouse-rep1.hic":"582052544,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Fmacaque-rep1.hic":"698509182,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Fmacaque-rep2.hic":"461410393,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Frabbit-rep1.hic":"691045338,33561","hicfiles.s3.amazonaws.com%2Fexternal%2Frudan%2Frabbit-rep2.hic":"668888336,33561","hicfiles.s3.amazonaws.com%2Fexternal%2Fsexton%2Fcombined.hic":"50650087,4486","hicfiles.s3.amazonaws.com%2Fexternal%2Fkalhor%2Ftcc-hindiii.hic":"1071142023,16500","hicfiles.s3.amazonaws.com%2Fexternal%2Fkalhor%2Ftcc-mboi.hic":"1508851093,16448","hicfiles.s3.amazonaws.com%2Fexternal%2Fkalhor%2Fnon-tcc-hindiii.hic":"395179229,36093","hicfiles.s3.amazonaws.com%2Fexternal%2Fkalhor%2Ftcc-combined.hic":"1050423847,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fdixon%2Fmm9-hindiii%2Fsplit-read-run.hic":"9599984876,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fdixon%2Fhesc-hindiii.hic":"1952555632,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fdixon%2Fimr90-hindiii.hic":"9691260435,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fdixon%2Fmm9-cortex.hic":"3712072953,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fzhang%2Fatm-i-scei-chr18.hic":"2083350075,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fzhang%2Fatm-i-scei-chr2.hic":"3362049644,16360","hicfiles.s3.amazonaws.com%2Fexternal%2Fzhang%2Fatm-i-scei-chr7.hic":"1658399854,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fzhang%2Fwt-i-scei-chr15.hic":"866691249,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fzhang%2Fwt-i-scei-chr2.hic":"3304782795,16386","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-1.hic":"23673506,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-2.hic":"26873280,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-3.hic":"31066362,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-4.hic":"16807724,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-5.hic":"28665065,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-6.hic":"13124158,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-7.hic":"15118945,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-8.hic":"68316814,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-9.hic":"18965101,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2Fcell-10.hic":"17020666,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Fcombined.hic":"6526601242,36427","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep1.hic":"1861562891,36401","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep2.hic":"3061013635,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep3.hic":"1564588211,35969","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep4.hic":"1255543175,36153","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep5.hic":"974683253,36179","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90%2Frep6.hic":"1040805629,36053","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Fcombined.hic":"8424080116,36401","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Frep1.hic":"2697976702,36295","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Frep3.hic":"1718610467,36159","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Frep4.hic":"2029519405,36101","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Frep5.hic":"985310855,36069","hicfiles.s3.amazonaws.com%2Fexternal%2Fjin%2Fimr90-tnf-alpha%2Frep6.hic":"1418750480,35967","hicfiles.s3.amazonaws.com%2Fexternal%2Fcheng%2Fmhh-call-4-cell-line.hic":"538380253,35351","hicfiles.s3.amazonaws.com%2Fexternal%2Fcheng%2Fprimary-b-all.hic":"773764191,35793","hicfiles.s3.amazonaws.com%2Fexternal%2Fcheng%2Fnormal-b-cell-line.hic":"336271459,35005","hicfiles.s3.amazonaws.com%2Fexternal%2Fcheng%2Frl-cell-line.hic":"484807998,35351","hicfiles.s3.amazonaws.com%2Fexternal%2Fhou%2Fkc167-biorep.hic":"135932435,8758","hicfiles.s3.amazonaws.com%2Fexternal%2Fhou%2Fkc167-techrep1.hic":"160355961,8758","hicfiles.s3.amazonaws.com%2Fexternal%2Fhou%2Fkc167-techrep2.hic":"188809887,8758","hicfiles.s3.amazonaws.com%2Fexternal%2Flin%2Fpre-prob-egs.hic":"2237792858,15483","hicfiles.s3.amazonaws.com%2Fexternal%2Flin%2Fprob-egs.hic":"5744720377,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Flin%2Fprob-fa.hic":"2174866215,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fhct116-rnapii-pilot.hic":"396366166,35999","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fhela-rnapii-pilot.hic":"882516759,35107","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fk562-rnapii-pilot.hic":"1131576189,35969","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fk562-rnapii-saturated.hic":"571583828,36291","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fmcf7-rnapii-saturated.hic":"1282547841,36035","hicfiles.s3.amazonaws.com%2Fexternal%2Fli%2Fnb4-rnapii-pilot.hic":"761614686,34861","hicfiles.s3.amazonaws.com%2Fexternal%2Fjung%2Fmouse_sperm.hic":"1730231642,29184","hicfiles.s3.amazonaws.com%2Fexternal%2Ftang%2Fgm12878.hic":"1953518212,20505","hicfiles.s3.amazonaws.com%2Fexternal%2Frutledge%2FSRR1791299.hic":"5723484,11956","hicfiles.s3.amazonaws.com%2Fexternal%2Frutledge%2FSRR1791297.hic":"16534743,23348","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-hrv.hic":"5094525579,36289","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-hrv-rep1.hic":"2574358912,36373","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-hrv-rep2.hic":"3417099433,36243","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-tev.hic":"4785157552,36323","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-tev-rep1.hic":"2648268465,36321","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-rad21cv-tev-rep2.hic":"2994727980,36107","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctcf.hic":"5391791815,36063","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctcf-rep1.hic":"3325842095,36269","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctcf-rep2.hic":"3096215920,36167","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctrl.hic":"3830902383,36167","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctrl-rep1.hic":"1346712252,36079","hicfiles.s3.amazonaws.com%2Fexternal%2Fzuin%2Fhek293t-sirna-ctrl_rep2.hic":"3098067367,36271","hicfiles.s3.amazonaws.com%2Fexternal%2Fay%2Fp-falciparum-3d7-0h-hiseq.hic":"38174042,21889","hicfiles.s3.amazonaws.com%2Fexternal%2Fay%2Fp-falciparum-3d7-18h-hiseq.hic":"26506099,21889","hicfiles.s3.amazonaws.com%2Fexternal%2Fay%2Fp-falciparum-3d7-18h-hiseq-non-crosslinked_control.hic":"3545496,21889","hicfiles.s3.amazonaws.com%2Fexternal%2Fay%2Fp-falciparum-3d7-36h-hiseq.hic":"70754194,21889","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3%2Fg1mid-r1.hic":"200863476,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3%2Fm-r1.hic":"249021190,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3%2Fm-r2.hic":"212341157,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3ccl2p2%2Fg1-0-25fa.hic":"583572265,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3ccl2p2%2Fg1-1fa.hic":"354502306,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3ccl2p2%2Fm-0-25fa.hic":"149308791,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3ccl2p2%2Fm-98percent.hic":"778175225,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhelas3ccl2p2%2Fm-1fa.hic":"158091047,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhff1%2Fcchic-hff1-ns-r1.hic":"801670039,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fhff1%2Fcchic-hff1-m-r1.hic":"875922086,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fk562%2Fm-r1.hic":"130959943,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fnaumova%2Fk562%2Fm-r2.hic":"237861106,17185","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-WT.hic":"496104039,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-WT-adv-cre.hic":"438608517,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-floxed-rep1.hic":"446205712,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-floxed-rep2.hic":"386354767,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-deleted-rep1.hic":"621998722,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmAST-deleted-rep2.hic":"583840829,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-floxed-rep1.hic":"801290988,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-floxed-rep2.hic":"819406658,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-deleted-rep1.hic":"792825269,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-deleted-rep2.hic":"746189884,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-WT.hic":"309353372,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fsofueva%2FmNSC-WT-OHT.hic":"274229679,30643","hicfiles.s3.amazonaws.com%2Fexternal%2Fseitan%2FTcell-Rad21KO-R1.hic":"1490362251,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fseitan%2FTcell-Rad21KO-R3.hic":"2403664421,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fseitan%2FTcell-Rad21WT-R1.hic":"1377124538,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fseitan%2FTcell-Rad21WT-R3.hic":"2646201369,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fmoissiard%2Fcrh6-mutant.hic":"105261071,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fmoissiard%2FWT.hic":"127506388,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fgrob%2FCol.hic":"153638500,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fgrob%2Fcrwn1.hic":"211213220,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fgrob%2Fcrwn4.hic":"134236837,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fxie%2Fprimary.hic":"92936173,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2F6wt-control6wt337.hic":"318737891,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2F6wt-control6wt67.hic":"348123956,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2F6wt337.hic":"251107279,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2F6wt67.hic":"351840994,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2FCol0.hic":"345969497,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2Fclf28-swn7.hic":"299585025,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2Fcmt3-11.hic":"253427706,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2Fddm1-2.hic":"303626924,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2Fmet1-3.hic":"347697973,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Ffeng%2Fsuvh4-suvh5-suvh6.hic":"263122019,10217","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FDNase-HiC-WG-K562.hic":"892955840,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FDNaseHiC-WG-H1.hic":"696922695,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargetedDNaseHiC-lincRNA-K562-rep1.hic":"341917716,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargeredDNaseHiC-lincRNA-K562-rep2.hic":"214841185,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargetedDNaseHiC-lincRNA-H1-rep1.hic":"616326137,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargetedDNaseHiC-lincRNA-H1-rep2.hic":"579654013,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargetedDNaseHiC-pe-H1-rep1.hic":"519810544,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Fma%2FtargetedDNaseHiC-pe-K562-rep1.hic":"199553123,18679","hicfiles.s3.amazonaws.com%2Fexternal%2Frowley%2FKc167_DpnII.hic":"1319373594,6976","hicfiles.s3.amazonaws.com%2Fexternal%2Frowley%2FKc167_HinfI.hic":"1465493873,6976","hicfiles.s3.amazonaws.com%2Fexternal%2Frowley%2FKc167_DpnII_HinfI_combo.hic":"753062558,5814","hicfiles.s3.amazonaws.com%2Fexternal%2Fbarutcu%2FMCF-10A.hic":"2784956115,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fbarutcu%2FMCF-7.hic":"2700457411,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fbatullin%2Fsperm.hic":"501052169,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fminajigi%2FWT_hiC_rep1.hic":"1450697530,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fminajigi%2FWT_hiC_rep2.hic":"1189371558,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fminajigi%2Fcombined.hic":"2262007875,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fminajigi%2Finactive.hic":"4444564,751","hicfiles.s3.amazonaws.com%2Fexternal%2Fminajigi%2Factive.hic":"3993495,751","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fpatski_rep1.hic":"1650838357,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fpatski_rep2.hic":"1258038606,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fpatski.hic":"499827296,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fpatski_active.hic":"79175714,15691","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fpatski_inactive.hic":"98947881,15691","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fbrain_dnase.hic":"4298088401,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fbrain_in_situ_dnase.hic":"609321852,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fbrain.hic":"1028196506,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fbrain_active.hic":"79175714,15691","hicfiles.s3.amazonaws.com%2Fexternal%2Fdeng%2Fbrain_inactive.hic":"98947881,15691","hicfiles.s3.amazonaws.com%2Fexternal%2Fle%2FBglII_rep1.hic":"1283306,1463","hicfiles.s3.amazonaws.com%2Fexternal%2Fle%2FBglII_rep2.hic":"1263227,1463","hicfiles.s3.amazonaws.com%2Fexternal%2Fle%2FNcoI_rep1.hic":"4380906,1463","hicfiles.s3.amazonaws.com%2Fexternal%2Feagen%2FGSE89112_Kc167combined.hic":"1829549643,25624","hicfiles.s3.amazonaws.com%2Fexternal%2Feagen%2FGSE89112_Kc167combined_randomized.hic":"1859742654,25624","hicfiles.s3.amazonaws.com%2Fexternal%2Fmumbach%2FGSE80820_HiChIP_GM_cohesin.hic":"1231264781,17932","hicfiles.s3.amazonaws.com%2Fexternal%2Fmumbach%2FGSE80820_HiChIP_mES_cohesin_all.hic":"1152008628,16438","hicfiles.s3.amazonaws.com%2Fexternal%2Fmumbach%2FGSE80820_HiChIP_mES_Oct4.hic":"912828146,16438","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fwapl_hic%2FSCC4KO.hic":"1767906138,18679","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fwapl_hic%2FDKO.hic":"1487228787,18679","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fwapl_hic%2FWaplKO_1.14.hic":"1189751862,18679","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fwapl_hic%2FWaplKO_3.3.hic":"1155057696,18679","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fwapl_hic%2FWT.hic":"1522401568,18679","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fskfuwi4fnsjkdf9jekrw2%2Fmega_Liverpool%2Fmega.hic":"2612171975,4381","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fskfuwi4fnsjkdf9jekrw2%2FHIC2836_Liverpool1%2FLiverpool1.hic":"191729195,2245","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fskfuwi4fnsjkdf9jekrw2%2FHIC2861_Liverpool2%2FLiverpool2.hic":"1637096030,4381","s3.amazonaws.com%2Fhicfiles%2Fhiseq%2Fskfuwi4fnsjkdf9jekrw2%2FHIC2862_Liverpool3%2FLiverpool3.hic":"1160045602,4381","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fgoodell%2FHSPC.hic":"11857786247,36479","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fgoodell%2FHSPC_CanyonDel.hic":"8139168836,36479","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fgoodell%2Ftcell.hic":"9871547081,36479","s3.amazonaws.com%2Fhicfiles%2Fexternal%2Fgoodell%2Fep.hic":"17479335373,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fnagano%2FTh1_ensemble.hic":"1690592868,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fbonev%2FES_mapq30.hic":"32930498831,32386","hicfiles.s3.amazonaws.com%2Fexternal%2Fbonev%2FNPC_mapq30.hic":"55053730986,32386","hicfiles.s3.amazonaws.com%2Fexternal%2Fbonev%2FCN_mapq30.hic":"53138031154,32386","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-activated_B_cells_72_hours_WT.hic":"16492991184,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-resting_B_cells_WT.hic":"23057795398,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-activated_B_cells_24_hours_MYC_KO.hic":"21245554876,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-resting_B_cells_TSA.hic":"13933346059,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-activated_B_cells_24_hours_oligomycin.hic":"21902506832,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FKieffer-Kwon_et_al_2017%2FMain_maps%2FKieffer-Kwon-2017-mES_WT.hic":"9451969795,32102","hicfiles.s3.amazonaws.com%2Fhiseq%2FVian_et_al_2018%2FMain_maps%2FVian-2018-activated_B_cells_24_hours_WT.hic":"3600188564,16438","hicfiles.s3.amazonaws.com%2Fhiseq%2FVian_et_al_2018%2FMain_maps%2FVian-2018-activated_B_cells_30_hours_WT.hic":"1309503359,16438","hicfiles.s3.amazonaws.com%2Fhiseq%2FVian_et_al_2018%2FMain_maps%2FVian-2018-activated_B_cells_30_hours_HU_treated.hic":"1477252396,16438","hicfiles.s3.amazonaws.com%2Fhiseq%2FVian_et_al_2018%2FMain_maps%2FVian-2018-activated_B_cells_24_hours_flavopiridol.hic":"15711773490,32102","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FPGP1F_mega_090118%2FPGP1F_mega_090118_30.hic":"24786676166,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7145%2FHIC7145_30.hic":"4554644616,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7146%2FHIC7146_30.hic":"4174848944,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7147%2FHIC7147_30.hic":"5062229182,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7862%2FHIC7862_30.hic":"4520990620,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7863%2FHIC7863_30.hic":"4330354773,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7864%2FHIC7864_30.hic":"5880640268,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7865%2FHIC7865_30.hic":"4431632469,36479","hicfiles.s3.amazonaws.com%2Fexternal%2Fpgp%2FHIC7866%2FHIC7866_30.hic":"4686000222,36479","encode-public.s3.amazonaws.com%2F2018%2F10%2F19%2Fb122542b-306c-4631-bdc3-2e155e89af55%2FENCFF718AWL.hic":"39544267907,58932","encode-public.s3.amazonaws.com%2F2019%2F02%2F15%2F8e787cd8-e388-4bc2-a236-7a5e6f39e0c0%2FENCFF999YXX.hic":"9255069996,56883","encode-public.s3.amazonaws.com%2F2019%2F02%2F08%2Ffc1d9d5d-8fa0-4e29-9080-3da674d9490d%2FENCFF543USQ.hic":"5005263062,36479","s3.us-east-1.wasabisys.com%2Fhicfiles%2Finternal%2FLCL_mega_42B_500bp_30.hic":"106482584851,22829","www.encodeproject.org%2Ffiles%2FENCFF925QIF%2F%40%40download%2FENCFF925QIF.hic":"51712684396,54779","www.encodeproject.org%2Ffiles%2FENCFF259YUS%2F%40%40download%2FENCFF259YUS.hic":"24640030444,54779","www.encodeproject.org%2Ffiles%2FENCFF783KQI%2F%40%40download%2FENCFF783KQI.hic":"27209249856,54779","www.encodeproject.org%2Ffiles%2FENCFF318JAP%2F%40%40download%2FENCFF318JAP.hic":"28636979242,54779","www.encodeproject.org%2Ffiles%2FENCFF512PQA%2F%40%40download%2FENCFF512PQA.hic":"28124104361,54779","www.encodeproject.org%2Ffiles%2FENCFF591MHA%2F%40%40download%2FENCFF591MHA.hic":"37373387202,54779","www.encodeproject.org%2Ffiles%2FENCFF197OWW%2F%40%40download%2FENCFF197OWW.hic":"41826180893,54779","www.encodeproject.org%2Ffiles%2FENCFF317OIA%2F%40%40download%2FENCFF317OIA.hic":"34741636038,54779","www.encodeproject.org%2Ffiles%2FENCFF522YLZ%2F%40%40download%2FENCFF522YLZ.hic":"24064692329,54779","www.encodeproject.org%2Ffiles%2FENCFF420JTA%2F%40%40download%2FENCFF420JTA.hic":"21202405177,54779","www.encodeproject.org%2Ffiles%2FENCFF871ZDJ%2F%40%40download%2FENCFF871ZDJ.hic":"10124815680,18679","www.encodeproject.org%2Ffiles%2FENCFF349RZY%2F%40%40download%2FENCFF349RZY.hic":"4446702705,36479","www.encodeproject.org%2Ffiles%2FENCFF738YON%2F%40%40download%2FENCFF738YON.hic":"3338049584,35947","www.encodeproject.org%2Ffiles%2FENCFF406KJN%2F%40%40download%2FENCFF406KJN.hic":"4132875306,36479","www.encodeproject.org%2Ffiles%2FENCFF081NPN%2F%40%40download%2FENCFF081NPN.hic":"34495587443,54779","www.encodeproject.org%2Ffiles%2FENCFF946RZW%2F%40%40download%2FENCFF946RZW.hic":"34571955193,54779","www.encodeproject.org%2Ffiles%2FENCFF602CHT%2F%40%40download%2FENCFF602CHT.hic":"30674798032,54779","www.encodeproject.org%2Ffiles%2FENCFF150DKS%2F%40%40download%2FENCFF150DKS.hic":"12618769864,36479","www.encodeproject.org%2Ffiles%2FENCFF614IPZ%2F%40%40download%2FENCFF614IPZ.hic":"42450060331,54779","www.encodeproject.org%2Ffiles%2FENCFF571ZQR%2F%40%40download%2FENCFF571ZQR.hic":"15230068871,47429","www.encodeproject.org%2Ffiles%2FENCFF705MKK%2F%40%40download%2FENCFF705MKK.hic":"38686554702,54779","www.encodeproject.org%2Ffiles%2FENCFF658KTB%2F%40%40download%2FENCFF658KTB.hic":"13195884405,47429","www.encodeproject.org%2Ffiles%2FENCFF435JYN%2F%40%40download%2FENCFF435JYN.hic":"17192139674,54779","www.encodeproject.org%2Ffiles%2FENCFF016JKX%2F%40%40download%2FENCFF016JKX.hic":"37266736642,54779","www.encodeproject.org%2Ffiles%2FENCFF294GFP%2F%40%40download%2FENCFF294GFP.hic":"36389843399,54779","www.encodeproject.org%2Ffiles%2FENCFF700CYI%2F%40%40download%2FENCFF700CYI.hic":"60482012152,54779","www.encodeproject.org%2Ffiles%2FENCFF962EDB%2F%40%40download%2FENCFF962EDB.hic":"39394328182,54779","www.encodeproject.org%2Ffiles%2FENCFF467OGP%2F%40%40download%2FENCFF467OGP.hic":"35572788855,54779","www.encodeproject.org%2Ffiles%2FENCFF556RLR%2F%40%40download%2FENCFF556RLR.hic":"34826921187,54779","www.encodeproject.org%2Ffiles%2FENCFF309UNV%2F%40%40download%2FENCFF309UNV.hic":"48510618174,54779","www.encodeproject.org%2Ffiles%2FENCFF653HCO%2F%40%40download%2FENCFF653HCO.hic":"41079007620,54779","www.encodeproject.org%2Ffiles%2FENCFF120DSV%2F%40%40download%2FENCFF120DSV.hic":"12790195576,47429","www.encodeproject.org%2Ffiles%2FENCFF284OEA%2F%40%40download%2FENCFF284OEA.hic":"46007570339,54779","www.encodeproject.org%2Ffiles%2FENCFF035BLF%2F%40%40download%2FENCFF035BLF.hic":"63868871985,54779","www.encodeproject.org%2Ffiles%2FENCFF094KKX%2F%40%40download%2FENCFF094KKX.hic":"42151419971,54779","www.encodeproject.org%2Ffiles%2FENCFF965BPU%2F%40%40download%2FENCFF965BPU.hic":"42717376107,54779","www.encodeproject.org%2Ffiles%2FENCFF842DUO%2F%40%40download%2FENCFF842DUO.hic":"39553892515,54779","www.encodeproject.org%2Ffiles%2FENCFF417GBZ%2F%40%40download%2FENCFF417GBZ.hic":"45544785452,54779","www.encodeproject.org%2Ffiles%2FENCFF499BVX%2F%40%40download%2FENCFF499BVX.hic":"40900674170,54779","www.encodeproject.org%2Ffiles%2FENCFF136XCV%2F%40%40download%2FENCFF136XCV.hic":"47700392974,54779","www.encodeproject.org%2Ffiles%2FENCFF224HKR%2F%40%40download%2FENCFF224HKR.hic":"40426005932,54779","www.encodeproject.org%2Ffiles%2FENCFF711XSR%2F%40%40download%2FENCFF711XSR.hic":"41434581949,54779","www.encodeproject.org%2Ffiles%2FENCFF660JWA%2F%40%40download%2FENCFF660JWA.hic":"54201632697,54779","www.encodeproject.org%2Ffiles%2FENCFF081PMO%2F%40%40download%2FENCFF081PMO.hic":"53428285130,54779","www.encodeproject.org%2Ffiles%2FENCFF799QGA%2F%40%40download%2FENCFF799QGA.hic":"1228682189,36479","www.encodeproject.org%2Ffiles%2FENCFF473CAA%2F%40%40download%2FENCFF473CAA.hic":"1077514950,36479","www.encodeproject.org%2Ffiles%2FENCFF663FRL%2F%40%40download%2FENCFF663FRL.hic":"39843938245,54779","www.encodeproject.org%2Ffiles%2FENCFF341WOY%2F%40%40download%2FENCFF341WOY.hic":"34792598619,54779","www.encodeproject.org%2Ffiles%2FENCFF515ZBF%2F%40%40download%2FENCFF515ZBF.hic":"41779230923,54779","www.encodeproject.org%2Ffiles%2FENCFF545GBW%2F%40%40download%2FENCFF545GBW.hic":"38351980358,54779","www.encodeproject.org%2Ffiles%2FENCFF252ANV%2F%40%40download%2FENCFF252ANV.hic":"37668839771,54779","www.encodeproject.org%2Ffiles%2FENCFF912NDK%2F%40%40download%2FENCFF912NDK.hic":"21196851956,54779","www.encodeproject.org%2Ffiles%2FENCFF683PLM%2F%40%40download%2FENCFF683PLM.hic":"21849338763,54779","www.encodeproject.org%2Ffiles%2FENCFF355NFJ%2F%40%40download%2FENCFF355NFJ.hic":"47880627268,54779","www.encodeproject.org%2Ffiles%2FENCFF507WEW%2F%40%40download%2FENCFF507WEW.hic":"35777782924,54779","www.encodeproject.org%2Ffiles%2FENCFF241MSL%2F%40%40download%2FENCFF241MSL.hic":"22507408288,54779","www.encodeproject.org%2Ffiles%2FENCFF135MUT%2F%40%40download%2FENCFF135MUT.hic":"24168734040,54779","www.encodeproject.org%2Ffiles%2FENCFF459FRB%2F%40%40download%2FENCFF459FRB.hic":"37166770103,54779","www.encodeproject.org%2Ffiles%2FENCFF705YZH%2F%40%40download%2FENCFF705YZH.hic":"44679182442,54779","www.encodeproject.org%2Ffiles%2FENCFF395INO%2F%40%40download%2FENCFF395INO.hic":"56727346538,54779","www.encodeproject.org%2Ffiles%2FENCFF736ITL%2F%40%40download%2FENCFF736ITL.hic":"49036286185,54779","www.encodeproject.org%2Ffiles%2FENCFF546TZN%2F%40%40download%2FENCFF546TZN.hic":"33195126348,54779","www.encodeproject.org%2Ffiles%2FENCFF706SFK%2F%40%40download%2FENCFF706SFK.hic":"3271831702,36479","www.encodeproject.org%2Ffiles%2FENCFF922ERE%2F%40%40download%2FENCFF922ERE.hic":"12476647122,36479","www.encodeproject.org%2Ffiles%2FENCFF876OWE%2F%40%40download%2FENCFF876OWE.hic":"1538692704,47429","www.encodeproject.org%2Ffiles%2FENCFF227XJZ%2F%40%40download%2FENCFF227XJZ.hic":"1925617685,36479","www.encodeproject.org%2Ffiles%2FENCFF053BXY%2F%40%40download%2FENCFF053BXY.hic":"1032237652,36479","www.encodeproject.org%2Ffiles%2FENCFF014VMM%2F%40%40download%2FENCFF014VMM.hic":"1564021703,36479","www.encodeproject.org%2Ffiles%2FENCFF563XES%2F%40%40download%2FENCFF563XES.hic":"1489180508,36479","www.encodeproject.org%2Ffiles%2FENCFF482LGO%2F%40%40download%2FENCFF482LGO.hic":"1208778887,36479","www.encodeproject.org%2Ffiles%2FENCFF216QQM%2F%40%40download%2FENCFF216QQM.hic":"6293163571,47429","www.encodeproject.org%2Ffiles%2FENCFF256UOW%2F%40%40download%2FENCFF256UOW.hic":"6293163571,47429","www.encodeproject.org%2Ffiles%2FENCFF791UZC%2F%40%40download%2FENCFF791UZC.hic":"37029615181,54779","www.encodeproject.org%2Ffiles%2FENCFF911AHQ%2F%40%40download%2FENCFF911AHQ.hic":"34246649165,54779","www.encodeproject.org%2Ffiles%2FENCFF491AOR%2F%40%40download%2FENCFF491AOR.hic":"558663570,36479","www.encodeproject.org%2Ffiles%2FENCFF307PDL%2F%40%40download%2FENCFF307PDL.hic":"525321519,36479","www.encodeproject.org%2Ffiles%2FENCFF773ITV%2F%40%40download%2FENCFF773ITV.hic":"295464771,36479","www.encodeproject.org%2Ffiles%2FENCFF198SSL%2F%40%40download%2FENCFF198SSL.hic":"500142476,36479","www.encodeproject.org%2Ffiles%2FENCFF251UEF%2F%40%40download%2FENCFF251UEF.hic":"567443575,36479","www.encodeproject.org%2Ffiles%2FENCFF942LTN%2F%40%40download%2FENCFF942LTN.hic":"4430960222,36479","www.encodeproject.org%2Ffiles%2FENCFF543USQ%2F%40%40download%2FENCFF543USQ.hic":"5005263062,36479","www.encodeproject.org%2Ffiles%2FENCFF434XQU%2F%40%40download%2FENCFF434XQU.hic":"25506511674,54779","www.encodeproject.org%2Ffiles%2FENCFF318GOM%2F%40%40download%2FENCFF318GOM.hic":"44750824314,54779","www.encodeproject.org%2Ffiles%2FENCFF004TKY%2F%40%40download%2FENCFF004TKY.hic":"20705661833,54779","www.encodeproject.org%2Ffiles%2FENCFF493YNC%2F%40%40download%2FENCFF493YNC.hic":"53407154984,54779","www.encodeproject.org%2Ffiles%2FENCFF334XXU%2F%40%40download%2FENCFF334XXU.hic":"14341194962,47429","www.encodeproject.org%2Ffiles%2FENCFF569RJM%2F%40%40download%2FENCFF569RJM.hic":"1922066634,36479","www.encodeproject.org%2Ffiles%2FENCFF076LWH%2F%40%40download%2FENCFF076LWH.hic":"39406255845,54779","www.encodeproject.org%2Ffiles%2FENCFF977XWK%2F%40%40download%2FENCFF977XWK.hic":"20563512962,54779","www.encodeproject.org%2Ffiles%2FENCFF127TPS%2F%40%40download%2FENCFF127TPS.hic":"21032070512,54779","www.encodeproject.org%2Ffiles%2FENCFF480KLP%2F%40%40download%2FENCFF480KLP.hic":"33115569647,54779","www.encodeproject.org%2Ffiles%2FENCFF281ILS%2F%40%40download%2FENCFF281ILS.hic":"28236353584,54779","www.encodeproject.org%2Ffiles%2FENCFF129LMU%2F%40%40download%2FENCFF129LMU.hic":"35247096013,54779","www.encodeproject.org%2Ffiles%2FENCFF759YCW%2F%40%40download%2FENCFF759YCW.hic":"16058537743,32102","www.encodeproject.org%2Ffiles%2FENCFF045YOM%2F%40%40download%2FENCFF045YOM.hic":"19775445828,32102","www.encodeproject.org%2Ffiles%2FENCFF013TGD%2F%40%40download%2FENCFF013TGD.hic":"4208420532,36479","www.encodeproject.org%2Ffiles%2FENCFF929RPW%2F%40%40download%2FENCFF929RPW.hic":"1974260276,36479","www.encodeproject.org%2Ffiles%2FENCFF996XEO%2F%40%40download%2FENCFF996XEO.hic":"2072918865,36479","www.encodeproject.org%2Ffiles%2FENCFF097SKJ%2F%40%40download%2FENCFF097SKJ.hic":"1983524001,36479","www.encodeproject.org%2Ffiles%2FENCFF464KRA%2F%40%40download%2FENCFF464KRA.hic":"1957300131,36479","www.encodeproject.org%2Ffiles%2FENCFF406HHC%2F%40%40download%2FENCFF406HHC.hic":"3854527235,36479","www.encodeproject.org%2Ffiles%2FENCFF080DPJ%2F%40%40download%2FENCFF080DPJ.hic":"19953768024,47429","www.encodeproject.org%2Ffiles%2FENCFF621AIY%2F%40%40download%2FENCFF621AIY.hic":"26781700010,54779","www.encodeproject.org%2Ffiles%2FENCFF366ERB%2F%40%40download%2FENCFF366ERB.hic":"1049184239,36479","www.encodeproject.org%2Ffiles%2FENCFF997RGL%2F%40%40download%2FENCFF997RGL.hic":"2521167549,36479","www.encodeproject.org%2Ffiles%2FENCFF029MPB%2F%40%40download%2FENCFF029MPB.hic":"1854711185,36479","www.encodeproject.org%2Ffiles%2FENCFF043EEE%2F%40%40download%2FENCFF043EEE.hic":"2924133032,36479","www.encodeproject.org%2Ffiles%2FENCFF920CJR%2F%40%40download%2FENCFF920CJR.hic":"3011577886,36479","www.encodeproject.org%2Ffiles%2FENCFF928NJV%2F%40%40download%2FENCFF928NJV.hic":"2778936244,36479","www.encodeproject.org%2Ffiles%2FENCFF894GLR%2F%40%40download%2FENCFF894GLR.hic":"2831733099,36479","www.encodeproject.org%2Ffiles%2FENCFF303PCK%2F%40%40download%2FENCFF303PCK.hic":"688704435,36479","www.encodeproject.org%2Ffiles%2FENCFF999YXX%2F%40%40download%2FENCFF999YXX.hic":"9255069996,56883","www.encodeproject.org%2Ffiles%2FENCFF685BLG%2F%40%40download%2FENCFF685BLG.hic":"16797022992,47429","www.encodeproject.org%2Ffiles%2FENCFF188SSH%2F%40%40download%2FENCFF188SSH.hic":"16797023050,47429","www.encodeproject.org%2Ffiles%2FENCFF465ESX%2F%40%40download%2FENCFF465ESX.hic":"13489465953,32102","www.encodeproject.org%2Ffiles%2FENCFF493SFI%2F%40%40download%2FENCFF493SFI.hic":"30033046818,54779","www.encodeproject.org%2Ffiles%2FENCFF235LCO%2F%40%40download%2FENCFF235LCO.hic":"38572174589,54779","www.encodeproject.org%2Ffiles%2FENCFF625VNK%2F%40%40download%2FENCFF625VNK.hic":"45202258438,54779","www.encodeproject.org%2Ffiles%2FENCFF304HMS%2F%40%40download%2FENCFF304HMS.hic":"36994445315,54779","www.encodeproject.org%2Ffiles%2FENCFF605CEN%2F%40%40download%2FENCFF605CEN.hic":"40358346301,54779","www.encodeproject.org%2Ffiles%2FENCFF086ORS%2F%40%40download%2FENCFF086ORS.hic":"22650781304,54779","www.encodeproject.org%2Ffiles%2FENCFF237UKR%2F%40%40download%2FENCFF237UKR.hic":"41516707246,54779","www.encodeproject.org%2Ffiles%2FENCFF004YZQ%2F%40%40download%2FENCFF004YZQ.hic":"71900665326,54779","www.encodeproject.org%2Ffiles%2FENCFF104THR%2F%40%40download%2FENCFF104THR.hic":"15172410632,54779","www.encodeproject.org%2Ffiles%2FENCFF807IRK%2F%40%40download%2FENCFF807IRK.hic":"17346637451,54779","www.encodeproject.org%2Ffiles%2FENCFF193CQL%2F%40%40download%2FENCFF193CQL.hic":"55726903245,54779","www.encodeproject.org%2Ffiles%2FENCFF700DEX%2F%40%40download%2FENCFF700DEX.hic":"20231399798,54779","www.encodeproject.org%2Ffiles%2FENCFF234MDO%2F%40%40download%2FENCFF234MDO.hic":"24635312640,54779","www.encodeproject.org%2Ffiles%2FENCFF181ROW%2F%40%40download%2FENCFF181ROW.hic":"26883606497,54779","www.encodeproject.org%2Ffiles%2FENCFF896OFN%2F%40%40download%2FENCFF896OFN.hic":"36952196833,54779","www.encodeproject.org%2Ffiles%2FENCFF573OPJ%2F%40%40download%2FENCFF573OPJ.hic":"36685546919,54779","www.encodeproject.org%2Ffiles%2FENCFF028RXH%2F%40%40download%2FENCFF028RXH.hic":"31053919206,54779","www.encodeproject.org%2Ffiles%2FENCFF156GGD%2F%40%40download%2FENCFF156GGD.hic":"35284134289,54779","www.encodeproject.org%2Ffiles%2FENCFF496GEU%2F%40%40download%2FENCFF496GEU.hic":"44659660933,54779","www.encodeproject.org%2Ffiles%2FENCFF945TUH%2F%40%40download%2FENCFF945TUH.hic":"3898570191,35639","www.encodeproject.org%2Ffiles%2FENCFF698KFV%2F%40%40download%2FENCFF698KFV.hic":"4427896684,35751","www.encodeproject.org%2Ffiles%2FENCFF239BHZ%2F%40%40download%2FENCFF239BHZ.hic":"1718552021,36479","www.encodeproject.org%2Ffiles%2FENCFF277LAN%2F%40%40download%2FENCFF277LAN.hic":"4542391336,36479","www.encodeproject.org%2Ffiles%2FENCFF397CMD%2F%40%40download%2FENCFF397CMD.hic":"2832016430,36479","www.encodeproject.org%2Ffiles%2FENCFF778OYA%2F%40%40download%2FENCFF778OYA.hic":"14067187484,47429","www.encodeproject.org%2Ffiles%2FENCFF775VSU%2F%40%40download%2FENCFF775VSU.hic":"14067187484,47429","www.encodeproject.org%2Ffiles%2FENCFF812THZ%2F%40%40download%2FENCFF812THZ.hic":"9667720429,36479","www.encodeproject.org%2Ffiles%2FENCFF777KBU%2F%40%40download%2FENCFF777KBU.hic":"5058284320,36479","www.encodeproject.org%2Ffiles%2FENCFF688KOY%2F%40%40download%2FENCFF688KOY.hic":"4198695833,36479","www.encodeproject.org%2Ffiles%2FENCFF223UBX%2F%40%40download%2FENCFF223UBX.hic":"1206064037,36479","www.encodeproject.org%2Ffiles%2FENCFF273XBU%2F%40%40download%2FENCFF273XBU.hic":"44085607579,54779","www.encodeproject.org%2Ffiles%2FENCFF952JZV%2F%40%40download%2FENCFF952JZV.hic":"44728845246,54779","www.encodeproject.org%2Ffiles%2FENCFF643NDM%2F%40%40download%2FENCFF643NDM.hic":"35877886780,54779","www.encodeproject.org%2Ffiles%2FENCFF586MQY%2F%40%40download%2FENCFF586MQY.hic":"71158037547,54779","www.encodeproject.org%2Ffiles%2FENCFF251VFA%2F%40%40download%2FENCFF251VFA.hic":"40089479399,54779","www.encodeproject.org%2Ffiles%2FENCFF033WGK%2F%40%40download%2FENCFF033WGK.hic":"30802023728,54779","www.encodeproject.org%2Ffiles%2FENCFF649OHR%2F%40%40download%2FENCFF649OHR.hic":"28203184265,54779","www.encodeproject.org%2Ffiles%2FENCFF782WVZ%2F%40%40download%2FENCFF782WVZ.hic":"37248221674,54779","www.encodeproject.org%2Ffiles%2FENCFF579CAR%2F%40%40download%2FENCFF579CAR.hic":"39662025395,54779","www.encodeproject.org%2Ffiles%2FENCFF514XWQ%2F%40%40download%2FENCFF514XWQ.hic":"1319613701,36479","www.encodeproject.org%2Ffiles%2FENCFF666USK%2F%40%40download%2FENCFF666USK.hic":"15051670107,32102","www.encodeproject.org%2Ffiles%2FENCFF047SDP%2F%40%40download%2FENCFF047SDP.hic":"1357076705,16438","www.encodeproject.org%2Ffiles%2FENCFF584LEP%2F%40%40download%2FENCFF584LEP.hic":"9314176858,36479","www.encodeproject.org%2Ffiles%2FENCFF671SOE%2F%40%40download%2FENCFF671SOE.hic":"3273732256,16438","www.encodeproject.org%2Ffiles%2FENCFF702LAP%2F%40%40download%2FENCFF702LAP.hic":"1800427500,31682","www.encodeproject.org%2Ffiles%2FENCFF339PON%2F%40%40download%2FENCFF339PON.hic":"5394351199,31514","www.encodeproject.org%2Ffiles%2FENCFF741QPR%2F%40%40download%2FENCFF741QPR.hic":"4271510019,30139","www.encodeproject.org%2Ffiles%2FENCFF103ANX%2F%40%40download%2FENCFF103ANX.hic":"4439745804,30083","www.encodeproject.org%2Ffiles%2FENCFF395SBC%2F%40%40download%2FENCFF395SBC.hic":"1596732351,31850","www.encodeproject.org%2Ffiles%2FENCFF289WNN%2F%40%40download%2FENCFF289WNN.hic":"8632980535,32102","www.encodeproject.org%2Ffiles%2FENCFF381EAU%2F%40%40download%2FENCFF381EAU.hic":"1702476311,36479","www.encodeproject.org%2Ffiles%2FENCFF976FEY%2F%40%40download%2FENCFF976FEY.hic":"1448279040,36479","www.encodeproject.org%2Ffiles%2FENCFF485LVS%2F%40%40download%2FENCFF485LVS.hic":"1593610856,36479","www.encodeproject.org%2Ffiles%2FENCFF143VJV%2F%40%40download%2FENCFF143VJV.hic":"1422312076,36479","www.encodeproject.org%2Ffiles%2FENCFF588NHX%2F%40%40download%2FENCFF588NHX.hic":"3943637009,36479","www.encodeproject.org%2Ffiles%2FENCFF768UBD%2F%40%40download%2FENCFF768UBD.hic":"24786676166,36479","www.encodeproject.org%2Ffiles%2FENCFF965PEE%2F%40%40download%2FENCFF965PEE.hic":"29387092778,47429","www.encodeproject.org%2Ffiles%2FENCFF702IFC%2F%40%40download%2FENCFF702IFC.hic":"29387092778,47429","www.encodeproject.org%2Ffiles%2FENCFF288DNV%2F%40%40download%2FENCFF288DNV.hic":"10313429504,36479","www.encodeproject.org%2Ffiles%2FENCFF698HWZ%2F%40%40download%2FENCFF698HWZ.hic":"10962849269,47429","www.encodeproject.org%2Ffiles%2FENCFF355OWW%2F%40%40download%2FENCFF355OWW.hic":"3219571601,36479","www.encodeproject.org%2Ffiles%2FENCFF177TYX%2F%40%40download%2FENCFF177TYX.hic":"10325679706,36479","www.encodeproject.org%2Ffiles%2FENCFF542BHD%2F%40%40download%2FENCFF542BHD.hic":"11085397879,47429","www.encodeproject.org%2Ffiles%2FENCFF684IFW%2F%40%40download%2FENCFF684IFW.hic":"11085397879,47429","www.encodeproject.org%2Ffiles%2FENCFF592UHE%2F%40%40download%2FENCFF592UHE.hic":"21363948089,32102","www.encodeproject.org%2Ffiles%2FENCFF779XIS%2F%40%40download%2FENCFF779XIS.hic":"9517383271,36479","www.encodeproject.org%2Ffiles%2FENCFF518PSL%2F%40%40download%2FENCFF518PSL.hic":"7500581463,36479","www.encodeproject.org%2Ffiles%2FENCFF275GBB%2F%40%40download%2FENCFF275GBB.hic":"7889407162,36479","www.encodeproject.org%2Ffiles%2FENCFF634KXI%2F%40%40download%2FENCFF634KXI.hic":"6430702966,36479","www.encodeproject.org%2Ffiles%2FENCFF337QPM%2F%40%40download%2FENCFF337QPM.hic":"8529733887,36479","www.encodeproject.org%2Ffiles%2FENCFF162KMP%2F%40%40download%2FENCFF162KMP.hic":"5615896908,36479","www.encodeproject.org%2Ffiles%2FENCFF992VTE%2F%40%40download%2FENCFF992VTE.hic":"7328975027,36479","www.encodeproject.org%2Ffiles%2FENCFF464WXY%2F%40%40download%2FENCFF464WXY.hic":"5715339664,36479","www.encodeproject.org%2Ffiles%2FENCFF752EGH%2F%40%40download%2FENCFF752EGH.hic":"1733758743,36479","www.encodeproject.org%2Ffiles%2FENCFF474UJM%2F%40%40download%2FENCFF474UJM.hic":"222309548,18679","www.encodeproject.org%2Ffiles%2FENCFF531UPZ%2F%40%40download%2FENCFF531UPZ.hic":"1827756846,36479","www.encodeproject.org%2Ffiles%2FENCFF022VHA%2F%40%40download%2FENCFF022VHA.hic":"244983451,18679","www.encodeproject.org%2Ffiles%2FENCFF732NGR%2F%40%40download%2FENCFF732NGR.hic":"1679484567,36479","www.encodeproject.org%2Ffiles%2FENCFF513VSF%2F%40%40download%2FENCFF513VSF.hic":"28397932940,36479","www.encodeproject.org%2Ffiles%2FENCFF750AOC%2F%40%40download%2FENCFF750AOC.hic":"36471430712,47429","www.encodeproject.org%2Ffiles%2FENCFF219YOB%2F%40%40download%2FENCFF219YOB.hic":"2859767211,26979","www.encodeproject.org%2Ffiles%2FENCFF604YDD%2F%40%40download%2FENCFF604YDD.hic":"3549694085,26979","www.encodeproject.org%2Ffiles%2FENCFF746AMV%2F%40%40download%2FENCFF746AMV.hic":"2954867135,26979","www.encodeproject.org%2Ffiles%2FENCFF845ZEB%2F%40%40download%2FENCFF845ZEB.hic":"2763039282,26979","www.encodeproject.org%2Ffiles%2FENCFF570LWS%2F%40%40download%2FENCFF570LWS.hic":"2861588289,26979","www.encodeproject.org%2Ffiles%2FENCFF883YVR%2F%40%40download%2FENCFF883YVR.hic":"2433679887,26979","www.encodeproject.org%2Ffiles%2FENCFF056VLK%2F%40%40download%2FENCFF056VLK.hic":"2502986910,26979","www.encodeproject.org%2Ffiles%2FENCFF532DUQ%2F%40%40download%2FENCFF532DUQ.hic":"3172615899,26979","www.encodeproject.org%2Ffiles%2FENCFF723PYJ%2F%40%40download%2FENCFF723PYJ.hic":"10292839095,36479","www.encodeproject.org%2Ffiles%2FENCFF991SGJ%2F%40%40download%2FENCFF991SGJ.hic":"13072407683,32102","www.encodeproject.org%2Ffiles%2FENCFF885UZI%2F%40%40download%2FENCFF885UZI.hic":"1201881201,16438","www.encodeproject.org%2Ffiles%2FENCFF287KXA%2F%40%40download%2FENCFF287KXA.hic":"14705801988,32102","www.encodeproject.org%2Ffiles%2FENCFF335HYI%2F%40%40download%2FENCFF335HYI.hic":"20366756545,32102","www.encodeproject.org%2Ffiles%2FENCFF121YPY%2F%40%40download%2FENCFF121YPY.hic":"2760104016,26979","www.encodeproject.org%2Ffiles%2FENCFF675SJE%2F%40%40download%2FENCFF675SJE.hic":"3751779995,26979","www.encodeproject.org%2Ffiles%2FENCFF876LAW%2F%40%40download%2FENCFF876LAW.hic":"4032376256,26979","www.encodeproject.org%2Ffiles%2FENCFF740KVX%2F%40%40download%2FENCFF740KVX.hic":"3202490322,26979","www.encodeproject.org%2Ffiles%2FENCFF977OQV%2F%40%40download%2FENCFF977OQV.hic":"2919735477,26979","www.encodeproject.org%2Ffiles%2FENCFF525EFN%2F%40%40download%2FENCFF525EFN.hic":"2394748073,26979","www.encodeproject.org%2Ffiles%2FENCFF690QRC%2F%40%40download%2FENCFF690QRC.hic":"3183023394,26979","www.encodeproject.org%2Ffiles%2FENCFF452FWS%2F%40%40download%2FENCFF452FWS.hic":"2951805127,26979","www.encodeproject.org%2Ffiles%2FENCFF089KBG%2F%40%40download%2FENCFF089KBG.hic":"2531936700,26979","www.encodeproject.org%2Ffiles%2FENCFF939ARM%2F%40%40download%2FENCFF939ARM.hic":"3066385212,26979","www.encodeproject.org%2Ffiles%2FENCFF401ZAN%2F%40%40download%2FENCFF401ZAN.hic":"3008677144,26979","www.encodeproject.org%2Ffiles%2FENCFF378RZT%2F%40%40download%2FENCFF378RZT.hic":"2830232168,26979","www.encodeproject.org%2Ffiles%2FENCFF304AVD%2F%40%40download%2FENCFF304AVD.hic":"6164439305,50358","www.encodeproject.org%2Ffiles%2FENCFF453DBX%2F%40%40download%2FENCFF453DBX.hic":"6775246670,36479","www.encodeproject.org%2Ffiles%2FENCFF590VOM%2F%40%40download%2FENCFF590VOM.hic":"6443478922,36479","www.encodeproject.org%2Ffiles%2FENCFF246DOF%2F%40%40download%2FENCFF246DOF.hic":"6837914659,36479","www.encodeproject.org%2Ffiles%2FENCFF125FXX%2F%40%40download%2FENCFF125FXX.hic":"9736232550,36479","www.encodeproject.org%2Ffiles%2FENCFF241RAY%2F%40%40download%2FENCFF241RAY.hic":"7686758397,36479","www.encodeproject.org%2Ffiles%2FENCFF415XWQ%2F%40%40download%2FENCFF415XWQ.hic":"6973092068,36479","www.encodeproject.org%2Ffiles%2FENCFF374EBH%2F%40%40download%2FENCFF374EBH.hic":"8557459058,36479","www.encodeproject.org%2Ffiles%2FENCFF263YWR%2F%40%40download%2FENCFF263YWR.hic":"331586820,18679","www.encodeproject.org%2Ffiles%2FENCFF280CGS%2F%40%40download%2FENCFF280CGS.hic":"1743569614,36479","www.encodeproject.org%2Ffiles%2FENCFF553ZNS%2F%40%40download%2FENCFF553ZNS.hic":"1717253636,36479","www.encodeproject.org%2Ffiles%2FENCFF451VOI%2F%40%40download%2FENCFF451VOI.hic":"1626927468,36479","www.encodeproject.org%2Ffiles%2FENCFF420MQO%2F%40%40download%2FENCFF420MQO.hic":"31055961677,36479","www.encodeproject.org%2Ffiles%2FENCFF301BWY%2F%40%40download%2FENCFF301BWY.hic":"38902429246,47429","www.encodeproject.org%2Ffiles%2FENCFF606XNW%2F%40%40download%2FENCFF606XNW.hic":"1009699327,36479","www.encodeproject.org%2Ffiles%2FENCFF439ZOU%2F%40%40download%2FENCFF439ZOU.hic":"12381714313,36479","www.encodeproject.org%2Ffiles%2FENCFF499SYK%2F%40%40download%2FENCFF499SYK.hic":"13182654663,47429","www.encodeproject.org%2Ffiles%2FENCFF532LFI%2F%40%40download%2FENCFF532LFI.hic":"8286030286,36479","www.encodeproject.org%2Ffiles%2FENCFF020DPP%2F%40%40download%2FENCFF020DPP.hic":"23521952420,47429","www.encodeproject.org%2Ffiles%2FENCFF306VTV%2F%40%40download%2FENCFF306VTV.hic":"23521952480,47429","www.encodeproject.org%2Ffiles%2FENCFF399IHE%2F%40%40download%2FENCFF399IHE.hic":"10216571232,36479","www.encodeproject.org%2Ffiles%2FENCFF944AII%2F%40%40download%2FENCFF944AII.hic":"12567308552,47429","www.encodeproject.org%2Ffiles%2FENCFF230HVV%2F%40%40download%2FENCFF230HVV.hic":"8629849711,36479","www.encodeproject.org%2Ffiles%2FENCFF174LAF%2F%40%40download%2FENCFF174LAF.hic":"9446506633,47429","www.encodeproject.org%2Ffiles%2FENCFF898HRO%2F%40%40download%2FENCFF898HRO.hic":"9446506633,47429","www.encodeproject.org%2Ffiles%2FENCFF429MOR%2F%40%40download%2FENCFF429MOR.hic":"1455757398,36479","www.encodeproject.org%2Ffiles%2FENCFF061NXV%2F%40%40download%2FENCFF061NXV.hic":"1710915891,36479","www.encodeproject.org%2Ffiles%2FENCFF434PYS%2F%40%40download%2FENCFF434PYS.hic":"1832274903,36479","www.encodeproject.org%2Ffiles%2FENCFF704HHX%2F%40%40download%2FENCFF704HHX.hic":"1768142834,36479","www.encodeproject.org%2Ffiles%2FENCFF349DPM%2F%40%40download%2FENCFF349DPM.hic":"4316041260,36479","www.encodeproject.org%2Ffiles%2FENCFF718AWL%2F%40%40download%2FENCFF718AWL.hic":"39544267907,58932","www.encodeproject.org%2Ffiles%2FENCFF065LSP%2F%40%40download%2FENCFF065LSP.hic":"24929805283,55874","www.encodeproject.org%2Ffiles%2FENCFF632MFV%2F%40%40download%2FENCFF632MFV.hic":"22333105467,55798","www.encodeproject.org%2Ffiles%2FENCFF179HVU%2F%40%40download%2FENCFF179HVU.hic":"2659219603,36479","www.encodeproject.org%2Ffiles%2FENCFF791SPZ%2F%40%40download%2FENCFF791SPZ.hic":"2537491657,36479","www.encodeproject.org%2Ffiles%2FENCFF211ZWF%2F%40%40download%2FENCFF211ZWF.hic":"3512141227,36479","www.encodeproject.org%2Ffiles%2FENCFF614BNU%2F%40%40download%2FENCFF614BNU.hic":"5252155462,36479","www.encodeproject.org%2Ffiles%2FENCFF891DLM%2F%40%40download%2FENCFF891DLM.hic":"2549095612,36479","www.encodeproject.org%2Ffiles%2FENCFF056EXT%2F%40%40download%2FENCFF056EXT.hic":"2219014704,36479","www.encodeproject.org%2Ffiles%2FENCFF776DSS%2F%40%40download%2FENCFF776DSS.hic":"3920308353,36479","www.encodeproject.org%2Ffiles%2FENCFF814LQF%2F%40%40download%2FENCFF814LQF.hic":"1349480197,36479","www.encodeproject.org%2Ffiles%2FENCFF513ZNA%2F%40%40download%2FENCFF513ZNA.hic":"2638868195,36479","www.encodeproject.org%2Ffiles%2FENCFF692IOL%2F%40%40download%2FENCFF692IOL.hic":"3106768498,36479","www.encodeproject.org%2Ffiles%2FENCFF294WZY%2F%40%40download%2FENCFF294WZY.hic":"2211089761,36479","www.encodeproject.org%2Ffiles%2FENCFF339UWS%2F%40%40download%2FENCFF339UWS.hic":"2142759055,36479","www.encodeproject.org%2Ffiles%2FENCFF835FSK%2F%40%40download%2FENCFF835FSK.hic":"3919821739,36479","www.encodeproject.org%2Ffiles%2FENCFF328BMB%2F%40%40download%2FENCFF328BMB.hic":"2550686152,36479","www.encodeproject.org%2Ffiles%2FENCFF897RTY%2F%40%40download%2FENCFF897RTY.hic":"1323294397,36479","www.encodeproject.org%2Ffiles%2FENCFF306MWH%2F%40%40download%2FENCFF306MWH.hic":"1665386199,36479","www.encodeproject.org%2Ffiles%2FENCFF039YUJ%2F%40%40download%2FENCFF039YUJ.hic":"2335679939,36479","www.encodeproject.org%2Ffiles%2FENCFF468QIN%2F%40%40download%2FENCFF468QIN.hic":"3352516594,36479","www.encodeproject.org%2Ffiles%2FENCFF364WXU%2F%40%40download%2FENCFF364WXU.hic":"3959043175,36479","www.encodeproject.org%2Ffiles%2FENCFF373MSH%2F%40%40download%2FENCFF373MSH.hic":"4429550624,36479","www.encodeproject.org%2Ffiles%2FENCFF959EGQ%2F%40%40download%2FENCFF959EGQ.hic":"2475218228,36479","www.encodeproject.org%2Ffiles%2FENCFF624XMK%2F%40%40download%2FENCFF624XMK.hic":"3527855681,36479","www.encodeproject.org%2Ffiles%2FENCFF445OKS%2F%40%40download%2FENCFF445OKS.hic":"3369125589,36479","www.encodeproject.org%2Ffiles%2FENCFF239QDV%2F%40%40download%2FENCFF239QDV.hic":"1960069888,36479","www.encodeproject.org%2Ffiles%2FENCFF645AVM%2F%40%40download%2FENCFF645AVM.hic":"4969006589,36479","www.encodeproject.org%2Ffiles%2FENCFF494IPI%2F%40%40download%2FENCFF494IPI.hic":"1565483792,36479","www.encodeproject.org%2Ffiles%2FENCFF753IXE%2F%40%40download%2FENCFF753IXE.hic":"2892400648,36479","www.encodeproject.org%2Ffiles%2FENCFF731GXX%2F%40%40download%2FENCFF731GXX.hic":"5131381303,36479","www.encodeproject.org%2Ffiles%2FENCFF369CAQ%2F%40%40download%2FENCFF369CAQ.hic":"4236629448,36479","www.encodeproject.org%2Ffiles%2FENCFF053VBX%2F%40%40download%2FENCFF053VBX.hic":"54305946375,47429","www.encodeproject.org%2Ffiles%2FENCFF555ISR%2F%40%40download%2FENCFF555ISR.hic":"54305946434,47429","www.encodeproject.org%2Ffiles%2FENCFF964RSP%2F%40%40download%2FENCFF964RSP.hic":"12065485229,36479","www.encodeproject.org%2Ffiles%2FENCFF234MZQ%2F%40%40download%2FENCFF234MZQ.hic":"17507142760,47429","www.encodeproject.org%2Ffiles%2FENCFF994CEG%2F%40%40download%2FENCFF994CEG.hic":"17507142760,47429","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb068e787-bbdd-49e2-9f6d-7a0e9f065d6e%2F4DNFIHSUIRFY.hic":"2701182442,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3768b89a-e124-40eb-8acd-94a4fdd35807%2F4DNFIXTAS6EE.hic":"3283740601,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9c513602-5abb-4088-8415-c827c381ab0d%2F4DNFIC3JD6O2.hic":"4896075767,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fde954dad-1849-4c23-beb4-bf893b7d76c9%2F4DNFIGY85S4W.hic":"3364151996,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe1befa6e-8067-4296-8db2-67d2a2458985%2F4DNFI2LTNXME.hic":"3699291418,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbb3307fd-7162-477a-87c5-52f12d03befc%2F4DNFID162B9J.hic":"3576428773,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8597cdae-8319-42d9-9175-3f77aaee34e1%2F4DNFIQWS3632.hic":"4022561190,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F327f091d-6a63-47c4-9752-2dff303a13d9%2F4DNFI6GFHB6G.hic":"4239331168,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd70dc3b8-48a7-42c2-bd23-80bc44fc2266%2F4DNFIS5F6EBL.hic":"4404671861,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F77df7bf8-6a3d-407a-8968-4ca1e78d2269%2F4DNFIF2D3TL9.hic":"4793989394,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc8f7cc35-d2ef-4717-9009-c02154050fbf%2F4DNFI6EIFUZI.hic":"3370273763,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F98449d79-30d1-4e32-801d-07435819a42f%2F4DNFIRKGMZRQ.hic":"4669813207,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd4fe1844-2493-4722-8b98-34a93a4bb7d8%2F4DNFIQWD8ZYD.hic":"5379889057,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1ee40499-1de4-47ff-b540-d9a65943c6b8%2F4DNFIX7H3CE2.hic":"4857679239,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fac016170-23a7-4111-8773-353d6c150f34%2F4DNFIO21YDCV.hic":"4695989644,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1faea4e7-9a32-466e-a826-0bfdab6cd915%2F4DNFIUE5RAS6.hic":"4788044799,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcbd396ed-11bb-404f-aed9-ef10abc258e6%2F4DNFIFI6NIKJ.hic":"2069414927,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faf3f78db-ae92-4215-bcae-76d30c617e5d%2F4DNFIL5K3MA1.hic":"2585598247,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F66fc2893-224e-48b4-bdb0-25e022dedd03%2F4DNFIPV5KFMK.hic":"2060965679,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2b39781d-aadc-434f-abe3-562d61308fdd%2F4DNFIW8TIFI5.hic":"1694424195,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb6d28f7b-27d3-486f-b5ac-32567416560d%2F4DNFIA6NSSBJ.hic":"2219532611,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F08785616-722e-46bb-ade2-2fdd21324e11%2F4DNFIBKZK63V.hic":"2429136232,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F904b13d3-1203-42a4-812c-963e80c159b1%2F4DNFI3CFMRID.hic":"1233390166,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb0ed4afe-5ecf-451d-bb1f-444697e3f558%2F4DNFIYIAUEPW.hic":"1753567534,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4bb9a9b3-12a8-4d2f-8071-4722294c88ea%2F4DNFIC3HAU11.hic":"2271375254,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5abf9c36-c1d1-44dc-8197-74d860d896c0%2F4DNFIM2BMJ33.hic":"1770471113,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa68475db-7816-4cec-b2da-d4ce4a0c7a0e%2F4DNFIBY3UHJB.hic":"2095528423,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F07c40943-0d0b-4b3e-94a0-8583b0e00b47%2F4DNFIWZEN3FF.hic":"1558559508,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd8a39553-2718-4866-9b2a-45d8e9c5ac6f%2F4DNFIE5TEYK7.hic":"1323063102,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F294b61ef-5565-4f04-ade9-f921a6686cce%2F4DNFI7H4II2V.hic":"1436947982,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F87a70ad7-7d34-4302-9c03-eb824bd4e633%2F4DNFIAS8LV1C.hic":"1263105698,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9db804c6-5a91-4cf5-8ae9-e054223afb77%2F4DNFIBXWIH8J.hic":"1587059951,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd1e55906-ec8f-444b-8ce1-2de22a431a76%2F4DNFIO2HBDAI.hic":"1666436393,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7a4b9b37-8e38-470c-8190-fd4d513c0bbb%2F4DNFIXWCLD4M.hic":"1513511880,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6c7615b2-5310-4bbf-a605-98761d3a3079%2F4DNFINASC4NQ.hic":"1420358914,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F20454014-49cd-4e2d-93da-f40ad52776d5%2F4DNFIZF1KI43.hic":"1377041630,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5df04e86-ee2a-45f2-b878-bf1648e2cca5%2F4DNFIQBHR9XC.hic":"1179502734,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9d1cc910-bb3f-4106-802a-73184c58d5ba%2F4DNFIQVMVRP6.hic":"1811976991,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe431986b-0732-460f-92ff-0abd1694d2d0%2F4DNFIJ7OAIFQ.hic":"1685503856,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F56d0c575-4962-4ea3-92c3-55bd0e17c096%2F4DNFIE8E4ANZ.hic":"1598369564,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdb1502fb-a989-4ef9-b800-7eaa7be172ae%2F4DNFIOUSETUP.hic":"1493294709,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Facc2f1c3-8c96-4d21-814a-3a8ba81e7741%2F4DNFIVJ3IIQL.hic":"1472376655,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F037fb4c3-8641-4953-a977-cc71f2137582%2F4DNFIHN2QSMX.hic":"1179632606,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F16d2c3c0-6d29-4815-b074-b142af90b615%2F4DNFIILDWK8M.hic":"2280059989,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F31789849-e4db-45d8-9730-66a048c02d8a%2F4DNFI6XD6JAQ.hic":"2253961696,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fff04947e-e6e8-4d62-8374-ef2ee4104809%2F4DNFIALNLR78.hic":"1914687914,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F53e6c1e7-9410-4158-84e6-57c2e683b095%2F4DNFIBT4EAKN.hic":"2296378356,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0127900a-258f-4815-97d2-6fd2b043d853%2F4DNFIDJ2JZ7Q.hic":"2558945393,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F89f95693-3d28-44eb-9d45-14932f8e258c%2F4DNFI8JFOAJT.hic":"1726440253,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd803d818-b0d4-4796-8d61-a9f3943f3b10%2F4DNFIRZA6EV6.hic":"1805017504,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff9165fb1-0782-4757-a740-5b929e0252bb%2F4DNFIB7QTIMH.hic":"2541020707,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff8d916b2-b58e-4cdf-894c-ffcb3bf6ebd9%2F4DNFIJ5DQZVK.hic":"2445734043,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F14066a5b-e01a-43c2-a468-b18826174df3%2F4DNFISTWNV9C.hic":"2499319890,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd0692151-7f9a-4475-b059-f8802616dded%2F4DNFIBN9K4V9.hic":"1591570769,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F70a7ef36-a514-4e45-918f-47c4e9e30ef4%2F4DNFIR8OU6QJ.hic":"1689882108,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F180306cd-8593-413a-ae83-24f19209c5d2%2F4DNFIDSWKFF5.hic":"1596696630,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6e7b9be7-f465-4434-8e9c-68d1e44a76af%2F4DNFIV239W4L.hic":"2345867406,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F55df948c-941d-4930-854c-6a07557a0c1d%2F4DNFIREVU1Z5.hic":"2254683002,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3f590cb7-df3a-498f-81c3-d5ed4179b8ad%2F4DNFIFHU75I5.hic":"2497670883,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8f064770-6008-4f74-bfca-268d4a22d745%2F4DNFIMROE6N4.hic":"9850583704,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa93d0588-76b7-4ccf-933c-4325876b0a53%2F4DNFI5SUHCGZ.hic":"10364705187,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2f5f0d6b-0b22-4936-93c9-0944d49c037b%2F4DNFII84FBKM.hic":"8836986129,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F12e90fc5-0b76-4e42-b346-58d267f9ad6e%2F4DNFI2J1ODWB.hic":"13410858286,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff2702a45-3e8b-4980-bcd5-6bb0e291614f%2F4DNFIJWBWE41.hic":"20515676755,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa0859349-5f06-4ad3-b56f-b1166b34a9eb%2F4DNFIIMZB6Y9.hic":"15350325963,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F12685c57-d54a-46fa-9efb-acf34ed77574%2F4DNFICJECID5.hic":"1525002266,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd101a58e-89aa-44fd-96c5-6bf1e2476272%2F4DNFIR6UW2QA.hic":"1264999913,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3d8c73bf-1335-4af4-b124-e3622d48c5f6%2F4DNFIGOEKBUZ.hic":"1905947578,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcd2477cf-6ed0-4d7b-b4e9-88fb38b0df48%2F4DNFIMDNAEW4.hic":"996444147,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0f03953e-29da-4f2e-8c05-572d0edf4525%2F4DNFI5OSZ3JC.hic":"369361754,22829","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F29d95dbb-005a-4ae1-8b9c-0fec9ec0bbd0%2F4DNFI7KOUGFM.hic":"1227434049,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa441ab7b-afbe-437d-bf98-b6b916558642%2F4DNFIGKX4A32.hic":"883933242,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F941b2f94-2fff-4d3c-aceb-fee4a5ae41a9%2F4DNFI1ORHOTA.hic":"1140970677,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8720ede9-093f-4c00-912f-373283260a16%2F4DNFIWSVLZED.hic":"458091151,26979","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe9e17155-2b62-4a68-afb2-31dfa674e169%2F4DNFI6H926RO.hic":"3552863515,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F22f22778-987a-4dc0-97bc-f26eae0156d9%2F4DNFIKTYSPOF.hic":"2939475400,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F40f40192-0acb-44cb-8778-8d21afe593fb%2F4DNFIZ4S52BV.hic":"3067438113,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd8767374-7018-4e11-9226-bf5612d39ebb%2F4DNFI3APMXHF.hic":"3258874744,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8c5140ec-a65a-4186-8c59-2927233eecaa%2F4DNFIQLIKDSD.hic":"2746398416,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8cdedda6-d7d8-4231-a85b-d56fcd962366%2F4DNFIKYXMF1E.hic":"14442148774,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faa4d4497-7c6c-4dad-8040-be13ba07ea32%2F4DNFI9815EEJ.hic":"17960817603,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe9b7b95f-190b-49fe-8047-ef4a8fc59746%2F4DNFIQ2687RT.hic":"15954277087,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F59863d3a-8d7c-49c7-9a41-7f2a58ad24d1%2F4DNFIYDBBSE3.hic":"16499534862,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3e80ca41-b3e0-4f4f-a05e-8f95fe96d938%2F4DNFIMOCN1YS.hic":"863725312,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F96f97a01-0020-4f09-93e8-fc8a9fd07218%2F4DNFI6558CM8.hic":"1597967345,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fce9e9334-ee0b-4549-a845-110470ba5986%2F4DNFIQZRKS7Y.hic":"907626411,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdaac8209-1015-48da-9e31-2e252dfd8fe0%2F4DNFIX4DLXSE.hic":"1369766288,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F268b7d52-9655-474c-9467-8ba31bb2195c%2F4DNFII3JV8I1.hic":"856656441,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9681f9b5-335a-4f56-afa1-15b58bbb41e8%2F4DNFI5IAH9H1.hic":"1495185175,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3e082eab-95aa-4677-88ed-9d7adcc1effb%2F4DNFIK5HY1GP.hic":"2135337789,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F31af1ead-4520-4669-957e-424b4b197c33%2F4DNFIFA89L5B.hic":"1975593640,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcc2b78fd-52d4-4e0c-ac93-b84ee82daf7e%2F4DNFICXCFGEI.hic":"2628202920,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff54efece-280f-46ca-95e3-1f8a3cd18820%2F4DNFIK4CECUH.hic":"1901129375,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1181c0c4-afb7-4b6a-9fdc-d868fb2253fc%2F4DNFI1EYIGOC.hic":"1947135384,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1d3e2905-b9b9-4b91-bcb4-8d34746e78f6%2F4DNFI7TLEWUI.hic":"1185758726,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faba3d42f-39cd-4a85-9d3f-835aefb5c803%2F4DNFIVCJKHMN.hic":"687240974,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F27f54fcb-54fe-41a4-b25a-2f8944c89044%2F4DNFIN8F14CS.hic":"1304082029,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb75fedb5-88f4-4bc0-8e38-298df7847a7f%2F4DNFI5LCW273.hic":"12497258313,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2f22b2a0-3712-496e-92d2-63775ec0e421%2F4DNFIVSCH2CH.hic":"12594733778,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F07e47261-5863-44f5-9198-76e263081bea%2F4DNFIZ268JGC.hic":"1499059135,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F682b1ae1-3ac3-40e4-a330-c49f63946952%2F4DNFIJ1P4HBI.hic":"1190211725,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F197e7c89-ea73-41de-8cb2-8c0b1e3bb945%2F4DNFITEGKBIW.hic":"2061501971,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F191f6928-c9a8-44b2-8516-ee4d6005f24b%2F4DNFIE1P6RVH.hic":"1711447310,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F94435086-3701-4b28-a6d0-4a59b24d7615%2F4DNFICJ6I4DO.hic":"1557899940,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faa9ac173-d233-41c7-8985-ca91949664e4%2F4DNFIKUG8MEW.hic":"1339072088,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fba6d8ab6-ee18-4ba2-8da9-d631888dd50a%2F4DNFICFZGFAV.hic":"1261083478,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F87a3ab04-7094-4673-81e4-ac8c9add8eb5%2F4DNFIQXCZVVA.hic":"1084913802,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbc1ff488-82af-4579-9424-959184edb139%2F4DNFIB6PJFJ3.hic":"1114571343,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1f7026ee-987a-41e7-8a61-45510ee3f86b%2F4DNFIX97731O.hic":"1246860402,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6186787c-2e72-4925-9729-02121e2e4597%2F4DNFIYQYZOTO.hic":"1212210849,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3b98a946-0109-4efa-a13e-cc7a36772125%2F4DNFIPXU7V25.hic":"1696288217,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fea17d041-c6ed-43a1-8047-535f3d19ad44%2F4DNFIL39PR76.hic":"1719284710,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F72774afe-f166-42ac-9849-4070b0dadf6d%2F4DNFIYLJ3R3B.hic":"1106419640,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4a45e733-55f8-4a8e-be24-2ef34c976e25%2F4DNFIL51WBN6.hic":"1327651164,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F086c62b0-a26f-41ae-a5ff-88b8be2bd2aa%2F4DNFI6SFPUDA.hic":"1336964405,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4d9b79c7-af62-4070-84a9-b953903f2732%2F4DNFI2KM22QR.hic":"953067310,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3c9889d1-f49e-4639-8e15-2d99d6cd22e7%2F4DNFIVF8Q45U.hic":"984193565,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa080dd7b-b7bb-4eae-a275-572a8b45b2d0%2F4DNFI2RN3WFP.hic":"1046525527,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb81860ca-c227-4b68-a298-1907fd32300a%2F4DNFI4TJTL7A.hic":"1160373401,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F74ab47dc-7b52-421c-845e-6feb33457adf%2F4DNFIYJ4TWB8.hic":"1268416204,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc6582128-a930-4bcc-941e-5c0733bdd4d5%2F4DNFIM6RGKPV.hic":"863347067,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F11a75514-4450-4295-9eda-18e3678a575a%2F4DNFIL2VWWL5.hic":"860731581,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5eb52a8c-bf14-4225-bf34-14a0aa47c369%2F4DNFIX6ZXCA8.hic":"893462267,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F66aaa4c0-1f62-4040-8ecc-4e95da23cd18%2F4DNFIEVR81FS.hic":"879736207,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F821c6e7f-96f7-47de-b7d9-4970562b3c8e%2F4DNFIAUI6BBI.hic":"996313881,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9252c362-31ab-413d-a47a-cc97bdbf243a%2F4DNFIAFEE9G2.hic":"1103265750,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc1a0bf52-2e65-4deb-871f-ede736babd41%2F4DNFIPZBEXCP.hic":"1081257762,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F729f5ce3-d7e0-466d-b781-d18049e63bfa%2F4DNFIWPKRZGU.hic":"973779283,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F80b769ee-a717-4825-9db0-dca86f913173%2F4DNFIMD9QNDX.hic":"1158688208,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F266290c0-2767-4158-85ab-7274368905b9%2F4DNFIATA1HD5.hic":"1073361089,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc46f18a8-eb24-4d35-b112-36db72bde2f5%2F4DNFIH9U4I7I.hic":"1111124316,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fec91a79e-7de7-49f7-9b3d-d28313aeddc8%2F4DNFIZ95S6TR.hic":"1242494051,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9e9390b9-da20-43bb-a8f4-9830f354ddf9%2F4DNFI5ERM9J7.hic":"1271051397,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fee8ea82e-b9e4-41ad-bced-5f4fbdaa4fec%2F4DNFI15FPSQL.hic":"1216714120,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbed7eb86-8990-42f2-b3ee-5992d6361f7c%2F4DNFIJ3DZPGM.hic":"1035089437,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdaa8a324-3bf8-424c-8a86-b8ad325cc20d%2F4DNFINW9P6XF.hic":"1215712740,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F70631758-6bf8-47a0-92b6-132574886faa%2F4DNFITS16HW8.hic":"1105283847,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe473304b-7bc8-49b8-bba1-ecb9f06914ee%2F4DNFIS3DIH4V.hic":"1036056660,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F10f9224a-111c-402a-ac25-e221ad0af9ef%2F4DNFIY3KDHP6.hic":"1071761024,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F17519b96-2bdd-4294-98f0-1535f1aef28e%2F4DNFIO8HVKOL.hic":"953793750,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffb18f896-4730-4909-86a3-867fc8e76cd6%2F4DNFIMF6CFOM.hic":"708717889,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcfee4d87-0873-40b0-b79f-35dcc8669c1c%2F4DNFIZZ77KD2.hic":"732668723,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb8b5d909-8a1b-41bb-bcdd-d108a0bde762%2F4DNFIOLO226X.hic":"951271932,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9ce81f6e-b9cf-4ec9-8bd3-517539e4b662%2F4DNFIJMS2ODT.hic":"932509067,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F506aa952-5d41-49ff-b658-916bcf88a395%2F4DNFI49F3LJ4.hic":"1208494817,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe4dc392d-ca36-4bdf-a27d-173cae34f520%2F4DNFI65MQOIJ.hic":"854630155,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F149ef8d7-e0b4-4e4f-b7e5-7226e2603746%2F4DNFIM4KEPRD.hic":"882790622,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa436f0a8-4f9a-4524-90ac-795c5b8491cf%2F4DNFIIXBIZFC.hic":"848244425,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbc8a05dc-7449-4b01-8330-a55db37ca8e6%2F4DNFIWDOOBVE.hic":"1116239020,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faef8b881-28fe-4694-9a95-1d31940e6726%2F4DNFIDT9EB5M.hic":"888289053,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff66f3162-a53d-46f2-8800-3752935d5400%2F4DNFIX2VUNV8.hic":"1226661451,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F36c782e6-2c48-4298-aa43-bd6624da003d%2F4DNFIEQHTV1R.hic":"804665819,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff15d571e-605d-4bcc-a359-0350b57a6815%2F4DNFIFW7GA64.hic":"901568712,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc2aa2e8b-ac7f-4acb-b4b5-ac5f845840fe%2F4DNFIXGXD67I.hic":"970995551,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F71b6fd7d-b249-4d65-a597-b80b95845399%2F4DNFIA7GB1NB.hic":"956785837,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6cbb1418-34db-427f-9273-5174eac81529%2F4DNFIVOJGWNP.hic":"890415052,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc69c2ee7-b6c3-4a62-8d4f-913491c9dab8%2F4DNFIW22BNB5.hic":"1075499540,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa268f28f-c6d9-4324-8989-75d2d317af1b%2F4DNFIIFBC8WN.hic":"1045459440,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6c7361d4-60a6-440b-b5be-072cada98663%2F4DNFI9ZBEBJH.hic":"759395398,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcceaad1a-e01e-4430-8bd6-24ffa6891802%2F4DNFID4SLU53.hic":"921288444,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9eee5854-b33e-4d5a-9ba8-ceffd47e7488%2F4DNFIODI1NUJ.hic":"733159777,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5e1089b0-42e8-441c-99bb-4be99bcec28b%2F4DNFIJL26LFN.hic":"723567970,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F298a429e-ea29-49d3-bfed-fa851e1e7c4c%2F4DNFI5KTF553.hic":"2213661745,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F965d29f0-e4a3-477c-8ae4-faf4a654e69a%2F4DNFIYSPGFGV.hic":"2274989349,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd88acbc1-37b9-4266-9f97-d8fed576d0f3%2F4DNFILOR6D2D.hic":"2595459358,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7b6ddbce-0ed1-4272-b8ae-32793e4ea4e4%2F4DNFI1WMMPJQ.hic":"2262433890,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fedc0c8c4-97d8-4372-9a4f-5e0cdf09d7d0%2F4DNFI47P5978.hic":"2146314403,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0edcc389-43a4-44d7-b946-fe3496f93d56%2F4DNFI7XGW6IH.hic":"2302805723,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0a802926-e235-4c80-b521-83a1774dfb46%2F4DNFIK1EJG8I.hic":"2374943035,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3c36aedb-6a58-4aa2-9b11-bb440ec174f1%2F4DNFIDQ3THN9.hic":"2341188249,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F846123cd-8828-4e51-8b8a-27deaf293858%2F4DNFI3WPNFWT.hic":"775145629,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbd06e3ad-0e37-48a3-8367-c7d5912cab03%2F4DNFI9DCUOQ1.hic":"870487824,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc2eaf9bf-9584-4cec-8685-bd74038a6c01%2F4DNFIU8AF5ZY.hic":"1276224366,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F219497b5-3f35-473b-9d4e-e1cf21c69561%2F4DNFIHW8NTQX.hic":"28864787856,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4be13558-114a-4f2d-abca-7598e2ff4757%2F4DNFI4OUMWZ8.hic":"17061013588,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F49aed637-87a1-4d4d-ae68-e5da82aec05b%2F4DNFIEYQ5ZIR.hic":"13555272651,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa2f48779-4eff-44a6-8a9d-96435aca1ddc%2F4DNFIDZT7PR8.hic":"13425047093,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb6ec6b71-27b8-4891-b10a-ab06a5270468%2F4DNFIEJEFCAM.hic":"15394960208,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F68b9a7b5-8413-44fc-8c2d-59a67b1c4166%2F4DNFIJ8JKKWJ.hic":"17012681779,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F294d45a4-8b5e-456f-a9cb-1cbbbad3a7d2%2F4DNFINEQY95T.hic":"13966775978,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbd7f3a48-b822-41e2-bd9c-f52b3aff7b6a%2F4DNFII6AN691.hic":"12367300362,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7da44594-0dc8-4e74-8e10-a957aeaea51a%2F4DNFIDBIEXI7.hic":"2015474981,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F085a0453-3784-4eba-80b2-3556e53e2f52%2F4DNFIDKJFK2S.hic":"1983111659,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc370c78c-0a99-4c3f-a29b-2dfafc6a3e86%2F4DNFIPAF4PYT.hic":"3041434294,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F907ce45f-baa5-416d-92de-e86db4bacff1%2F4DNFIWIYYNQ5.hic":"7082321112,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff13afc6b-cf69-4c9d-881f-eed4dd3c28ee%2F4DNFIHMCILEN.hic":"1739157603,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7575d891-0e3d-4a77-896a-3e1b3a8d330b%2F4DNFIJBJ6QVH.hic":"5213499748,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff0daa830-60d5-4c7c-a2e1-a4ee70b3fee7%2F4DNFIH2A7IKF.hic":"4099503507,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff4970a25-91d8-49a7-9a4a-fe0f12cb2b0f%2F4DNFIOL8KGQ2.hic":"2256042055,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F879f1850-d175-4a86-8a97-12658482e3d1%2F4DNFIWILLD6C.hic":"5476286356,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F787f538e-d619-4c8f-985b-78753fb7e57c%2F4DNFIZBXXJAF.hic":"5946467856,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb8ee785f-1016-4989-9e64-78352621d32f%2F4DNFI8PZOJHN.hic":"8307204961,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3d8997fa-528c-4531-b25b-a412de6bd472%2F4DNFIGXAMSJY.hic":"6577588285,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F87aede55-7610-4283-af0e-c6840429a31e%2F4DNFIWNNO89O.hic":"2871061417,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F93b8e020-b337-4685-81dc-40cc8a12b5e9%2F4DNFIXU2KPNQ.hic":"3401717686,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffb5cf1bd-59d6-46fe-857d-b86d9756029d%2F4DNFIHBGD6N6.hic":"840028421,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2d1bc088-d838-49b8-85fc-fea78a7353c4%2F4DNFI7J8NI4A.hic":"675705256,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F21a27b63-fd67-401b-9aa2-2798e6588d21%2F4DNFISFM9VFK.hic":"800145922,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F656c0a9d-7058-4c4b-a3ce-701d929561c1%2F4DNFIJU5XBK7.hic":"966593603,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2efacfbd-9c81-4e62-8df7-847d1ab774d5%2F4DNFIPKY8ED1.hic":"3401629450,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa50b6a26-56b5-43f2-b525-fa219fd716f1%2F4DNFIQRTP7NM.hic":"5358852759,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff5dc7a59-b998-4490-8a76-afbf3b258a49%2F4DNFIBCIA62Q.hic":"5779049277,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F62b2b237-cb02-45f7-89d9-616cf9ffb678%2F4DNFIV56OFE3.hic":"5818844506,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8ac79b4f-cfbf-4b2a-9fc2-898ed6c3e5e1%2F4DNFILIM6FDL.hic":"19637469163,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1cff8afa-5a13-4ad4-bcad-91fc3ced759c%2F4DNFIP71EWXC.hic":"17934647326,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F000789fe-9a22-4280-a71c-7ad228fd4cac%2F4DNFIM7ZVQOQ.hic":"700134697,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8d78457f-0c2b-4358-b08c-4d4ef4d9f59d%2F4DNFIS6EYHCX.hic":"628314484,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8ca3b4a0-2478-49c9-b4a2-a28430417a32%2F4DNFIKKCMS1Q.hic":"584050634,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff5041473-18ec-439d-92b1-8ad98c9b25c0%2F4DNFIBIV8OUN.hic":"522632731,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcf474ec6-abd4-431e-a21c-252fcf5ee6b3%2F4DNFIAUMRM2S.hic":"313395531,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2bb1c73e-fb0f-41c4-8620-a938cc8d24a0%2F4DNFI9ZUXG61.hic":"332217525,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F26dfa41e-7e4f-457a-a3ac-72daf8059f3c%2F4DNFIDBFENL7.hic":"359604894,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8ed2e68b-189e-4988-bb6d-94e63240a231%2F4DNFI7XAZNNQ.hic":"5312422266,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6f2b1ce0-5205-4680-981e-d91b694dc3e4%2F4DNFISNGDB53.hic":"2008546759,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F73c8147f-bc7d-4d33-8a10-a9e7b413ecc6%2F4DNFI1CIGHYC.hic":"2221847625,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F526ae3e3-32cc-4670-970f-1faa9cfafd4d%2F4DNFIQD2DP2F.hic":"5295591503,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6e803530-47f8-4c56-bb19-fbdcd578d2f0%2F4DNFINHT8P7C.hic":"3159499486,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffe705f38-903f-47b7-9b38-f80ebd18a479%2F4DNFIGF8EM7M.hic":"3490552542,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faa197328-d6da-4299-a0fd-409ac9892668%2F4DNFIUPG2ZBJ.hic":"5382003751,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffe5d52c4-2be7-4812-bca0-cd4bb3025e6b%2F4DNFIH3OTR14.hic":"3224693110,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F21935f61-daa8-4df2-aa69-fcd27953b405%2F4DNFIUATRW3Z.hic":"3835865655,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F72147527-e3e8-4967-bc45-8251249d76c9%2F4DNFI6V7ZQAE.hic":"4382708138,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F589f0919-f54d-49ff-a482-e2f453ef7f34%2F4DNFICKMT1CY.hic":"4479068191,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F861946ca-bad8-4a87-96e1-b2eb20b9ef10%2F4DNFIF9BDCNI.hic":"3698151402,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff76346ac-97ec-4893-8984-2b75ce1cdc51%2F4DNFIG5O1OQS.hic":"5704288175,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe8b43826-f049-4c3f-b83a-e75fa7aacc85%2F4DNFIHS2SVBQ.hic":"990025510,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F46316260-f555-4dd4-9e40-8ae06ca52822%2F4DNFIU95B69H.hic":"1275878544,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff62ef491-a3ae-4f66-ab33-c5673c9e0b65%2F4DNFIYRROFCR.hic":"1522530503,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1cd617e1-fad4-4fdc-8b4e-cb277650123c%2F4DNFIF7JN3IU.hic":"1463443128,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdb20fe2a-0078-4d4a-8a52-d76043d06f40%2F4DNFIB2RYULQ.hic":"1269529700,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3d386fcf-1d22-47de-a0d6-0c3a641ca174%2F4DNFIMVDK3SI.hic":"1185489599,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F00e470bd-c533-41b1-923a-4b471824da12%2F4DNFIRLOTXSC.hic":"978217499,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb8774fb3-d0c5-43cc-a6c9-eb0ca39841fb%2F4DNFIZAPX6J8.hic":"1100356082,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fab3b826e-614c-448b-860f-a3ebef68a82f%2F4DNFIQD5VCSD.hic":"1322319877,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F66c78d2b-993a-4937-95ed-9e2d302ceb3e%2F4DNFIIF6VAGN.hic":"868885799,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5d106fe1-2d80-466e-87aa-46b38ba142c5%2F4DNFI86IEZXH.hic":"751443267,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc99490b6-faf9-413f-9c38-3f53018089d6%2F4DNFIP881SR2.hic":"754427927,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F39c7e387-e710-4b1d-b757-357dec03f6ad%2F4DNFI42NNCW8.hic":"1166392978,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4742a211-43b1-4325-af6f-82490aeb766b%2F4DNFIEV4PKP6.hic":"1102227476,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Feaa73842-1c86-4ad9-8a9e-c189c0b4c01d%2F4DNFIF1DUQHE.hic":"1206699207,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd25f24df-0298-4079-bb6f-1c8e1e32392b%2F4DNFIGW55EAY.hic":"1033358104,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc57a7ab5-2778-4fe2-9d64-9a4e95135f12%2F4DNFISZRU6I4.hic":"1539570262,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd89f494a-27ca-46b6-89be-7583f3f6d18c%2F4DNFIBKKDTAP.hic":"350372180,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F06725280-cb24-4f22-a267-18b434bfa79e%2F4DNFIJSRQW24.hic":"314361467,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8fe5c3c5-006f-425b-ac6d-ea475e29be78%2F4DNFI3REN89E.hic":"299665258,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc8b6ac5c-13b4-427e-9158-cec0b890b6d8%2F4DNFIF5XLHKM.hic":"235668364,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F01ff33fc-fc23-48aa-a6c6-b720d6fe0768%2F4DNFIB6Q538N.hic":"316494853,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F552978c8-abbc-424a-9187-3e34cf802a97%2F4DNFI3ST3F7Y.hic":"296298411,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F72e66520-5170-4f2e-844a-fbfd0e23b480%2F4DNFIQT4M6UI.hic":"307691265,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb3eb3953-ffe8-4d5a-970c-a16f3b7b9ec3%2F4DNFIFNCC7M2.hic":"364160436,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F37d413fb-afab-41ff-99aa-1678830f7dde%2F4DNFITM9MDJL.hic":"252412426,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faf5db92c-aaf1-4086-a0d2-79b28648f172%2F4DNFI3NTD7B3.hic":"227586640,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff6892f7b-1f8a-4d7d-9605-c67932cd5654%2F4DNFIBED48O1.hic":"328344868,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd64afb07-5ab1-4c4f-8438-2fee37afa86a%2F4DNFISATK9PF.hic":"379669025,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fad11bb63-8692-461c-b698-89c601451321%2F4DNFISRP84FE.hic":"298491537,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F63710ec5-35d2-47dd-bf9a-08d3daa83d67%2F4DNFI2LY7B73.hic":"303150299,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76077d9e-ca75-4301-ab79-88aa49bda495%2F4DNFIXEB4UZO.hic":"711757090,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F34dd4c0e-3487-4fb4-b95f-c4bb66e0fa31%2F4DNFIQWWATGK.hic":"221304476,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F48a8cf86-3248-4a8e-8e85-472ec219d49c%2F4DNFI44JLUSL.hic":"284772724,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fee399fbf-2a9e-46e2-8364-457713bff508%2F4DNFIM7Q2FQQ.hic":"330729464,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F124d191a-c5c7-49b6-b84b-0d1bad8bef2b%2F4DNFIZK7W8GZ.hic":"293166018,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe351f7cc-7a2c-4515-ae0b-3bb2f91c986a%2F4DNFIMIMLMD3.hic":"240094740,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffd1ae249-57b1-41d6-81a6-16b21dcd8f12%2F4DNFI7QUSU5J.hic":"681762505,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F46c92c5c-9ad8-4d49-beba-f35c5cd99208%2F4DNFINXUOI5H.hic":"375594313,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd7350d40-4e9e-4131-9151-bb539d39b431%2F4DNFIIJR2296.hic":"331322302,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbfacf37b-1665-45f3-a046-e29e1544e9b0%2F4DNFIJMZUTXR.hic":"361313244,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F234e18fb-9990-43bf-9a48-f72722cfa232%2F4DNFIZQPT9EL.hic":"540421873,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4b35ab09-2e79-4876-b2bc-d3a8faa26257%2F4DNFIZIXSZ9J.hic":"545066813,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2ae5118e-807a-46e0-8e92-143d4b282b3d%2F4DNFIDD9IF9T.hic":"237409149,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb34d7f6f-73f7-4b6b-80c7-c8af0f991549%2F4DNFIVC8OQPG.hic":"355121712,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9ab169fd-cbdd-4f60-8553-a4c6912ad89e%2F4DNFITUPI4HA.hic":"313085022,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4e53712b-d0d9-40c5-afe1-ffa0fad71e59%2F4DNFI5IZNXIO.hic":"341863906,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7a91477f-45eb-4a16-affb-fc131f9326b8%2F4DNFII16KXA7.hic":"248904495,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F153729de-0eca-43cc-9b61-61aa8d775b38%2F4DNFIAAH19VM.hic":"668047244,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F879fd78a-7165-43d9-a0de-ca158b53df30%2F4DNFIVKIY3KV.hic":"247571318,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F67f901a4-040b-4b04-9fff-94a1780423cd%2F4DNFIVVCWL6C.hic":"198355985,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd5b30c5a-654a-463c-9474-39bdc3ce4500%2F4DNFIJRF2273.hic":"343971277,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7070280a-8f03-40d0-9fef-e9d9f4d3dae7%2F4DNFI6FCC9ZA.hic":"312013061,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F47049719-9407-4d76-9048-26231045f642%2F4DNFI1CPQ4O3.hic":"352923267,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F862c2b5f-44c2-4bd7-9264-b3ca032d3d8d%2F4DNFISXFEDE9.hic":"271745977,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Feffbe052-39ff-4217-9871-44199ed90818%2F4DNFIF9L6QEQ.hic":"668409334,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa7791854-1b35-4258-90fb-603c55f24642%2F4DNFIPKASX1Q.hic":"312727920,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F79cccad6-a78e-4de9-9fe7-08f7e8df663d%2F4DNFIWXZ4JQZ.hic":"151808553,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7e86e0cc-d6f1-4ce0-aba4-c36c6ebb3c4c%2F4DNFIEMQ1O8V.hic":"700533280,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4a1b58d3-9ae6-43e4-91cf-49f1fcbbab33%2F4DNFIYWONU7A.hic":"729050356,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F67bff264-0b0c-4c5c-9d4d-ff5abef2bbe4%2F4DNFISNIE5FH.hic":"7987657997,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3a6a943f-2cc0-4433-a27d-c89f3fdd3309%2F4DNFIV8MLWJB.hic":"6646216171,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9e235711-ba90-404d-b4ac-b15990ea8e33%2F4DNFIXSTDPHL.hic":"3146468238,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0c89f4bc-e9fc-4ecf-b868-26108dbb7bb2%2F4DNFIQJNOH8U.hic":"2919703928,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1856ff9e-de7a-4fa1-ae0b-3e04b837b5e1%2F4DNFI57XB4A8.hic":"13417594377,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F099bb5b9-6315-4650-8f78-d603f5a046b3%2F4DNFIQ7UKVZV.hic":"9016468637,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faf3c7a30-0fc4-410d-8d41-247da3eb105d%2F4DNFIWJY8GHD.hic":"7921314766,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fda99f429-20ab-4d91-bbfe-f8bdea8ed7b1%2F4DNFIN8NKRNF.hic":"4247121358,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0ca0f4e3-30ca-4332-b735-e32dce08e1a4%2F4DNFIZYGEHNZ.hic":"4910404663,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F243f48b0-6b59-4f37-ad39-a12e0986f530%2F4DNFIRPYGAV8.hic":"4220073636,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F49f1a890-d458-42a6-9c78-99c38b6c7a8f%2F4DNFI6MZTDM1.hic":"375035361,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76bd4768-9343-44ba-a99d-5500e184e39d%2F4DNFIG3BCGPL.hic":"2422923206,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F9d1ed866-eaf6-4906-aa8c-9e39616dde38%2F4DNFIS9YPJ3L.hic":"1593271574,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1e7a5636-bdb6-45fb-85d8-87a7e908de43%2F4DNFIOWGA9AX.hic":"1632314387,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5ecc552a-0a6b-49a9-9aa5-9f3fd9b535fd%2F4DNFINKEDSBF.hic":"1458761024,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6c03f1d2-bb25-4c94-b5f5-d5cdd01c14b6%2F4DNFIVIXVUK7.hic":"1504818271,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1a4616ff-6d04-4a6a-9773-b80e81da2471%2F4DNFIANHFY16.hic":"1850724180,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd2231870-a78d-4c8b-9cfd-084f2468acb1%2F4DNFIJ67ZFBI.hic":"1473864703,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F859c2dd3-df8a-42b7-86ea-bf6524f75e80%2F4DNFIG3YQQ4V.hic":"1539822829,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8bad667e-6003-4828-9a20-07585fa9c811%2F4DNFIOLKEOME.hic":"3036353747,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F92ea551b-5779-4d31-a0f5-621e4bd0eb21%2F4DNFIVLN8WJE.hic":"2710426318,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F61ee79fa-0617-4083-b121-f92ef3a8905c%2F4DNFI2111XQA.hic":"2589549183,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F83ebb98d-e5db-403d-aa23-875293156c0e%2F4DNFI88HXX7D.hic":"2462367030,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6d63671a-8f1d-4159-82c0-931b43464772%2F4DNFIUBM6QK8.hic":"2486020469,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcccb9014-ce15-4032-81ac-222b3d621cb4%2F4DNFIVILEERC.hic":"2052537210,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F21a07867-4007-4ca5-b066-25d3168208dc%2F4DNFIF7Q43N4.hic":"2091773428,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff738de0f-358b-44bf-97dd-644c8d9b1b1c%2F4DNFID56VJGW.hic":"878913568,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fda97c1d4-bb92-4a77-92a7-f7960f88b9dc%2F4DNFIYUR29KO.hic":"983915575,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F54ea363a-99e7-4f55-861e-1644acab7939%2F4DNFIUDPGHO8.hic":"905253594,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdcd66a07-55ee-48d9-a157-419cf4ee3eef%2F4DNFISWC2N8T.hic":"1233576358,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F40363837-7466-4a1d-b20d-a66d1670b700%2F4DNFICMPHDMI.hic":"516590777,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0b3fa4e6-caeb-40b4-8942-e9c0b03dfe4f%2F4DNFIKMKN736.hic":"634310295,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb6a34050-d52b-4880-91cf-d3fe4b0ce982%2F4DNFIN5NLS49.hic":"650451131,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8e63a47b-9fd4-4772-8b0c-10ee589ffb16%2F4DNFI4P8UBRL.hic":"705655033,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7d92b666-30cc-4838-9d46-c1f11cee3d3c%2F4DNFISNC3LAI.hic":"176146197,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F17f7dc63-a1bc-4970-b389-87d9ee93b753%2F4DNFIVBWPFD7.hic":"749678512,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff8897333-4791-4a83-9444-a653e24aee13%2F4DNFITMQRXB7.hic":"254477361,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8712bf31-33d0-4562-ab0b-a1e9cf4fd30c%2F4DNFIUYD3HBY.hic":"995625724,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbfaf6383-9cc6-4b5c-9b20-d3bf2e8c3495%2F4DNFIRRSC7P9.hic":"1149985362,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb0b70598-5d17-4e0a-8831-6cbe697e69e2%2F4DNFIWKR8FP6.hic":"1151628407,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fccc094a8-23ce-4fd8-9c4a-41f07c045c8f%2F4DNFIQ74RSUY.hic":"931695969,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8eda16f3-af5e-4f1f-b46d-c74df44b76aa%2F4DNFI9IIO5PW.hic":"1077740364,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff283637b-cf2c-4412-ba00-0e3d7e279fad%2F4DNFI8WGJG19.hic":"812086456,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7ad8438f-d3d9-42d8-88bf-42845a0dc2d0%2F4DNFIQ5CCESJ.hic":"652559720,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F70e3bdcc-caf4-4822-b9c5-85234873db7a%2F4DNFIWTZHB4H.hic":"760694196,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F56ed767d-cd8a-4d38-8047-ed1e8bc8cd19%2F4DNFIENYQCDP.hic":"1159428005,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa912fff9-5f90-42b1-a3a6-cbb9eb2cf861%2F4DNFIFATZWPD.hic":"1033325746,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F21338ea5-fdee-4ad8-b61c-608fc6cec4bc%2F4DNFI7YRXKEO.hic":"388142539,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff0f88647-5631-437b-b48a-4603915e3714%2F4DNFIUY3J7EW.hic":"407344788,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F16926af8-ac3b-4f32-97d5-6c0dc6f1596a%2F4DNFIRKUYKP4.hic":"893352368,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F93e39aec-6cde-4c5b-bcdf-283faa3163a2%2F4DNFIAQDBJZP.hic":"489922022,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0dc0b1ba-5509-4464-9814-dfe103ff09a0%2F4DNFIC1CLPK7.hic":"565748333,37769","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fb50964c7-b025-49d9-b1ed-289bedb59678%2F4DNFI3A3VYWU.hic":"4597459343,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff4390cea-b330-4022-88c1-9ff8c0a786f7%2F4DNFI6JJQKFJ.hic":"3678393678,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F70c0f730-5da1-4863-9b7a-6cdd31066cff%2F4DNFIK61ILGM.hic":"3324300994,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F14b14ac4-ab59-4754-9c43-eacd9d0638e2%2F4DNFIYD8LO9Z.hic":"3227227120,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7386f953-8da9-47b0-acb2-931cba810544%2F4DNFIOTPSS3L.hic":"253942497,7557","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff6b5d8bd-27dc-4415-a320-53405a16db85%2F4DNFI525PKU5.hic":"305089653,7557","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1f922dbc-637b-4c43-b816-f604f0e79ad1%2F4DNFI8Y9SRP2.hic":"1438589609,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6a36d686-716c-4ba8-a9c3-fa8311791d3c%2F4DNFIP25GZGA.hic":"1419100109,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0e535542-2cf2-46e4-ba10-7a0b946a7fb2%2F4DNFITPO1WTY.hic":"3885296184,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0c17d228-5052-4c83-880e-af05118e6929%2F4DNFIG4X5Z5F.hic":"2159245890,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc3977c00-525b-4556-9a27-061707f8cb76%2F4DNFIXLYR32S.hic":"587852728,21916","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3f856506-cbc5-4211-a29d-48a7530c622e%2F4DNFIWI3V5LI.hic":"2318237793,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F38f77979-5eb7-4b6f-9a60-c2451185db98%2F4DNFI2DGL7LH.hic":"2068150664,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe0992a75-7727-405e-95ac-aa97141b51c1%2F4DNFI1VSO8JP.hic":"1807949651,21916","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe925f1aa-2e7b-44e7-bfa8-2084a613ab13%2F4DNFIV5O2ZYO.hic":"2242134377,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F803a6d3c-3972-4939-8ff2-d195c5192090%2F4DNFIEWEWQ8D.hic":"2981341325,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F25104375-a588-46e6-a382-663cee6c332f%2F4DNFICSTCJQZ.hic":"14592996888,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F927aa8a5-24a5-43b7-807a-1e99ac321459%2F4DNFICEGAHRC.hic":"15431307603,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8c380474-12cd-41f4-b86f-2a29faf12eec%2F4DNFIY3XPKPO.hic":"2550999291,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F77da562e-d0ec-45a8-8764-14fa16d995a1%2F4DNFIK9PS9GM.hic":"3401011629,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F11b26222-d480-40a7-8d53-3ad8500396cb%2F4DNFIF4Y74JR.hic":"2127593378,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F93df02c6-1047-43f6-afae-d3598b61eeea%2F4DNFIBBKG9KD.hic":"5724446278,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6cd4378a-8f51-4e65-99eb-15f5c80abf8d%2F4DNFIT4I5C6Z.hic":"5419655766,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F067881e5-563d-40de-a9e3-caccad887fbc%2F4DNFI2U38HCE.hic":"14749043471,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fcb3da9ad-7afe-4d0c-9c2d-261181e7a95c%2F4DNFIETP228R.hic":"9401474797,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F185b7bcc-7bb7-41b7-9ebe-92d4fe159431%2F4DNFIXKC48TK.hic":"11624295594,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F18459b84-dd43-4af6-a05f-bcb773096322%2F4DNFIFPGOWJ6.hic":"2843730862,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffde1e48c-4a0d-4bb1-b84a-e0e45f9a0aa3%2F4DNFIIRMBE8Y.hic":"5820677927,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbabed539-1f0f-4e87-8815-fde596e6024c%2F4DNFIVUGNDD7.hic":"5170782436,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7d00531a-e616-469b-af52-5b028270e2ce%2F4DNFIFLJLIS5.hic":"18917549985,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7a9dad53-b8af-4cb6-9ce3-5c38e4a855c7%2F4DNFIOX3BGNE.hic":"5482775936,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F82fd7b7e-5f47-48d5-bf0d-daaa48a4674d%2F4DNFISPUVQHA.hic":"2177864938,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4c6680f3-9cf6-452f-9dc5-ecebf376775d%2F4DNFI8649RQJ.hic":"3288850368,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2395f001-19d9-4000-9f00-dae3dea708d6%2F4DNFIE8T8JZ8.hic":"1383191843,21916","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F24464fa8-bf96-483c-8e9a-c2f626ad6e19%2F4DNFIBM714BP.hic":"1765204569,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F918fc048-fa27-41d2-a63a-d50c511fbb9a%2F4DNFI6CWNUFL.hic":"2431120602,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7ff5a0d1-8e54-4cf0-9fe7-339f147c78da%2F4DNFIZ4F74QR.hic":"3211825957,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F355f0412-cb17-452a-b15c-aba16c5a742c%2F4DNFIOUVOX3R.hic":"5547401083,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3cac91c5-160a-4b91-a91e-edc309318dd5%2F4DNFIVTDXW6X.hic":"4797344498,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe9ac9ec5-6221-4f39-951a-1c5054fc9f1c%2F4DNFICA8Y9TN.hic":"4277557869,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F46f62222-b50a-428b-938b-5444951600eb%2F4DNFIDWM3HN5.hic":"4374808431,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F50e4f2a1-9cb6-4192-8199-64d354bfdf96%2F4DNFIBK5TB3N.hic":"3757387253,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe4cdd5a8-1a45-4c6a-906b-a9603260d4c8%2F4DNFI3JYF9VS.hic":"5260534916,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc8164e99-5778-427d-be26-f0e1b62400f0%2F4DNFIP1GNKUO.hic":"7589365689,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0d72e78a-fc87-4716-8b8e-6dc5650ff2ef%2F4DNFIQYQWPF5.hic":"22022259901,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fac58fc15-48c2-4eec-a689-23b677b4b6e7%2F4DNFIW6H9U3S.hic":"6810897169,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F31811e40-e3ca-4456-8ba6-2ee66d6c7104%2F4DNFI7J8BQ4P.hic":"7188744676,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F62d81a52-d2cb-4bbd-8510-0fe120e786e0%2F4DNFIA3AKFSU.hic":"1763730692,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fae0b7513-d1a0-4f27-a9d3-348837f42cb6%2F4DNFID68JQY9.hic":"2422880133,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fae6a1a7e-1d2d-4fd2-a89f-1799abac8a9c%2F4DNFIL1FQDXE.hic":"1543814834,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F80d343c9-bd60-468a-803d-c3e351a958bc%2F4DNFITSIPCSK.hic":"2344682115,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff2d61195-a3a6-4d50-b928-546ca67546cb%2F4DNFIJ88LYHR.hic":"3362742962,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F31052aba-773a-4500-961b-e0a518245b0c%2F4DNFIJIPWD63.hic":"2529548812,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc93d0710-3fbf-40cc-b0eb-878e2aa659e4%2F4DNFIZUP2BBI.hic":"491996147,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F8660baeb-5be1-4ba5-93e4-66499e9a4587%2F4DNFIEBC4AF3.hic":"2993048734,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff6d08fbc-b836-4776-82ad-8b1b277ae837%2F4DNFI5VO3E1W.hic":"1949322679,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3af004a2-a6fa-46dc-8be8-898b847a77be%2F4DNFIFDGVWLU.hic":"2456400803,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbd613b4b-2422-492c-8d8f-8afba9c8a182%2F4DNFITVGFNYZ.hic":"1411204423,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc340694f-14f3-4638-b09b-98220c20039a%2F4DNFIOW9TTC1.hic":"2611370588,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3effa71b-6aa3-4265-87ba-f8d709d778d7%2F4DNFIOAA3ZEQ.hic":"3123195980,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fde75cf8b-9ce1-44fc-8b7b-ca0adea6bae9%2F4DNFIA5ID1S6.hic":"3496246968,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F714f775d-a5a4-4314-83f8-016b9d73200b%2F4DNFIZYU7V81.hic":"4245592042,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5ca518af-6e1e-4777-b67b-0fe7f039ce58%2F4DNFIRV6PVUX.hic":"3981520466,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc29b57d5-c263-4372-b396-ab4f55682f5d%2F4DNFIMEANFBY.hic":"3999623376,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4196d3ef-161a-4c18-a57e-005165c6b32a%2F4DNFIGLGQXLC.hic":"4105683321,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe10828b5-9519-4ceb-81e7-7228bfd890de%2F4DNFILS2HLXC.hic":"3804942111,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Feaac88c7-9bdc-4b1e-aa9f-e675520dfffa%2F4DNFIQS8853L.hic":"5287726781,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faab371b1-bc8d-4e83-998e-5bb977c443ca%2F4DNFIVBYCYGS.hic":"4657988157,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdb116add-af8c-4a3b-b106-9f704ba0a175%2F4DNFIE4WWHMF.hic":"5116727268,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F033366e2-05a2-4381-9d48-90122892a9e0%2F4DNFIKDUUC3C.hic":"45638237,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F7284a446-442d-4a46-aae5-84987e75a7af%2F4DNFIJ5HIRA2.hic":"62201052,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F876649a3-6dd3-463a-8b17-5752a98a89c5%2F4DNFIXDFC7EM.hic":"69878143,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3cb4ce4d-d474-459f-8b8a-2159d8df8068%2F4DNFIO35EOVR.hic":"70153114,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5c5612fa-18c2-47fb-8074-693b1054e254%2F4DNFI57QGL6U.hic":"54605055,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F70c1472d-cf3a-41d7-8682-cd03b7cc978d%2F4DNFI2AGEBE5.hic":"67930121,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2bf4cce8-6e03-422b-a190-e51d4a07d501%2F4DNFI1E6NJQJ.hic":"4893181511,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0eb3aa56-8a23-435d-a07b-8bb545e8d708%2F4DNFI2DNFM1A.hic":"60466977,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F1201682a-a223-482d-913d-3c3972b8eb65%2F4DNFIIRIHBR2.hic":"48961678,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F6aee7913-6356-43cf-affa-f2b60dd478f6%2F4DNFIKXNMT46.hic":"39095246,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F357139a3-c9a5-4343-b0a4-b41c45fd03fd%2F4DNFIRV7IRJP.hic":"70916718,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76be3061-6259-42be-a917-19dcba41517b%2F4DNFIFX1XYKZ.hic":"229197441,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ff60c348a-a62c-43c3-ac85-f6c28b5f823f%2F4DNFI64CJUZ5.hic":"112428610,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fbd0b0a14-9703-49af-bb36-2359f96d4d0e%2F4DNFIBPL2HL1.hic":"73972428,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F79ac278d-83f7-4c1f-91b2-05c8018c1426%2F4DNFIBRSIPE4.hic":"415430378,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F0c3b8141-8e67-4211-80dd-3bae88f9e537%2F4DNFIDLDVY14.hic":"112747303,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2ae703d2-d85c-4ac4-9ce1-14d653927675%2F4DNFI4R1II4P.hic":"210565448,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76e641af-90be-49f8-b126-12c20f856159%2F4DNFINMLRY95.hic":"1590865292,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3b416382-ae5d-469f-9e9a-85a3e2ce9793%2F4DNFI8KBXYNL.hic":"4626496956,22663","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa27589a6-86b2-43a2-8218-1f2232d551e6%2F4DNFI53R5IKA.hic":"1536016455,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdd3999f5-b36e-4154-a6b9-446656959a3a%2F4DNFIAWVDQ8C.hic":"2210273411,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fc377953b-0e61-426b-a905-abab2d5a3002%2F4DNFI9VXTBE2.hic":"3384365692,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F2dbe0377-1db2-4aae-af2b-d87dff728035%2F4DNFIT96Z365.hic":"7692311974,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fdcfcb009-f006-4ab8-a4c7-af72be58c12c%2F4DNFITUOMFUQ.hic":"6592120312,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F67f9073d-b2c5-474e-b3d5-7d72cde555cd%2F4DNFIHLQKDN8.hic":"2647703964,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76968cc8-fb9f-485b-85b2-c9289067194b%2F4DNFIL9M97T2.hic":"6186798917,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F87d9330b-8d2c-4e9d-85bb-02e572de7a68%2F4DNFIDWGZLHX.hic":"4379708168,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Ffc01b381-3665-4225-88ee-2e5e9ecb7324%2F4DNFIMEG1QIC.hic":"3587146533,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3144a03c-15c3-4bf9-95f8-ffad2640a1bf%2F4DNFIWSB66VX.hic":"1529739069,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fd7d3aac0-ba66-494b-ba0c-147631084b98%2F4DNFIH7TH4MF.hic":"6896300679,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F4b13bd19-fbd1-4c68-8855-4f0158d1ce47%2F4DNFIHKWIZ9T.hic":"1954878455,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F3d04e286-30d4-4add-a806-7a929d36419e%2F4DNFIZBBX795.hic":"1350142414,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Faa26f261-a88a-4cac-9118-ff8e90ab6f61%2F4DNFI9ZWZ5BS.hic":"3410552807,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F24e516ce-0b49-4476-b818-cc96471d8765%2F4DNFIPAI8XB5.hic":"4168518737,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fac3b06b5-46d4-4c1e-97e9-9a4f353473a7%2F4DNFI1OUWFSC.hic":"10766406904,21916","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F76c6aa27-895f-4e82-8ed8-7a85aca84490%2F4DNFIX4PJKXZ.hic":"1463157350,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fe6fbe03a-997b-4d72-a3cc-f1ed7bd88a92%2F4DNFIZGCA8AH.hic":"1597664180,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F61d99a87-4ec6-4116-be99-b483999641c4%2F4DNFI5CGQ46V.hic":"2870576870,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F271ea8cd-53b9-44c9-9fff-1bb5c444b54c%2F4DNFIOCW5AEM.hic":"2463600138,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2Fa98ca64a-861a-4a8c-92e9-586af457b1fb%2F4DNFI1UEG1HD.hic":"22480709268,25900","4dn-open-data-public.s3.amazonaws.com%2Ffourfront-webprod%2Fwfoutput%2F5809b32e-0aea-4cf5-a174-cf162d591a35%2F4DNFI9YAVTI1.hic":"3141182061,25900"};const Ef="undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node,Nf=new class{constructor(e){this.wait=void 0===e?100:e,this.isCalled=!1,this.calls=[]}limiter(e){const t=this;let i=function(){t.calls.length&&!t.isCalled&&(t.isCalled=!0,t.calls.shift().call(),setTimeout((function(){t.isCalled=!1,i()}),t.wait))};return function(){t.calls.push(e.bind(this,...arguments)),i()}}}(100);class Bf{constructor(e){if(e.alert&&(this.alert=e.alert),this.config=e,this.loadFragData=e.loadFragData,this.fragmentSitesCache={},this.normVectorCache=new kf(10),this.normalizationTypes=["NONE"],this.matrixCache=new kf(10),this.blockCache=new Df,e.file)this.file=e.file;else if(e.blob)this.file=new mf(e.blob);else{if(!(e.url||e.path&&!Ef))throw e.path?Error("path property is deprecated, use NodeLocalFile"):Error("Arguments must include file, blob, url, or path");{this.url=e.url||this.path,this.remote=!0;const i=new gf(e);(t=this.url).indexOf("drive.google.com")>=0||t.indexOf("www.googleapis.com/drive")>0?this.file=new wf(i,Nf):this.file=i}}var t}async init(){this.initialized||(await this.readHeaderAndFooter(),this.initialized=!0)}async getVersion(){if(void 0===this.version){const e=await this.file.read(0,128);if(!e)return;const t=new vf(new DataView(e));return this.magic=t.getString(),this.version=t.getInt(),this.version}return this.version}async getMetaData(){return await this.init(),this.meta}async readHeaderAndFooter(){let e=await this.file.read(0,16);if(!e||0===e.byteLength)throw Error("File content is empty");let t=new vf(new DataView(e));if(this.magic=t.getString(),this.version=t.getInt(),this.version<5)throw Error("Unsupported hic version: "+this.version);this.footerPosition=t.getLong(),await this.readFooter();const i=Object.values(this.masterIndex).reduce(((e,t)=>Math.min(e,t.start)),Number.MAX_VALUE)-16;e=await this.file.read(16,i),t=new vf(new DataView(e)),this.genomeId=t.getString(),this.version>=9&&(this.normVectorIndexPosition=t.getLong(),this.normVectorIndexSize=t.getLong()),this.attributes={};let n=t.getInt();for(;n-- >0;)this.attributes[t.getString()]=t.getString();this.chromosomes=[],this.chromosomeIndexMap={};let r=t.getInt(),s=0;for(;r-- >0;){const e={index:s,name:t.getString(),size:this.version<9?t.getInt():t.getLong()};"all"===e.name.toLowerCase()&&(this.wholeGenomeChromosome=e,this.wholeGenomeResolution=Math.round(2*e.size)),this.chromosomes.push(e),this.chromosomeIndexMap[e.name]=e.index,s++}this.bpResolutions=[];let o=t.getInt();for(;o-- >0;)this.bpResolutions.push(t.getInt());if(this.loadFragData){this.fragResolutions=[];let e=t.getInt();if(e>0)for(;e-- >0;)this.fragResolutions.push(t.getInt())}this.chrAliasTable={};for(let e of Object.keys(this.chromosomeIndexMap))e.startsWith("chr")?this.chrAliasTable[e.substr(3)]=e:"MT"===e?this.chrAliasTable.chrM=e:this.chrAliasTable["chr"+e]=e;this.meta={version:this.version,genome:this.genomeId,chromosomes:this.chromosomes,resolutions:this.bpResolutions}}async readFooter(){const e=this.version<9?8:12;let t=await this.file.read(this.footerPosition,e);if(!t)return null;let i=new vf(new DataView(t));const n=this.version<9?i.getInt():i.getLong();let r=i.getInt();const s=196*r;for(t=await this.file.read(this.footerPosition+e,Math.min(s,n)),i=new vf(new DataView(t)),this.masterIndex={};r-- >0;){const e=i.getString(),t=i.getLong(),n=i.getInt();this.masterIndex[e]={start:t,size:n}}if(this.expectedValueVectors={},this.version>5){const e=this.version<9?4:8;this.normExpectedValueVectorsPosition=this.footerPosition+e+n}return this}async printIndexStats(){let e,t=0,i=0;await await this.init();for(let n of Object.keys(this.masterIndex)){const r=this.masterIndex[n];t+=r.size,r.size>i&&(i=r.size,e=n)}console.log(`${i}  ${e}  ${this.config.url}`)}async getMatrix(e,t){const i=_f.getKey(e,t);if(this.matrixCache.has(i))return this.matrixCache.get(i);{const n=await this.readMatrix(e,t);return this.matrixCache.set(i,n),n}}async readMatrix(e,t){if(await this.init(),e>t){const i=e;e=t,t=i}const i=_f.getKey(e,t),n=this.masterIndex[i];if(!n)return;const r=await this.file.read(n.start,n.size);return r?_f.parseMatrix(r,this.chromosomes):void 0}async getContactRecords(e,t,i,n,r,s=!1){await this.init();const o=this.chromosomeIndexMap[this.getFileChrName(t.chr)],a=this.chromosomeIndexMap[this.getFileChrName(i.chr)];if(o>a||o===a&&t.start>=i.end){const e=t;t=i,i=e}const c=await this.getBlocks(t,i,n,r);if(!c||0===c.length)return[];const l=[],h=t.start/r,d=t.end/r,u=i.start/r,f=i.end/r,p=Math.floor(h),g=Math.ceil(d),m=Math.floor(u),w=Math.ceil(f);for(let o of c)if(o){let a,c,b=e&&"NONE"!==e;const F=this.getFileChrName(t.chr),v=this.getFileChrName(i.chr);if(b){const t=await this.getNormalizationVector(e,F,n,r),i=F===v?t:await this.getNormalizationVector(e,v,n,r);t&&i?(a=await t.getValues(p,g),c=await i.getValues(m,w)):b=!1}for(let e of o.records)if(s||e.bin1>=h&&e.bin1<d&&e.bin2>=u&&e.bin2<f)if(b){const t=e.bin1,i=e.bin2,n=a[t-p]*c[i-m];if(0!==n&&!isNaN(n)){const r=e.counts/n;l.push(new xf(t,i,r))}}else l.push(e);void 0===this.percentile95&&o.records.length>10&&(this.percentile95=Tf(o.records,95))}return l}async getBlocks(e,t,i,n){const r=(e,t)=>`${t.getKey()}_${e}`;await this.init();const s=this.getFileChrName(e.chr),o=this.getFileChrName(t.chr),a=this.chromosomeIndexMap[s],c=this.chromosomeIndexMap[o];if(void 0===a)return console.log("No chromosome named: "+e.chr),[];if(void 0===c)return console.log("No chromosome named: "+t.chr),[];const l=await this.getMatrix(a,c);if(!l)return console.log("No matrix for "+e.chr+"-"+t.chr),[];const h=l.getZoomData(n,i);if(!h){let i=`No data avalailble for resolution: ${n}  for map ${e.chr}-${t.chr}`;throw new Error(i)}const d=h.getBlockNumbers(e,t,this.version),u=[],f=[];for(let e of d){const t=r(e,h);this.blockCache.has(n,t)?u.push(this.blockCache.get(n,t)):f.push(e)}const p=f.map((e=>this.readBlock(e,h))),g=await Promise.all(p);for(let e of g)e&&this.blockCache.set(n,r(e.blockNumber,h),e);return u.concat(g)}async readBlock(e,t){const i=await t.blockIndex.getBlockIndexEntry(e);if(i){let n=await this.file.read(i.filePosition,i.size);if(!n)return;n=new ls(new Uint8Array(n)).buffer;const r=new vf(new DataView(n)),s=r.getInt(),o=[];if(this.version<7)for(let e=0;e<s;e++){const e=r.getInt(),t=r.getInt(),i=r.getFloat();o.push(new xf(e,t,i))}else{const e=r.getInt(),t=r.getInt(),i=1===r.getByte(),n=!(this.version<9)&&1==r.getByte(),s=!(this.version<9)&&1==r.getByte(),a=r.getByte();if(1===a){const a=s?r.getInt():r.getShort();for(let c=0;c<a;c++){const a=t+(s?r.getInt():r.getShort()),c=n?r.getInt():r.getShort();for(let t=0;t<c;t++){const t=e+(n?r.getInt():r.getShort()),s=i?r.getFloat():r.getShort();o.push(new xf(t,a,s))}}}else{if(2!=a)throw new Error("Unknown block type: "+a);{const n=r.getInt(),s=r.getShort();for(let a=0;a<n;a++){const n=Math.floor(a/s),c=e+(a-n*s),l=t+n;if(i){const e=r.getFloat();isNaN(e)||o.push(new xf(c,l,e))}else{const e=r.getShort();-32768!=e&&o.push(new xf(c,l,e))}}}}}return new Rf(e,t,o,i)}}async hasNormalizationVector(e,t,i,n){let r;if(await this.init(),Number.isInteger(t))r=t;else{const e=this.getFileChrName(t);r=this.chromosomeIndexMap[e]}const s=Mf(e,r,i.toString(),n),o=await this.getNormVectorIndex();return o&&o[s]}async isNormalizationValueAvailableAtResolution(e,t,i,n){let r;if(Number.isInteger(t))r=t;else{const e=this.getFileChrName(t);r=this.chromosomeIndexMap[e]}return void 0!==(await this.getNormVectorIndex())[Mf(e,r,i.toString(),n)]}async getNormalizationVector(e,t,i,n){let r;if(await this.init(),Number.isInteger(t))r=t;else{const e=this.getFileChrName(t);r=this.chromosomeIndexMap[e]}const s=Mf(e,r,i.toString(),n);if(this.normVectorCache.has(s))return this.normVectorCache.get(s);const o=await this.getNormVectorIndex();if(!o)return void console.log("Normalization vectors not present in this file");if(!1===await this.isNormalizationValueAvailableAtResolution(e,t,i,n)){const t=`Normalization option ${e} not available at resolution ${n}. Will use NONE.`;return console.log(t),void(this.alert&&this.alert(t))}const a=o[s],c=await this.file.read(a.filePosition,8);if(!c)return;const l=new vf(new DataView(c)),h=this.version<9?l.getInt():l.getLong(),d=this.version<9?8:4,u=this.version<9?a.filePosition+4:a.filePosition+8,f=new If(this.file,u,h,d);return this.normVectorCache.set(s,f),f}async getNormVectorIndex(){if(!(this.version<6)){if(!this.normVectorIndex){if(!this.config.nvi&&this.remote&&this.url){const e=new URL(this.url),t=encodeURIComponent(e.hostname+e.pathname);Sf.hasOwnProperty(t)&&(this.config.nvi=Sf[t])}if(this.config.nvi){const e=decodeURIComponent(this.config.nvi).split(","),t={start:parseInt(e[0]),size:parseInt(e[1])};return this.readNormVectorIndex(t)}try{return await this.readNormExpectedValuesAndNormVectorIndex(),this.normVectorIndex}catch(e){"416"===e.code||416===e.code?this.normExpectedValueVectorsPosition=void 0:console.error(e)}}return this.normVectorIndex}}async getNormalizationOptions(){return await this.getNormVectorIndex(),this.normalizationTypes}async readNormVectorIndex(e){await this.init(),this.normalizationVectorIndexRange=e;const t=await this.file.read(e.start,e.size),i=new vf(new DataView(t));this.normVectorIndex={};let n=i.getInt();for(;n-- >0;)this.parseNormVectorEntry(i);return this.normVectorIndex}async readNormExpectedValuesAndNormVectorIndex(){if(await this.init(),void 0===this.normExpectedValueVectorsPosition)return;const e=await this.skipExpectedValues(this.normExpectedValueVectorsPosition);let t=4,i=await this.file.read(e,4);if(0===i.byteLength)return;const n=new vf(new DataView(i)).getInt(),r={start:e+t,size:30*n};i=await this.file.read(r.start,r.size),this.normalizedExpectedValueVectors={},this.normVectorIndex={},await async function i(n,r){const s=new vf(new DataView(r));for(;n-- >0;){if(s.available()<100){n++,t+=s.position;const r=Math.max(1e3,30*n),o={start:e+t,size:r},a=await this.file.read(o.start,o.size);return i.call(this,n,a)}this.parseNormVectorEntry(s)}t+=s.position}.call(this,n,i),this.config.nvi=e.toString()+","+t}async skipExpectedValues(e){const t=this.version,i=new bf({file:this.file,size:256e3}),n={start:e,size:4},r=await i.read(n.start,n.size),s=new vf(new DataView(r)).getInt();return 0===s?e+4:async function e(n,r){let s={start:n,size:500},o=0,a=n,c=await i.read(s.start,s.size),l=new vf(new DataView(c));l.getString(),l.getString(),l.getInt();const h=t<9?l.getInt():l.getLong();o+=l.position+h*(t<9?8:4),s={start:n+o,size:4},c=await i.read(s.start,s.size),l=new vf(new DataView(c));const d=l.getInt();return o+=4+d*(4+(t<9?8:4)),r--,0===r?a+o:e(a+o,r)}(e+4,s)}getZoomIndexForBinSize(e,t){let i;if("BP"===(t=t||"BP"))i=this.bpResolutions;else{if("FRAG"!==t)throw new Error("Invalid unit: "+t);i=this.fragResolutions}for(let t=0;t<i.length;t++)if(i[t]===e)return t;return-1}parseNormVectorEntry(e){const t=e.getString(),i=e.getInt(),n=e.getString(),r=e.getInt(),s=e.getLong(),o=this.version<9?e.getInt():e.getLong(),a=t+"_"+i+"_"+n+"_"+r;this.normalizationTypes.includes(t)||this.normalizationTypes.push(t),this.normVectorIndex[a]={filePosition:s,size:o}}getFileChrName(e){return this.chrAliasTable.hasOwnProperty(e)?this.chrAliasTable[e]:e}}function Mf(e,t,i,n){return e+"_"+t+"_"+i+"_"+n}class Rf{constructor(e,t,i,n){this.blockNumber=e,this.zoomData=t,this.records=i,this.idx=n}}class Df{constructor(){this.resolution=void 0,this.map=new kf(6)}set(e,t,i){this.resolution!==e&&this.map.clear(),this.resolution=e,this.map.set(t,i)}get(e,t){return this.resolution===e?this.map.get(t):void 0}has(e,t){return this.resolution===e&&this.map.has(t)}}function Tf(e,t){const i=e.map((e=>e.counts));i.sort((function(e,t){return e-t}));return i[Math.floor(t/100*e.length)]}class Lf{constructor(e,t){this.config=e,this.genome=t,this.hicFile=e._hicFile?e._hicFile:new Bf(e),e._hicFile=void 0}async getHeader(){return await this.hicFile.init(),this.hicFile}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r}){this.hicFile.initialized||await this.hicFile.init();const s=this.hicFile.bpResolutions,o=s[s.length-1];return(await this.hicFile.getContactRecords(void 0,{chr:e,start:t,end:i},{chr:"celltype",start:0,end:1e8},"BP",o)).map((t=>{const i=t.bin1*o;return{chr:e,start:i,end:i+o,value:t.counts,sample:t.bin2.toString()}}))}supportsWholeGenome(){return!1}}function zf(e,t){const i=new Set(e.attributeNames),n=t[0];if(void 0===e.getAttributes(n))return!1;{const t=Object.keys(e.getAttributes(n));for(const e of t)if(!1===i.has(e))return!1}return!0}class Hf extends Hl{#b=new Map;constructor(e,t){super(e,t)}init(e){if(super.init(e),this.type=e.type||"seg","maf"===this.type&&(this.type="mut"),this.isLog=e.isLog,this.displayMode=e.displayMode||"EXPANDED",this.height=e.height||300,this.maxHeight=e.maxHeight||500,this.squishedRowHeight=e.sampleSquishHeight||e.squishedRowHeight||2,this.expandedRowHeight=e.sampleExpandHeight||e.expandedRowHeight||13,this.sampleHeight=this.squishedRowHeight,this.sampleKeys=[],e.samples){for(let t of e.samples)this.sampleKeys.push(t);this.explicitSamples=!0}if(e.color)this.color=e.color;else if(e.colorTable)this.colorTable=new ao(e.colorTable);else switch(this.type){case"mut":this.colorTable=new ao(Uf);break;case"shoebox":e.colorScale&&(this.sbColorScale=pf.parse(e.colorScale));break;default:this.posColorScale=new df(e.posColorScale||Pf),this.negColorScale=new df(e.negColorScale||Of)}const t=Object.assign({},this.config);t.maxWGCount=t.maxWGCount||Number.MAX_SAFE_INTEGER,"shoebox"===this.type?(this.featureSource=new Lf(t,this.browser.genome),this.height=e.height||500,this.maxHeight=e.maxHeight||800,this.isLog=!1,this.squishedRowHeight=e.squishedRowHeight||1,this.displayMode=e.displayMode||"SQUISHED",this.visibilityWindow=void 0===e.visibilityWindow?1e6:e.visibilityWindow):this.featureSource=wd(t,this.browser.genome),this.initialSort=e.sort}async postInit(){"function"==typeof this.featureSource.getHeader&&(this.header=await this.featureSource.getHeader(),this.disposed)||this.header&&this.setTrackProperties(this.header)}menuItemList(){const e=[];if(!0===zf(this.browser.sampleInfo,this.sampleKeys)){e.push("<hr/>"),e.push("Sort by attribute:");for(const n of this.browser.sampleInfo.attributeNames){if(this.sampleKeys.some((e=>{const t=this.browser.sampleInfo.getAttributes(e);return t&&t[n]}))){const r=Bt("<div>");function s(){const e=this.#b.get(n)||1;this.sortByAttribute(n,e),this.#b.set(n,-1*e),this.config.sort={option:"ATTRIBUTE",attribute:n,direction:1===e?"ASC":"DESC"}}r.html(`&nbsp;&nbsp;${n.split(Tu.emptySpaceReplacement).join(" ")}`),e.push({object:r,click:s})}}}const t={SQUISHED:"Squish",EXPANDED:"Expand",FILL:"Fill"};if("shoebox"===this.type&&this.sbColorScale){function o(e){this.browser.inputDialog.present({label:"Color Scale Threshold",value:this.sbColorScale.threshold,callback:()=>{const e=Number(this.browser.inputDialog.value,10);e&&(this.sbColorScale.setThreshold(e),this.trackView.repaintViews())}},e)}e.push("<hr/>"),e.push({object:Bt("<div>Set color scale threshold</div>"),dialog:o})}e.push("<hr/>"),e.push("DisplayMode:");const i="seg"===this.type||"shoebox"===this.type?["SQUISHED","EXPANDED","FILL"]:["SQUISHED","EXPANDED"];for(let a of i){const c=Dl(t[a],a===this.displayMode);e.push({object:Bt(c),click:function(){this.displayMode=a,this.config.displayMode=a,this.trackView.checkContentHeight(),this.trackView.repaintViews(),this.trackView.moveScroller(this.trackView.sampleNameViewport.trackScrollDelta)}})}return e}hasSamples(){return!0}getSamples(){return{names:this.sampleKeys,height:this.sampleHeight,yOffset:0}}async getFeatures(e,t,i){const n=await this.featureSource.getFeatures({chr:e,start:t,end:i});if(this.updateSampleKeys(n),this.initialSort){const e=this.initialSort;if(void 0===e.option||"VALUE"===e.option.toUpperCase())this.sortByValue(e,n);else if("ATTRIBUTE"===e.option.toUpperCase()&&e.attribute){const t="DESC"===e.direction?1:-1;this.sortByAttribute(e.attribute,t)}this.initialSort=void 0}return n}draw({context:e,pixelTop:t,pixelWidth:i,pixelHeight:n,features:r,bpPerPixel:s,bpStart:o}){if(xo.fillRect(e,0,t,i,n,{fillStyle:"rgb(255, 255, 255)"}),r&&r.length>0){if(this.checkForLog(r),"shoebox"===this.type&&!this.sbColorScale){const e=this.featureSource.hicFile.percentile95||2e3;this.sbColorScale=new pf({threshold:e,r:0,g:0,b:255})}const a={};let c;switch(this.sampleKeys.forEach((function(e,t){a[e]=t})),this.displayMode){case"FILL":this.sampleHeight=n/this.sampleKeys.length,c=0;break;case"SQUISHED":this.sampleHeight=this.squishedRowHeight,c=0;break;default:this.sampleHeight=this.expandedRowHeight,c=1}const l=this.sampleHeight;for(let e of r)e.pixelRect=void 0;const h=t+n,d=o+i*s+1,u=s;this.sampleYStart=void 0;for(let i of r){if(i.end<o||i.start>d)continue;const n=i.sampleKey||i.sample;i.row=a[n];const r=i.row*l+c;void 0===this.sampleYStart&&(this.sampleYStart=r);if(r+l<t||r>h)continue;const s=Math.max(i.start,o);let f=Math.round((s-o)/u);const p=Math.min(i.end,d),g=Math.round((p-o)/u);let m,w,b=Math.max(1,g-f);if(this.color?m="function"==typeof this.color?this.color(i):this.color:this.colorTable&&(m=this.colorTable.getColor(i.value.toLowerCase())),"mut"===this.type)w=l-2*c,b<3&&(b=3,f-=1);else if("shoebox"===this.type){m=this.sbColorScale.getColor(i.value);let e=l;if(l<.25){const t=.1+2*Math.abs(t.value);e=Math.min(1,t*l)}w=e-2*c}else{let e=i.value;this.isLog||(e=ys.log2(e/2)),m=e<-.1?this.negColorScale.getColor(e):e>.1?this.posColorScale.getColor(e):"white";let t=l;if(l<.25){const i=.1+2*Math.abs(e);t=Math.min(1,i*l)}w=t-2*c}i.pixelRect={x:f,y:r,w:b,h:w},e.fillStyle=m,e.fillRect(f,r,b,w)}}}checkForLog(e){if(void 0===this.isLog){this.isLog=!1;for(let t of e)if(t.value<0)return void(this.isLog=!0)}}computePixelHeight(e){if(!e)return 0;const t="SQUISHED"===this.displayMode?this.squishedRowHeight:this.expandedRowHeight;return this.updateSampleKeys(e),this.sampleKeys.length*t}async sortByValue(e,t){const i=e.chr;let n,r;if(e.position?(n=e.position-1,r=n+1):(n=e.start,r=e.end),t||(t=await this.featureSource.getFeatures({chr:i,start:n,end:r})),!t)return;this.updateSampleKeys(t);const s={},o="ASC"===e.direction?1:-1,a=()=>{const e=r-n+1;for(let i of t){if(i.end<n)continue;if(i.start>r)break;const t=Math.max(n,i.start),o=(Math.min(r,i.end)-t)/e,a=i.sampleKey||i.sample,c=s[a]||0;s[a]=c+o*i.value}this.sampleKeys.sort((function(e,t){let i=s[e],n=s[t];return i||(i=o*Number.MAX_VALUE),n||(n=o*Number.MAX_VALUE),i===n?0:i>n?o:-1*o}))},c=()=>{for(let e of t){if(e.end<n)continue;if(e.start>r)break;const t=e.sampleKey||e.sample;(!s.hasOwnProperty(t)||e.value.localeCompare(s[t])>0)&&(s[t]=e.value)}this.sampleKeys.sort((function(e,t){let i=s[e]||"",n=s[t]||"";return o*i.localeCompare(n)}))};"mut"===this.type?c():a(),this.trackView.repaintViews()}sortByAttribute(e,t){this.sampleKeys=this.browser.sampleInfo.getSortedSampleKeysByAttribute(this.sampleKeys,e,t),this.trackView.repaintViews()}clickedFeatures(e){const t=super.clickedFeatures(e),i=e.y;return t.filter((function(e){const t=e.pixelRect;return t&&i>=t.y&&i<=t.y+t.h}))}hoverText(e){const t=this.clickedFeatures(e);if(t&&t.length>0)return`${t[0].sample}: ${t[0].value}`}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=[];for(let e of t){i.length>0&&(i.push("<hr/>"),i.push("<hr/>"));const t=e._f||e,n="function"==typeof t.popupData?t.popupData(this.type,this.browser.genome.id):this.extractPopupData(t);Array.prototype.push.apply(i,n)}return i}contextMenuItemList(e){const t=e.genomicLocation,i=t=>{const i=e.viewport.cachedFeatures;this.sortByValue(t,i)},n=e.referenceFrame.toBP(2.5);return["DESC","ASC"].map((r=>{const s="DESC"===r?"descending":"ascending";return{label:"seg"===this.type||"shoebox"===this.type?`Sort by value (${s})`:`Sort by type (${s})`,click:()=>{const s={option:"VALUE",direction:r,chr:e.referenceFrame.chr,start:Math.floor(t-n),end:Math.floor(t+n)};i(s),this.config.sort=s}}}))}get supportsWholeGenome(){return(!1===this.config.indexed||!this.config.indexURL)&&!1!==this.config.supportsWholeGenome}updateSampleKeys(e){if(this.explicitSamples)return;const t=new Set(this.sampleKeys);for(let i of e){const e=i.sampleKey||i.sample;t.has(e)||(this.sampleKeys.push(e),t.add(e))}}}const Pf={low:.1,lowR:255,lowG:255,lowB:255,high:1.5,highR:255,highG:0,highB:0},Of={low:-1.5,lowR:0,lowG:0,lowB:255,high:-.1,highR:255,highG:255,highB:255},Uf={indel:"rgb(0,200,0)","targeted region":"rgb(236,155,43)",truncating:"rgb(\t150,0,0)","non-coding transcript":"rgb(0,0,150)",synonymous:"rgb(109,165,95)",silent:"rgb(109,135,80)",missense_mutation:"rgb(72,130,187)",missense:"rgb(72,130,187)","splice site":"rgb(143,83,155)",splice_region:"rgb(143,83,155)",nonsense:"rgb(216, 57,81)",nonsense_mutation:"rgb(216, 57,81)",frame_shift_del:"rgb(226,135,65)",frame_shift_ins:"rgb(226,135,65)",in_frame_del:"rgb(247,235,94)",in_frame_ins:"rgb(247,235,94)","*other*":"rgb(159,91,50)"};class qf{constructor(e){this.paired=!0,this.firstAlignment=e,this.chr=e.chr,this.readName=e.readName,e.start<e.mate.position?(this.start=e.start,this.scStart=e.scStart,this.connectingStart=e.start+e.lengthOnRef,this.connectingEnd=e.mate.position):(this.start=e.mate.position,this.scStart=this.start,this.connectingStart=e.mate.position,this.connectingEnd=e.start),this.end=Math.max(e.mate.position,e.start+e.lengthOnRef),this.lengthOnRef=this.end-this.start;let t=Math.max(this.end,e.scStart+e.scLengthOnRef);this.scLengthOnRef=t-this.scStart}setSecondAlignment(e){this.secondAlignment=e;const t=this.firstAlignment;e.start>t.start?this.connectingEnd=e.start:this.connectingStart=e.start+e.lengthOnRef,this.start=Math.min(t.start,e.start),this.end=Math.max(t.start+t.lengthOnRef,e.start+e.lengthOnRef),this.lengthOnRef=this.end-this.start,this.scStart=Math.min(t.scStart,e.scStart);const i=Math.max(t.scStart+t.scLengthOnRef,e.scStart+e.scLengthOnRef);this.scLengthOnRef=i-this.scStart}containsLocation(e,t){const i=t?this.scStart:this.start,n=t?this.scLengthOnRef:this.lengthOnRef;return e>=i&&e<=i+n}alignmentContaining(e,t){return this.firstAlignment.containsLocation(e,t)?this.firstAlignment:this.secondAlignment&&this.secondAlignment.containsLocation(e,t)?this.secondAlignment:void 0}popupData(e){let t=this.firstAlignment.popupData(e);return this.secondAlignment&&(t.push("-------------------------------"),t=t.concat(this.secondAlignment.popupData(e))),t}isPaired(){return!0}isMateMapped(){return!0}isProperPair(){return this.firstAlignment.isProperPair()}get fragmentLength(){return Math.abs(this.firstAlignment.fragmentLength)}get firstOfPairStrand(){return this.firstAlignment.firstOfPairStrand}get pairOrientation(){return this.firstAlignment.pairOrientation}hasTag(e){return this.firstAlignment.hasTag(e)||this.secondAlignment&&this.secondAlignment.hasTag(e)}getGroupValue({option:e,tag:t}){switch(e){case"strand":return this.isNegativeStrand()?"-":"+";case"FIRST_IN_PAIR_STRAND":return this.isPaired()?this.isFirstOfPair()?this.isNegativeStrand()?"-":"+":this.isSecondOfPair()?this.isNegativeStrand()?"+":"-":void 0:void 0;case"START":return this.start;case"INSERT_SIZE":return this.fragmentLength;case"MATE_CHR":return this.mate?this.mate.chr:void 0;case"MQ":return this.mq;case"ALIGNED_READ_LENGTH":return this.lengthOnRef;case"TAG":return this.tags()[t];case"PHASE":return this.tags().HP;case"READ_ORDER":return this.isPaired()&&this.isFirstOfPair()?"FIRST":this.isPaired()&&this.isSecondOfPair()?"SECOND":"";default:return}}}class Qf{static instances=new Map;static getKey(e,t,i){const n=""+e+t+i;return Qf.instances.has(n)||Qf.instances.set(n,new Qf(e,t,i)),Qf.instances.get(n)}constructor(e,t,i){this.base=e,this.strand=t,this.modification=i,this.canonicalBase="+"===this.strand?this.base:ac(this.base)}getCanonicalBase(){}toString(){return""+this.base+this.strand+this.modification}static compare(e,t){const i=e.modification,n=t.modification;return i===n?e.strand.charAt(0)-t.strand.charAt(0):Vf.has(i)&Vf.has(n)?Vf.get(i)-Vf.get(n):Vf.has(i)?1:Vf.has(n)?-1:i>n?1:-1}}const Vf=new Map(["NONE_C","NONE_T","NONE_G","NONE_A","m","h","f","c","C","g","e","b","T","U","a","A","o","G","n","N"].map(((e,t)=>[e,t])));class jf{constructor(e,t,i,n){this.base=e,this.modification=i,this.strand=t,this.likelihoods=n,this.canonicalBase="+"==this.strand?this.base:ac(this.base),this.key=Qf.getKey(e,t,i)}containsPosition(e){return this.likelihoods.has(e)}is5mC(){return this.modification.equals("m")&&("C"===this.base&&"+"===this.strand||"G"===this.base&&"-"===this.strand)}fullName(){return Wf.get(this.modification)||this.modification}}const Wf=new Map;Wf.set("m","5mC"),Wf.set("h","5hmC"),Wf.set("f","5fC"),Wf.set("c","5caC"),Wf.set("g","5hmU"),Wf.set("e","5fU"),Wf.set("b","5caU"),Wf.set("a","6mA"),Wf.set("o","8xoG"),Wf.set("n","Xao"),Wf.set("C","Unknown C"),Wf.set("T","Unknown T"),Wf.set("A","Unknown A"),Wf.set("G","Unknown G"),Wf.set("N","Unknown");const Gf=new Map([["m","5mC"],["h","5hmC"],["f","5fC"],["c","5caC"],["g","5hmU"],["e","5fU"],["b","5caU"],["a","6mA"],["o","8xoG"],["n","Xao"],["C","Unknown C"],["T","Unknown T"],["A","Unknown A"],["G","Unknown G"],["N","Unknown"]]);function $f(e){return Gf.has(e)?Gf.get(e):"Uknown"}function Kf(e){if(!e)return!1;const t=e.length;if(0==t)return!1;for(let i=0;i<t;i++){const t=e.charAt(i);if(t<"0"||t>"9")return!1}return!0}function Yf(e){return e<0?e+256:e}class Xf{allModifications=new Set;simplexModifications=new Set;maxLikelihoods=new Map;nomodLikelihoods=new Map;lastThreshold;incrementCounts(e){if(!e.blocks)return;const t=e.getBaseModificationSets();if(t)for(let i of e.blocks)if("S"!==i.type)for(let e=0;e<i.len;e++){let n,r=e+i.seqOffset,s=0,o=-1,a=255;for(let e of t){const t=Qf.getKey(e.base,e.strand,e.modification);this.allModifications.add(t);const i=e.likelihoods;if(e.containsPosition(r)){const c=Yf(i.get(r));a-=c,c>o&&(s=e.canonicalBase,o=c,n=t)}}if(0!=s){const t=i.start+e,r=Qf.getKey(s,"+","NONE_"+s);this.allModifications.add(r);const c=(e,t,i,n)=>{let r=n.get(i);r||(r=new Map,n.set(i,r));let s=r.get(e);s||(s=[],r.set(e,s)),s.push(t)};c(t,o,n,this.maxLikelihoods),a>o?c(t,a,r,this.nomodLikelihoods):c(t,o,n,this.nomodLikelihoods)}}}getCount(e,t,i,n){this.lastThreshold=i;const r=255*i,s=n?this.nomodLikelihoods.get(t):this.maxLikelihoods.get(t);if(!s)return 0;const o=s.get(e);if(o){let e=0;for(let t of o){Yf(t)>=r&&e++}return e}return 0}getLikelihoodSum(e,t,i,n){this.lastThreshold=i;const r=255*i,s=(n?this.nomodLikelihoods.get(t):this.maxLikelihoods.get(t)).get(e);if(s){let e=0;for(let t of s){const i=Yf(t);i>=r&&(e+=i)}return e}return 0}popupData(e,t){const i=[];i.push("<b>Modifications with likelihood > "+100*this.lastThreshold+"%</b>");for(let n of this.maxLikelihoods.keys()){if(this.maxLikelihoods.get(n).has(e)){let r="basemod2"===t;const s=this.getCount(e,n,this.lastThreshold,r);if(s>0){const t=this.getLikelihoodSum(e,n,this.lastThreshold,r)/s*.3921568,o=$f(n.modification);i.push(o+" ("+n.base+n.strand+"): "+s+"  @ average likelihood "+Math.round(t)+"%")}}}return i}computeSimplex(){const e=new Set(Array.from(this.allModifications).filter((e=>"-"===e.strand)).map((e=>e.modification)));for(let t of this.allModifications)"+"!==t.strand||e.has(t.modification)||(this.simplexModifications.add(t.modification),this.simplexModifications.add("NONE_"+t.getCanonicalBase()))}}class Zf{constructor(){this.alignments=[],this.score=void 0}findAlignment(e,t=!1){const i=(e,i)=>i>=e.start&&i<e.start+(t?e.fragmentLength:e.lengthOnRef);let n;for(let r=0;r<this.alignments.length;r++){const s=this.alignments[r];if(e>=s.start&&e<s.start+(t?s.fragmentLength:s.lengthOnRef)){s.paired?s.firstAlignment&&i(s.firstAlignment,e)?n=s.firstAlignment:s.secondAlignment&&i(s.secondAlignment,e)&&(n=s.secondAlignment):n=s;break}}return n}getSortValue({position:e,option:t,tag:i,sortAsPairs:n},r){t||(t="BASE");const s=this.findAlignment(e,n);if(void 0===s)return Number.MAX_VALUE;switch(t){case"NUCLEOTIDE":case"BASE":return function(e,t,i){let n;const r=Math.floor(i)-t.start;r<t.sequence.length&&(n=t.sequence.charAt(r));if(!n)return 0;const s=e.readBaseAt(i),o=e.readBaseQualityAt(i),a=t.coverageMap,c=Math.floor(i-a.bpStart),l=a.coverage[c];let h=0;if(e.insertions)for(let t of e.insertions)t.start===i&&(h=-l.ins);if(s)if(n=n.toUpperCase(),"N"===s&&0===h)h=2;else if(n!==s&&"="!==s||0!==h){if("X"===s||n!==s){h-=l["pos"+s]+l["neg"+s]+o/1e3}}else h=4-o/1e3;else{const e=l.del;e>0?h-=e:0===h&&(h=1)}return h}(s,r,e);case"strand":return s.strand?1:-1;case"START":return s.start;case"TAG":return s.tags()[i];case"READ_NAME":return s.readName;case"INSERT_SIZE":return-Math.abs(s.fragmentLength);case"GAP_SIZE":return-s.gapSizeAt(e);case"MATE_CHR":return s.mate?s.mate.chr:Number.MAX_VALUE;case"MQ":return void 0===s.mq?Number.MAX_VALUE:-s.mq;case"ALIGNED_READ_LENGTH":return-s.lengthOnRef;default:return Number.MAX_VALUE}}}var Jf={fr:{F1R2:"LR",F2R1:"LR",F1F2:"LL",F2F1:"LL",R1R2:"RR",R2R1:"RR",R1F2:"RL",R2F1:"RL"},rf:{R1F2:"LR",R2F1:"LR",R1R2:"LL",R2R1:"LL",F1F2:"RR",F2F1:"RR",F1R2:"RL",F2R1:"RL"},ff:{F2F1:"LR",R1R2:"LR",F2R1:"LL",R1F2:"LL",R2F1:"RR",F1R2:"RR",R2R1:"RL",F1F2:"RL"}};class ep{#F=[];baseModificationKeys=new Set;constructor(e,t,i,{samplingWindowSize:n,samplingDepth:r,alleleFreqThreshold:s,colorBy:o}){this.alleleFreqThreshold=void 0===s?.2:s,this.samplingWindowSize=n||100,this.samplingDepth=r||1e3,this.chr=e,this.start=Math.floor(t),this.end=Math.ceil(i),this.length=i-t,this.coverageMap=new ip(e,t,i,this.alleleFreqThreshold),this.downsampledIntervals=[],o&&o.startsWith("basemod")&&(this.baseModCounts=new Xf),this.alignments=[],this.pairsCache=new Map,this.downsampledReads=new Set,this.currentBucket=new tp(this.start,this.start+this.samplingWindowSize,this),this.hasPairs=!1}pack({viewAsPairs:e,showSoftClips:t,expectedPairOrientation:i,groupBy:n,displayMode:r}){let s=this.allAlignments();s=e?function(e){const t=new Map,i=e.map((e=>{if(op(e)){let i=t.get(e.readName);return i?(i.setSecondAlignment(e),t.delete(e.readName),i):(i=new qf(e),t.set(e.readName,i),i)}return e}));return i}(s):function(e){return e.flatMap((e=>e instanceof qf?[e.firstAlignment,e.secondAlignment].filter(Boolean):[e]))}(s),this.packAlignmentRows(s,t,i,n,r),this.alignments&&delete this.alignments}packAlignmentRows(e,t,i,n,r){this.#F=[];const s=(e,i)=>{e.sort((function(e,i){return t?e.scStart-i.scStart:e.start-i.start}));const n=new sp(i);let r,s=0,o=0;const a=new Set,c=()=>{r=new Zf,n.push(r),s=0,o=0,a.clear()};for(c();e.length>0;)if(o>=0&&o<e.length){const i=e[o];a.add(i),r.alignments.push(i),s=t?i.scStart+i.scLengthOnRef+2:i.start+i.lengthOnRef+2,o=ap(e,(e=>(t?e.scStart:e.start)>s),o)}else e=e.filter((e=>!a.has(e))),c();return n},o=(e,t)=>{e.sort((function(e,t){return e.start-t.start}));const i=new sp(t),{start:n,end:r}=this.viewport.genomicRange();for(let t of e)if(t.end<n||t.start>r)this.#F.push(t);else{const e=new Zf;e.alignments.push(t),i.push(e)}return i};if(!e||0===e.length)return new Map;{const t=new Map;if(n)for(let r of e){const e=cp(r,n,i)||"";t.has(e)||t.set(e,[]),t.get(e).push(r)}else t.set("",e);const a=new Map,c=Array.from(t.keys()).sort(function(e){switch(e){case"pairOrientation":return function(){const e=["LL","RR","RL","LR",""];return(t,i)=>e.indexOf(t)-e.indexOf(i)}();case"strand":case"firstOfPairStrand":return dp;default:return e&&e.startsWith("base:")?hp:up}}(n));for(let e of c){const i=t.get(e),n="FULL"===r?o(i,e):s(i,e);a.set(e,n)}this.packedGroups=a}}push(e){this.hasPairs=this.hasPairs||e.isPaired(),this.coverageMap.incCounts(e);const t=e.getBaseModificationSets();if(t)for(let e of t)this.baseModificationKeys.add(e.key);this.baseModCounts&&this.baseModCounts.incrementCounts(e),this.downsampledReads.has(e.readName)?this.currentBucket.downsampledCount++:(e.start>=this.currentBucket.end&&(this.finishBucket(),this.currentBucket=new tp(e.start,e.start+this.samplingWindowSize,this)),this.currentBucket.addAlignment(e))}finish(){void 0!==this.currentBucket&&this.finishBucket(),this.hasAlignments=this.alignments.length>0,this.alignments.sort((function(e,t){return e.start-t.start})),this.baseModCounts&&this.baseModCounts.computeSimplex(),delete this.currentBucket,delete this.pairsCache,delete this.downsampledReads}contains(e,t,i){return this.chr===e&&this.start<=t&&this.end>=i}hasDownsampledIntervals(){return this.downsampledIntervals&&this.downsampledIntervals.length>0}finishBucket(){this.alignments=this.alignments.concat(this.currentBucket.alignments),this.currentBucket.downsampledCount>0&&this.downsampledIntervals.push(new rp(this.currentBucket.start,this.currentBucket.end,this.currentBucket.downsampledCount))}allAlignments(){if(this.alignments)return this.alignments;{const e=Array.from(this.packedGroups.values()).flatMap((e=>e.rows.flatMap((e=>e.alignments))));if(this.#F&&this.#F.length>0)for(let t of this.#F)e.push(t);return e}}getMax(e,t){return this.coverageMap.getMax(e,t)}sortRows(e){for(let t of this.packedGroups.values())t.sortRows(e,this)}}class tp{constructor(e,t,{samplingDepth:i,downsampledReads:n,pairsCache:r}){this.start=e,this.end=t,this.alignments=[],this.downsampledCount=0,this.samplingDepth=i,this.downsampledReads=n,this.pairsCache=r,this.hasPairs=!1}addAlignment(e){this.hasPairs=this.hasPairs||e.isPaired();const t=this.hasPairs?Math.ceil(this.samplingDepth/2):this.samplingDepth;if(op(e)){const t=this.pairsCache.get(e.readName);if(t)return t.setSecondAlignment(e),void this.pairsCache.delete(e.readName)}if(this.alignments.length<t)if(op(e)){const t=new qf(e);this.pairsCache.set(e.readName,t),this.alignments.push(t)}else this.alignments.push(e);else{const i=Math.floor(Math.random()*(t+this.downsampledCount-1));if(i<t){const t=this.alignments[i];if(this.pairsCache.has(t.readName)&&this.pairsCache.delete(t.readName),op(e)){const t=new qf(e);this.pairsCache.set(e.readName,t),this.alignments[i]=t}else this.alignments[i]=e;this.downsampledReads.add(t.readName)}else this.downsampledReads.add(e.readName);this.downsampledCount++}}}class ip{constructor(e,t,i,n){this.chr=e,this.bpStart=t,this.length=i-t,this.coverage=new Array(this.length),this.maximum=0,this.threshold=n,this.qualityWeight=!0}getMax(e,t){let i=0;const n=this.coverage.length;for(let r=0;r<n;r++){const n=this.bpStart+r;if(n>t)break;const s=this.coverage[r];n>=e&&s&&(i=Math.max(i,s.total))}return i}incCounts(e){var t=this;if(void 0===e.blocks?i(e):e.blocks.forEach((function(e){i(e)})),e.gaps)for(let i of e.gaps)if("D"===i.type){const e=i.start-t.bpStart;for(let n=e;n<e+i.len;n++)n<0||(this.coverage[n]||(this.coverage[n]=new np(t.threshold)),this.coverage[n].del++)}if(e.insertions)for(let i of e.insertions){const e=i.start-this.bpStart;e<0||(this.coverage[e]||(this.coverage[e]=new np(t.threshold)),this.coverage[e].ins++)}function i(i){if("S"===i.type)return;const n=e.seq,r=e.qual,s=i.seqOffset;for(let o=i.start-t.bpStart,a=0;a<i.len;o++,a++){t.coverage[o]||(t.coverage[o]=new np(t.threshold));const i=null==n?"N":n.charAt(s+a),c=e.strand?"pos"+i:"neg"+i,l=r&&s+a<r.length?r[s+a]:30;t.coverage[o][c]+=1,t.coverage[o]["qual"+i]+=l,t.coverage[o].total+=1,t.coverage[o].qual+=l,t.maximum=Math.max(t.coverage[o].total,t.maximum)}}}getPosCount(e,t){const i=e-this.bpStart;if(i<0||i>=this.coverage.length)return 0;const n=this.coverage[i];switch(t){case"A":case"a":return n.posA;case"C":case"c":return n.posC;case"T":case"t":return n.posT;case"G":case"g":return n.posG;case"N":case"n":return n.posN;default:return 0}}getNegCount(e,t){const i=e-this.bpStart;if(i<0||i>=this.coverage.length)return 0;const n=this.coverage[i];switch(t){case"A":case"a":return n.negA;case"C":case"c":return n.negC;case"T":case"t":return n.negT;case"G":case"g":return n.negG;case"N":case"n":return n.negN;default:return 0}}getCount(e,t){return this.getPosCount(e,t)+this.getNegCount(e,t)}getTotalCount(e){const t=e-this.bpStart;return t>=0&&t<this.coverage.length?this.coverage[t].total:0}}class np{constructor(e){this.qualityWeight=!0,this.posA=0,this.negA=0,this.posT=0,this.negT=0,this.posC=0,this.negC=0,this.posG=0,this.negG=0,this.posN=0,this.negN=0,this.pos=0,this.neg=0,this.qualA=0,this.qualT=0,this.qualC=0,this.qualG=0,this.qualN=0,this.qual=0,this.total=0,this.del=0,this.ins=0,this.threshold=e}hoverText(){const e=this.posA+this.posT+this.posC+this.posG+this.posN,t=this.negA+this.negT+this.negC+this.negG+this.negN;return`${this.total} (${e}+, ${t}-)`}isMismatch(e){const t=this.threshold*(this.qualityWeight&&this.qual?this.qual:this.total);let i=0;for(let t of["A","T","C","G"])t!==e&&(i+=this.qualityWeight&&this.qual?this["qual"+t]:this["pos"+t]+this["neg"+t]);return i>=t}}class rp{constructor(e,t,i){this.start=e,this.end=t,this.counts=i}popupData(e){return[{name:"start",value:Math.floor(this.start+1)},{name:"end",value:this.end},{name:"# downsampled:",value:this.counts}]}}class sp{pixelTop=0;pixelBottom=0;rows=[];constructor(e){this.name=this.name}push(e){this.rows.push(e)}get length(){return this.rows.length}sortRows(e,t){const i=[],n=[];for(let t of this.rows){void 0!==t.findAlignment(e.position,e.sortAsPairs)?i.push(t):n.push(t)}i.sort(((i,n)=>{const r=e.direction,s=i.getSortValue(e,t),o=n.getSortValue(e,t);if(void 0===o&&void 0!==o)return 1;if(void 0!==s&&void 0===o)return-1;const a=s>o?1:s<o?-1:0;return!0===r?a:-a}));for(let e of n)i.push(e);this.rows=i}}function op(e){return e.isPaired()&&e.mate&&e.isMateMapped()&&e.chr===e.mate.chr&&(e.isFirstOfPair()||e.isSecondOfPair())&&!(e.isSecondary()||e.isSupplementary())}function ap(e,t,i){let n=i-1,r=e.length;for(;1+n<r;){const i=n+(r-n>>1);t(e[i])?r=i:n=i}return r}function cp(e,t,i){let n,r,s;if(t.startsWith("tag:"))n=t.substring(4),t="tag";else if(t.startsWith("base:")){const e=t.split(":");3===e.length&&(t="base",r=e[1],s=Number.parseInt(e[2].replaceAll(",",""))-1)}switch(t){case"strand":return e.strand?"+":"-";case"firstOfPairStrand":const t=e.firstOfPairStrand;return void 0===t?"":t?"+":"-";case"mateChr":return e.mate&&e.isMateMapped()?e.mate.chr:"";case"pairOrientation":return Jf[i][e.pairOrientation]||"";case"chimeric":return e.tags().SA?"chimeric":"";case"supplementary":return e.isSupplementary?"supplementary":"";case"readOrder":return e.isPaired()&&e.isFirstOfPair()?"first":e.isPaired()&&e.isSecondOfPair()?"second":"";case"phase":return e.tags().HP||"";case"tag":return e.tags()[n]||"";case"base":if(e.chr===r&&e.start<=s&&e.end>s){const t=e.readBaseAt(s);return t||"GAP"}return"";default:return}}const lp=new Map([["A",1],["T",2],["C",3],["G",4],["N",5],["GAP",5],["",7]]);function hp(e,t){return lp.has(e)&&lp.has(t)?lp.get(e)-lp.get(t):e.localeCompare(t,void 0,{sensitivity:"base"})}function dp(e,t){return e===t?0:e&&t?-e.localeCompare(t):e?1:-1}function up(e,t){if(e||t){if(e){if(t){if(e===t)return 0;if(ja(e)&&(ja(t),1))return Number.parseFloat(e)-Number.parseFloat(t);{let i=e.toString(),n=t.toString();return i.localeCompare(n,void 0,{sensitivity:"base"})}}return-1}return 1}return 0}class fp{constructor(e){const t=e.split(",");this.chr=t[0],this.start=parseInt(t[1]),this.strand=t[2].charAt(0),this.mapQ=parseInt(t[4]),this.numMismatches=parseInt(t[5]),this.lenOnRef=function(e){let t=0,i="";for(let n=0;n<e.length;n++){const r=e.charCodeAt(n);if(r>47&&r<58)i+=e.charAt(n);else{switch(r){case 78:case 68:case 77:case 61:case 88:t+=parseInt(i.toString())}i=""}}return t}(t[3])}printString(){return this.chr+":"+Rt(this.start)+"-"+Rt(this.start+this.lenOnRef)+" ("+this.strand+") = "+Rt(this.lenOnRef)+"bp @MAPQ: "+this.mapQ+" NM: "+this.numMismatches}}function pp(e){return e.split(";").filter((e=>e.length>0)).map((e=>new fp(e)))}const gp={c:1,C:1,s:2,S:2,i:4,I:4,f:4};class mp{constructor(){this.hidden=!1}isMapped(){return!(4&this.flags)}isPaired(){return!!(1&this.flags)}isProperPair(){return!!(2&this.flags)}isFirstOfPair(){return!!(64&this.flags)}isSecondOfPair(){return!!(128&this.flags)}isSecondary(){return!!(256&this.flags)}isSupplementary(){return!!(2048&this.flags)}isFailsVendorQualityCheck(){return!!(512&this.flags)}isDuplicate(){return!!(1024&this.flags)}isMateMapped(){return!(8&this.flags)}isNegativeStrand(){return!!(16&this.flags)}isMateNegativeStrand(){return!!(32&this.flags)}hasTag(e){return(this.tagDict||Fp(this.tagBA)).hasOwnProperty(e)}tags(){return this.tagDict||(this.tagBA?(this.tagDict=Fp(this.tagBA),this.tagBA=void 0):this.tagDict={}),this.tagDict}getTag(e){return this.tags()[e]}get firstOfPairStrand(){if(this.isPaired()){if(this.isFirstOfPair())return this.strand;if(this.isMateMapped())return this.mate.strand}}containsLocation(e,t){const i=t?this.scStart:this.start,n=t?this.scLengthOnRef:this.lengthOnRef;return e>=i&&e<=i+n}popupData(e){const t=[];if(e=Math.floor(e),this.insertions){const n=this.seq;for(let r of this.insertions){var i=r.start;if(e===i||e===i-1)return t.push({name:"Insertion",value:n.substr(r.seqOffset,r.len)}),t.push({name:"Location",value:i}),t}}t.push({name:"Read Name",value:this.readName}),t.push("<hr/>"),t.push({name:"Alignment Start",value:Rt(1+this.start),borderTop:!0}),t.push({name:"Read Strand",value:!0===this.strand?"(+)":"(-)",borderTop:!0});let n=this.cigar;if(n&&n.length>50){const e=25;n=`${n.substring(0,e-2)} ... ${n.substring(n.length-e+2)}`}t.push({name:"Cigar",value:n}),t.push({name:"Mapping Quality",value:this.mq}),t.push({name:"Secondary",value:a(this.isSecondary())}),t.push({name:"Supplementary",value:a(this.isSupplementary())}),t.push({name:"Duplicate",value:a(this.isDuplicate())}),t.push({name:"Failed QC",value:a(this.isFailsVendorQualityCheck())}),this.isPaired()&&(t.push("<hr/>"),t.push({name:"First in Pair",value:!this.isSecondOfPair(),borderTop:!0}),t.push({name:"Mate is Mapped",value:a(this.isMateMapped())}),this.pairOrientation&&t.push({name:"Pair Orientation",value:this.pairOrientation}),this.isMateMapped()&&(t.push({name:"Mate Chromosome",value:this.mate.chr}),t.push({name:"Mate Start",value:this.mate.position+1}),t.push({name:"Mate Strand",value:!0===this.mate.strand?"(+)":"(-)"}),t.push({name:"Insert Size",value:this.fragmentLength})));const r=this.tags();if(r.hasOwnProperty("SA")){t.push("<hr/>"),t.push({name:"Supplementary Alignments",value:""});const e=pp(r.SA);if(e){t.push("<ul>");for(let i of e)t.push(`<li>${i.printString()}</li>`);t.push("</ul>")}}const s=new Set(["SA","MD"]);t.push("<hr/>");for(let e in r)s.has(e)||t.push({name:e,value:r[e]});t.push({name:"Hidden Tags",value:"SA, MD"}),t.push("<hr/>"),t.push({name:"Genomic Location: ",value:Rt(1+e)}),t.push({name:"Read Base:",value:this.readBaseAt(e)}),t.push({name:"Base Quality:",value:this.readBaseQualityAt(e)});const o=this.getBaseModificationSets();if(o){const i=this.positionToReadIndex(e);if(void 0!==i){let e=!1;for(let n of o)if(n.containsPosition(i)){e||(t.push("<hr/>"),t.push("<b>Base modifications:</b>"),e=!0);const r=Math.round(100/255*Yf(n.likelihoods.get(i)));t.push(`${n.fullName()} @ likelihood =  ${r}%`)}}}return t;function a(e){return e?"Yes":"No"}}readBaseAt(e){const t=bp(this.blocks,e);if(t){if("*"===this.seq)return"*";{const i=t.seqIndexAt(e);return this.seq[i]}}}readBaseQualityAt(e){const t=bp(this.blocks,e);if(t){if("*"===this.qual)return 30;{const i=t.seqIndexAt(e);return i>=0&&this.qual&&i<this.qual.length?this.qual[i]:30}}}gapSizeAt(e){if(this.gaps)for(let t of this.gaps)if(e>=t.start&&e<t.start+t.len)return t.len;return 0}softClippedBlocks(){let e,t,i;for(let n of this.blocks)"S"===n.type?i?t=n:e=n:"H"!==n.type&&(i=!0);return{left:e,right:t}}getBaseModificationSets(){if(this.tags(),!this.baseModificationSets&&(this.tagDict.MM||this.tagDict.Mm)){const e=this.tagDict.MM||this.tagDict.Mm,t=this.tagDict.ML||this.tagDict.Ml;!Mt(e)||t&&!Array.isArray(t)||(0===e.length?this.baseModificationSets=wp:this.baseModificationSets=function(e,t,i,n){n&&(i=lc(i));const r=[],s=e.split(";");let o=0;for(let e of s){const s=e.split(","),a=s[0].charAt(0),c=s[0].charAt(1),l=s[0].endsWith(".");if(1==s.length);else{const e=s[0].endsWith(".")||s[0].endsWith("?")?s[0].substring(2,s[0].length-1):s[0].substring(2);let h=[];if(e.length>1)if(Kf(e))h.push(e);else for(let t=0;t<e.length;t++)h.push(e.substring(t,t+1));else h.push(e);const d=new Map;for(let e of h)d.set(e,new Map);let u=1,f=Number.parseInt(s[u++]),p=0,g=0;for(;p<i.length;){if("N"===a||i[p]===a){const e=n?i.length-1-p:p;if(g===f){for(let i of h){const n=t?t[o++]:255;d.get(i).set(e,n)}if(u<s.length)f=Number.parseInt(s[u++]),g=0;else{if(!l)break;f=-1}}else{if(l)for(let t of h)d.get(t).set(e,0);g++}}p++}for(let e of h)r.push(new jf(a,c,e,d.get(e)))}}return r}(e,t,this.seq,this.isNegativeStrand()))}return this.baseModificationSets}getGroupValue(e,t,i){const n=this;switch(e){case"strand":return n.strand?"+":"-";case"firstOfPairStrand":const e=n.firstOfPairStrand;return void 0===e?"":e?"+":"-";case"mateChr":return n.mate&&n.isMateMapped()?n.mate.chr:"";case"pairOrientation":return Jf[i][n.pairOrientation]||"";case"chimeric":return n.tags().SA?"chimeric":"";case"supplementary":return n.isSupplementary?"supplementary":"";case"readOrder":return n.isPaired()&&n.isFirstOfPair()?"first":n.isPaired()&&n.isSecondOfPair()?"second":"";case"phase":return n.tags().HP||"";case"tag":return n.tags()[t]||"";default:return}}positionToReadIndex(e){const t=bp(this.blocks,e);return t?e-t.start+t.seqOffset:void 0}}const wp=new Set;function bp(e,t){for(let i=0;i<e.length;i++){const n=e[i];if(t>=n.start&&t<n.start+n.len)return n}}function Fp(e){let t=0;const i=e.length,n={};for(;t<i;){const i=String.fromCharCode(e[t])+String.fromCharCode(e[t+1]);t+=2;const s=String.fromCharCode(e[t++]);let o;if("A"===s)o=String.fromCharCode(e[t]),t++;else if("i"===s||"I"===s)o=vp(e,t),t+=4;else if("c"===s)o=Cp(e,t),t++;else if("C"===s)o=_p(e,t),t++;else if("s"===s||"S"===s)o=yp(e,t),t+=2;else if("f"===s)o=Ap(e,t),t+=4;else if("Z"===s)for(o="";;){var r=e[t++];if(0===r)break;o+=String.fromCharCode(r)}else{if("B"!==s){o="Error unknown type: "+s,n[i]=o;break}{const r=String.fromCharCode(e[t++]);let s=gp[r];if(void 0===s){n[i]=`Error: unknown element type '${r}'`;break}const a=vp(e,t);t+=4;const c=t+a*s;o=[];const l=new DataView(e.buffer);for(;t<c;){switch(r){case"c":o.push(l.getInt8(t));break;case"C":o.push(l.getUint8(t));break;case"s":o.push(l.getInt16(t));break;case"S":o.push(l.getUint16(t));break;case"i":o.push(l.getInt32(t));break;case"I":o.push(l.getUint32(t));break;case"f":o.push(l.getFloat32(t))}t+=s}}}n[i]=o}return n}function vp(e,t){return e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t]}function yp(e,t){return e[t+1]<<8|e[t]}function Ap(e,t){return new DataView(e.buffer).getFloat32(t)}function Cp(e,t){return new DataView(e.buffer).getInt8(t)}function _p(e,t){return new DataView(e.buffer).getUint8(t)}class xp{constructor(e){e&&Object.assign(this,e)}seqIndexAt(e){return Math.floor(e)-this.start+this.seqOffset}}class kp{constructor(e){e||(e={}),this.vendorFailed=e.vendorFailed=!1!==e.vendorFailed,this.duplicate=e.duplicate=!1!==e.duplicate,this.secondary=e.secondary||!1,this.supplementary=e.supplementary||!1,this.mq=e.mq||0,e.readgroups&&(this.readgroups=new Set(e.readgroups))}pass(e){if(!e.isMapped())return!1;if(this.vendorFailed&&e.isFailsVendorQualityCheck())return!1;if(this.duplicate&&e.isDuplicate())return!1;if(this.secondary&&e.isSecondary())return!1;if(this.supplementary&&e.isSupplementary())return!1;if(e.mq<this.mq)return!1;if(this.readgroups){const t=e.tags().RG;return this.readgroups.has(t)}return!0}}const Ip=["=","A","C","M","G","R","S","V","T","W","Y","H","K","D","B","N"],Sp=["M","I","D","N","S","H","P","=","X","?","?","?","?","?","?","?"],Ep=Rp(new Uint8Array([66,65,77,1]),0),Np=1e4,Bp={readHeader:async function(e,t,i){const n=gs(await Qs.loadArrayBuffer(e,t));return Bp.decodeBamHeader(n,i)},decodeBamHeader:function(e){const t=Rp(e,0);if(t!==Ep)throw new Error("BAM header errror: bad magic number.  This could be caused by either a corrupt or missing file.");const i=Rp(e,4);let n="";for(var r=0;r<i;++r)n+=String.fromCharCode(e[r+8]);const s=Rp(e,i+8);let o=i+12;const a={},c=[];for(r=0;r<s;++r){const t=Rp(e,o);let i="";for(var l=0;l<t-1;++l)i+=String.fromCharCode(e[o+4+l]);a[i]=r,c[r]=i,o=o+8+t}return{magicNumber:t,size:o,chrNames:c,chrToIndex:a}},bam_tag2cigar:function(e,t,i,n,r,s){function o(e){return"C"===e||"c"===e||"A"===e?1:"S"===e||"s"===e?2:"I"===e||"i"===e||"f"===e?4:0}if(1!==s.length||r.start<0)return!1;for(var a=i+(n+1>>1)+n;a+4<t;){if("CG"===String.fromCharCode(e[a])+String.fromCharCode(e[a+1]))break;var c=String.fromCharCode(e[a+2]);if("B"===c)a+=8+o(c=String.fromCharCode(e[a+3]))*Rp(e,a+4);else if("Z"===c||"H"===c)for(a+=3;0!==e[a++];);else a+=3+o(c)}if(a>=t)return!1;if("B"!==String.fromCharCode(e[a+2])||"I"!==String.fromCharCode(e[a+3]))return!1;var l=Rp(e,a+4),h=a+8;if(h+4*l>t)return!1;var d="",u=0;s.length=0,a=h;for(var f=0;f<l;++f,a+=4){var p=Rp(e,a),g=p>>4,m=Sp[15&p];"M"!==m&&"EQ"!==m&&"X"!==m&&"D"!==m&&"N"!==m&&"="!==m||(u+=g),d=d+g+m,s.push({len:g,ltr:m})}return r.cigar=d,r.lengthOnRef=u,!0},decodeBamRecords:function(e,t,i,n,r,s,o,a){for(;t<e.length;){const u=t+Rp(e,t)+4,f=new mp,p=Rp(e,t+4),g=Rp(e,t+8);if(u>e.length)return;if(p<0){t=u;continue}if(void 0!==r&&(p>r||g>o))return!0;if(void 0!==r&&p<r){t=u;continue}const m=Rp(e,t+12),w=(65280&m)>>8,b=255&m,F=Rp(e,t+16),v=(4294901760&F)>>16,y=65535&F,A=Rp(e,t+20),C=Rp(e,t+24),_=Rp(e,t+28),x=Rp(e,t+32);let k=[];for(let i=0;i<b-1;++i)k.push(String.fromCharCode(e[t+36+i]));k=k.join("");let I=0,S="",E=t+36+b;const N=[];let B;for(let t=0;t<y;++t){var c=Rp(e,E),l=c>>4,h=Sp[15&c];"M"!==h&&"EQ"!==h&&"X"!==h&&"D"!==h&&"N"!==h&&"="!==h||(I+=l),S=S+l+h,E+=4,B={len:l,ltr:h},N.push(B)}if(f.chr=n[p],f.start=g,f.flags=v,f.strand=!(16&v),f.readName=k,f.cigar=S,f.lengthOnRef=I,f.fragmentLength=x,f.mq=w,Bp.bam_tag2cigar(e,u,E,A,f,N),f.end=f.start+f.lengthOnRef,f.end<s){t=u;continue}let M=[];const R=A+1>>1;for(let t=0;t<R;++t){var d=e[E+t];M.push(Ip[(240&d)>>4]),M.push(Ip[15&d])}M=M.slice(0,A).join(""),E+=R;const D=[];for(let t=0;t<A;++t)D.push(e[E+t]);E+=A,C>=0&&(f.mate={chr:n[C],position:_,strand:!(32&v)}),f.seq=M,f.qual=D,f.tagBA=new Uint8Array(e.buffer.slice(E,u)),this.setPairOrientation(f),(void 0===a||a.pass(f))&&(Mp(f,N),i.push(f)),t=u}},decodeSamRecords:function(e,t,i,n,r,s){var o,a,c,l,h,d,u,f,p,g;for(l=(o=Dt(e)).length,a=0;a<l;a++)if(h=o[a].split("\t"),(p=new mp).chr=h[2],p.start=Number.parseInt(h[3])-1,p.flags=Number.parseInt(h[1]),p.readName=h[0],p.strand=!(16&p.flags),p.mq=Number.parseInt(h[4]),p.cigar=h[5],p.fragmentLength=Number.parseInt(h[8]),p.seq=h[9],"*"!==p.chr&&p.isMapped()&&p.chr===i){if(p.start>r)break;if(f=0,(g=Dp(p.cigar)).forEach((function(e){var t=e.len,i=e.ltr;"M"!==i&&"EQ"!==i&&"X"!==i&&"D"!==i&&"N"!==i&&"="!==i||(f+=t)})),p.lengthOnRef=f,!(p.start+f<n)){for(d=h[10],p.qual=[],c=0;c<d.length;c++)p.qual[c]=d.charCodeAt(c)-33;p.tagDict=h.length<11?{}:Tp(h.slice(11)),p.isMateMapped()&&(u=h[6],p.mate={chr:"="===u?p.chr:u,position:Number.parseInt(h[7]),strand:!(32&p.flags)}),this.setPairOrientation(p),(void 0===s||s.pass(p))&&(Mp(p,g),t.push(p))}}},setReaderDefaults:function(e,t){e.filter="function"==typeof t.filter?{pass:t.filter}:new kp(t.filter),t.readgroup&&(e.filter.readgroups=new Set([t.readgroup])),e.alleleFreqThreshold=void 0===t.alleleFreqThreshold?.2:t.alleleFreqThreshold,e.samplingWindowSize=void 0===t.samplingWindowSize?100:t.samplingWindowSize,e.samplingDepth=void 0===t.samplingDepth?500:t.samplingDepth,e.samplingDepth>Np&&(console.log("Warning: attempt to set sampling depth > maximum value of "+Np),e.samplingDepth=Np)},setPairOrientation:function(e){if(e.isMapped()&&e.mate&&e.isMateMapped()&&e.mate.chr===e.chr){var t=e.strand?"F":"R",i=e.mate,n=i.strand?"F":"R",r=" ",s=" ";e.isFirstOfPair()?(r="1",s="2"):e.isSecondOfPair()&&(r="2",s="1");var o=[],a=e.fragmentLength,c=e.end-e.start;if(0===a)a=(e.start<i.position?i.position+c:i.position-c)-e.start;a>0?(o[0]=t,o[1]=r,o[2]=n,o[3]=s):(o[2]=t,o[3]=r,o[0]=n,o[1]=s),e.pairOrientation=o.join("")}}};function Mp(e,t){const i=[];let n,r,s=0,o=e.start;e.scStart=e.start,e.scLengthOnRef=e.lengthOnRef;for(let a of t){let t;switch(a.ltr){case"H":case"P":break;case"S":t=o,e.scLengthOnRef+=a.len,0===i.length&&(e.scStart-=a.len,t-=a.len),i.push(new xp({start:t,seqOffset:s,len:a.len,type:"S"})),s+=a.len;break;case"N":case"D":void 0===r&&(r=[]),r.push({start:o,len:a.len,type:a.ltr}),o+=a.len;break;case"I":void 0===n&&(n=[]),n.push(new xp({start:o,len:a.len,seqOffset:s,type:"I"})),s+=a.len;break;case"M":case"EQ":case"=":case"X":i.push(new xp({start:o,seqOffset:s,len:a.len,type:"M"})),s+=a.len,o+=a.len;break;default:console.log("Error processing cigar element: "+a.len+a.ltr)}}e.blocks=i,e.insertions=n,e.gaps=r}function Rp(e,t){return e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t]}function Dp(e){var t,i,n,r,s,o,a,c,l;for(t=[],i=[],s=null,r=e.length,n=0;n<r;n++)o=e.charAt(n),l=void 0,(l=o.charCodeAt(0))>=48&&l<=57?i.push(o):(a=o,c=Number.parseInt(i.join("")),i=[],null!==s&&s.ltr===a?s.len+=c:(s={len:c,ltr:a},t.push(s)));return t}function Tp(e){var t={};return e.forEach((function(e){var i=e.split(":");t[i[0]]=i[2]})),t}class Lp{chrAliasTable=new Map;constructor(e,t){this.config=e,this.genome=t,this.bamPath=e.url,this.isDataUri=$a(e.url),Bp.setReaderDefaults(this,e)}async readAlignments(e,t,i){if(!this.alignmentCache){let e;if(this.isDataUri){const t=function(e){const t=e.split(","),i=t[0].split(":")[1];let n=t[1];n=i.indexOf("base64")>=0?atob(n):decodeURI(n);const r=new Uint8Array(n.length);for(var s=0;s<n.length;s++)r[s]=n.charCodeAt(s);return r}(this.bamPath);e=gs(t.buffer)}else{e=gs(await Qs.loadArrayBuffer(this.bamPath,qa(this.config)))}this.alignmentCache=this.#v(e)}const n=await this.#y(e),r=this.alignmentCache.queryFeatures(n,t,i),s=new ep(e,t,i,this.config);for(let e of r)s.push(e);return s.finish(),s}#v(e){const t=[];return this.header=Bp.decodeBamHeader(e),Bp.decodeBamRecords(e,this.header.size,t,this.header.chrNames,void 0,0,Number.MAX_SAFE_INTEGER,this.filter),new Zs(t,this.genome)}async#y(e){const t=new Set(this.header.chrNames);if(t.has(e))return e;if(this.chrAliasTable.has(e))return this.chrAliasTable.get(e);if(this.genome){const i=await this.genome.getAliasRecord(e);let n;if(i){const e=Object.keys(i).filter((e=>"start"!==e&&"end"!==e)).map((e=>i[e])).filter((e=>t.has(e)));e.length>0&&(n=e[0])}return this.chrAliasTable.set(e,n),n}return e}}class zp{chrAliasTable=new Map;constructor(e,t){this.config=e,this.genome=t,this.bamPath=e.url,this.baiPath=e.indexURL,Bp.setReaderDefaults(this,e),this._blockLoader=new yh(e)}async readAlignments(e,t,i){const n=await this.#A(e),r=new ep(e,t,i,this.config);if(void 0===n)return r;{const e=(await this.getIndex()).chunksForRange(n,t,i);if(!e||0===e.length)return r;for(let s of e){const e=await this._blockLoader.getData(s.minv,s.maxv);if(Bp.decodeBamRecords(e,s.minv.offset,r,this.header.chrNames,n,t,i,this.filter))break}return r.finish(),r}}async#A(e){if(await this.getHeader(),this.chrAliasTable.has(e)&&void 0===(e=this.chrAliasTable.get(e)))return;let t=this.header.chrToIndex[e];if(void 0===t){const i=await this.genome.getAliasRecord(e);let n;if(i){const e=Object.keys(i).filter((e=>"start"!==e&&"end"!==e)).map((e=>i[e])).filter((e=>void 0!==this.header.chrToIndex[e]));e.length>0&&(n=e[0],t=this.header.chrToIndex[e[0]])}this.chrAliasTable.set(e,n)}return t}async getHeader(){if(!this.header){const e=this.genome,t=await this.getIndex();let i;if(t.firstBlockPosition){const e=qa(this.config,{range:{start:t.firstBlockPosition,size:26}}),n=ms(await Qs.loadArrayBuffer(this.bamPath,e));i=t.firstBlockPosition+n}else i=64e3;const n=qa(this.config,{range:{start:0,size:i}});this.header=await Bp.readHeader(this.bamPath,n,e)}return this.header}async getIndex(){return this.index||(this.index=await gh(this.baiPath,this.config)),this.index}async getChrIndex(){if(this.chrToIndex)return this.chrToIndex;{const e=await this.getHeader();return this.chrToIndex=e.chrToIndex,this.indexToChr=e.chrNames,this.chrNames=new Set(e.chrNames),this.chrToIndex}}}class Hp{constructor(e,t){this.config=e,this.genome=t;const i={};e.sources.sequences.forEach((function(n){const r=t?t.getChromosomeName(n):n;i[r]=function(e,t,i){const n={url:e.sources.url.replace("$CHR",i)};e.sources.indexURL&&(n.indexURL=e.sources.indexURL.replace("$CHR",i));const r=Object.assign(e,n);return new zp(r,t)}(e,t,n)})),this.bamReaders=i,Bp.setReaderDefaults(this,e)}async readAlignments(e,t,i){if(this.bamReaders.hasOwnProperty(e)){let n=this.bamReaders[e];return await n.readAlignments(e,t,i)}return new ep(e,t,i,this.config)}}const Pp=function(e,t){this.config=e,this.genome=t,Bp.setReaderDefaults(this,e)};function Op(){const e=this,t=this.genome;if(this.header)return Promise.resolve(this.header);{const i=this.config.url+"?file="+this.config.alignmentFile+"&options=-b,-H",n=qa(this.config);return Bp.readHeader(i,n,t).then((function(t){return e.header=t,t}))}}Pp.prototype.readAlignments=function(e,t,i){var n=this;return Op.call(n).then((function(r){var s,o;return s=r.chrAliasTable.hasOwnProperty(e)?r.chrAliasTable[e]:e,o=n.config.url+"?reference="+n.config.referenceFile+"&file="+n.config.alignmentFile+"&region="+s+":"+t+"-"+i,Qs.loadString(o,qa(n.config)).then((function(o){var a;return r.chrToIndex[s],a=new ep(e,t,i,n.config),Bp.decodeSamRecords(o,a,s,t,i,n.filter),a}))}))};class Up extends Rh{constructor(e,t){super(e,t),Bp.setReaderDefaults(this,e)}async readAlignments(e,t,i){if(!this.header){const e=gs((await this.readHeaderData()).buffer);this.header=Bp.decodeBamHeader(e,this.genome),this.chrAliasTable=new Map;for(let e of this.header.chrNames)this.chrAliasTable.set(e,this.genome.getChromosomeName(e))}let n=this.chrAliasTable.has(e)?this.chrAliasTable.get(e):e;const r=gs((await this.readData(n,t,i)).buffer);this.header=Bp.decodeBamHeader(r,this.genome);const s=this.header.chrToIndex[e],o=new ep(e,t,i,this.config);return Bp.decodeBamRecords(r,this.header.size,o,this.header.chrNames,s,t,i,this.filter),o.finish(),o}}
/*! For license information please see cram-bundle.js.LICENSE.txt */for(var qp=(()=>{var e={4923:function(e,t,i){var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(7430)),o=r(i(7392)),a=i(8712),c=i(5931),l=i(9747);function h(e,t){const[i,n,r,s,o,a]=t;e[i]||(e[i]=[]),e[i].push({start:n,span:r,containerStart:s,sliceStart:o,sliceBytes:a})}t.default=class{constructor(e){this.filehandle=(0,c.open)(e.url,e.path,e.filehandle),this._parseCache=new s.default({cache:new o.default({maxSize:1}),fill:(e,t)=>this.parseIndex()})}parseIndex(){const e={};return this.filehandle.readFile().then((e=>31===e[0]&&139===e[1]?(0,a.unzip)(e):e)).then((t=>{if(t.length>4&&21578050===t.readUInt32LE(0))throw new l.CramMalformedError("invalid .crai index file. note: file appears to be a .bai index. this is technically legal but please open a github issue if you need support");let i=[],n="";for(const r of t)if(r>=48&&r<=57||!n&&45===r)n+=String.fromCharCode(r);else if(9===r)i.push(Number.parseInt(n,10)),n="";else if(10===r)i.push(Number.parseInt(n,10)),n="",h(e,i),i=[];else if(13!==r&&32!==r)throw new l.CramMalformedError("invalid .crai index file");return n&&i.push(Number.parseInt(n,10)),6===i.length&&h(e,i),Object.entries(e).forEach((([t,i])=>{e[t]=i.sort(((e,t)=>e.start-t.start||e.span-t.span))})),e}))}getIndex(e={}){return this._parseCache.get("index",null,e.signal)}hasDataForReferenceSequence(e){return n(this,void 0,void 0,(function*(){return!!(yield this.getIndex())[e]}))}getEntriesForRange(e,t,i){return n(this,void 0,void 0,(function*(){const n=(yield this.getIndex())[e];if(!n)return[];const r=e=>{const n=e.start,r=e.start+e.span;return n>i?-1:r<=t?1:0},s=[];for(const e of n)0===r(e)&&s.push(e);return s}))}}},9508:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t){this.parameters=e,this.dataType=t}}},368:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(612);class a extends s.default{constructor(e,t){if(super(e,t),"int"!==this.dataType)throw new r.CramUnimplementedError(`${this.dataType} decoding not yet implemented by BETA codec`)}decode(e,t,i,n){return(0,o.getBits)(t.content,n.coreBlock,this.parameters.length)-this.parameters.offset}}t.default=a},8635:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(i(9508)),s=i(400);class o extends r.default{constructor(e,t,i){if(super(e,t),this.instantiateCodec=i,"byteArray"!==t)throw new TypeError(`byteArrayLength does not support data type ${t}`)}decode(e,t,i,n){const r=this._getLengthCodec().decode(e,t,i,n),s=this._getDataCodec(),o=new Uint8Array(r);for(let a=0;a<r;a+=1)o[a]=s.decode(e,t,i,n);return o}_getLengthCodec(){const e=this.parameters.lengthsEncoding;return this.instantiateCodec(e,"int")}_getDataCodec(){const e=this.parameters.valuesEncoding;return this.instantiateCodec(e,"byte")}}t.default=o,"_getLengthCodec _getDataCodec".split(" ").forEach((e=>(0,s.tinyMemoize)(o,e)))},4839:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(612);class a extends s.default{constructor(e,t){if(super(e,t),"byteArray"!==t)throw new TypeError(`byteArrayStop codec does not support data type ${t}`)}decode(e,t,i,n){const{blockContentId:s}=this.parameters,o=i[s];if(!o)throw new r.CramMalformedError(`no block found with content ID ${s}`);const a=n.externalBlocks.getCursor(s);return this._decodeByteArray(o,a)}_decodeByteArray(e,t){const i=e.content,{stopByte:n}=this.parameters,r=t.bytePosition;let s=t.bytePosition;for(;i[s]!==n&&s<i.length;){if(s===i.length)throw new o.CramBufferOverrunError("byteArrayStop reading beyond length of data buffer?");s+=1}return t.bytePosition=s+1,i.subarray(r,s)}}t.default=a},8153:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(400),a=i(612);class c extends s.default{constructor(e,t){if(super(e,t),"int"===this.dataType)this._decodeData=this._decodeInt;else{if("byte"!==this.dataType)throw new r.CramUnimplementedError(`${this.dataType} decoding not yet implemented by EXTERNAL codec`);this._decodeData=this._decodeByte}}decode(e,t,i,n){const{blockContentId:s}=this.parameters,o=i[s];if(!o)throw new r.CramMalformedError(`no block found with content ID ${s}}`);const a=n.externalBlocks.getCursor(s);return this._decodeData(o,a)}_decodeInt(e,t){const[i,n]=(0,o.parseItf8)(e.content,t.bytePosition);return t.bytePosition=t.bytePosition+n,i}_decodeByte(e,t){if(t.bytePosition>=e.content.length)throw new a.CramBufferOverrunError("attempted to read beyond end of block. this file seems truncated.");return e.content[t.bytePosition++]}}t.default=c},8185:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(612);class a extends s.default{constructor(e,t){if(super(e,t),"int"!==this.dataType)throw new r.CramUnimplementedError(`${this.dataType} decoding not yet implemented by GAMMA codec`)}decode(e,t,i,n){let r=1;for(;0===(0,o.getBits)(t.content,n.coreBlock,1);)r+=1;return((0,o.getBits)(t.content,n.coreBlock,r-1)|1<<r-1)-this.parameters.offset}}t.default=a},612:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CramBufferOverrunError=void 0,t.getBits=function(e,t,n){let r=0;if(t.bytePosition+(7-t.bitPosition+n)/8>e.length)throw new i("read error during decoding. the file seems to be truncated.");for(let i=n;i;i--)r<<=1,r|=e[t.bytePosition]>>t.bitPosition&1,t.bitPosition-=1,t.bitPosition<0&&(t.bytePosition+=1),t.bitPosition&=7;return r};class i extends Error{}t.CramBufferOverrunError=i},4341:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(612);class a extends s.default{constructor(e,t){if(super(e,t),this.codes={},this.codeBook={},this.sortedCodes=[],this.sortedValuesByBitCode=[],this.sortedBitCodes=[],this.sortedBitLengthsByBitCode=[],this.bitCodeToValue=[],!["byte","int"].includes(this.dataType))throw new TypeError(`${this.dataType} decoding not yet implemented by HUFFMAN_INT codec`);this.buildCodeBook(),this.buildCodes(),this.buildCaches(),0===this.sortedCodes[0].bitLength&&(this._decode=this._decodeZeroLengthCode)}buildCodeBook(){let e=new Array(this.parameters.numCodes);for(let t=0;t<this.parameters.numCodes;t+=1)e[t]={symbol:this.parameters.symbols[t],bitLength:this.parameters.bitLengths[t]};e=e.sort(((e,t)=>e.bitLength-t.bitLength||e.symbol-t.symbol)),this.codeBook={},e.forEach((e=>{this.codeBook[e.bitLength]||(this.codeBook[e.bitLength]=[]),this.codeBook[e.bitLength].push(e.symbol)}))}buildCodes(){this.codes={};let e=0,t=-1;Object.entries(this.codeBook).forEach((([i,n])=>{const s=parseInt(i,10);n.forEach((i=>{const n={bitLength:s,value:i,bitCode:0};t+=1;const o=s-e;if(t<<=o,n.bitCode=t,e+=o,function(e){let t=e-(e>>1)&1431655765;return t=(858993459&t)+(t>>2&858993459),16843009*(t+(t>>4)&252645135)>>24}(t)>s)throw new r.CramMalformedError("Symbol out of range");this.codes[i]=n}))}))}buildCaches(){this.sortedCodes=Object.values(this.codes).sort(((e,t)=>e.bitLength-t.bitLength||e.bitCode-t.bitCode)),this.sortedValuesByBitCode=this.sortedCodes.map((e=>e.value)),this.sortedBitCodes=this.sortedCodes.map((e=>e.bitCode)),this.sortedBitLengthsByBitCode=this.sortedCodes.map((e=>e.bitLength));const e=Math.max(...this.sortedBitCodes);this.bitCodeToValue=new Array(e+1).fill(-1);for(let e=0;e<this.sortedBitCodes.length;e+=1)this.bitCodeToValue[this.sortedCodes[e].bitCode]=e}decode(e,t,i,n){return this._decode(e,t,n.coreBlock)}_decodeZeroLengthCode(){return this.sortedCodes[0].value}_decode(e,t,i){const n=t.content;let s=0,a=0;for(let e=0;e<this.sortedCodes.length;e+=1){const t=this.sortedCodes[e].bitLength;a<<=t-s,a|=(0,o.getBits)(n,i,t-s),s=t;{const i=this.bitCodeToValue[a];if(i>-1&&this.sortedBitLengthsByBitCode[i]===t)return this.sortedValuesByBitCode[i];for(let i=e;this.sortedCodes[i+1].bitLength===t&&i<this.sortedCodes.length;i+=1)e+=1}}throw new r.CramMalformedError("Huffman symbol not found.")}}t.default=a},6524:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.instantiateCodec=function e(t,i){const n=(s="ignore"===i?0:t.codecId,u[s]);var s;if(!n)throw new r.CramUnimplementedError(`no codec implemented for codec ID ${t.codecId}`);return new n(t.parameters,i,e)};const r=i(9747),s=n(i(4341)),o=n(i(8153)),a=n(i(4839)),c=n(i(8635)),l=n(i(368)),h=n(i(8185)),d=n(i(99)),u={1:o.default,3:s.default,4:c.default,5:a.default,6:l.default,7:d.default,9:h.default}},99:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(9747),s=n(i(9508)),o=i(612);class a extends s.default{constructor(e,t){if(super(e,t),"int"!==this.dataType)throw new r.CramUnimplementedError(`${this.dataType} decoding not yet implemented by SUBEXP codec`)}decode(e,t,i,n){let r,s,a=0;for(;(0,o.getBits)(t.content,n.coreBlock,1);)a+=1;return 0===a?(r=this.parameters.K,s=(0,o.getBits)(t.content,n.coreBlock,r)):(r=a+this.parameters.K-1,s=1<<r|(0,o.getBits)(t.content,n.coreBlock,r)),s-this.parameters.offset}}t.default=a},7295:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default={CRAM_FLAG_PRESERVE_QUAL_SCORES:1,CRAM_FLAG_DETACHED:2,CRAM_FLAG_MATE_DOWNSTREAM:4,CRAM_FLAG_NO_SEQ:8,CRAM_FLAG_MASK:15,CRAM_M_REVERSE:1,CRAM_M_UNMAP:2,BAM_FPAIRED:1,BAM_FPROPER_PAIR:2,BAM_FUNMAP:4,BAM_FMUNMAP:8,BAM_FREVERSE:16,BAM_FMREVERSE:32,BAM_FREAD1:64,BAM_FREAD2:128,BAM_FSECONDARY:256,BAM_FQCFAIL:512,BAM_FDUP:1024,BAM_FSUPPLEMENTARY:2048,BAM_CMATCH:0,BAM_CINS:1,BAM_CDEL:2,BAM_CREF_SKIP:3,BAM_CSOFT_CLIP:4,BAM_CHARD_CLIP:5,BAM_CPAD:6,BAM_CEQUAL:7,BAM_CDIFF:8,BAM_CBACK:9,BAM_CIGAR_STR:"MIDNSHP:XB",BAM_CIGAR_SHIFT:4,BAM_CIGAR_MASK:15,BAM_CIGAR_TYPE:246183}},7219:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(6524),r=i(9747),s={BF:"int",CF:"int",RI:"int",RL:"int",AP:"int",RG:"int",MF:"int",NS:"int",NP:"int",TS:"int",NF:"int",TC:"byte",TN:"int",FN:"int",FC:"byte",FP:"int",BS:"byte",IN:"byteArray",SC:"byteArray",DL:"int",BA:"byte",BB:"byteArray",RS:"int",PD:"int",HC:"int",MQ:"int",RN:"byteArray",QS:"byte",QQ:"byteArray",TL:"int"};t.default=class{constructor(e){this.dataSeriesCodecCache={},this.tagCodecCache={},this.tagEncoding={},this.readNamesIncluded=e.preservation.RN,this.APdelta=e.preservation.AP,this.referenceRequired=!!e.preservation.RR,this.tagIdsDictionary=e.preservation.TD,this.substitutionMatrix=function(e){const t=new Array(5);for(let e=0;e<5;e+=1)t[e]=new Array(4);return t[0][e[0]>>6&3]="C",t[0][e[0]>>4&3]="G",t[0][e[0]>>2&3]="T",t[0][3&e[0]]="N",t[1][e[1]>>6&3]="A",t[1][e[1]>>4&3]="G",t[1][e[1]>>2&3]="T",t[1][3&e[1]]="N",t[2][e[2]>>6&3]="A",t[2][e[2]>>4&3]="C",t[2][e[2]>>2&3]="T",t[2][3&e[2]]="N",t[3][e[3]>>6&3]="A",t[3][e[3]>>4&3]="C",t[3][e[3]>>2&3]="G",t[3][3&e[3]]="N",t[4][e[4]>>6&3]="A",t[4][e[4]>>4&3]="C",t[4][e[4]>>2&3]="G",t[4][3&e[4]]="T",t}(e.preservation.SM),this.dataSeriesEncoding=e.dataSeriesEncoding,this.tagEncoding=e.tagEncoding}getCodecForTag(e){if(!this.tagCodecCache[e]){const t=this.tagEncoding[e];t&&(this.tagCodecCache[e]=(0,n.instantiateCodec)(t,"byteArray"))}return this.tagCodecCache[e]}getTagNames(e){return this.tagIdsDictionary[e]}getCodecForDataSeries(e){let t=this.dataSeriesCodecCache[e];if(void 0===t){const i=this.dataSeriesEncoding[e];if(i){const o=s[e];if(!o)throw new r.CramMalformedError(`data series name ${e} not defined in file compression header`);t=(0,n.instantiateCodec)(i,o),this.dataSeriesCodecCache[e]=t}}return t}toJSON(){const e={};return Object.keys(this).forEach((t=>{t.endsWith("Cache")||(e[t]=this[t])})),e}}},78:function(e,t,i){var n=i(8287).Buffer,r=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(9747),a=i(400),c=s(i(6771)),l=s(i(7219)),h=i(3165);class d{constructor(e,t){this.file=e,this.filePosition=t}getHeader(){return this._readContainerHeader(this.filePosition)}getCompressionHeaderBlock(){return r(this,void 0,void 0,(function*(){const e=yield this.getHeader();if(!(null==e?void 0:e.numRecords))return null;const{majorVersion:t}=yield this.file.getDefinition(),i=(0,h.getSectionParsers)(t),n=yield this.getFirstBlock();if(void 0===n)return;if("COMPRESSION_HEADER"!==n.contentType)throw new o.CramMalformedError(`invalid content type ${n.contentType} in what is supposed to be the compression header block`);const r=(0,a.parseItem)(n.content,i.cramCompressionHeader.parser,0,n.contentPosition);return Object.assign(Object.assign({},n),{parsedContent:r})}))}getFirstBlock(){return r(this,void 0,void 0,(function*(){const e=yield this.getHeader();if(e)return this.file.readBlock(e._endPosition)}))}getCompressionScheme(){return r(this,void 0,void 0,(function*(){const e=yield this.getCompressionHeaderBlock();if(e)return new l.default(e.parsedContent)}))}getSlice(e,t){return new c.default(this,e,t)}_readContainerHeader(e){return r(this,void 0,void 0,(function*(){const{majorVersion:t}=yield this.file.getDefinition(),i=(0,h.getSectionParsers)(t),{cramContainerHeader1:r,cramContainerHeader2:s}=i,{size:o}=yield this.file.stat();if(e>=o)return void console.warn(`position:${e}>=fileSize:${o} in cram container`);const c=n.allocUnsafe(r.maxLength);yield this.file.read(c,0,r.maxLength,e);const l=(0,a.parseItem)(c,r.parser),d=(0,a.itf8Size)(l.numLandmarks);if(e+l.length>=o)return void console.warn(`container header at ${e} indicates that the container has length ${l.length}, which extends beyond the length of the file. Skipping this container.`);const u=n.allocUnsafe(s.maxLength(l.numLandmarks));yield this.file.read(u,0,s.maxLength(l.numLandmarks),e+l._size-d);const f=(0,a.parseItem)(u,s.parser);return this.file.validateChecksums&&void 0!==f.crc32&&(yield this.file.checkCrc32(e,l._size+f._size-d-4,f.crc32,`container header beginning at position ${e}`)),Object.assign(l,f,{_size:l._size+f._size-d,_endPosition:l._size+f._size-d+e})}))}}t.default=d,"getHeader getCompressionHeaderBlock getCompressionScheme".split(" ").forEach((e=>(0,a.tinyMemoize)(d,e)))},6794:function(e,t,i){var n=i(8287).Buffer,r=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(8712),a=s(i(4132)),c=s(i(7392)),l=s(i(6960)),h=s(i(235)),d=i(1307),u=i(9747),f=s(i(9989)),p=i(3165),g=s(i(78)),m=i(5931),w=i(400),b=i(5417);class F{constructor(e){var t;if(this.file=(0,m.open)(e.url,e.path,e.filehandle),this.validateChecksums=!0,this.fetchReferenceSequenceCallback=e.seqFetch,this.options={checkSequenceMD5:e.checkSequenceMD5,cacheSize:null!==(t=e.cacheSize)&&void 0!==t?t:2e4},this.featureCache=new c.default({maxSize:this.options.cacheSize}),function(){const e=new Uint32Array([287454020]),t=new Uint8Array(e.buffer);return 68===t[0]?0:17===t[0]?1:2}()>0)throw new Error("Detected big-endian machine, may be unable to run")}read(e,t,i,n){return this.file.read(e,t,i,n)}stat(){return this.file.stat()}getDefinition(){return r(this,void 0,void 0,(function*(){const{maxLength:e,parser:t}=(0,p.cramFileDefinition)(),i=n.allocUnsafe(e);yield this.file.read(i,0,e,0);const r=t(i).value;if(2!==r.majorVersion&&3!==r.majorVersion)throw new u.CramUnimplementedError(`CRAM version ${r.majorVersion} not supported`);return r}))}getSamHeader(){return r(this,void 0,void 0,(function*(){const e=yield this.getContainerById(0);if(!e)throw new u.CramMalformedError("file contains no containers");const t=yield e.getFirstBlock();if(void 0===t)return(0,b.parseHeaderText)("");const i=t.content,n=i.readInt32LE(0),r=i.toString("utf8",4,4+n);return this.header=r,(0,b.parseHeaderText)(r)}))}getHeaderText(){return r(this,void 0,void 0,(function*(){return yield this.getSamHeader(),this.header}))}getContainerById(e){return r(this,void 0,void 0,(function*(){const{majorVersion:t}=yield this.getDefinition(),i=(0,p.getSectionParsers)(t);let n=i.cramFileDefinition.maxLength;const{size:r}=yield this.file.stat(),{cramContainerHeader1:s}=i;let o;for(let t=0;t<=e;t++){if(n+s.maxLength+8>=r)return;o=this.getContainerAtPosition(n);const i=yield o.getHeader();if(!i)throw new u.CramMalformedError(`container ${e} not found in file`);if(0===t){n=i._endPosition;for(let e=0;e<i.numBlocks;e++){const e=yield this.readBlock(n);if(void 0===e)return;n=e._endPosition}}else n+=i._size+i.length}return o}))}checkCrc32(e,t,i,s){return r(this,void 0,void 0,(function*(){const r=n.allocUnsafe(t);yield this.file.read(r,0,t,e);const o=a.default.unsigned(r);if(o!==i)throw new u.CramMalformedError(`crc mismatch in ${s}: recorded CRC32 = ${i}, but calculated CRC32 = ${o}`)}))}containerCount(){return r(this,void 0,void 0,(function*(){const{majorVersion:e}=yield this.getDefinition(),t=(0,p.getSectionParsers)(e),{size:i}=yield this.file.stat(),{cramContainerHeader1:n}=t;let r=0,s=t.cramFileDefinition.maxLength;for(;s+n.maxLength+8<i;){const e=yield this.getContainerAtPosition(s).getHeader();if(!e)break;if(0===r){s=e._endPosition;for(let t=0;t<e.numBlocks;t++){const e=yield this.readBlock(s);if(void 0===e)return;s=e._endPosition}}else s+=e._size+e.length;r+=1}return r}))}getContainerAtPosition(e){return new g.default(this,e)}readBlockHeader(e){return r(this,void 0,void 0,(function*(){const{majorVersion:t}=yield this.getDefinition(),i=(0,p.getSectionParsers)(t),{cramBlockHeader:r}=i,{size:s}=yield this.file.stat();if(e+r.maxLength>=s)return;const o=n.allocUnsafe(r.maxLength);return yield this.file.read(o,0,r.maxLength,e),(0,w.parseItem)(o,r.parser,0,e)}))}_parseSection(e,t){return r(this,arguments,void 0,(function*(e,t,i=e.maxLength,r=void 0){let s;if(r)s=r;else{const{size:e}=yield this.file.stat();if(t+i>=e)return;s=n.allocUnsafe(i),yield this.file.read(s,0,i,t)}const o=(0,w.parseItem)(s,e.parser,0,t);if(o._size!==i)throw new u.CramMalformedError(`section read error: requested size ${i} does not equal parsed size ${o._size}`);return o}))}_uncompress(e,t,i){return r(this,void 0,void 0,(function*(){if("gzip"===e)(0,o.unzip)(t).copy(i);else if("bzip2"===e){const e=h.default.array(t);let r,s=h.default.header(e),o=0;do{r=h.default.decompress(e,s),-1!=r&&(n.from(r).copy(i,o),o+=r.length,s-=r.length)}while(-1!=r)}else if("lzma"===e){const e=new Response(new d.XzReadableStream((r=t,new ReadableStream({start(e){e.enqueue(r),e.close()}}))));n.from(yield e.arrayBuffer()).copy(i)}else if("rans"===e)(0,f.default)(t,i);else if("rans4x16"===e)l.default.r4x16_uncompress(t,i);else if("arith"===e)l.default.arith_uncompress(t,i);else if("fqzcomp"===e)l.default.fqzcomp_uncompress(t,i);else{if("tok3"!==e)throw new u.CramUnimplementedError(`${e} decompression not yet implemented`);l.default.tok3_uncompress(t,i)}var r}))}readBlock(e){return r(this,void 0,void 0,(function*(){const{majorVersion:t}=yield this.getDefinition(),i=(0,p.getSectionParsers)(t),r=yield this.readBlockHeader(e);if(void 0===r)return;const s=r._endPosition,o=n.allocUnsafe(r.uncompressedSize),a=Object.assign(Object.assign({},r),{_endPosition:s,contentPosition:s,content:o});if("raw"!==r.compressionMethod){const e=n.allocUnsafe(r.compressedSize);yield this.read(e,0,r.compressedSize,s),yield this._uncompress(r.compressionMethod,e,o)}else yield this.read(o,0,r.uncompressedSize,s);if(t>=3){const t=yield this._parseSection(i.cramBlockCrc32,s+r.compressedSize);if(void 0===t)return;a.crc32=t.crc32,this.validateChecksums&&(yield this.checkCrc32(e,r._size+r.compressedSize,t.crc32,"block data")),a._endPosition=t._endPosition,a._size=a.compressedSize+i.cramBlockCrc32.maxLength}else a._endPosition=s+a.compressedSize,a._size=a.compressedSize;return a}))}}t.default=F,"getDefinition getSectionParsers getSamHeader".split(" ").forEach((e=>(0,w.tinyMemoize)(F,e)))},7390:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.CramRecord=void 0;var r=i(8401);Object.defineProperty(t,"CramRecord",{enumerable:!0,get:function(){return n(r).default}});var s=i(6794);Object.defineProperty(t,"default",{enumerable:!0,get:function(){return n(s).default}})},8401:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MateFlagsDecoder=t.CramFlagsDecoder=t.BamFlagsDecoder=t.MateFlags=t.CramFlags=t.BamFlags=void 0;const r=n(i(7295)),s={a:0,A:0,c:1,C:1,g:2,G:2,t:3,T:3,n:4,N:4};function o(e){const t={};for(const[i,n]of e)t["is"+n]=e=>!!(e&i),t["set"+n]=e=>e|i;return t}t.BamFlags=[[1,"Paired"],[2,"ProperlyPaired"],[4,"SegmentUnmapped"],[8,"MateUnmapped"],[16,"ReverseComplemented"],[32,"MateReverseComplemented"],[64,"Read1"],[128,"Read2"],[256,"Secondary"],[512,"FailedQc"],[1024,"Duplicate"],[2048,"Supplementary"]],t.CramFlags=[[1,"PreservingQualityScores"],[2,"Detached"],[4,"WithMateDownstream"],[8,"DecodeSequenceAsStar"]],t.MateFlags=[[1,"OnNegativeStrand"],[2,"Unmapped"]],t.BamFlagsDecoder=o(t.BamFlags),t.CramFlagsDecoder=o(t.CramFlags),t.MateFlagsDecoder=o(t.MateFlags),t.default=class{constructor({flags:e,cramFlags:t,readLength:i,mappingQuality:n,lengthOnRef:r,qualityScores:s,mateRecordNumber:o,readBases:a,readFeatures:c,mateToUse:l,readGroupId:h,readName:d,sequenceId:u,uniqueId:f,templateSize:p,alignmentStart:g,tags:m}){this.flags=e,this.cramFlags=t,this.readLength=i,this.mappingQuality=n,this.lengthOnRef=r,this.qualityScores=s,a&&(this.readBases=a),this.readGroupId=h,this.readName=d,this.sequenceId=u,this.uniqueId=f,this.templateSize=p,this.alignmentStart=g,this.tags=m,c&&(this.readFeatures=c),l&&(this.mate={flags:l.mateFlags,readName:l.mateReadName,sequenceId:l.mateSequenceId,alignmentStart:l.mateAlignmentStart}),o&&(this.mateRecordNumber=o)}isPaired(){return!!(this.flags&r.default.BAM_FPAIRED)}isProperlyPaired(){return!!(this.flags&r.default.BAM_FPROPER_PAIR)}isSegmentUnmapped(){return!!(this.flags&r.default.BAM_FUNMAP)}isMateUnmapped(){return!!(this.flags&r.default.BAM_FMUNMAP)}isReverseComplemented(){return!!(this.flags&r.default.BAM_FREVERSE)}isMateReverseComplemented(){return!!(this.flags&r.default.BAM_FMREVERSE)}isRead1(){return!!(this.flags&r.default.BAM_FREAD1)}isRead2(){return!!(this.flags&r.default.BAM_FREAD2)}isSecondary(){return!!(this.flags&r.default.BAM_FSECONDARY)}isFailedQc(){return!!(this.flags&r.default.BAM_FQCFAIL)}isDuplicate(){return!!(this.flags&r.default.BAM_FDUP)}isSupplementary(){return!!(this.flags&r.default.BAM_FSUPPLEMENTARY)}isDetached(){return!!(this.cramFlags&r.default.CRAM_FLAG_DETACHED)}hasMateDownStream(){return!!(this.cramFlags&r.default.CRAM_FLAG_MATE_DOWNSTREAM)}isPreservingQualityScores(){return!!(this.cramFlags&r.default.CRAM_FLAG_PRESERVE_QUAL_SCORES)}isUnknownBases(){return!!(this.cramFlags&r.default.CRAM_FLAG_NO_SEQ)}getReadBases(){if(!this.readBases&&this._refRegion){const e=function(e,t){if(!e.lengthOnRef&&!e.readLength)return null;if(e.isUnknownBases())return null;const i=e.alignmentStart-t.start;if(!e.readFeatures)return t.seq.slice(i,i+(e.lengthOnRef||0)).toUpperCase();let n="",r=i,s=0;for(;n.length<e.readLength;)if(s<e.readFeatures.length){const i=e.readFeatures[s];if("Q"===i.code||"q"===i.code)s+=1;else if(i.pos===n.length+1)if(s+=1,"b"===i.code){const e=i.data;n+=e,r+=e.length}else"B"===i.code?(n+=i.data[0],r+=1):"X"===i.code?(n+=i.sub,r+=1):"I"===i.code?n+=i.data:"D"===i.code?r+=i.data:"i"===i.code?n+=i.data:"N"===i.code?r+=i.data:"S"===i.code?n+=i.data:"P"===i.code||i.code;else if(s<e.readFeatures.length){const i=t.seq.slice(r,r+e.readFeatures[s].pos-n.length-1);n+=i,r+=i.length}}else{const i=t.seq.slice(r,r+e.readLength-n.length);n+=i,r+=i.length}return n.toUpperCase()}(this,this._refRegion);e&&(this.readBases=e)}return this.readBases}getPairOrientation(){if(!this.isSegmentUnmapped()&&this.isPaired()&&!this.isMateUnmapped()&&this.mate&&this.sequenceId===this.mate.sequenceId){const e=this.isReverseComplemented()?"R":"F",t=this.isMateReverseComplemented()?"R":"F";let i=" ",n=" ";this.isRead1()?(i="1",n="2"):this.isRead2()&&(i="2",n="1");const r=[];let s=this.templateLength||this.templateSize;if(void 0===s)throw new Error("One of templateSize and templateLength must be set");return this.alignmentStart>this.mate.alignmentStart&&s>0&&(s=-s),s>0?(r[0]=e,r[1]=i,r[2]=t,r[3]=n):(r[2]=e,r[3]=i,r[0]=t,r[1]=n),r.join("")}return null}addReferenceSequence(e,t){this.readFeatures&&this.readFeatures.forEach((i=>{"X"===i.code&&function(e,t,i,n){if(!t)return;const r=n.refPos-t.start,o=t.seq.charAt(r);o&&(n.ref=o);let a=s[o];void 0===a&&(a=4);const c=i.substitutionMatrix[a][n.data];c&&(n.sub=c)}(0,e,t,i)})),!this.readBases&&e.start<=this.alignmentStart&&e.end>=this.alignmentStart+(this.lengthOnRef||this.readLength)-1&&(this._refRegion=e)}toJSON(){const e={};return Object.keys(this).forEach((t=>{t.startsWith("_")||(e[t]=this[t])})),e.readBases=this.getReadBases(),e}}},3165:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.cramFileDefinition=r,t.cramBlockHeader=s,t.cramBlockCrc32=o,t.cramTagDictionary=c,t.cramPreservationMap=l,t.isMappedSliceHeader=function(e){return"number"==typeof e.refSeqId},t.getSectionParsers=function(e){return{cramFileDefinition:r(),cramBlockHeader:s(),cramBlockCrc32:o(),cramDataSeriesEncodingMap:p(),cramTagEncodingMap:g(),cramCompressionHeader:{parser:(e,t)=>{const{value:i,offset:n}=l().parser(e,t);t=n;const{value:r,offset:s}=p().parser(e,t);t=s;const{value:o,offset:a}=g().parser(e,t);return t=a,{value:{dataSeriesEncoding:h(r),preservation:h(i),tagEncoding:h(o)},offset:t}}},cramEncoding:{parser:(e,t)=>f(e,t)},cramUnmappedSliceHeader:d(e),cramMappedSliceHeader:u(e),cramContainerHeader1:m(e),cramContainerHeader2:w(e)}};const n=i(400);function r(){return{parser:(e,t=0)=>{const i=e,n=new DataView(i.buffer,i.byteOffset,i.length);let r=0;const s=e.subarray(r,r+4).toString();r+=4;const o=n.getUint8(r);r+=1;const a=n.getUint8(r);r+=1;const c=i.subarray(r,r+20).toString().replaceAll("\0","");return r+=20,{value:{magic:s,majorVersion:o,minorVersion:a,fileId:c},offset:r}},maxLength:26}}function s(){return{parser:(e,t=0)=>{const i=e,r=new DataView(i.buffer,i.byteOffset,i.length);let s=0;const o=r.getUint8(s),a=["raw","gzip","bzip2","lzma","rans","rans4x16","arith","fqzcomp","tok3"][o];if(!a)throw new Error(`compression method number ${o} not implemented`);s+=1;const c=r.getUint8(s),l=["FILE_HEADER","COMPRESSION_HEADER","MAPPED_SLICE_HEADER","UNMAPPED_SLICE_HEADER","EXTERNAL_DATA","CORE_DATA"][c];if(!l)throw new Error(`invalid block content type id ${c}`);s+=1;const[h,d]=(0,n.parseItf8)(e,s);s+=d;const[u,f]=(0,n.parseItf8)(e,s);s+=f;const[p,g]=(0,n.parseItf8)(e,s);return s+=g,{offset:s,value:{uncompressedSize:p,compressedSize:u,contentId:h,contentType:l,compressionMethod:a}}},maxLength:17}}function o(){return{parser:(e,t)=>{const i=e,n=new DataView(i.buffer,i.byteOffset,i.length).getUint32(t,!0);return{offset:t+=4,value:{crc32:n}}},maxLength:4}}function a(e,t,i){const n=e.toString("utf8",t,i),r=[];for(let e=0;e<n.length;e+=3)r.push(n.slice(e,e+3));return r}function c(){return{parser:(e,t)=>{const[i,r]=(0,n.parseItf8)(e,t);t+=r;const s=e.subarray(t,t+i);t+=i;const o=[];let c=0,l=0;for(;l<s.length;l++)s[l]||(o.push(a(s,c,l)),c=l+1);return l>c&&o.push(a(s,c,l)),{value:{size:i,ents:o},offset:t}}}}function l(){return{parser:(e,t)=>{const i=e,r=new DataView(i.buffer,i.byteOffset,i.length),[s,o]=(0,n.parseItf8)(e,t);t+=o;const[a,l]=(0,n.parseItf8)(e,t);t+=l;const h=[];for(let i=0;i<a;i++){const i=String.fromCharCode(e[t])+String.fromCharCode(e[t+1]);if(t+=2,"MI"===i||"UI"===i||"PI"===i||"RN"===i||"AP"===i||"RR"===i)h.push({key:i,value:!!r.getUint8(t)}),t+=1;else if("SM"===i)h.push({key:i,value:[r.getUint8(t),r.getUint8(t+1),r.getUint8(t+2),r.getUint8(t+3),r.getUint8(t+4)]}),t+=5;else{if("TD"!==i)throw new Error(`unknown key ${i}`);{const{offset:n,value:r}=c().parser(e,t);h.push({key:i,value:r.ents}),t=n}}}return{value:{mapSize:s,mapCount:a,ents:h},offset:t}}}}function h(e){const t={};for(const{key:i,value:n}of e.ents)t[i]&&console.warn(`duplicate key ${i} in map`),t[i]=n;return t}function d(e){return{parser:(t,i)=>{const[r,s]=(0,n.parseItf8)(t,i);i+=s;let o=0;if(e>=3){const[e,r]=(0,n.parseLtf8)(t,i);i+=r,o=e}else if(2===e){const[e,r]=(0,n.parseItf8)(t,i);i+=r,o=e}else console.warn("recordCounter=0");const[a,c]=(0,n.parseItf8)(t,i);i+=c;const[l,h]=(0,n.parseItf8)(t,i);i+=h;const d=[];for(let e=0;e<l;e++){const[e,r]=(0,n.parseItf8)(t,i);i+=r,d.push(e)}let u;return e>=2&&(u=[...t.subarray(i,i+16)],i+=16),{value:{recordCounter:o,md5:u,contentIds:d,numContentIds:l,numBlocks:a,numRecords:r},offset:i}},maxLength:e=>40+5*e}}function u(e){return{parser:(t,i)=>{const[r,s]=(0,n.parseItf8)(t,i);i+=s;const[o,a]=(0,n.parseItf8)(t,i);i+=a;const[c,l]=(0,n.parseItf8)(t,i);i+=l;const[h,d]=(0,n.parseItf8)(t,i);i+=d;let u=0;if(e>=3){const[e,r]=(0,n.parseLtf8)(t,i);i+=r,u=e}else if(2===e){const[e,r]=(0,n.parseItf8)(t,i);i+=r,u=e}else console.warn("majorVersion is <2, recordCounter set to 0");const[f,p]=(0,n.parseItf8)(t,i);i+=p;const[g,m]=(0,n.parseItf8)(t,i);i+=m;const w=[];for(let e=0;e<g;e++){const[e,r]=(0,n.parseItf8)(t,i);i+=r,w.push(e)}const[b,F]=(0,n.parseItf8)(t,i);let v;return i+=F,e>=2&&(v=[...t.subarray(i,i+16)],i+=16),{value:{md5:v,numBlocks:f,numRecords:h,numContentIds:g,refSeqSpan:c,refSeqId:r,refSeqStart:o,recordCounter:u,refBaseBlockId:b,contentIds:w},offset:i}},maxLength:e=>60+5*e}}function f(e,t){const i=e,r=new DataView(i.buffer,i.byteOffset,i.length),[s,o]=(0,n.parseItf8)(e,t);t+=o;const[a,c]=(0,n.parseItf8)(e,t);t+=c;const l={};if(0===s);else if(1===s){const[i,r]=(0,n.parseItf8)(e,t);l.blockContentId=i,t+=r}else if(2===s){const[i,r]=(0,n.parseItf8)(e,t);l.offset=i,t+=r;const[s,o]=(0,n.parseItf8)(e,t);l.M=s,t+=o}else if(3===s){const i=(0,n.parseItf8)(e,t),r=i[0];t+=i[1];const s=[];for(let i=0;i<r;i++){const i=(0,n.parseItf8)(e,t);s.push(i[0]),t+=i[1]}l.symbols=s;const o=(0,n.parseItf8)(e,t),a=i[0];l.numLengths=a,l.numCodes=r,l.numLengths=a,t+=o[1];const c=[];for(let i=0;i<a;i++){const i=(0,n.parseItf8)(e,t);t+=i[1],c.push(i[0])}l.bitLengths=c}else if(4===s){const{value:i,offset:n}=f(e,t);l.lengthsEncoding=i,t=n;const{value:r,offset:s}=f(e,t);l.valuesEncoding=r,t=s}else if(5===s){l.stopByte=r.getUint8(t),t+=1;const[i,s]=(0,n.parseItf8)(e,t);l.blockContentId=i,t+=s}else if(6===s){const[i,r]=(0,n.parseItf8)(e,t);l.offset=i,t+=r;const[s,o]=(0,n.parseItf8)(e,t);l.length=s,t+=o}else if(7===s){const[i,r]=(0,n.parseItf8)(e,t);l.offset=i,t+=r;const[s,o]=(0,n.parseItf8)(e,t);l.K=s,t+=o}else if(8===s){const[i,r]=(0,n.parseItf8)(e,t);l.offset=i,t+=r;const[s,o]=(0,n.parseItf8)(e,t);l.log2m=s,t+=o}else{if(9!==s)throw new Error(`unknown codecId ${s}`);{const[i,r]=(0,n.parseItf8)(e,t);l.offset=i,t+=r}}return{value:{codecId:s,parametersBytes:a,parameters:l},offset:t}}function p(){return{parser:(e,t)=>{const[i,r]=(0,n.parseItf8)(e,t);t+=r;const[s,o]=(0,n.parseItf8)(e,t);t+=o;const a=[];for(let i=0;i<s;i++){const i=String.fromCharCode(e[t])+String.fromCharCode(e[t+1]);t+=2;const{value:n,offset:r}=f(e,t);t=r,a.push({key:i,value:n})}return{value:{mapSize:i,ents:a,mapCount:s},offset:t}}}}function g(){return{parser:(e,t)=>{const[i,r]=(0,n.parseItf8)(e,t);t+=r;const[s,o]=(0,n.parseItf8)(e,t);t+=o;const a=[];for(let i=0;i<s;i++){const[i,r]=(0,n.parseItf8)(e,t);t+=r;const s=String.fromCharCode(i>>16&255)+String.fromCharCode(i>>8&255)+String.fromCharCode(255&i),{value:o,offset:c}=f(e,t);t=c,a.push({key:s,value:o})}return{value:{mapSize:i,ents:a,mapCount:s},offset:t}}}}function m(e){return{maxLength:52,parser:(t,i)=>{const r=t,s=new DataView(r.buffer,r.byteOffset,r.length).getInt32(i,!0);i+=4;const[o,a]=(0,n.parseItf8)(t,i);i+=a;const[c,l]=(0,n.parseItf8)(t,i);i+=l;const[h,d]=(0,n.parseItf8)(t,i);i+=d;const[u,f]=(0,n.parseItf8)(t,i);i+=f;let p,g=0;if(e>=3){const[e,r]=(0,n.parseLtf8)(t,i);g=e,i+=r}else if(2===e){const[e,r]=(0,n.parseItf8)(t,i);g=e,i+=r}else console.warn("setting recordCounter=0");if(e>1){const[e,r]=(0,n.parseLtf8)(t,i);p=e,i+=r}const[m,w]=(0,n.parseItf8)(t,i);i+=w;const[b,F]=(0,n.parseItf8)(t,i);return{value:{length:s,refSeqId:o,refSeqStart:c,alignmentSpan:h,numBlocks:m,numLandmarks:b,numBases:p,recordCounter:g,numRecords:u},offset:i+=F}}}}function w(e){return{parser:(t,i)=>{const r=t,s=new DataView(r.buffer,r.byteOffset,r.length),[o,a]=(0,n.parseItf8)(t,i);i+=a;const c=[];for(let e=0;e<o;e++){const[e,r]=(0,n.parseItf8)(t,i);i+=r,c.push(e)}let l;return e>=3&&(l=s.getUint32(i,!0),i+=4),{value:Object.assign(Object.assign({},void 0===l?{}:{crc32:l}),{numLandmarks:o,landmarks:c}),offset:i}},maxLength:e=>5+5*e+4}}},6484:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,n,r,h,d,u,f){let p=t("BF");const g=t("CF");if(!(0,a.isMappedSliceHeader)(n.parsedContent))throw new Error("slice header not mapped");const m=u>1&&-2===n.parsedContent.refSeqId?t("RI"):n.parsedContent.refSeqId,w=t("RL");let b=t("AP");i.APdelta&&(b+=d.lastAlignmentStart),d.lastAlignmentStart=b;const F=t("RG");let v,y,A,C;if(i.readNamesIncluded&&(v=c(t("RN"))),o.CramFlagsDecoder.isDetached(g)){const e=t("MF");let n;i.readNamesIncluded||(n=c(t("RN")),v=n);const r=t("NS"),s=t("NP");(e||r>-1)&&(y={mateFlags:e,mateSequenceId:r,mateAlignmentStart:s,mateReadName:n}),A=t("TS"),o.MateFlagsDecoder.isUnmapped(e)&&(p=o.BamFlagsDecoder.setMateUnmapped(p)),o.MateFlagsDecoder.isOnNegativeStrand(e)&&(p=o.BamFlagsDecoder.setMateReverseComplemented(p))}else o.CramFlagsDecoder.isWithMateDownstream(g)&&(C=t("NF")+f+1);const _=t("TL");if(_<0)throw new s.CramMalformedError("invalid TL index");const x={},k=i.getTagNames(_),I=k.length;for(let t=0;t<I;t+=1){const n=k[t],o=n.slice(0,2),a=n.slice(2,3),c=i.getCodecForTag(n);if(!c)throw new s.CramMalformedError(`no codec defined for auxiliary tag ${n}`);const u=c.decode(e,r,h,d);x[o]=l(a,u)}let S,E,N,B,M;if(o.BamFlagsDecoder.isSegmentUnmapped(p))if(o.CramFlagsDecoder.isDecodeSequenceAsStar(g))M=null,B=null;else{const e=new Array(w);for(let i=0;i<e.length;i+=1)e[i]=t("BA");if(M=String.fromCharCode(...e),o.CramFlagsDecoder.isPreservingQualityScores(g)){B=new Array(w);for(let i=0;i<e.length;i+=1)B[i]=t("QS")}}else{const e=t("FN");if(e&&(S=function(e,t,i,n,r){let o=0,a=e-1;const c=new Array(t);function l([e,t]){const n=i(t);if("character"===e)return String.fromCharCode(n);if("string"===e){let e="";for(let t=0;t<n.byteLength;t++)e+=String.fromCharCode(n[t]);return e}return"numArray"===e?n.toArray():n}for(let e=0;e<t;e+=1){const t=String.fromCharCode(i("FC")),n=i("FP"),h={B:["character","BA"],S:["string",r>1?"SC":"IN"],X:["number","BS"],D:["number","DL"],I:["string","IN"],i:["character","BA"],b:["string","BB"],q:["numArray","QQ"],Q:["number","QS"],H:["number","HC"],P:["number","PD"],N:["number","RS"]}[t];if(!h)throw new s.CramMalformedError(`invalid read feature code "${t}"`);let d=l(h);const u={B:["number","QS"]}[t];u&&(d=[d,l(u)]),o+=n;const f=o;a+=n;const p=a;"D"===t||"N"===t?a+=d:"I"===t||"S"===t?a-=d.length:"i"===t&&(a-=1),c[e]={code:t,pos:f,refPos:p,data:d}}return c}(b,e,t,0,u)),E=w,S)for(const{code:e,data:t}of S)"D"===e||"N"===e?E+=t:"I"===e||"S"===e?E-=t.length:"i"===e&&(E-=1);if(Number.isNaN(E)&&(console.warn(`${v||`${m}:${b}`} record has invalid read features`),E=w),N=t("MQ"),o.CramFlagsDecoder.isPreservingQualityScores(g)){B=new Array(w);for(let e=0;e<B.length;e++)B[e]=t("QS")}}return{readLength:w,sequenceId:m,cramFlags:g,flags:p,alignmentStart:b,readGroupId:F,readName:v,mateToUse:y,templateSize:A,mateRecordNumber:C,readFeatures:S,lengthOnRef:E,mappingQuality:N,qualityScores:B,readBases:M,tags:x}};const r=n(i(8570)),s=i(9747),o=i(8401),a=i(3165);function c(e){let t="";for(let i=0;i<e.length&&0!==e[i];i++)t+=String.fromCharCode(e[i]);return t}function l(e,t){if("Z"===e)return c(t);if("A"===e)return String.fromCharCode(t[0]);if("I"===e)return r.default.fromBytesLE(t).toNumber();if("i"===e)return new Int32Array(t.buffer)[0];if("s"===e)return new Int16Array(t.buffer)[0];if("S"===e)return new Uint16Array(t.buffer)[0];if("c"===e)return new Int8Array(t.buffer)[0];if("C"===e)return t[0];if("f"===e)return new Float32Array(t.buffer)[0];if("H"===e)return Number.parseInt(c(t).replace(/^0x/,""),16);if("B"===e)return function(e){const t=String.fromCharCode(e[0]),i=Int32Array.from(e.slice(1))[0],n=new Array(i);if(e=e.slice(5),"c"===t){const t=new Int8Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else if("C"===t){const t=new Uint8Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else if("s"===t){const t=new Int16Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else if("S"===t){const t=new Uint16Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else if("i"===t){const t=new Int32Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else if("I"===t){const t=new Uint32Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}else{if("f"!==t)throw new Error("unknown type: "+t);{const t=new Float32Array(e.buffer);for(let e=0;e<i;e+=1)n[e]=t[e]}}return n}(t);throw new s.CramMalformedError(`Unrecognized tag type ${e}`)}},6771:function(e,t,i){var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(9747),o=i(400),a=r(i(7295)),c=r(i(6484)),l=r(i(8401)),h=i(3165),d=i(612);function u(e,t,i,n){if(!n)throw new s.CramMalformedError("could not resolve intra-slice mate pairs, file seems truncated or malformed");const r=!!(n.mate||void 0!==n.mateRecordNumber&&n.mateRecordNumber!==t);i.readName||(i.readName=String(i.uniqueId),n.readName=i.readName),i.mate={sequenceId:n.sequenceId,alignmentStart:n.alignmentStart,uniqueId:n.uniqueId},n.readName&&(i.mate.readName=n.readName),n.mate||void 0!==n.mateRecordNumber||(n.mate={sequenceId:i.sequenceId,alignmentStart:i.alignmentStart,uniqueId:i.uniqueId},i.readName&&(n.mate.readName=i.readName)),i.flags|=a.default.BAM_FPAIRED,n.flags&a.default.BAM_FUNMAP&&(i.flags|=a.default.BAM_FMUNMAP),i.flags&a.default.BAM_FUNMAP&&(n.flags|=a.default.BAM_FMUNMAP),n.flags&a.default.BAM_FREVERSE&&(i.flags|=a.default.BAM_FMREVERSE),i.flags&a.default.BAM_FREVERSE&&(n.flags|=a.default.BAM_FMREVERSE),void 0===i.templateLength&&(r?function(e,t,i){const n=function t(i){const n=[i];if(void 0!==i.mateRecordNumber&&i.mateRecordNumber>=0){const r=e[i.mateRecordNumber];if(!r)throw new s.CramMalformedError("intra-slice mate record not found, this file seems malformed");n.push(...t(r))}return n}(i),r=n.map((e=>e.alignmentStart)),o=n.map((e=>e.alignmentStart+e.readLength-1)),a=Math.max(...o)-Math.min(...r)+1;a>=0&&n.forEach((e=>{if(void 0!==e.templateLength)throw new s.CramMalformedError("mate pair group has some members that have template lengths already, this file seems malformed");e.templateLength=a}))}(e,0,i):function(e,t){const i=Math.min(e.alignmentStart,t.alignmentStart),n=Math.max(e.alignmentStart+e.readLength-1,t.alignmentStart+t.readLength-1)-i+1;e.templateLength=n,t.templateLength=n}(i,n)),delete i.mateRecordNumber}class f{constructor(e,t,i){this.container=e,this.containerPosition=t,this.file=e.file}getHeader(){return n(this,void 0,void 0,(function*(){const{majorVersion:e}=yield this.file.getDefinition(),t=(0,h.getSectionParsers)(e),i=yield this.container.getHeader();if(!i)throw new Error("wow");const n=yield this.file.readBlock(i._endPosition+this.containerPosition);if(void 0===n)throw new Error("block header undefined");if("MAPPED_SLICE_HEADER"===n.contentType){const e=(0,o.parseItem)(n.content,t.cramMappedSliceHeader.parser,0,i._endPosition);return Object.assign(Object.assign({},n),{parsedContent:e})}if("UNMAPPED_SLICE_HEADER"===n.contentType){const e=(0,o.parseItem)(n.content,t.cramUnmappedSliceHeader.parser,0,i._endPosition);return Object.assign(Object.assign({},n),{parsedContent:e})}throw new s.CramMalformedError(`error reading slice header block, invalid content type ${n.contentType}`)}))}getBlocks(){return n(this,void 0,void 0,(function*(){const e=yield this.getHeader();let t=e._endPosition;const i=new Array(e.parsedContent.numBlocks);for(let e=0;e<i.length;e++){const n=yield this.file.readBlock(t);if(void 0===n)throw new Error("block undefined");i[e]=n,t=i[e]._endPosition}return i}))}getCoreDataBlock(){return n(this,void 0,void 0,(function*(){return(yield this.getBlocks())[0]}))}_getBlocksContentIdIndex(){return n(this,void 0,void 0,(function*(){const e=yield this.getBlocks(),t={};return e.forEach((e=>{"EXTERNAL_DATA"===e.contentType&&(t[e.contentId]=e)})),t}))}getBlockByContentId(e){return n(this,void 0,void 0,(function*(){return(yield this._getBlocksContentIdIndex())[e]}))}getReferenceRegion(){return n(this,void 0,void 0,(function*(){const e=(yield this.getHeader()).parsedContent;if(!(0,h.isMappedSliceHeader)(e))throw new Error("slice header not mapped");if(e.refSeqId<0)return;const t=yield this.container.getCompressionScheme();if(void 0===t)throw new Error("compression scheme undefined");if(e.refBaseBlockId>=0){const t=yield this.getBlockByContentId(e.refBaseBlockId);if(!t)throw new s.CramMalformedError("embedded reference specified, but reference block does not exist");return{seq:t.data.toString("utf8"),start:e.refSeqStart,end:e.refSeqStart+e.refSeqSpan-1,span:e.refSeqSpan}}if(t.referenceRequired||this.file.fetchReferenceSequenceCallback){if(!this.file.fetchReferenceSequenceCallback)throw new Error("reference sequence not embedded, and seqFetch callback not provided, cannot fetch reference sequence");const t=yield this.file.fetchReferenceSequenceCallback(e.refSeqId,e.refSeqStart,e.refSeqStart+e.refSeqSpan-1);if(t.length!==e.refSeqSpan)throw new s.CramArgumentError("seqFetch callback returned a reference sequence of the wrong length");return{seq:t,start:e.refSeqStart,end:e.refSeqStart+e.refSeqSpan-1,span:e.refSeqSpan}}}))}getAllRecords(){return this.getRecords((()=>!0))}_fetchRecords(){return n(this,void 0,void 0,(function*(){var e,t;const{majorVersion:i}=yield this.file.getDefinition(),n=yield this.container.getCompressionScheme();if(void 0===n)throw new Error("compression scheme undefined");const r=yield this.getHeader();if(void 0===r)throw new Error("slice header undefined");const a=yield this._getBlocksContentIdIndex();if(i>1&&this.file.options.checkSequenceMD5&&(0,h.isMappedSliceHeader)(r.parsedContent)&&r.parsedContent.refSeqId>=0&&"0000000000000000"!==(null===(e=r.parsedContent.md5)||void 0===e?void 0:e.join(""))){const e=yield this.getReferenceRegion();if(e){const{seq:i,start:n,end:a}=e,c=(0,o.sequenceMD5)(i),l=null===(t=r.parsedContent.md5)||void 0===t?void 0:t.map((e=>(e<16?"0":"")+e.toString(16))).join("");if(c!==l)throw new s.CramMalformedError(`MD5 checksum reference mismatch for ref ${r.parsedContent.refSeqId} pos ${n}..${a}. recorded MD5: ${l}, calculated MD5: ${c}`)}}const f=yield this.getCoreDataBlock(),p={lastAlignmentStart:(0,h.isMappedSliceHeader)(r.parsedContent)?r.parsedContent.refSeqStart:0,coreBlock:{bitPosition:7,bytePosition:0},externalBlocks:{map:new Map,getCursor(e){let t=this.map.get(e);return void 0===t&&(t={bitPosition:7,bytePosition:0},this.map.set(e,t)),t}}},g=e=>{const t=n.getCodecForDataSeries(e);if(!t)throw new s.CramMalformedError(`no codec defined for ${e} data series`);return t.decode(this,f,a,p)};let m=new Array(r.parsedContent.numRecords);for(let t=0;t<m.length;t+=1)try{const e=(0,c.default)(this,g,n,r,f,a,p,i,t);m[t]=new l.default(Object.assign(Object.assign({},e),{uniqueId:r.contentPosition+r.parsedContent.recordCounter+t+1}))}catch(e){if(e instanceof d.CramBufferOverrunError){console.warn("read attempted beyond end of buffer, file seems truncated."),m=m.filter((e=>!!e));break}throw e}for(let e=0;e<m.length;e+=1){const{mateRecordNumber:t}=m[e];void 0!==t&&t>=0&&u(m,e,m[e],m[t])}return m}))}getRecords(e){return n(this,void 0,void 0,(function*(){const t=this.container.filePosition+this.containerPosition;let i=this.file.featureCache.get(t.toString());i||(i=this._fetchRecords(),this.file.featureCache.set(t.toString(),i));const r=(yield i).filter(e);if(r.length&&this.file.fetchReferenceSequenceCallback){const e=yield this.getHeader();if((0,h.isMappedSliceHeader)(e.parsedContent)&&(e.parsedContent.refSeqId>=0||-2===e.parsedContent.refSeqId)){const t=e.parsedContent.refSeqId>=0?e.parsedContent.refSeqId:void 0,i=yield this.container.getCompressionScheme();if(void 0===i)throw new Error("compression scheme undefined");const s={};for(const e of r){const i=void 0!==t?t:e.sequenceId;let n=s[i];n||(n={id:i,start:e.alignmentStart,end:-1/0,seq:null},s[i]=n);const r=e.alignmentStart+(e.lengthOnRef||e.readLength)-1;r>n.end&&(n.end=r),e.alignmentStart<n.start&&(n.start=e.alignmentStart)}yield Promise.all(Object.values(s).map((e=>n(this,void 0,void 0,(function*(){-1!==e.id&&e.start<=e.end&&this.file.fetchReferenceSequenceCallback&&(e.seq=yield this.file.fetchReferenceSequenceCallback(e.id,e.start,e.end))})))));for(const e of r){const n=s[void 0!==t?t:e.sequenceId];if(null==n?void 0:n.seq){const t=n.seq;e.addReferenceSequence(Object.assign(Object.assign({},n),{seq:t}),i)}}}}return r}))}}t.default=f,"getHeader getBlocks _getBlocksContentIdIndex".split(" ").forEach((e=>(0,o.tinyMemoize)(f,e)))},400:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.itf8Size=function(e){return-128&e?-16384&e?-2097152&e?-268435456&e?5:4:3:2:1},t.parseItf8=function(e,t){let i=t;const n=e[i];let r;if(n<128?(r=n,i+=1):n<192?(r=16383&(n<<8|e[i+1]),i+=2):n<224?(r=2097151&(n<<16|e[i+1]<<8|e[i+2]),i+=3):n<240?(r=268435455&(n<<24|e[i+1]<<16|e[i+2]<<8|e[i+3]),i+=4):(r=(15&n)<<28|e[i+1]<<20|e[i+2]<<12|e[i+3]<<4|15&e[i+4],i+=5),i>e.length)throw new o.CramBufferOverrunError("Attempted to read beyond end of buffer; this file seems truncated.");return[r,i-t]},t.parseLtf8=function(e,t){let i=t;const n=e[i];let r;if(n<128)r=n,i+=1;else if(n<192)r=16383&(e[i]<<8|e[i+1]),i+=2;else if(n<224)r=2097151&(e[i]<<16|e[i+1]<<8|e[i+2]),r=(63&n)<<16|e.readUInt16LE(i+1),i+=3;else if(n<240)r=268435455&(e[i]<<24|e[i+1]<<16|e[i+2]<<8|e[i+3]),i+=4;else if(n<248)r=(15&e[i])*Math.pow(2,32)+(e[i+1]<<24)|e[i+2]<<16|e[i+3]<<8|e[i+4],i+=5;else if(n<252)r=((7&e[i])<<8|e[i+1])*Math.pow(2,32)+(e[i+2]<<24)|e[i+3]<<16|e[i+4]<<8|e[i+5],i+=6;else if(n<254)r=((3&e[i])<<16|e[i+1]<<8|e[i+2])*Math.pow(2,32)+(e[i+3]<<24)|e[i+4]<<16|e[i+5]<<8|e[i+6],i+=7;else if(n<255){if(r=s.default.fromBytesBE(e.slice(i+1,i+8)),r.greaterThan(Number.MAX_SAFE_INTEGER)||r.lessThan(Number.MIN_SAFE_INTEGER))throw new Error("integer overflow");r=r.toNumber(),i+=8}else{if(r=s.default.fromBytesBE(e.slice(i+1,i+9)),r.greaterThan(Number.MAX_SAFE_INTEGER)||r.lessThan(Number.MIN_SAFE_INTEGER))throw new Error("integer overflow");r=r.toNumber(),i+=9}return[r,i-t]},t.parseItem=function(e,t,i=0,n=0){const{offset:r,value:s}=t(e,i);return Object.assign(Object.assign({},s),{_endPosition:r+n,_size:r-i})},t.tinyMemoize=function(e,t){const i=e.prototype[t],n=`_memo_${t}`;e.prototype[t]=function(){if(!(n in this)){const e=i.call(this);this[n]=e,Promise.resolve(e).catch((()=>{delete this[n]}))}return this[n]}},t.sequenceMD5=function(e){return(0,r.default)(e.toUpperCase().replaceAll(/[^\u0021-\u007e]/g,""))};const r=n(i(3503)),s=n(i(8570)),o=i(612)},9747:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CramArgumentError=t.CramSizeLimitError=t.CramMalformedError=t.CramUnimplementedError=t.CramError=void 0;class i extends Error{}t.CramError=i;class n extends Error{}t.CramUnimplementedError=n,t.CramMalformedError=class extends i{},t.CramSizeLimitError=class extends i{},t.CramArgumentError=class extends i{}},7806:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.IndexedCramFile=t.CraiIndex=t.CramRecord=t.CramFile=void 0;const r=i(8287);window.Buffer=r.Buffer;var s=i(7390);Object.defineProperty(t,"CramFile",{enumerable:!0,get:function(){return n(s).default}}),Object.defineProperty(t,"CramRecord",{enumerable:!0,get:function(){return s.CramRecord}});var o=i(4923);Object.defineProperty(t,"CraiIndex",{enumerable:!0,get:function(){return n(o).default}});var a=i(6014);Object.defineProperty(t,"IndexedCramFile",{enumerable:!0,get:function(){return n(a).default}})},6014:function(e,t,i){var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,s){function o(e){try{c(n.next(e))}catch(e){s(e)}}function a(e){try{c(n.throw(e))}catch(e){s(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,a)}c((n=n.apply(e,t||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(9747),o=r(i(7390));t.default=class{constructor(e){var t;if(this.cram=null!==(t=e.cram)&&void 0!==t?t:new o.default({url:e.cramUrl,path:e.cramPath,filehandle:e.cramFilehandle,seqFetch:e.seqFetch,checkSequenceMD5:e.checkSequenceMD5,cacheSize:e.cacheSize}),!(this.cram instanceof o.default))throw new Error("invalid arguments: no cramfile");if(this.index=e.index,!this.index.getEntriesForRange)throw new Error("invalid arguments: not an index")}getRecordsForRange(e,t,i){return n(this,arguments,void 0,(function*(e,t,i,n={}){if(n.viewAsPairs=n.viewAsPairs||!1,n.pairAcrossChr=n.pairAcrossChr||!1,n.maxInsertSize=n.maxInsertSize||2e5,"string"==typeof e)throw new s.CramUnimplementedError("string sequence names not yet supported");const r=e,o=yield this.index.getEntriesForRange(r,t,i),a=n=>n.sequenceId===e&&n.alignmentStart<=i&&void 0!==n.lengthOnRef&&n.alignmentStart+n.lengthOnRef-1>=t,c=yield Promise.all(o.map((e=>this.getRecordsInSlice(e,a))));let l=Array.prototype.concat(...c);if(n.viewAsPairs){const e={},t={};for(const i of l){const n=i.readName;if(void 0===n)throw new Error("readName undefined");const r=i.uniqueId;e[n]||(e[n]=0),e[n]+=1,t[r]=1}const i={};Object.entries(e).forEach((([e,t])=>{1===t&&(i[e]=!0)}));const s=[];for(const e of l){const t=e.readName;if(void 0===t)throw new Error("readName undefined");if(i[t]&&e.mate&&(e.mate.sequenceId===r||n.pairAcrossChr)&&Math.abs(e.alignmentStart-e.mate.alignmentStart)<n.maxInsertSize){const t=this.index.getEntriesForRange(e.mate.sequenceId,e.mate.alignmentStart,e.mate.alignmentStart+1);s.push(t)}}const o=yield Promise.all(s);let a=[];for(const e of o)a.push(...e);a=a.sort(((e,t)=>e.toString().localeCompare(t.toString()))).filter(((e,t,i)=>!t||e.toString()!==i[t-1].toString()));const c=[];for(const e of a){let n=this.cram.featureCache.get(e.toString());n||(n=this.getRecordsInSlice(e,(()=>!0)),this.cram.featureCache.set(e.toString(),n));const r=n.then((e=>{const n=[];for(const r of e){if(void 0===r.readName)throw new Error("readName undefined");i[r.readName]&&!t[r.uniqueId]&&n.push(r)}return n}));c.push(r)}const h=yield Promise.all(c);if(h.length){const e=h.reduce(((e,t)=>e.concat(t)));l=l.concat(e)}}return l}))}getRecordsInSlice({containerStart:e,sliceStart:t,sliceBytes:i},n){return this.cram.getContainerAtPosition(e).getSlice(t,i).getRecords(n)}hasDataForReferenceSequence(e){return this.index.hasDataForReferenceSequence(e)}}},5931:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RemoteFile=t.LocalFile=void 0,t.open=function(e,t,i){if(i)return i;if(e)return new n.RemoteFile(e);if(t)return new n.LocalFile(t);throw new Error("no url, path, or filehandle provided, cannot open")};const n=i(1113);var r=i(1113);Object.defineProperty(t,"LocalFile",{enumerable:!0,get:function(){return r.LocalFile}}),Object.defineProperty(t,"RemoteFile",{enumerable:!0,get:function(){return r.RemoteFile}})},6476:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RANS_BYTE_L=t.TOTFREQ=t.TF_SHIFT=void 0,t.TF_SHIFT=12,t.TOTFREQ=4096,t.RANS_BYTE_L=1<<23},997:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,n){let a=e.getInt(),c=e.getInt(),l=e.getInt(),h=e.getInt();const d=n.remaining(),u=-4&d;for(let r=0;r<u;r+=4){const d=t.R[o.default.get(a,s.TF_SHIFT)],u=t.R[o.default.get(c,s.TF_SHIFT)],f=t.R[o.default.get(l,s.TF_SHIFT)],p=t.R[o.default.get(h,s.TF_SHIFT)];n.putAt(r,d),n.putAt(r+1,u),n.putAt(r+2,f),n.putAt(r+3,p),a=o.default.advanceSymbolStep(a,i[255&d],s.TF_SHIFT),c=o.default.advanceSymbolStep(c,i[255&u],s.TF_SHIFT),l=o.default.advanceSymbolStep(l,i[255&f],s.TF_SHIFT),h=o.default.advanceSymbolStep(h,i[255&p],s.TF_SHIFT),a=o.default.renormalize(a,e),c=o.default.renormalize(c,e),l=o.default.renormalize(l,e),h=o.default.renormalize(h,e)}let f;switch(n.setPosition(u),3&d){case 0:break;case 1:f=t.R[o.default.get(a,s.TF_SHIFT)],o.default.advanceSymbol(a,e,i[255&f],s.TF_SHIFT),n.put(f);break;case 2:f=t.R[o.default.get(a,s.TF_SHIFT)],o.default.advanceSymbol(a,e,i[255&f],s.TF_SHIFT),n.put(f),f=t.R[o.default.get(c,s.TF_SHIFT)],o.default.advanceSymbol(c,e,i[255&f],s.TF_SHIFT),n.put(f);break;case 3:f=t.R[o.default.get(a,s.TF_SHIFT)],o.default.advanceSymbol(a,e,i[255&f],s.TF_SHIFT),n.put(f),f=t.R[o.default.get(c,s.TF_SHIFT)],o.default.advanceSymbol(c,e,i[255&f],s.TF_SHIFT),n.put(f),f=t.R[o.default.get(l,s.TF_SHIFT)],o.default.advanceSymbol(l,e,i[255&f],s.TF_SHIFT),n.put(f);break;default:throw new r.CramMalformedError("invalid output size encountered during rANS decoding")}n.setPosition(0)};const r=i(9747),s=i(6476),o=n(i(488))},7960:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,n){const o=t.remaining();let a=e.getInt(),c=e.getInt(),l=e.getInt(),h=e.getInt();const d=o>>2;let u=0,f=d,p=2*d,g=3*d,m=0,w=0,b=0,F=0;for(;u<d;u+=1,f+=1,p+=1,g+=1){const o=255&i[m].R[s.default.get(a,r.TF_SHIFT)],d=255&i[w].R[s.default.get(c,r.TF_SHIFT)],v=255&i[b].R[s.default.get(l,r.TF_SHIFT)],y=255&i[F].R[s.default.get(h,r.TF_SHIFT)];t.putAt(u,o),t.putAt(f,d),t.putAt(p,v),t.putAt(g,y),a=s.default.advanceSymbolStep(a,n[m][o],r.TF_SHIFT),c=s.default.advanceSymbolStep(c,n[w][d],r.TF_SHIFT),l=s.default.advanceSymbolStep(l,n[b][v],r.TF_SHIFT),h=s.default.advanceSymbolStep(h,n[F][y],r.TF_SHIFT),a=s.default.renormalize(a,e),c=s.default.renormalize(c,e),l=s.default.renormalize(l,e),h=s.default.renormalize(h,e),m=o,w=d,b=v,F=y}for(;g<o;g+=1){const o=255&i[F].R[s.default.get(h,r.TF_SHIFT)];t.putAt(g,o),h=s.default.advanceSymbol(h,e,n[F][o],r.TF_SHIFT),F=o}};const r=i(6476),s=n(i(488))},488:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(9747),r=i(6476);class s{constructor(){this.F=void 0,this.C=void 0}}function o(e,t,i,n){return i*(e>>n)+(e&(1<<n)-1)-t}const a={FC:s,AriDecoder:class{constructor(){this.fc=new Array(256);for(let e=0;e<this.fc.length;e+=1)this.fc[e]=new s;this.R=null}},Symbol:class{constructor(){this.start=void 0,this.freq=void 0}},symbolInit:function(e,t,i){if(!(t<=65536))throw new n.CramMalformedError("assertion failed: start <= 1<<16");if(!(i<=65536-t))throw new n.CramMalformedError("assertion failed: freq <= 1<<16");e.start=t,e.freq=i},advanceStep:o,advanceSymbolStep:function(e,t,i){return o(e,t.start,t.freq,i)},get:function(e,t){return e&(1<<t)-1},advanceSymbol:function(e,t,i,n){return function(e,t,i,n,s){if((e=n*(e>>s)+(e&(1<<s)-1)-i)<r.RANS_BYTE_L)do{e=e<<8|255&t.get()}while(e<r.RANS_BYTE_L);return e}(e,t,i.start,i.freq,n)},renormalize:function(e,t){if(e<r.RANS_BYTE_L)do{e=e<<8|255&t.get()}while(e<r.RANS_BYTE_L);return e}};t.default=a},1971:function(e,t,i){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.readStatsO0=function(e,t,i){let n=0,r=0,c=255&e.get();do{null==t.fc[c]&&(t.fc[c]=new o.default.FC),t.fc[c].F=255&e.get(),t.fc[c].F>=128&&(t.fc[c].F&=-129,t.fc[c].F=(127&t.fc[c].F)<<8|255&e.get()),t.fc[c].C=r,o.default.symbolInit(i[c],t.fc[c].C,t.fc[c].F),t.R||(t.R=new Array(s.TOTFREQ)),t.R.fill(c,r,r+t.fc[c].F),r+=t.fc[c].F,0===n&&c+1===(255&e.getByteAt(e.position()))?(c=255&e.get(),n=255&e.get()):0!==n?(n-=1,c+=1):c=255&e.get()}while(0!==c);a(r<s.TOTFREQ)},t.readStatsO1=function(e,t,i){let n=0,r=255&e.get();do{let c=0,l=0,h=255&e.get();null==t[r]&&(t[r]=new o.default.AriDecoder);do{null==t[r].fc[h]&&(t[r].fc[h]=new o.default.FC),t[r].fc[h].F=255&e.get(),t[r].fc[h].F>=128&&(t[r].fc[h].F&=-129,t[r].fc[h].F=(127&t[r].fc[h].F)<<8|255&e.get()),t[r].fc[h].C=l,0===t[r].fc[h].F&&(t[r].fc[h].F=s.TOTFREQ),null==i[r][h]&&(i[r][h]=new o.default.RansDecSymbol),o.default.symbolInit(i[r][h],t[r].fc[h].C,t[r].fc[h].F),null==t[r].R&&(t[r].R=new Array(s.TOTFREQ)),t[r].R.fill(h,l,l+t[r].fc[h].F),l+=t[r].fc[h].F,a(l<=s.TOTFREQ),0===c&&h+1===(255&e.getByteAt(e.position()))?(h=255&e.get(),c=255&e.get()):0!==c?(c-=1,h+=1):h=255&e.get()}while(0!==h);0===n&&r+1===(255&e.getByteAt(e.position()))?(r=255&e.get(),n=255&e.get()):0!==n?(n-=1,r+=1):r=255&e.get()}while(0!==r)};const r=i(9747),s=i(6476),o=n(i(488));function a(e){if(!e)throw new r.CramMalformedError("assertion failed")}},9989:function(e,t,i){var n=i(8287).Buffer,r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i=0){if(0===e.length)return t.fill(0),t;const r=new d(e,i),u=r.get();if(0!==u&&1!==u)throw new s.CramMalformedError(`Invalid rANS order ${u}`);if(r.getInt()!==r.remaining()-h)throw new s.CramMalformedError("Incorrect input length.");const f=r.getInt(),p=new d(t||n.allocUnsafe(f));if(p.length<f)throw new s.CramMalformedError(`Output buffer too small to fit ${f} bytes.`);switch(u){case 0:return function(e,t){const i=new o.default.AriDecoder,n=new Array(256);for(let e=0;e<n.length;e+=1)n[e]=new o.default.Symbol;return(0,a.readStatsO0)(e,i,n),(0,c.default)(e,i,n,t),t}(r,p);case 1:return function(e,t){const i=new Array(256);for(let e=0;e<i.length;e+=1)i[e]=new o.default.AriDecoder;const n=new Array(256);for(let e=0;e<n.length;e+=1){n[e]=new Array(256);for(let t=0;t<n[e].length;t+=1)n[e][t]=new o.default.Symbol}return(0,a.readStatsO1)(e,i,n),(0,l.default)(e,t,i,n),t}(r,p);default:throw new s.CramMalformedError(`Invalid rANS order: ${u}`)}};const s=i(9747),o=r(i(488)),a=i(1971),c=r(i(997)),l=r(i(7960)),h=4;class d{constructor(e,t=0){this._buffer=e,this._position=t,this.length=e.length}get(){const e=this._buffer[this._position];return this._position+=1,e}getByte(){return this.get()}getByteAt(e){return this._buffer[e]}position(){return this._position}put(e){return this._buffer[this._position]=e,this._position+=1,e}putAt(e,t){return this._buffer[e]=t,t}setPosition(e){return this._position=e,e}getInt(){const e=this._buffer.readInt32LE(this._position);return this._position+=4,e}remaining(){return this._buffer.length-this._position}}},5417:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseHeaderText=function(e){const t=e.split(/\r?\n/),i=[];for(const e of t){const[t,...n]=e.split(/\t/);t&&i.push({tag:t.slice(1),data:n.map((e=>{const t=e.indexOf(":");return-1!==t?{tag:e.slice(0,t),value:e.slice(t+1)}:{tag:e,value:""}}))})}return i}},8712:(e,t,i)=>{var n=i(8287).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.unzip=function(e){return n.from((0,r.inflate)(e))};const r=i(1668)},7430:(e,t,i)=>{i.r(t),i.d(t,{default:()=>o});class n{}class r{constructor(){this.signals=new Set,this.abortController=new AbortController}addSignal(e=new n){if(this.signal.aborted)throw new Error("cannot add a signal, already aborted!");this.signals.add(e),e.aborted?this.handleAborted(e):"function"==typeof e.addEventListener&&e.addEventListener("abort",(()=>{this.handleAborted(e)}))}handleAborted(e){this.signals.delete(e),0===this.signals.size&&this.abortController.abort()}get signal(){return this.abortController.signal}abort(){this.abortController.abort()}}class s{constructor(){this.callbacks=new Set}addCallback(e=()=>{}){this.callbacks.add(e),e(this.currentMessage)}callback(e){this.currentMessage=e;for(const t of this.callbacks)t(e)}}class o{constructor({fill:e,cache:t}){if("function"!=typeof e)throw new TypeError("must pass a fill function");if("object"!=typeof t)throw new TypeError("must pass a cache object");if("function"!=typeof t.get||"function"!=typeof t.set||"function"!=typeof t.delete)throw new TypeError("cache must implement get(key), set(key, val), and and delete(key)");this.cache=t,this.fillCallback=e}static isAbortException(e){return"AbortError"===e.name||"ERR_ABORTED"===e.code||"AbortError: aborted"===e.message||"Error: aborted"===e.message}evict(e,t){this.cache.get(e)===t&&this.cache.delete(e)}fill(e,t,i,n){const o=new r,a=new s;a.addCallback(n);const c={aborter:o,promise:this.fillCallback(t,o.signal,(e=>{a.callback(e)})),settled:!1,statusReporter:a,get aborted(){return this.aborter.signal.aborted}};c.aborter.addSignal(i),c.aborter.signal.addEventListener("abort",(()=>{c.settled||this.evict(e,c)})),c.promise.then((()=>{c.settled=!0}),(()=>{c.settled=!0,this.evict(e,c)})).catch((e=>{throw console.error(e),e})),this.cache.set(e,c)}static checkSinglePromise(e,t){function i(){if(null==t?void 0:t.aborted)throw Object.assign(new Error("aborted"),{code:"ERR_ABORTED"})}return e.then((e=>(i(),e)),(e=>{throw i(),e}))}has(e){return this.cache.has(e)}get(e,t,i,n){if(!i&&t instanceof AbortSignal)throw new TypeError("second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?");const r=this.cache.get(e);return r?r.aborted&&!r.settled?(this.evict(e,r),this.get(e,t,i,n)):r.settled?r.promise:(r.aborter.addSignal(i),r.statusReporter.addCallback(n),o.checkSinglePromise(r.promise,i)):(this.fill(e,t,i,n),o.checkSinglePromise(this.cache.get(e).promise,i))}delete(e){const t=this.cache.get(e);t&&(t.settled||t.aborter.abort(),this.cache.delete(e))}clear(){const e=this.cache.keys();let t=0;for(let i=e.next();!i.done;i=e.next())this.delete(i.value),t+=1;return t}}},635:(e,t,i)=>{var n=i(8287).Buffer;const r=i(4646),s=i(8706),o=i(9614),a=i(235),c=128;e.exports=class{decode(e){return this.stream=new s(e),this.decodeStream(this.stream)}decodeStream(e,t=0){var i=this.stream.ReadByte();16&i||(t=this.stream.ReadUint7());var n,r=t,s=1&i;if(8&i)return this.decodeStripe(this.stream,t);if(i&c&&([n,r]=this.decodePackMeta(this.stream)),32&i)var o=this.decodeCat(this.stream,r);else o=4&i?this.decodeExt(this.stream,r):64&i?s?this.decodeRLE1(this.stream,r):this.decodeRLE0(this.stream,r):s?this.decode1(this.stream,r):this.decode0(this.stream,r);return i&c&&(o=this.decodePack(o,n,t)),o}encode(e,t){if(this.stream=new s("",0,1.1*e.length+100),this.stream.WriteByte(t),16&t||this.stream.WriteUint7(e.length),8&t)return n.concat([this.stream.buf.slice(0,this.stream.pos),this.encodeStripe(this.stream,e,t>>8)]);var i,r=1&t,o=e.length;return t&c&&([i,e,o]=this.encodePack(e)),t&c&&this.stream.WriteStream(i),64&t?r?this.encodeRLE1(e,o,this.stream):this.encodeRLE0(e,o,this.stream):r?this.encode1(e,o,this.stream):this.encode0(e,o,this.stream)}decode0(e,t){var i=new n.allocUnsafe(t),s=e.ReadByte();0==s&&(s=256);var a=new o(s),c=new r(e);c.RangeStartDecode(e);for(var l=0;l<t;l++)i[l]=a.ModelDecode(e,c);return i}encode0(e,t,i){for(var n=0,s=0;s<t;s++)n<e[s]&&(n=e[s]);n++;var a=new o(n);i.WriteByte(n);var c=new r(i);for(s=0;s<t;s++)a.ModelEncode(i,c,e[s]);return c.RangeFinishEncode(i),i.buf.slice(0,i.pos)}decode1(e,t){var i=new n.allocUnsafe(t),s=e.ReadByte();0==s&&(s=256);for(var a=new Array(s),c=0;c<s;c++)a[c]=new o(s);var l=new r(e);l.RangeStartDecode(e);var h=0;for(c=0;c<t;c++)i[c]=a[h].ModelDecode(e,l),h=i[c];return i}encode1(e,t,i){for(var n=0,s=0;s<t;s++)n<e[s]&&(n=e[s]);n++;var a=new Array(n);for(s=0;s<n;s++)a[s]=new o(n);i.WriteByte(n);var c=new r(i),l=0;for(s=0;s<t;s++)a[l].ModelEncode(i,c,e[s]),l=e[s];return c.RangeFinishEncode(i),i.buf.slice(0,i.pos)}decodeExt(e,t){var i=new n.allocUnsafe(t),r=a.array(e.buf.slice(e.pos)),s=a.header(r),o=0;do{var c=a.decompress(r,s);-1!=c&&(n.from(c).copy(i,o),o+=c.length,s-=c.length)}while(-1!=c);return i}encodeExt(e,t){}decodeRLE0(e,t){var i=new n.allocUnsafe(t),s=e.ReadByte();0==s&&(s=256);for(var a=new o(s),c=new Array(258),l=0;l<=257;l++)c[l]=new o(4);var h=new r(e);for(h.RangeStartDecode(e),l=0;l<t;){i[l]=a.ModelDecode(e,h);for(var d=c[i[l]].ModelDecode(e,h),u=d,f=256;3==d;)d=c[f].ModelDecode(e,h),f=257,u+=d;for(var p=1;p<=u;p++)i[l+p]=i[l];l+=u+1}return i}encodeRLE0(e,t,i){for(var n=0,s=0;s<t;s++)n<e[s]&&(n=e[s]);n++;var a=new o(n),c=new Array(258);for(s=0;s<=257;s++)c[s]=new o(4);i.WriteByte(n);var l=new r(i);for(s=0;s<t;){a.ModelEncode(i,l,e[s]);for(var h=1;s+h<t&&e[s+h]==e[s];)h++;h--;var d=e[s];e[s],s+=h+1;var u=h>=3?3:h;for(c[d].ModelEncode(i,l,u),h-=u,d=256;3==u;)u=h>=3?3:h,c[d].ModelEncode(i,l,u),d=257,h-=u}return l.RangeFinishEncode(i),i.buf.slice(0,i.pos)}decodeRLE1(e,t){var i=new n.allocUnsafe(t),s=e.ReadByte();0==s&&(s=256);for(var a=new Array(s),c=0;c<s;c++)a[c]=new o(s);var l=new Array(258);for(c=0;c<=257;c++)l[c]=new o(4);var h=new r(e);h.RangeStartDecode(e);var d=0;for(c=0;c<t;){i[c]=a[d].ModelDecode(e,h),d=i[c];for(var u=l[i[c]].ModelDecode(e,h),f=u,p=256;3==u;)u=l[p].ModelDecode(e,h),p=257,f+=u;for(var g=1;g<=f;g++)i[c+g]=i[c];c+=f+1}return i}encodeRLE1(e,t,i){for(var n=0,s=0;s<t;s++)n<e[s]&&(n=e[s]);n++;var a=new Array(n);for(s=0;s<n;s++)a[s]=new o(n);var c=new Array(258);for(s=0;s<=257;s++)c[s]=new o(4);i.WriteByte(n);for(var l=new r(i),h=(s=0,0);s<t;){a[h].ModelEncode(i,l,e[s]);for(var d=1;s+d<t&&e[s+d]==e[s];)d++;d--;var u=e[s];h=e[s],s+=d+1;var f=d>=3?3:d;for(c[u].ModelEncode(i,l,f),d-=f,u=256;3==f;)f=d>=3?3:d,c[u].ModelEncode(i,l,f),u=257,d-=f}return l.RangeFinishEncode(i),i.buf.slice(0,i.pos)}decodePackMeta(e){this.nsym=e.ReadByte();for(var t=new Array(this.nsym),i=0;i<this.nsym;i++)t[i]=e.ReadByte();return[t,e.ReadUint7()]}decodePack(e,t,i){var r=new n.allocUnsafe(i);if(this.nsym<=1)for(var s=0;s<i;s++)r[s]=t[0];else if(this.nsym<=2){s=0;for(var o=0;s<i;s++){if(s%8==0)var a=e[o++];r[s]=t[1&a],a>>=1}}else if(this.nsym<=4)for(s=0,o=0;s<i;s++)s%4==0&&(a=e[o++]),r[s]=t[3&a],a>>=2;else{if(!(this.nsym<=16))return e;for(s=0,o=0;s<i;s++)s%2==0&&(a=e[o++]),r[s]=t[15&a],a>>=4}return r}packMeta(e){for(var t=new s("",0,1024),i=new Array(256),n=0;n<e.length;n++)i[e[n]]=1;var r=0;for(n=0;n<256;n++)i[n]&&(i[n]=++r);for(t.WriteByte(r),n=0;n<256;n++)i[n]&&(t.WriteByte(n),i[n]--);return[t,i,r]}encodePack(e){var t,i,r;[t,i,r]=this.packMeta(e);var s=e.length,o=0;if(r<=1)return t.WriteUint7(0),[t,new n.allocUnsafe(0),0];if(r<=2){for(var a=new n.allocUnsafe(Math.floor((s+7)/8)),c=(o=0,0);o<(-8&s);o+=8,c++)a[c]=(0|i[e[o+0]])+(i[e[o+1]]<<1)+(i[e[o+2]]<<2)+(i[e[o+3]]<<3)+(i[e[o+4]]<<4)+(i[e[o+5]]<<5)+(i[e[o+6]]<<6)+(i[e[o+7]]<<7);if(o<s){a[c]=0;for(var l=0;o<s;)a[c]|=i[e[o++]]<<l,l++;c++}return t.WriteUint7(c),[t,a,a.length]}if(r<=4){for(a=new n.allocUnsafe(Math.floor((s+3)/4)),o=0,c=0;o<(-4&s);o+=4,c++)a[c]=(0|i[e[o+0]])+(i[e[o+1]]<<2)+(i[e[o+2]]<<4)+(i[e[o+3]]<<6);if(o<s){for(a[c]=0,l=0;o<s;)a[c]|=i[e[o++]]<<l,l+=2;c++}return t.WriteUint7(c),[t,a,a.length]}if(r<=16){for(a=new n.allocUnsafe(Math.floor((s+1)/2)),o=0,c=0;o<(-2&s);o+=2,c++)a[c]=(0|i[e[o+0]])+(i[e[o+1]]<<4);return o<s&&(a[c++]=i[e[o++]]),t.WriteUint7(c),[t,a,a.length]}return t.WriteUint7(e.length),[t,e,e.length]}encodeStripe(e,t,i){0==i&&(i=4);for(var n=new Array(i),r=new Array(i),o=0;o<i;o++)r[o]=Math.floor(t.length/i)+(t.length%i>o),n[o]=new Array(r[o]);for(var a=0,c=0;c<t.length;c+=i,a++)for(var l=0;l<i;l++)a<n[l].length&&(n[l][a]=t[c+l]);var h=new Array(i),d=0;for(o=0;o<i;o++){var u=this.encode(n[o],0),f=this.encode(n[o],1);h[o]=f.length<u.length?f:u,d+=h[o].length}var p=new s("",0,d+5*i+1);for(p.WriteByte(i),o=0;o<i;o++)p.WriteUint7(h[o].length);for(o=0;o<i;o++)p.WriteData(h[o],h[o].length);return p.buf.slice(0,p.buf.pos)}decodeStripe(e,t){for(var i=e.ReadByte(),r=new Array(i),s=new Array(i),o=0;o<i;o++)r[o]=e.ReadUint7();var a=new Array(i);for(o=0;o<i;o++)s[o]=Math.floor(t/i)+(t%i>o),a[o]=this.decodeStream(e,s[o]);var c=new n.allocUnsafe(t);for(o=0;o<i;o++)for(var l=0;l<s[o];l++)c[l*i+o]=a[o][l];return c}decodeCat(e,t){for(var i=new n.allocUnsafe(t),r=0;r<t;r++)i[r]=e.ReadByte();return i}}},4646:e=>{e.exports=class{constructor(e){this.low=0,this.range=4294967295,this.code=0,this.FFnum=0,this.carry=0,this.cache=0}RangeStartDecode(e){for(var t=0;t<5;t++)this.code=(this.code<<8)+e.ReadByte();this.code&=4294967295,this.code>>>=0}RangeGetFrequency(e){return this.range=Math.floor(this.range/e),Math.floor(this.code/this.range)}RangeDecode(e,t,i,n){for(this.code-=t*this.range,this.range*=i;this.range<1<<24;)this.range*=256,this.code=256*this.code+e.ReadByte()}RangeShiftLow(e){if(this.low<4278190080|this.carry){for(e.WriteByte(this.cache+this.carry);this.FFnum;)e.WriteByte(this.carry-1),this.FFnum--;this.cache=this.low>>>24,this.carry=0}else this.FFnum++;this.low<<=8,this.low>>>=0}RangeEncode(e,t,i,n){var r=this.low;for(this.range=Math.floor(this.range/n),this.low+=t*this.range,this.low>>>=0,this.range*=i,this.low<r&&(0!=this.carry&&console.log("ERROR: Multiple carry"),this.carry=1);this.range<1<<24;)this.range*=256,this.RangeShiftLow(e)}RangeFinishEncode(e){for(var t=0;t<5;t++)this.RangeShiftLow(e)}}},9614:e=>{e.exports=class{constructor(e=256){this.total_freq=e,this.max_sym=e-1,this.S=new Array,this.F=new Array;for(var t=0;t<=this.max_sym;t++)this.S[t]=t,this.F[t]=1}ModelDecode(e,t){for(var i=t.RangeGetFrequency(this.total_freq),n=0,r=0;n+this.F[r]<=i;)n+=this.F[r++];t.RangeDecode(e,n,this.F[r],this.total_freq),this.F[r]+=16,this.total_freq+=16,this.total_freq>65519&&this.ModelRenormalise();var s=this.S[r];if(r>0&&this.F[r]>this.F[r-1]){var o=this.F[r];this.F[r]=this.F[r-1],this.F[r-1]=o,o=this.S[r],this.S[r]=this.S[r-1],this.S[r-1]=o}return s}ModelRenormalise(){this.total_freq=0;for(var e=0;e<=this.max_sym;e++)this.F[e]-=Math.floor(this.F[e]/2),this.total_freq+=this.F[e]}ModelEncode(e,t,i){for(var n=0,r=0;this.S[r]!=i;r++)n+=this.F[r];if(t.RangeEncode(e,n,this.F[r],this.total_freq),this.F[r]+=16,this.total_freq+=16,this.total_freq>65519&&this.ModelRenormalise(),i=this.S[r],r>0&&this.F[r]>this.F[r-1]){var s=this.F[r];this.F[r]=this.F[r-1],this.F[r-1]=s,s=this.S[r],this.S[r]=this.S[r-1],this.S[r-1]=s}}}},6038:(e,t,i)=>{var n=i(8287).Buffer;const r=i(8706),s=i(9614),o=i(4646);function a(e,t,i){for(var n=0,r=0,s=-1,o=new Array(1024);r<i;){var a=e.ReadByte();if(o[n++]=a,r+=a,a==s){var c=e.ReadByte();for(r+=a*c;c--;)o[n++]=a}s=a}var l=0;for(n=0,r=0;r<i;){var h=0;do{var d=o[n++];h+=d}while(255==d);for(;h--;)t[r++]=l;l++}}function c(e,t,i){var n=e.context;return t.qctx=(t.qctx<<e.qshift)+e.qtab[i],n+=(t.qctx&(1<<e.qbits)-1)<<e.qloc,e.do_pos&&(n+=e.ptab[Math.min(t.p,1023)]<<e.ploc),e.do_delta&&(n+=e.dtab[Math.min(t.delta,255)]<<e.dloc,t.delta+=t.prevq!=i?1:0,t.prevq=i),e.do_sel&&(n+=t.s<<e.sloc),t.p--,65535&n}function l(e){var t={};t.context=e.ReadUint16(),t.pflags=e.ReadByte(),t.do_dedup=2&t.pflags,t.fixed_len=4&t.pflags,t.do_sel=8&t.pflags,t.do_qmap=16&t.pflags,t.do_pos=32&t.pflags,t.do_delta=64&t.pflags,t.do_qtab=128&t.pflags,t.max_sym=e.ReadByte();var i=e.ReadByte();if(t.qbits=i>>4,t.qshift=15&i,i=e.ReadByte(),t.qloc=i>>4,t.sloc=15&i,i=e.ReadByte(),t.ploc=i>>4,t.dloc=15&i,t.qmap=new Array(256),16&t.pflags)for(var n=0;n<t.max_sym;n++)t.qmap[n]=e.ReadByte();else for(n=0;n<256;n++)t.qmap[n]=n;if(t.qtab=new Array(1024),t.qbits>0&&128&t.pflags)a(e,t.qtab,256);else for(n=0;n<256;n++)t.qtab[n]=n;return t.ptab=new Array(1024),32&t.pflags&&a(e,t.ptab,1024),t.dtab=new Array(256),64&t.pflags&&a(e,t.dtab,256),t}function h(e,t,i,n,r,s){i.max_sel>0?r.s=n.sel.ModelDecode(e,t):r.s=0,r.x=i.stab[r.s];var o=i.params[r.x];if(o.fixed_len>=0){var a=n.len[0].ModelDecode(e,t);a|=n.len[1].ModelDecode(e,t)<<8,a|=n.len[2].ModelDecode(e,t)<<16,a|=n.len[3].ModelDecode(e,t)<<24,o.fixed_len>0&&(o.fixed_len=-a)}else a=-o.fixed_len;r.len=a,i.do_rev&&(s[r.rec]=n.rev.ModelDecode(e,t)),r.is_dup=0,2&o.pflags&&n.dup.ModelDecode(e,t)&&(r.is_dup=1),r.p=a,r.delta=0,r.qctx=0,r.prevq=0,r.rec++}function d(e,t,i){for(var n=0,r=0,s=new Array(2*i),o=0;n<i;){for(var a=n;n<i&&t[n]==r;)n++;var c=n-a;do{var l=Math.min(255,c);s[o++]=l,c-=l}while(255==l);r++}var h=-1,d=new Array(2*i),u=0;for(n=0;n<o;){var f=s[n++];if(d[u++]=f,f==h){for(a=n;n<o&&s[n]==h&&n-a<255;)n++;d[u++]=n-a}else h=f}e.WriteData(d,u)}e.exports={decode:function(e,t){return function(e,t){var i=e.ReadUint7(),r=function(e){var t={max_sym:0};if(5==e.ReadByte()){var i=e.ReadByte(),n=1&i?e.ReadByte():1,r=i.nparam>1?i.nparam-1:0,s=new Array(256);if(2&i)r=e.ReadByte(),a(e,s,256);else{for(var o=0;o<n;o++)s[o]=o;for(;o<256;o++)s[o]=n-1}t.do_rev=4&i,t.stab=s,t.max_sel=r,t.params=new Array(t.nparam);for(var c=0;c<n;c++)t.params[c]=l(e),t.max_sym<t.params[c].max_sym&&(t.max_sym=t.params[c].max_sym);return t}console.error("Invalid FQZComp version number")}(e);if(r){var d=r.params,u=new Array(t.length),f=function(e){var t={};t.qual=new Array(65536);for(var i=0;i<65536;i++)t.qual[i]=new s(e.max_sym+1);for(t.len=new Array(4),i=0;i<4;i++)t.len[i]=new s(256);return t.rev=new s(2),t.dup=new s(2),e.max_sel>0&&(t.sel=new s(e.max_sel+1)),t}(r),p=new o(e);p.RangeStartDecode(e);for(var g=new n.allocUnsafe(i),m={qctx:0,prevq:0,delta:0,p:0,s:0,x:0,len:0,is_dup:0,rec:0},w=0;w<i;){if(0==m.p){if(h(e,p,r,f,m,u),m.is_dup>0&&f.dup.ModelDecode(e,p)){for(var b=0;b<len;b++)g[w+b]=g[w+b-m.len];w+=m.len,m.p=0;continue}t.push(m.len);var F=(d=r.params[m.x]).context}var v=f.qual[F].ModelDecode(e,p);g[w++]=d.qmap[v],F=c(d,m,v)}return r.do_rev&&function(e,t,i,n){for(var r=0,s=0;s<t;){if(i[r])for(var o=0,a=n[r]-1;o<a;){var c=e[s+o];e[s+o]=e[s+a],e[s+a]=c,o++,a--}s+=n[r++]}}(g,i,u,t),g}}(new r(e),t)},encode:function(e,t,i){for(var n=new Array(2),a=new Array(2),c=new Array(2),l=new Array(2),h=new Array(256),u=0;u<2;u++)n[u]=new Array(256),a[u]=new Array(256),c[u]=new Array(1024),l[u]=new Array(256);(p=new r("",0,1.1*e.length+100)).WriteUint7(e.length);var f=function(e,t,i,n){for(var r=i[0],s=0;s<i.length&&i[s]==r;s++);var o=s==i.length?1:0,a=0,c=0;for(s=0;s<256;s++)n[0][s]=0;var l=0,h=0;for(s=0;s<e.length;s++)0==h&&(h=t[l<t.length-1?l++:l]),n[0][e[s]]++,h--;for(s=0;s<256;s++)n[0][s]&&(c<s&&(c=s),a++);var d=5,u=0;return a<=16&&(u=1,d=a<=2?1:a<=4?2:a<=8?3:4),[{qbits:8+(d>4),qshift:d,qloc:7,pbits:7,pshift:t[0]>128?1:0,ploc:0,dbits:d>4?0:1,dshift:3,dloc:15,sbits:0,sloc:15,do_stab:0,context:0,max_sym:c,nsym:a,do_qmap:u,do_dedup:0,fixed_len:1==t.length?1:0,do_sel:0,do_rev:0,do_pos:1,do_delta:d<=4?1:0,do_qtab:0,qbits:8+(d>4)-(0==o),sbits:1,sloc:15-(d<=4),do_stab:1,do_sel:1}]}(e,t,i,n),p=function(e,t,i,n,r,s,o){for(var a=[0,1,1,1,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7],c=0;c<t.length;c++)o[c]=c;for(;c<256;c++)o[c]=t.length-1;e.WriteByte(5);var l=(t.length>1?1:0)|(t[0].do_stab?2:0);if(e.WriteByte(l),1&l&&e.WriteByte(t.length),2&l){var h=1<<t[0].sbits;h>0&&h--,e.WriteByte(h),d(e,o,256)}for(var u=0;u<t.length;u++){if(e.WriteUint16(t[u].context),e.WriteByte((t[u].do_qtab?128:0)|(t[u].do_delta?64:0)|(t[u].do_pos?32:0)|(t[u].do_qmap?16:0)|(t[u].do_sel?8:0)|(t[u].fixed_len?4:0)|(t[u].do_dedup?2:0)),t[u].do_qmap?e.WriteByte(t[u].nsym):e.WriteByte(t[u].max_sym),e.WriteByte(t[u].qbits<<4|t[u].qshift),e.WriteByte(t[u].qloc<<4|t[u].sloc),e.WriteByte(t[u].ploc<<4|t[u].dloc),t[u].do_qmap){t[u].max_sym=t[u].nsym;var f=0;for(c=0;c<256;c++)i[u][c]&&(e.WriteByte(c),i[u][c]=f++);for(;f<t[u].nsym;f++)e.WriteByte(0)}else for(c=0;c<256;c++)i[u][c]=c;if(t[u].qbits>0){for(c=0;c<256;c++)n[u][c]=c;t[u].do_qtab&&d(e,n[u],256)}if(t[u].pbits>0){for(c=0;c<1024;c++)r[u][c]=Math.min((1<<t[u].pbits)-1,c>>t[u].pshift);d(e,r[u],1024)}if(t[u].dbits>0){for(c=0;c<256;c++)a[c]>(1<<t[u].dbits)-1&&(a[c]=(1<<t[u].dbits)-1);for(c=0;c<256;c++)s[u][c]=a[Math.min(a.length-1,c>>t[u].dshift)];d(e,s[u],256)}}return e}(p,f,n,a,c,l,h);return function(e,t,i,n,r,a,c,l,h,d){var u=1<<r[0].sbits;u>0&&u--;for(var f=t.length,p=0,g=0;g<r.length;g++)p<r[g].max_sym&&(p=r[g].max_sym);for(var m=new Array(65536),w=0;w<65536;w++)m[w]=new s(p+1);var b=new Array(4);for(w=0;w<4;w++)b[w]=new s(256);new s(2),new s(2);for(var F=new s(u+1),v=new o(t),y=(g=0,w=0,0);w<f;){if(0==g){var A=n[y];r[0].sbits>0&&F.ModelEncode(e,v,A);var C=d[A],_=i[Math.min(i.length-1,y++)];r[C].fixed_len?r[C].fixed_len>0&&(b[0].ModelEncode(e,v,255&_),b[1].ModelEncode(e,v,_>>8&255),b[2].ModelEncode(e,v,_>>16&255),b[3].ModelEncode(e,v,_>>24&255),r[C].fixed_len=-1):(b[0].ModelEncode(e,v,255&_),b[1].ModelEncode(e,v,_>>8&255),b[2].ModelEncode(e,v,_>>16&255),b[3].ModelEncode(e,v,_>>24&255)),r[C].do_dedup&&process.exit(1),g=_;var x=0,k=r[C].context,I=0,S=0}var E=t[w++],N=a[C][E];m[k].ModelEncode(e,v,N),I=(I<<r[C].qshift)+c[C][N],k=r[C].context,k+=(I&(1<<r[C].qbits)-1)<<r[C].qloc,r[C].pbits>0&&(k+=l[C][Math.min(g,1023)]<<r[C].ploc),r[C].dbits>0&&(k+=h[C][Math.min(x,255)]<<r[C].dloc,x+=S!=N?1:0,S=N),r[C].do_sel&&(k+=A<<r[C].sloc),k&=65535,g--}return v.RangeFinishEncode(e),e.buf.slice(0,e.pos)}(p,e,t,i,f,n,a,c,l,h)}}},6960:(e,t,i)=>{var n=i(8287).Buffer,r=i(5460),s=i(8223),o=i(635),a=i(6038),c=i(5997);e.exports={r4x8_uncompress:function(e,t){r.decode(e).copy(t,0,0)},r4x16_uncompress:function(e,t){s.decode(e).copy(t,0,0)},arith_uncompress:function(e,t){o.decode(e).copy(t,0,0)},fqzcomp_uncompress:function(e,t){var i=new Array;a.decode(e,i).copy(t,0,0)},tok3_uncompress:function(e,t){var i=c.decode(e,0,"\0");n.from(i,"binary").copy(t,0,0)}}},8706:(e,t,i)=>{var n=i(8287).Buffer;e.exports=class{constructor(e,t=0,i=0){0!=i?(this.buf=n.allocUnsafe(i),this.length=i):(this.buf=e,this.length=e.length),this.pos=t}EOF(){return this.pos>=this.length}ReadData(e){var t=this.buf.slice(this.pos,this.pos+e);return this.pos+=e,t}ReadByte(){const e=this.buf[this.pos];return this.pos++,e}ReadChar(){const e=this.buf[this.pos];return this.pos++,String.fromCharCode(e)}ReadUint16(){return this.ReadByte()|this.ReadByte()<<8}ReadUint32(){const e=this.buf.readInt32LE(this.pos);return this.pos+=4,e}ReadString(){var e="";do{var t=this.buf[this.pos++];t&&(e+=String.fromCharCode(t))}while(t);return e}ReadUint7(){var e=0;do{var t=this.ReadByte();e=e<<7|127&t}while(128&t);return e}ReadITF8(){var e=this.buf[this.pos];return this.pos++,e>=240?(e=(15&e)<<28,e+=(this.buf[this.pos+0]<<20)+(this.buf[this.pos+1]<<12)+(this.buf[this.pos+2]<<4)+(this.buf[this.pos+3]>>4),this.pos+=4):e>=224?(e=(15&e)<<24,e+=(this.buf[this.pos+0]<<16)+(this.buf[this.pos+1]<<8)+(0|this.buf[this.pos+2]),this.pos+=3):e>=192?(e=(31&e)<<16,e+=(this.buf[this.pos+0]<<8)+(0|this.buf[this.pos+1]),this.pos+=2):e>=128&&(e=(63&e)<<8,e+=this.buf[this.pos],this.pos++),e}WriteByte(e){this.buf[this.pos++]=e}WriteChar(e){this.buf[this.pos++]=e.charCodeAt(0)}WriteString(e){for(var t=0;t<e.length;t++)this.buf[this.pos++]=e.charCodeAt(t);this.buf[this.pos++]=0}WriteData(e,t){for(var i=0;i<t;i++)this.buf[this.pos++]=e[i]}WriteStream(e){this.WriteData(e.buf,e.pos)}WriteUint16(e){this.WriteByte(255&e),this.WriteByte(e>>8&255)}WriteUint32(e){this.buf.writeInt32LE(e,this.pos),this.pos+=4}WriteUint7(e){var t=0,i=e;do{t+=7,i>>=7}while(i>0);do{t-=7,this.WriteByte((e>>t&127)+((t>0)<<7))}while(t>0)}WriteITF8(e){e<0&&(e=1+e),e<=127?this.buf[this.pos++]=e:e<=16383?(this.buf[this.pos++]=128|Math.floor(e/256),this.buf[this.pos++]=255&e):e<131071?(this.buf[this.pos++]=192|Math.floor(e/65536),this.buf[this.pos++]=255&Math.floor(e/256),this.buf[this.pos++]=255&e):e<268435455?(this.buf[this.pos++]=224|Math.floor(e/16777216),this.buf[this.pos++]=255&Math.floor(e/65536),this.buf[this.pos++]=255&Math.floor(e/256),this.buf[this.pos++]=255&e):(this.buf[this.pos++]=240|Math.floor(e/268435456),this.buf[this.pos++]=255&Math.floor(e/1048576),this.buf[this.pos++]=255&Math.floor(e/4096),this.buf[this.pos++]=255&Math.floor(e/4),this.buf[this.pos++]=15&e)}WriteByteNeg(e){this.buf[--this.pos]=e}}},5460:(e,t,i)=>{var n=i(8287).Buffer;const r=i(8706);function s(e){return 4095&e}function o(e,t){for(var i=0;t>=e[i+1];)i++;return i}function a(e){for(var t=new Array(4096),i=0,n=0;n<4096;n++){for(;n>=e[i+1];)i++;t[n]=i}return t}function c(e,t,i){return i*(e>>12)+(4095&e)-t}function l(e,t){for(;t<1<<23;)t=(t<<8)+e.ReadByte();return t}function h(e,t){t.WriteByteNeg(e>>24&255),t.WriteByteNeg(e>>16&255),t.WriteByteNeg(e>>8&255),t.WriteByteNeg(255&e)}function d(e,t,i,n,r){return e=function(e,t,i,n){for(var r=(1<<23>>n<<8)*i;e>=r;)t.WriteByteNeg(255&e),e>>=8;return e}(e,t,n,r),(Math.floor(e/n)<<r)+e%n+i}function u(e,t,i){for(var n=0;n<256;n++)t[n]=0;var r=e.ReadByte(),s=r,o=0;do{var a=e.ReadITF8();t[r]=a,o>0?(o--,r++):(r=e.ReadByte())==s+1&&(o=e.ReadByte()),s=r}while(0!=r);for(i[0]=0,n=0;n<=255;n++)i[n+1]=i[n]+t[n]}function f(e){for(var t=0,i=0;i<256;i++)t+=e[i];const n=4096;var r=n/t;do{var s=0,o=0,a=0;for(t=0,i=0;i<256;i++)0!=e[i]&&(s<e[i]&&(s=e[i],o=i),e[i]=Math.floor(e[i]*r),0==e[i]&&(e[i]=1),t+=e[i]);t<n?e[o]+=n-t:t-n<e[o]/2&&e[o]>2?e[o]-=t-n:t!=n&&(r*=.99,a=1)}while(a)}function p(e,t){for(var i=0,n=0;n<256;n++)if(t[n]){if(i>0)i--;else if(e.WriteByte(n),n>0&&t[n-1]>0){for(i=n+1;i<256&&t[i];i++);i-=n+1,e.WriteByte(i)}e.WriteITF8(t[n])}e.WriteByte(0)}e.exports={decode:function(e){var t=new r(e),i=t.ReadByte(),h=(t.ReadUint32(),t.ReadUint32());return 0==i?function(e,t){var i=new Array(256),r=new Array(256);u(e,i,r);for(var o=a(r),h=new Array(4),d=0;d<4;d++)h[d]=e.ReadUint32();var f=new n.allocUnsafe(t);for(d=0;d<t;d++){var p=d%4,g=o[s(h[p])];f[d]=g,h[p]=c(h[p],r[g],i[g]),h[p]=l(e,h[p])}return f}(t,h):function(e,t){var i=new Array(256),r=new Array(256);!function(e,t,i){for(var n=0;n<256;n++){t[n]=new Array(256),i[n]=new Array(256);for(var r=0;r<256;r++)t[n][r]=0}var s=e.ReadByte(),o=s,a=0;do{u(e,t[s],i[s]),a>0?(a--,s++):(s=e.ReadByte())==o+1&&(a=e.ReadByte()),o=s}while(0!=s)}(e,i,r);for(var h=new Array(256),d=0;d<256;d++)h[d]=a(r[d]);for(var f=new Array(4),p=new Array(4),g=0;g<4;g++)f[g]=e.ReadUint32(),p[g]=0;var m=new n.allocUnsafe(t),w=Math.floor(t/4);for(d=0;d<w;d++)for(g=0;g<4;g++){var b=s(f[g]),F=h[p[g]][b];m[d+g*w]=F,f[g]=c(f[g],r[p[g]][F],i[p[g]][F]),f[g]=l(e,f[g]),p[g]=F}for(d*=4;d<t;)b=s(f[3]),F=o(r[p[3]],b),m[d++]=F,f[3]=c(f[3],r[p[3]][F],i[p[3]][F]),f[3]=l(e,f[3]),p[3]=F;return m}(t,h)},encode:function(e,t){return 0==t?function(e){const t=e.length;var i=new r("",0,780);i.WriteByte(0),i.WriteUint32(0),i.WriteUint32(0);var s=new Array(256);(function(e,t){for(var i=0;i<256;i++)t[i]=0;for(i=0;i<e.length;i++)t[e[i]]++})(e,s),f(s),p(i,s);var o=new Array(256);o[0]=0;for(var a=1;a<256;a++)o[a]=o[a-1]+s[a-1];var c=new Array(4);for(a=0;a<4;a++)c[a]=1<<23;var l=Math.floor(1.05*t+100),u=new r("",l,l);for(a=t-1;a>=0;a--)c[a%4]=d(c[a%4],u,o[e[a]],s[e[a]],12);for(a=3;a>=0;a--)h(c[a],u);var g=i.pos;return i.buf.writeInt32LE(g-9+(u.length-u.pos),1),i.buf.writeInt32LE(t,5),n.concat([i.buf.slice(0,i.pos),u.buf.slice(u.pos,u.length)],i.pos+u.length-u.pos)}(e):function(e){const t=e.length;var i=new r("",0,198156);i.WriteByte(1),i.WriteUint32(0),i.WriteUint32(0);for(var s=new Array(256),o=new Array(256),a=new Array(256),c=0;c<256;c++)o[c]=new Array(256),a[c]=new Array(256);for(function(e,t,i){for(var n=0;n<256;n++){i[n]=0;for(var r=0;r<256;r++)t[n][r]=0}var s=0;for(n=0;n<e.length;n++)i[e[n]]++,t[s][e[n]]++,s=e[n];t[0][e[1*(e.length>>2)]]++,t[0][e[2*(e.length>>2)]]++,t[0][e[3*(e.length>>2)]]++,i[0]+=3}(e,o,s),function(e,t){for(var i=0;i<256;i++)t[i]&&f(e[i])}(o,s),function(e,t,i){for(var n=0,r=0;r<256;r++)if(i[r]){if(n>0)n--;else if(e.WriteByte(r),r>0&&i[r-1]>0){for(n=r+1;n<256&&i[n];n++);n-=r+1,e.WriteByte(n)}p(e,t[r])}e.WriteByte(0)}(i,o,s),c=0;c<256;c++)if(s[c]){a[c][0]=0;for(var l=1;l<256;l++)a[c][l]=a[c][l-1]+o[c][l-1]}var u=new Array(4),g=new Array(4);for(l=0;l<4;l++)u[l]=1<<23,g[l]=0;var m=new r("",t,t),w=Math.floor(t/4),b=new Array(4),F=new Array(4);for(l=0;l<4;l++)b[l]=(l+1)*w-2,F[l]=e[b[l]+1];for(F[3]=e[t-1],c=t-2;c>4*w-2;c--)u[3]=d(u[3],m,a[e[c]][F[3]],o[e[c]][F[3]],12),F[3]=e[c];for(;b[0]>=0;)for(l=3;l>=0;l--){var v=e[b[l]];u[l]=d(u[l],m,a[v][F[l]],o[v][F[l]],12),F[l]=v,b[l]--}for(l=3;l>=0;l--)u[l]=d(u[l],m,a[0][F[l]],o[0][F[l]],12);for(c=3;c>=0;c--)h(u[c],m);var y=i.pos;return i.buf.writeInt32LE(y-9+(m.length-m.pos),1),i.buf.writeInt32LE(t,5),n.concat([i.buf.slice(0,i.pos),m.buf.slice(m.pos,m.length)],i.pos+m.length-m.pos)}(e)}}},8223:(e,t,i)=>{var n=i(8287).Buffer;const r=i(8706);function s(e,t){return e&(1<<t)-1}function o(e,t){for(var i=0;t>=e[i+1];)i++;return i}function a(e,t){for(var i=1<<t,n=new Array(i),r=0,s=0;s<i;s++){for(;s>=e[r+1];)r++;n[s]=r}return n}function c(e,t,i,n){return i*(e>>n)+(e&(1<<n)-1)-t}function l(e,t){return t<32768&&(t=(t<<16)+e.ReadUint16()),t}function h(e,t){t.WriteByteNeg(e>>24&255),t.WriteByteNeg(e>>16&255),t.WriteByteNeg(e>>8&255),t.WriteByteNeg(255&e)}function d(e,t,i,n,r){return e=function(e,t,i,n){for(var r=(1<<31-n)*i;e>=r;)t.WriteByteNeg(e>>8&255),t.WriteByteNeg(255&e),e>>=16;return e}(e,t,n,r),(Math.floor(e/n)<<r)+e%n+i}function u(e,t,i){0==i&&(i=4);for(var n=new Array(i),s=new Array(i),o=0;o<i;o++)s[o]=Math.floor(t.length/i)+(t.length%i>o),n[o]=new Array(s[o]);for(var a=0,c=0;c<t.length;c+=i,a++)for(var l=0;l<i;l++)a<n[l].length&&(n[l][a]=t[c+l]);var h=new Array(i),d=0;for(o=0;o<i;o++){var u=p(n[o],0),f=p(n[o],1);h[o]=f.length<u.length?f:u,d+=h[o].length}var g=new r("",0,d+5*i+1);for(g.WriteByte(i),o=0;o<i;o++)g.WriteUint7(h[o].length);for(o=0;o<i;o++)g.WriteData(h[o],h[o].length);return g.buf.slice(0,g.buf.pos)}function f(e,t){var i=e.ReadByte(),h=1&i,d=8&i,u=32&i,p=64&i,w=128&i;if(16&i||(t=e.ReadUint7()),d)return function(e,t){for(var i=e.ReadByte(),r=new Array(i),s=new Array(i),o=0;o<i;o++)r[o]=e.ReadUint7();var a=new Array(i);for(o=0;o<i;o++)s[o]=Math.floor(t/i)+(t%i>o),a[o]=f(e,s[o]);var c=new n.allocUnsafe(t);for(o=0;o<i;o++)for(var l=0;l<s[o];l++)c[l*i+o]=a[o][l];return c}(e,t);if(w)var F=t,[v,y,t]=function(e){for(var t=e.ReadByte(),i=new Array(t),n=0;n<t;n++)i[n]=e.ReadByte();return[i,t,e.ReadUint7()]}(e);if(p)var A=t,[C,_,t]=function(e){var t=e.ReadUint7(),i=e.ReadUint7();if(1&t)var n=e.ReadData((t-1)/2);else{var s=e.ReadUint7();n=e.ReadData(s),n=m(new r(n),t/2)}n=new r(n);var o=new Array(256),a=n.ReadByte();0==a&&(a=256);for(var c=0;c<a;c++)o[n.ReadByte()]=1;return[o,n,i]}(e);if(u)var x=e.ReadData(t);else x=0==h?m(e,t):function(e,t){var i=(f=e.ReadByte())>>4,h=e;if(1&f){var d=e.ReadUint7(),u=e.ReadUint7(),f=new r(e.ReadData(u));h=new r(m(f,d))}var p=new Array(256),w=new Array(256);!function(e,t,i,n){for(var r=0;r<256;r++){t[r]=new Array(256),i[r]=new Array(256);for(var s=0;s<256;s++)t[r][s]=0}var o=g(e);for(r=0;r<256;r++)if(o[r]){var a=0;for(s=0;s<256;s++)o[s]&&(a>0?a--:(t[r][s]=e.ReadUint7(),0==t[r][s]&&(a=e.ReadByte())));for(b(t[r],n),i[r][0]=0,s=0;s<256;s++)i[r][s+1]=i[r][s]+t[r][s]}}(h,p,w,i);for(var F=new Array(256),v=0;v<256;v++)F[v]=a(w[v],i);for(var y=new Array(4),A=new Array(4),C=0;C<4;C++)y[C]=e.ReadUint32(),A[C]=0;var _=new n.allocUnsafe(t),x=Math.floor(t/4);for(v=0;v<x;v++)for(C=0;C<4;C++){var k=s(y[C],i),I=F[A[C]][k];_[v+C*x]=I,y[C]=c(y[C],w[A[C]][I],p[A[C]][I],i),y[C]=l(e,y[C]),A[C]=I}for(v*=4;v<t;)k=s(y[3],i),I=o(w[A[3]],k),_[v++]=I,y[3]=c(y[3],w[A[3]][I],p[A[3]][I],i),y[3]=l(e,y[3]),A[3]=I;return _}(e,t);return p&&(x=function(e,t,i,s){new r(e);for(var o=new n.allocUnsafe(s),a=0,c=0;a<s;c++){var l=e[c];if(t[l])for(var h=i.ReadUint7(),d=0;d<=h;d++)o[a++]=l;else o[a++]=l}return o}(x,C,_,A)),w&&(x=function(e,t,i,r){var s=new n.allocUnsafe(r),o=0;if(i<=1)for(var a=0;a<r;a++)s[a]=t[0];else if(i<=2)for(a=0;a<r;a++){if(a%8==0)var c=e[o++];s[a]=t[1&c],c>>=1}else if(i<=4)for(a=0;a<r;a++)a%4==0&&(c=e[o++]),s[a]=t[3&c],c>>=2;else if(i<=16)for(a=0;a<r;a++)a%2==0&&(c=e[o++]),s[a]=t[15&c],c>>=4;return s}(x,v,y,F)),x}function p(e,t){var i=new r("",0,10);i.WriteByte(t);var s=1&t,o=8&t,a=32&t,c=64&t,l=128&t,f=t>>8;if(16&t||i.WriteUint7(e.length),o)return n.concat([i.buf.slice(0,i.pos),u(0,e,f)]);var p=new n.alloc(0);l&&([p,e]=function(e){for(var t=new Array(256),i=0;i<256;i++)t[i]=0;for(i=0;i<e.length;i++)t[e[i]]++;var s=new Array(256),o=0;for(i=0;i<256;i++)t[i]>0&&(s[i]=o++);if(!(o>16)){if(o<=1)var a=new n.allocUnsafe(0);else if(o<=2){a=new n.allocUnsafe(Math.ceil(e.length/8));var c=-1;for(i=0;i<e.length;i++)i%8==0&&(a[++c]=0),a[c]+=s[e[i]]<<i%8}else if(o<=4)for(a=new n.allocUnsafe(Math.ceil(e.length/4)),c=-1,i=0;i<e.length;i++)i%4==0&&(a[++c]=0),a[c]+=s[e[i]]<<i%4*2;else for(a=new n.allocUnsafe(Math.ceil(e.length/2)),c=-1,i=0;i<e.length;i++)i%2==0&&(a[++c]=0),a[c]+=s[e[i]]<<i%2*4;var l=new r("",0,o+5);for(l.WriteByte(o),c=0,i=0;i<256;i++)t[i]>0&&(t[i]=c++,l.WriteByte(i));return l.WriteUint7(a.length),[l.buf.slice(0,l.pos),a]}}(e));var g=new n.alloc(0);if(c&&([g,e]=function(e){for(var t=new Array(256),i=0;i<256;i++)t[i]=0;var s=-1;for(i=0;i<e.length;i++)t[e[i]]+=e[i]==s?1:-1,s=e[i];var o=0;for(i=0;i<256;i++)t[i]>0&&o++;for(o||(o=1,t[0]=1),(h=new r("",0,o+1+e.length)).WriteByte(o),i=0;i<256;i++)t[i]>0&&h.WriteByte(i);var a=new n.allocUnsafe(e.length),c=0;for(i=0;i<e.length;i++)if(a[c++]=e[i],t[e[i]]>0){s=e[i];for(var l=0;i+l+1<e.length&&e[i+l+1]==s;)l++;h.WriteUint7(l),i+=l}var h,d=v(h.buf.slice(0,h.pos)),u=new r("",0,16);return u.WriteUint7(2*h.pos),u.WriteUint7(c),u.WriteUint7(d.length),[h=n.concat([u.buf.slice(0,u.pos),d]),a.slice(0,c)]}(e)),e.length<4&&1==s&&(s=0,i.buf[0]&=-2),a)var m=e;else m=0==s?v(e):function(e){const t=e.length;for(var i=new r("",0,198156),s=new Array(256),o=new Array(256),a=new Array(256),c=0;c<256;c++)o[c]=new Array(256),a[c]=new Array(256);(function(e,t,i){for(var n=0;n<256;n++){i[n]=0;for(var r=0;r<256;r++)t[n][r]=0}var s=0;for(n=0;n<e.length;n++)i[s]++,t[s][e[n]]++,s=e[n];i[s]++,t[0][e[1*(e.length>>2)]]++,t[0][e[2*(e.length>>2)]]++,t[0][e[3*(e.length>>2)]]++,i[0]+=3})(e,o,s),function(e,t){for(var i=0;i<256;i++)if(t[i]){var n=Math.ceil(Math.log2(t[i]));n>12&&(n=12),w(e[i],n)}}(o,s);var l=new r("",0,198156);!function(e,t,i){F(e,i);for(var n=0;n<256;n++)if(i[n])for(var r=0,s=0;s<256;s++)if(i[s])if(r)r--;else if(e.WriteUint7(t[n][s]),!t[n][s]){for(var o=s+1;o<256;o++)if(i[o]){if(0!=t[n][o])break;r++}e.WriteByte(r)}}(l,o,s);var u=v(l.buf.slice(0,l.pos));for(u.length<l.pos?(i.WriteByte(193),i.WriteUint7(l.pos),i.WriteUint7(u.length),i.WriteData(u,u.length)):(i.WriteByte(192),i.WriteData(l.buf,l.pos)),function(e,t){for(var i=0;i<256;i++)t[i]&&b(e[i],12)}(o,s),c=0;c<256;c++)if(s[c]){a[c][0]=0;for(var f=1;f<256;f++)a[c][f]=a[c][f-1]+o[c][f-1]}var p=new Array(4),g=new Array(4);for(f=0;f<4;f++)p[f]=32768,g[f]=0;var m=new r("",1.05*t+100|0,1.05*t+100|0),y=Math.floor(t/4),A=new Array(4),C=new Array(4);for(f=0;f<4;f++)A[f]=(f+1)*y-2,C[f]=e[A[f]+1];for(C[3]=e[t-1],c=t-2;c>4*y-2;c--)p[3]=d(p[3],m,a[e[c]][C[3]],o[e[c]][C[3]],12),C[3]=e[c];for(;A[0]>=0;)for(f=3;f>=0;f--){var _=e[A[f]];p[f]=d(p[f],m,a[_][C[f]],o[_][C[f]],12),C[f]=_,A[f]--}for(f=3;f>=0;f--)p[f]=d(p[f],m,a[0][C[f]],o[0][C[f]],12);for(c=3;c>=0;c--)h(p[c],m);return n.concat([i.buf.slice(0,i.pos),m.buf.slice(m.pos,m.length)],i.pos+m.length-m.pos)}(e);return n.concat([i.buf.slice(0,i.pos),p,g,m])}function g(e){for(var t=new Array(256),i=0;i<256;i++)t[i]=0;var n=0,r=e.ReadByte(),s=r;do{t[r]=1,n>0?(n--,r++):(r=e.ReadByte())==s+1&&(n=e.ReadByte()),s=r}while(0!=r);return t}function m(e,t){var i=new Array(256),r=new Array(256);!function(e,t,i){for(var n=0;n<256;n++)t[n]=0;var r=g(e);for(n=0;n<256;n++)r[n]>0&&(t[n]=e.ReadUint7());for(b(t,12),i[0]=0,n=0;n<=255;n++)i[n+1]=i[n]+t[n]}(e,i,r);for(var o=a(r,12),h=new Array(4),d=0;d<4;d++)h[d]=e.ReadUint32();var u=new n.allocUnsafe(t);for(d=0;d<t;d++){var f=d%4,p=o[s(h[f],12)];u[d]=p,h[f]=c(h[f],r[p],i[p],12),h[f]=l(e,h[f])}return u}function w(e,t){for(var i=0,n=0;n<256;n++)i+=e[n];const r=1<<t;var s=r/i;do{var o=0,a=0,c=0;for(i=0,n=0;n<256;n++)0!=e[n]&&(o<e[n]&&(o=e[n],a=n),e[n]=Math.floor(e[n]*s),0==e[n]&&(e[n]=1),i+=e[n]);i<r?e[a]+=r-i:i-r<e[a]/2&&e[a]>2?e[a]-=i-r:i!=r&&(s=r/i,c=1)}while(c)}function b(e,t){for(var i=0,n=0;n<256;n++)i+=e[n];if(0!=i&&i!=1<<t){for(var r=0;i<1<<t;)i*=2,r++;for(n=0;n<256;n++)e[n]<<=r}}function F(e,t){for(var i=0,n=0;n<256;n++)if(t[n])if(i>0)i--;else if(e.WriteByte(n),n>0&&t[n-1]>0){for(i=n+1;i<256&&t[i];i++);i-=n+1,e.WriteByte(i)}e.WriteByte(0)}function v(e){const t=e.length;var i=new r("",0,780),s=new Array(256);!function(e,t){for(var i=0;i<256;i++)t[i]=0;for(i=0;i<e.length;i++)t[e[i]]++}(e,s);var o=Math.ceil(Math.log2(t));o>12&&(o=12),w(s,o),function(e,t){F(e,t);for(var i=0;i<256;i++)t[i]&&e.WriteUint7(t[i])}(i,s),w(s,12);var a=new Array(256);a[0]=0;for(var c=1;c<256;c++)a[c]=a[c-1]+s[c-1];var l=new Array(4);for(c=0;c<4;c++)l[c]=32768;var u=new r("",1.05*t+100|0,1.05*t+100|0);for(c=t-1;c>=0;c--)l[c%4]=d(l[c%4],u,a[e[c]],s[e[c]],12);for(c=3;c>=0;c--)h(l[c],u);return n.concat([i.buf.slice(0,i.pos),u.buf.slice(u.pos,u.length)],i.pos+u.length-u.pos)}e.exports={decode:function(e){return f(new r(e),0)},encode:p}},5997:(e,t,i)=>{var n=i(8287).Buffer;const r=i(8706),s=i(8223);var o=new(i(635));function a(e,t){for(var i=e+"";i.length<t;)i="0"+i;return i}function c(e,t,i,n){var r=e[0][0].ReadByte(),s=n-e[0][r].ReadUint32();if(5==r)return t[n]=t[s],i[n]=i[s],t[n];var o=1;t[n]="",i[n]=new Array(256);do{switch(r=e[o][0].ReadByte()){case 2:i[n][o]=e[o][2].ReadChar();break;case 1:i[n][o]=e[o][1].ReadString();break;case 7:i[n][o]=e[o][7].ReadUint32();break;case 3:var c=e[o][3].ReadUint32(),l=e[o][4].ReadByte();i[n][o]=a(c,l);break;case 8:i[n][o]=(0|i[s][o])+e[o][8].ReadByte();break;case 9:c=(0|i[s][o])+e[o][9].ReadByte(),l=i[s][o].length,i[n][o]=a(c,l);break;case 10:i[n][o]=i[s][o];break;default:i[n][o]=""}t[n]+=i[n][o++]}while(12!=r);return t[n]}function l(e,t,i,n,r,s){for(var o=0;o<n.length;o++)if(!(i>0&&5==t[o][0].type)&&t[o][i])switch(e[0].WriteByte(t[o][i].type),t[o][i].type){case 6:e[6].WriteUint32(t[o][i].val);break;case 5:e[5].WriteUint32(t[o][i].val);break;case 1:e[1].WriteString(t[o][i].val);break;case 2:e[2].WriteChar(t[o][i].val);break;case 7:e[7].WriteUint32(t[o][i].val);break;case 3:e[3].WriteUint32(t[o][i].val),e[4].WriteByte(t[o][i].val.length);break;case 8:case 9:e[t[o][i].type].WriteByte(t[o][i].val)}}function h(e,t,i,n){for(var r=0;r<=12;r++)if(!(e[r].pos<=0)){n.WriteByte(r+(0==r?128:0)),e[r]=e[r].buf.slice(0,e[r].pos);var s=d(e[r],i);n.WriteUint7(s.length),n.WriteData(s,s.length)}}function d(e,t){var i,n=1<<30,r=[0,1,64,65,128,129,201];for(var a in r){var c=r[a];if(!(1&c&&e.length<100||8&c&&e.length%4!=0)){try{var l=t?o.encode(e,c):s.encode(e,c)}catch(e){l=0}l&&n>l.length&&(n=l.length,i=l)}}return i}function u(e,t,i,n,r){var s=0,o=r-1;e[r]=new Array(256),t[n]?e[r][0]={type:5,val:r-t[n]}:e[r][0]={type:6,val:0==r?0:1},t[n]=r;for(var a=n.match(/([a-zA-Z0-9]{1,9})|([^a-zA-Z0-9]+)/g),c=0;c<a.length;c++){var l=c+1,h=1,d=a[c];if(a[c].match(/^0+[0-9]*$/g)?h=3:a[c].match(/^[0-9]+$/g)?h=7:1==a[c].length&&(h=2),o>=0&&e[o][l])if(e[o][l].str==a[c])h=10,d="";else if(7==e[o][l].type||8==e[o][l].type){var u=d-e[o][l].str;i[l]++,u>=0&&u<256&&i[l]>r/2&&(h=8,d=u)}else 3!=e[o][l].type&&9!=e[o][l].type||e[o][l].str.length!=d.length||(u=d-e[o][l].str,i[l]++,u>=0&&u<256&&i[l]>r/2&&(h=9,d=u));e[r][l]={str:a[c],val:d,type:h},s<e[r][l].val.length+3&&(s=e[r][l].val.length+3)}return e[r][++l]={type:12},[l+1,s]}e.exports={encode:function(e,t){var i=e.toString();"\n"==i[i.length-1]&&(i=i.substring(0,i.length-1));var n=i.split("\n"),s=new r("",0,2*i.length+1e4);s.WriteUint32(i.length),s.WriteUint32(n.length),s.WriteByte(t);for(var o=new Array(n.length),a={},c=new Array(256).fill(0),d=0,f=0,p=0;p<n.length;p++){var[g,m]=u(o,a,c,n[p],p);d<g&&(d=g),f<m&&(f=m)}for(var w=0;w<d;w++){for(var b=new Array(13),F=0;F<=12;F++)b[F]=new r("",0,n.length*f);l(b,o,w,n),h(b,0,t,s)}return s.buf.slice(0,s.pos)},decode:function(e,t,i){(e=new r(e)).ReadUint32();var a=e.ReadUint32(),l=e.ReadByte(),h=function(e,t,i,a){for(var c=-1,l=new Array(256);!e.EOF();){var h=e.ReadByte(),d=128&h,u=64&h,f=63&h;if(d&&(l[++c]=new Array(13)),0!=f&&d){var p=new Array(a-1).fill(10);l[c][0]=new r(n.from([f].concat(p)))}if(u){var g=e.ReadByte(),m=e.ReadByte();l[c][f]=new r(l[g][m].buf)}else{var w=e.ReadUint7(),b=e.ReadData(w);l[c][f]=i?o.decode(b):s.decode(b),l[c][f]=new r(l[c][f])}}return l}(e,0,l,a),d=new Array(a),u=new Array(a),f="";void 0===i&&(i="\n");for(var p=0;p<a;p++)f+=c(h,d,u,p)+i;return f}}},7526:(e,t)=>{t.byteLength=function(e){var t=a(e),i=t[0],n=t[1];return 3*(i+n)/4-n},t.toByteArray=function(e){var t,i,s=a(e),o=s[0],c=s[1],l=new r(function(e,t,i){return 3*(t+i)/4-i}(0,o,c)),h=0,d=c>0?o-4:o;for(i=0;i<d;i+=4)t=n[e.charCodeAt(i)]<<18|n[e.charCodeAt(i+1)]<<12|n[e.charCodeAt(i+2)]<<6|n[e.charCodeAt(i+3)],l[h++]=t>>16&255,l[h++]=t>>8&255,l[h++]=255&t;return 2===c&&(t=n[e.charCodeAt(i)]<<2|n[e.charCodeAt(i+1)]>>4,l[h++]=255&t),1===c&&(t=n[e.charCodeAt(i)]<<10|n[e.charCodeAt(i+1)]<<4|n[e.charCodeAt(i+2)]>>2,l[h++]=t>>8&255,l[h++]=255&t),l},t.fromByteArray=function(e){for(var t,n=e.length,r=n%3,s=[],o=16383,a=0,l=n-r;a<l;a+=o)s.push(c(e,a,a+o>l?l:a+o));return 1===r?(t=e[n-1],s.push(i[t>>2]+i[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],s.push(i[t>>10]+i[t>>4&63]+i[t<<2&63]+"=")),s.join("")};for(var i=[],n=[],r="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0;o<64;++o)i[o]=s[o],n[s.charCodeAt(o)]=o;function a(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=e.indexOf("=");return-1===i&&(i=t),[i,i===t?0:4-i%4]}function c(e,t,n){for(var r,s,o=[],a=t;a<n;a+=3)r=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),o.push(i[(s=r)>>18&63]+i[s>>12&63]+i[s>>6&63]+i[63&s]);return o.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},8287:(e,t,i)=>{const n=i(7526),r=i(251),s="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;const o=2147483647;function a(e){if(e>o)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,i){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return l(e,t,i)}function l(e,t,i){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const i=0|g(e,t);let n=a(i);const r=n.write(e,t);return r!==i&&(n=n.slice(0,r)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return u(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return f(e,t,i);if("undefined"!=typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return f(e,t,i);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return c.from(n,t,i);const r=function(e){if(c.isBuffer(e)){const t=0|p(e.length),i=a(t);return 0===i.length||e.copy(i,0,0,t),i}return void 0!==e.length?"number"!=typeof e.length||Y(e.length)?a(0):u(e):"Buffer"===e.type&&Array.isArray(e.data)?u(e.data):void 0}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function h(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return h(e),a(e<0?0:0|p(e))}function u(e){const t=e.length<0?0:0|p(e.length),i=a(t);for(let n=0;n<t;n+=1)i[n]=255&e[n];return i}function f(e,t,i){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(i||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,t):new Uint8Array(e,t,i),Object.setPrototypeOf(n,c.prototype),n}function p(e){if(e>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|e}function g(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const i=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===i)return 0;let r=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return W(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return G(e).length;default:if(r)return n?-1:W(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,i){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return N(this,t,i);case"utf8":case"utf-8":return k(this,t,i);case"ascii":return S(this,t,i);case"latin1":case"binary":return E(this,t,i);case"base64":return x(this,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,t,i);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function w(e,t,i){const n=e[t];e[t]=e[i],e[i]=n}function b(e,t,i,n,r){if(0===e.length)return-1;if("string"==typeof i?(n=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),Y(i=+i)&&(i=r?0:e.length-1),i<0&&(i=e.length+i),i>=e.length){if(r)return-1;i=e.length-1}else if(i<0){if(!r)return-1;i=0}if("string"==typeof t&&(t=c.from(t,n)),c.isBuffer(t))return 0===t.length?-1:F(e,t,i,n,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,i):Uint8Array.prototype.lastIndexOf.call(e,t,i):F(e,[t],i,n,r);throw new TypeError("val must be string, number or Buffer")}function F(e,t,i,n,r){let s,o=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;o=2,a/=2,c/=2,i/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(r){let n=-1;for(s=i;s<a;s++)if(l(e,s)===l(t,-1===n?0:s-n)){if(-1===n&&(n=s),s-n+1===c)return n*o}else-1!==n&&(s-=s-n),n=-1}else for(i+c>a&&(i=a-c),s=i;s>=0;s--){let i=!0;for(let n=0;n<c;n++)if(l(e,s+n)!==l(t,n)){i=!1;break}if(i)return s}return-1}function v(e,t,i,n){i=Number(i)||0;const r=e.length-i;n?(n=Number(n))>r&&(n=r):n=r;const s=t.length;let o;for(n>s/2&&(n=s/2),o=0;o<n;++o){const n=parseInt(t.substr(2*o,2),16);if(Y(n))return o;e[i+o]=n}return o}function y(e,t,i,n){return $(W(t,e.length-i),e,i,n)}function A(e,t,i,n){return $(function(e){const t=[];for(let i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,i,n)}function C(e,t,i,n){return $(G(t),e,i,n)}function _(e,t,i,n){return $(function(e,t){let i,n,r;const s=[];for(let o=0;o<e.length&&!((t-=2)<0);++o)i=e.charCodeAt(o),n=i>>8,r=i%256,s.push(r),s.push(n);return s}(t,e.length-i),e,i,n)}function x(e,t,i){return 0===t&&i===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,i))}function k(e,t,i){i=Math.min(e.length,i);const n=[];let r=t;for(;r<i;){const t=e[r];let s=null,o=t>239?4:t>223?3:t>191?2:1;if(r+o<=i){let i,n,a,c;switch(o){case 1:t<128&&(s=t);break;case 2:i=e[r+1],128==(192&i)&&(c=(31&t)<<6|63&i,c>127&&(s=c));break;case 3:i=e[r+1],n=e[r+2],128==(192&i)&&128==(192&n)&&(c=(15&t)<<12|(63&i)<<6|63&n,c>2047&&(c<55296||c>57343)&&(s=c));break;case 4:i=e[r+1],n=e[r+2],a=e[r+3],128==(192&i)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&i)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(s=c))}}null===s?(s=65533,o=1):s>65535&&(s-=65536,n.push(s>>>10&1023|55296),s=56320|1023&s),n.push(s),r+=o}return function(e){const t=e.length;if(t<=I)return String.fromCharCode.apply(String,e);let i="",n=0;for(;n<t;)i+=String.fromCharCode.apply(String,e.slice(n,n+=I));return i}(n)}t.kMaxLength=o,c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,i){return l(e,t,i)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,i){return function(e,t,i){return h(e),e<=0?a(e):void 0!==t?"string"==typeof i?a(e).fill(t,i):a(e).fill(t):a(e)}(e,t,i)},c.allocUnsafe=function(e){return d(e)},c.allocUnsafeSlow=function(e){return d(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(K(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let i=e.length,n=t.length;for(let r=0,s=Math.min(i,n);r<s;++r)if(e[r]!==t[r]){i=e[r],n=t[r];break}return i<n?-1:n<i?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;const n=c.allocUnsafe(t);let r=0;for(i=0;i<e.length;++i){let t=e[i];if(K(t,Uint8Array))r+t.length>n.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(n,r)):Uint8Array.prototype.set.call(n,t,r);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,r)}r+=t.length}return n},c.byteLength=g,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)w(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)w(this,t,t+3),w(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)w(this,t,t+7),w(this,t+1,t+6),w(this,t+2,t+5),w(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?k(this,0,e):m.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const i=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,i).replace(/(.{2})/g,"$1 ").trim(),this.length>i&&(e+=" ... "),"<Buffer "+e+">"},s&&(c.prototype[s]=c.prototype.inspect),c.prototype.compare=function(e,t,i,n,r){if(K(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===i&&(i=e?e.length:0),void 0===n&&(n=0),void 0===r&&(r=this.length),t<0||i>e.length||n<0||r>this.length)throw new RangeError("out of range index");if(n>=r&&t>=i)return 0;if(n>=r)return-1;if(t>=i)return 1;if(this===e)return 0;let s=(r>>>=0)-(n>>>=0),o=(i>>>=0)-(t>>>=0);const a=Math.min(s,o),l=this.slice(n,r),h=e.slice(t,i);for(let e=0;e<a;++e)if(l[e]!==h[e]){s=l[e],o=h[e];break}return s<o?-1:o<s?1:0},c.prototype.includes=function(e,t,i){return-1!==this.indexOf(e,t,i)},c.prototype.indexOf=function(e,t,i){return b(this,e,t,i,!0)},c.prototype.lastIndexOf=function(e,t,i){return b(this,e,t,i,!1)},c.prototype.write=function(e,t,i,n){if(void 0===t)n="utf8",i=this.length,t=0;else if(void 0===i&&"string"==typeof t)n=t,i=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(i)?(i>>>=0,void 0===n&&(n="utf8")):(n=i,i=void 0)}const r=this.length-t;if((void 0===i||i>r)&&(i=r),e.length>0&&(i<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let s=!1;for(;;)switch(n){case"hex":return v(this,e,t,i);case"utf8":case"utf-8":return y(this,e,t,i);case"ascii":case"latin1":case"binary":return A(this,e,t,i);case"base64":return C(this,e,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,e,t,i);default:if(s)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),s=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const I=4096;function S(e,t,i){let n="";i=Math.min(e.length,i);for(let r=t;r<i;++r)n+=String.fromCharCode(127&e[r]);return n}function E(e,t,i){let n="";i=Math.min(e.length,i);for(let r=t;r<i;++r)n+=String.fromCharCode(e[r]);return n}function N(e,t,i){const n=e.length;(!t||t<0)&&(t=0),(!i||i<0||i>n)&&(i=n);let r="";for(let n=t;n<i;++n)r+=X[e[n]];return r}function B(e,t,i){const n=e.slice(t,i);let r="";for(let e=0;e<n.length-1;e+=2)r+=String.fromCharCode(n[e]+256*n[e+1]);return r}function M(e,t,i){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>i)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,i,n,r,s){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<s)throw new RangeError('"value" argument is out of bounds');if(i+n>e.length)throw new RangeError("Index out of range")}function D(e,t,i,n,r){q(t,n,r,e,i,7);let s=Number(t&BigInt(4294967295));e[i++]=s,s>>=8,e[i++]=s,s>>=8,e[i++]=s,s>>=8,e[i++]=s;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[i++]=o,o>>=8,e[i++]=o,o>>=8,e[i++]=o,o>>=8,e[i++]=o,i}function T(e,t,i,n,r){q(t,n,r,e,i,7);let s=Number(t&BigInt(4294967295));e[i+7]=s,s>>=8,e[i+6]=s,s>>=8,e[i+5]=s,s>>=8,e[i+4]=s;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[i+3]=o,o>>=8,e[i+2]=o,o>>=8,e[i+1]=o,o>>=8,e[i]=o,i+8}function L(e,t,i,n,r,s){if(i+n>e.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function z(e,t,i,n,s){return t=+t,i>>>=0,s||L(e,0,i,4),r.write(e,t,i,n,23,4),i+4}function H(e,t,i,n,s){return t=+t,i>>>=0,s||L(e,0,i,8),r.write(e,t,i,n,52,8),i+8}c.prototype.slice=function(e,t){const i=this.length;(e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,c.prototype),n},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,i){e>>>=0,t>>>=0,i||M(e,t,this.length);let n=this[e],r=1,s=0;for(;++s<t&&(r*=256);)n+=this[e+s]*r;return n},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,i){e>>>=0,t>>>=0,i||M(e,t,this.length);let n=this[e+--t],r=1;for(;t>0&&(r*=256);)n+=this[e+--t]*r;return n},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||M(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=Z((function(e){Q(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||V(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,r=this[++e]+256*this[++e]+65536*this[++e]+i*2**24;return BigInt(n)+(BigInt(r)<<BigInt(32))})),c.prototype.readBigUInt64BE=Z((function(e){Q(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||V(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],r=this[++e]*2**24+65536*this[++e]+256*this[++e]+i;return(BigInt(n)<<BigInt(32))+BigInt(r)})),c.prototype.readIntLE=function(e,t,i){e>>>=0,t>>>=0,i||M(e,t,this.length);let n=this[e],r=1,s=0;for(;++s<t&&(r*=256);)n+=this[e+s]*r;return r*=128,n>=r&&(n-=Math.pow(2,8*t)),n},c.prototype.readIntBE=function(e,t,i){e>>>=0,t>>>=0,i||M(e,t,this.length);let n=t,r=1,s=this[e+--n];for(;n>0&&(r*=256);)s+=this[e+--n]*r;return r*=128,s>=r&&(s-=Math.pow(2,8*t)),s},c.prototype.readInt8=function(e,t){return e>>>=0,t||M(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||M(e,2,this.length);const i=this[e]|this[e+1]<<8;return 32768&i?4294901760|i:i},c.prototype.readInt16BE=function(e,t){e>>>=0,t||M(e,2,this.length);const i=this[e+1]|this[e]<<8;return 32768&i?4294901760|i:i},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=Z((function(e){Q(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||V(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=Z((function(e){Q(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||V(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+i)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||M(e,4,this.length),r.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||M(e,4,this.length),r.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||M(e,8,this.length),r.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||M(e,8,this.length),r.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,i,n){e=+e,t>>>=0,i>>>=0,n||R(this,e,t,i,Math.pow(2,8*i)-1,0);let r=1,s=0;for(this[t]=255&e;++s<i&&(r*=256);)this[t+s]=e/r&255;return t+i},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,i,n){e=+e,t>>>=0,i>>>=0,n||R(this,e,t,i,Math.pow(2,8*i)-1,0);let r=i-1,s=1;for(this[t+r]=255&e;--r>=0&&(s*=256);)this[t+r]=e/s&255;return t+i},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=Z((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=Z((function(e,t=0){return T(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,i,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*i-1);R(this,e,t,i,n-1,-n)}let r=0,s=1,o=0;for(this[t]=255&e;++r<i&&(s*=256);)e<0&&0===o&&0!==this[t+r-1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+i},c.prototype.writeIntBE=function(e,t,i,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*i-1);R(this,e,t,i,n-1,-n)}let r=i-1,s=1,o=0;for(this[t+r]=255&e;--r>=0&&(s*=256);)e<0&&0===o&&0!==this[t+r+1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+i},c.prototype.writeInt8=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,i){return e=+e,t>>>=0,i||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=Z((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=Z((function(e,t=0){return T(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,i){return z(this,e,t,!0,i)},c.prototype.writeFloatBE=function(e,t,i){return z(this,e,t,!1,i)},c.prototype.writeDoubleLE=function(e,t,i){return H(this,e,t,!0,i)},c.prototype.writeDoubleBE=function(e,t,i){return H(this,e,t,!1,i)},c.prototype.copy=function(e,t,i,n){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<i&&(n=i),n===i)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-i&&(n=e.length-t+i);const r=n-i;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,i,n):Uint8Array.prototype.set.call(e,this.subarray(i,n),t),r},c.prototype.fill=function(e,t,i,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,i=this.length):"string"==typeof i&&(n=i,i=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!c.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<i)throw new RangeError("Out of range index");if(i<=t)return this;let r;if(t>>>=0,i=void 0===i?this.length:i>>>0,e||(e=0),"number"==typeof e)for(r=t;r<i;++r)this[r]=e;else{const s=c.isBuffer(e)?e:c.from(e,n),o=s.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(r=0;r<i-t;++r)this[r+t]=s[r%o]}return this};const P={};function O(e,t,i){P[e]=class extends i{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function U(e){let t="",i=e.length;const n="-"===e[0]?1:0;for(;i>=n+4;i-=3)t=`_${e.slice(i-3,i)}${t}`;return`${e.slice(0,i)}${t}`}function q(e,t,i,n,r,s){if(e>i||e<t){const n="bigint"==typeof t?"n":"";let r;throw r=s>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(s+1)}${n}`:`>= -(2${n} ** ${8*(s+1)-1}${n}) and < 2 ** ${8*(s+1)-1}${n}`:`>= ${t}${n} and <= ${i}${n}`,new P.ERR_OUT_OF_RANGE("value",r,e)}!function(e,t,i){Q(t,"offset"),void 0!==e[t]&&void 0!==e[t+i]||V(t,e.length-(i+1))}(n,r,s)}function Q(e,t){if("number"!=typeof e)throw new P.ERR_INVALID_ARG_TYPE(t,"number",e)}function V(e,t,i){if(Math.floor(e)!==e)throw Q(e,i),new P.ERR_OUT_OF_RANGE(i||"offset","an integer",e);if(t<0)throw new P.ERR_BUFFER_OUT_OF_BOUNDS;throw new P.ERR_OUT_OF_RANGE(i||"offset",`>= ${i?1:0} and <= ${t}`,e)}O("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),O("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),O("ERR_OUT_OF_RANGE",(function(e,t,i){let n=`The value of "${e}" is out of range.`,r=i;return Number.isInteger(i)&&Math.abs(i)>2**32?r=U(String(i)):"bigint"==typeof i&&(r=String(i),(i>BigInt(2)**BigInt(32)||i<-(BigInt(2)**BigInt(32)))&&(r=U(r)),r+="n"),n+=` It must be ${t}. Received ${r}`,n}),RangeError);const j=/[^+/0-9A-Za-z-_]/g;function W(e,t){let i;t=t||1/0;const n=e.length;let r=null;const s=[];for(let o=0;o<n;++o){if(i=e.charCodeAt(o),i>55295&&i<57344){if(!r){if(i>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===n){(t-=3)>-1&&s.push(239,191,189);continue}r=i;continue}if(i<56320){(t-=3)>-1&&s.push(239,191,189),r=i;continue}i=65536+(r-55296<<10|i-56320)}else r&&(t-=3)>-1&&s.push(239,191,189);if(r=null,i<128){if((t-=1)<0)break;s.push(i)}else if(i<2048){if((t-=2)<0)break;s.push(i>>6|192,63&i|128)}else if(i<65536){if((t-=3)<0)break;s.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return s}function G(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function $(e,t,i,n){let r;for(r=0;r<n&&!(r+i>=t.length||r>=e.length);++r)t[r+i]=e[r];return r}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const X=function(){const e="0123456789abcdef",t=new Array(256);for(let i=0;i<16;++i){const n=16*i;for(let r=0;r<16;++r)t[n+r]=e[i]+e[r]}return t}();function Z(e){return"undefined"==typeof BigInt?J:e}function J(){throw new Error("BigInt not supported")}},235:e=>{var t={array:function(e){var t=0,i=0,n=[0,1,3,7,15,31,63,127,255];return function(r){for(var s=0;r>0;){var o=8-t;r>=o?(s<<=o,s|=n[o]&e[i++],t=0,r-=o):(s<<=r,s|=(e[i]&n[r]<<8-r-t)>>8-r-t,t+=r,r=0)}return s}},simple:function(e){var i,n,r=t.header(e),s=[],o=0;do{-1!=(n=t.decompress(e,r))&&(s.push(n),o+=n.byteLength)}while(-1!=n);i=new Uint8Array(o),o=0;for(var a=0;a<s.length;++a)n=s[a],i.set(n,o),o+=n.byteLength;return i},header:function(e){if(4348520!=e(24))throw"No magic number found";var t=e(8)-48;if(t<1||t>9)throw"Not a BZIP archive";return t},decompress:function(e,t,i){for(var n=9e5,r="",s=0;s<6;s++)r+=e(8).toString(16);if("177245385090"==r)return-1;if("314159265359"!=r)throw"eek not valid bzip data";if(e(32),e(1))throw"unsupported obsolete version";var o=e(24);if(o>n)throw"Initial position larger than buffer size";var a=e(16),c=new Uint8Array(256),l=0;for(s=0;s<16;s++)if(a&1<<15-s){var h=e(16);for(g=0;g<16;g++)h&1<<15-g&&(c[l++]=16*s+g)}var d=e(3);if(d<2||d>6)throw"another error";var u=e(15);if(0==u)throw"meh";var f=[];for(s=0;s<d;s++)f[s]=s;var p=new Uint8Array(32768);for(s=0;s<u;s++){for(var g=0;e(1);g++)if(g>=d)throw"whoops another error";var m=f[g];f.splice(g,1),f.splice(0,0,m),p[s]=m}var w=l+2,b=[];for(g=0;g<d;g++){var F,v,y,A=new Uint8Array(258),C=new Uint8Array(21);for(a=e(5),s=0;s<w;s++){for(;;){if(a<1||a>20)throw"I gave up a while ago on writing error messages";if(!e(1))break;e(1)?a--:a++}A[s]=a}for(F=v=A[0],s=1;s<w;s++)A[s]>v?v=A[s]:A[s]<F&&(F=A[s]);(y=b[g]={}).permute=new Uint32Array(258),y.limit=new Uint32Array(21),y.base=new Uint32Array(21),y.minLen=F,y.maxLen=v;var _=y.base.subarray(1),x=y.limit.subarray(1),k=0;for(s=F;s<=v;s++)for(a=0;a<w;a++)A[a]==s&&(y.permute[k++]=a);for(s=F;s<=v;s++)C[s]=x[s]=0;for(s=0;s<w;s++)C[A[s]]++;for(k=a=0,s=F;s<v;s++)k+=C[s],x[s]=k-1,k<<=1,_[s+1]=k-(a+=C[s]);x[v]=k+C[v]-1,_[F]=0}var I,S,E,N=new Uint32Array(256);for(s=0;s<256;s++)f[s]=s;I=S=w=E=0;for(var B=new Uint32Array(n);;){if(!w--){if(w=49,E>=u)throw"meow i'm a kitty, that's an error";_=(y=b[p[E++]]).base.subarray(1),x=y.limit.subarray(1)}for(g=e(s=y.minLen);;){if(s>y.maxLen)throw"rawr i'm a dinosaur";if(g<=x[s])break;s++,g=g<<1|e(1)}if((g-=_[s])<0||g>=258)throw"moo i'm a cow";var M=y.permute[g];if(0!=M&&1!=M){if(I){if(I=0,S+a>=n)throw"Boom.";for(N[m=c[f[0]]]+=a;a--;)B[S++]=m}if(M>l)break;if(S>=n)throw"I can't think of anything. Error";m=f[s=M-1],f.splice(s,1),f.splice(0,0,m),N[m=c[m]]++,B[S++]=m}else I||(I=1,a=0),a+=0==M?I:2*I,I<<=1}if(o<0||o>=S)throw"I'm a monkey and I'm throwing something at someone, namely you";for(g=0,s=0;s<256;s++)h=g+N[s],N[s]=g,g=h;for(s=0;s<S;s++)B[N[m=255&B[s]]]|=s<<8,N[m]++;var R=0,D=0,T=0;S&&(D=255&(R=B[o]),R>>=8,T=-1);var L,z,H,P=new Uint8Array(n),O=0;for(i||(i=1/0);S;){for(S--,z=D,D=255&(R=B[R]),R>>=8,3==T++?(L=D,H=z,D=-1):(L=1,H=D);L--;)if(P[O++]=H,! --i)return P;D!=z&&(T=0)}return P.subarray(0,O)}};e.exports=t},2151:e=>{var t={utf8:{stringToBytes:function(e){return t.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(t.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],i=0;i<e.length;i++)t.push(255&e.charCodeAt(i));return t},bytesToString:function(e){for(var t=[],i=0;i<e.length;i++)t.push(String.fromCharCode(e[i]));return t.join("")}}};e.exports=t},3939:e=>{var t,i;t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&i.rotl(e,8)|4278255360&i.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=i.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],i=0,n=0;i<e.length;i++,n+=8)t[n>>>5]|=e[i]<<24-n%32;return t},wordsToBytes:function(e){for(var t=[],i=0;i<32*e.length;i+=8)t.push(e[i>>>5]>>>24-i%32&255);return t},bytesToHex:function(e){for(var t=[],i=0;i<e.length;i++)t.push((e[i]>>>4).toString(16)),t.push((15&e[i]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],i=0;i<e.length;i+=2)t.push(parseInt(e.substr(i,2),16));return t},bytesToBase64:function(e){for(var i=[],n=0;n<e.length;n+=3)for(var r=e[n]<<16|e[n+1]<<8|e[n+2],s=0;s<4;s++)8*n+6*s<=8*e.length?i.push(t.charAt(r>>>6*(3-s)&63)):i.push("=");return i.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var i=[],n=0,r=0;n<e.length;r=++n%4)0!=r&&i.push((t.indexOf(e.charAt(n-1))&Math.pow(2,-2*r+8)-1)<<2*r|t.indexOf(e.charAt(n))>>>6-2*r);return i}},e.exports=i},1113:(e,t,i)=>{i.r(t),i.d(t,{BlobFile:()=>l,LocalFile:()=>r(),RemoteFile:()=>a,fromUrl:()=>h,open:()=>d});var n=i(3617),r=i.n(n),s=i(8287);function o(e){return("object"==typeof e&&null!==e&&"message"in e?e.message:`${e}`).replace(/\.$/,"")}class a{async getBufferFromResponse(e){const t=await e.arrayBuffer();return s.Buffer.from(t)}constructor(e,t={}){this.baseOverrides={},this.url=e;const i=t.fetch||globalThis.fetch.bind(globalThis);if(!i)throw new TypeError("no fetch function supplied, and none found in global environment");t.overrides&&(this.baseOverrides=t.overrides),this.fetchImplementation=i}async fetch(e,t){let i;try{i=await this.fetchImplementation(e,t)}catch(n){if(!`${n}`.includes("Failed to fetch"))throw new Error(`${o(n)} fetching ${e}`,{cause:n});console.warn(`generic-filehandle: refetching ${e} to attempt to work around chrome CORS header caching bug`);try{i=await this.fetchImplementation(e,{...t,cache:"reload"})}catch(t){throw new Error(`${o(t)} fetching ${e}`,{cause:t})}}return i}async read(e,t=0,i,n=0,r={}){const{headers:s={},signal:o,overrides:a={}}=r;i<1/0?s.range=`bytes=${n}-${n+i}`:i===1/0&&0!==n&&(s.range=`bytes=${n}-`);const c=await this.fetch(this.url,{...this.baseOverrides,...a,headers:{...s,...a.headers,...this.baseOverrides.headers},method:"GET",redirect:"follow",mode:"cors",signal:o});if(!c.ok)throw new Error(`HTTP ${c.status} fetching ${this.url}`);if(200===c.status&&0===n||206===c.status){const n=await this.getBufferFromResponse(c),r=n.copy(e,t,0,Math.min(i,n.length)),s=c.headers.get("content-range"),o=/\/(\d+)$/.exec(s||"");return(null==o?void 0:o[1])&&(this._stat={size:parseInt(o[1],10)}),{bytesRead:r,buffer:e}}if(200===c.status)throw new Error(`${this.url} fetch returned status 200, expected 206`);throw new Error(`HTTP ${c.status} fetching ${this.url}`)}async readFile(e={}){let t,i;"string"==typeof e?(t=e,i={}):(t=e.encoding,i=e,delete i.encoding);const{headers:n={},signal:r,overrides:s={}}=i,o=await this.fetch(this.url,{headers:n,method:"GET",redirect:"follow",mode:"cors",signal:r,...this.baseOverrides,...s});if(200!==o.status)throw new Error(`HTTP ${o.status} fetching ${this.url}`);if("utf8"===t)return o.text();if(t)throw new Error(`unsupported encoding: ${t}`);return this.getBufferFromResponse(o)}async stat(){if(!this._stat){const e=s.Buffer.allocUnsafe(10);if(await this.read(e,0,10,0),!this._stat)throw new Error(`unable to determine size of file at ${this.url}`)}return this._stat}async close(){}}function c(e){const t=new FileReader;return new Promise(((i,n)=>{t.onerror=()=>{t.abort(),n(new Error("problem reading blob"))},t.onabort=()=>{n(new Error("blob reading was aborted"))},t.onload=()=>{t.result&&"string"!=typeof t.result?i(t.result):n(new Error("unknown error reading blob"))},t.readAsArrayBuffer(e)}))}class l{constructor(e){this.blob=e,this.size=e.size}async read(e,t=0,i,n=0){if(!i)return{bytesRead:0,buffer:e};const r=n,o=r+i,a=await c(this.blob.slice(r,o)),l=s.Buffer.from(a);return{bytesRead:l.copy(e,t),buffer:l}}async readFile(e){const t="string"==typeof e?e:null==e?void 0:e.encoding;if("utf8"===t)return function(e){const t=new FileReader;return new Promise(((i,n)=>{t.onerror=()=>{t.abort(),n(new Error("problem reading blob"))},t.onabort=()=>{n(new Error("blob reading was aborted"))},t.onload=()=>{t.result&&"string"==typeof t.result?i(t.result):n(new Error("unknown error reading blob"))},t.readAsText(e)}))}(this.blob);if(t)throw new Error(`unsupported encoding: ${t}`);const i=await c(this.blob);return s.Buffer.from(i)}async stat(){return{size:this.size}}async close(){}}function h(e,t={}){return new a(e,t)}function d(e,t,i,n={}){if(void 0!==i)return i;if(void 0!==e)return h(e,n);if(void 0!==t)return new(r())(t,n);throw new Error("no url, path, or filehandle provided, cannot open")}},251:(e,t)=>{t.read=function(e,t,i,n,r){var s,o,a=8*r-n-1,c=(1<<a)-1,l=c>>1,h=-7,d=i?r-1:0,u=i?-1:1,f=e[t+d];for(d+=u,s=f&(1<<-h)-1,f>>=-h,h+=a;h>0;s=256*s+e[t+d],d+=u,h-=8);for(o=s&(1<<-h)-1,s>>=-h,h+=n;h>0;o=256*o+e[t+d],d+=u,h-=8);if(0===s)s=1-l;else{if(s===c)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,n),s-=l}return(f?-1:1)*o*Math.pow(2,s-n)},t.write=function(e,t,i,n,r,s){var o,a,c,l=8*s-r-1,h=(1<<l)-1,d=h>>1,u=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:s-1,p=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,o=h):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),(t+=o+d>=1?u/c:u*Math.pow(2,1-d))*c>=2&&(o++,c/=2),o+d>=h?(a=0,o=h):o+d>=1?(a=(t*c-1)*Math.pow(2,r),o+=d):(a=t*Math.pow(2,d-1)*Math.pow(2,r),o=0));r>=8;e[i+f]=255&a,f+=p,a/=256,r-=8);for(o=o<<r|a,l+=r;l>0;e[i+f]=255&o,f+=p,o/=256,l-=8);e[i+f-p]|=128*g}},8570:e=>{e.exports=i;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function i(e,t,i){this.low=0|e,this.high=0|t,this.unsigned=!!i}function n(e){return!0===(e&&e.__isLong__)}i.prototype.__isLong__,Object.defineProperty(i.prototype,"__isLong__",{value:!0}),i.isLong=n;var r={},s={};function o(e,t){var i,n,o;return t?(o=0<=(e>>>=0)&&e<256)&&(n=s[e])?n:(i=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=i),i):(o=-128<=(e|=0)&&e<128)&&(n=r[e])?n:(i=c(e,e<0?-1:0,!1),o&&(r[e]=i),i)}function a(e,t){if(isNaN(e))return t?w:m;if(t){if(e<0)return w;if(e>=f)return A}else{if(e<=-p)return C;if(e+1>=p)return y}return e<0?a(-e,t).neg():c(e%u|0,e/u|0,t)}function c(e,t,n){return new i(e,t,n)}i.fromInt=o,i.fromNumber=a,i.fromBits=c;var l=Math.pow;function h(e,t,i){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(i=t,t=!1):t=!!t,(i=i||10)<2||36<i)throw RangeError("radix");var n;if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return h(e.substring(1),t,i).neg();for(var r=a(l(i,8)),s=m,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),i);if(c<8){var u=a(l(i,c));s=s.mul(u).add(a(d))}else s=(s=s.mul(r)).add(a(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?a(e,t):"string"==typeof e?h(e,t):c(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}i.fromString=h,i.fromValue=d;var u=4294967296,f=u*u,p=f/2,g=o(1<<24),m=o(0);i.ZERO=m;var w=o(0,!0);i.UZERO=w;var b=o(1);i.ONE=b;var F=o(1,!0);i.UONE=F;var v=o(-1);i.NEG_ONE=v;var y=c(-1,2147483647,!1);i.MAX_VALUE=y;var A=c(-1,-1,!0);i.MAX_UNSIGNED_VALUE=A;var C=c(0,-2147483648,!1);i.MIN_VALUE=C;var _=i.prototype;_.toInt=function(){return this.unsigned?this.low>>>0:this.low},_.toNumber=function(){return this.unsigned?(this.high>>>0)*u+(this.low>>>0):this.high*u+(this.low>>>0)},_.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(C)){var t=a(e),i=this.div(t),n=i.mul(t).sub(this);return i.toString(e)+n.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=a(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),h=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return h+o;for(;h.length<6;)h="0"+h;o=""+h+o}},_.getHighBits=function(){return this.high},_.getHighBitsUnsigned=function(){return this.high>>>0},_.getLowBits=function(){return this.low},_.getLowBitsUnsigned=function(){return this.low>>>0},_.getNumBitsAbs=function(){if(this.isNegative())return this.eq(C)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},_.isZero=function(){return 0===this.high&&0===this.low},_.eqz=_.isZero,_.isNegative=function(){return!this.unsigned&&this.high<0},_.isPositive=function(){return this.unsigned||this.high>=0},_.isOdd=function(){return!(1&~this.low)},_.isEven=function(){return!(1&this.low)},_.equals=function(e){return n(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},_.eq=_.equals,_.notEquals=function(e){return!this.eq(e)},_.neq=_.notEquals,_.ne=_.notEquals,_.lessThan=function(e){return this.comp(e)<0},_.lt=_.lessThan,_.lessThanOrEqual=function(e){return this.comp(e)<=0},_.lte=_.lessThanOrEqual,_.le=_.lessThanOrEqual,_.greaterThan=function(e){return this.comp(e)>0},_.gt=_.greaterThan,_.greaterThanOrEqual=function(e){return this.comp(e)>=0},_.gte=_.greaterThanOrEqual,_.ge=_.greaterThanOrEqual,_.compare=function(e){if(n(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),i=e.isNegative();return t&&!i?-1:!t&&i?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},_.comp=_.compare,_.negate=function(){return!this.unsigned&&this.eq(C)?C:this.not().add(b)},_.neg=_.negate,_.add=function(e){n(e)||(e=d(e));var t=this.high>>>16,i=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,l=e.low>>>16,h=0,u=0,f=0,p=0;return f+=(p+=s+(65535&e.low))>>>16,u+=(f+=r+l)>>>16,h+=(u+=i+a)>>>16,h+=t+o,c((f&=65535)<<16|(p&=65535),(h&=65535)<<16|(u&=65535),this.unsigned)},_.subtract=function(e){return n(e)||(e=d(e)),this.add(e.neg())},_.sub=_.subtract,_.multiply=function(e){if(this.isZero())return m;if(n(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(C))return e.isOdd()?C:m;if(e.eq(C))return this.isOdd()?C:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return a(this.toNumber()*e.toNumber(),this.unsigned);var i=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,h=65535&e.high,u=e.low>>>16,f=65535&e.low,p=0,w=0,b=0,F=0;return b+=(F+=o*f)>>>16,w+=(b+=s*f)>>>16,b&=65535,w+=(b+=o*u)>>>16,p+=(w+=r*f)>>>16,w&=65535,p+=(w+=s*u)>>>16,w&=65535,p+=(w+=o*h)>>>16,p+=i*f+r*u+s*h+o*l,c((b&=65535)<<16|(F&=65535),(p&=65535)<<16|(w&=65535),this.unsigned)},_.mul=_.multiply,_.divide=function(e){if(n(e)||(e=d(e)),e.isZero())throw Error("division by zero");var i,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?w:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return F;s=w}else{if(this.eq(C))return e.eq(b)||e.eq(v)?C:e.eq(C)?b:(i=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?b:v:(r=this.sub(e.mul(i)),s=i.add(r.div(e)));if(e.eq(C))return this.unsigned?w:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=m}for(r=this;r.gte(e);){i=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(i)/Math.LN2),h=o<=48?1:l(2,o-48),u=a(i),f=u.mul(e);f.isNegative()||f.gt(r);)f=(u=a(i-=h,this.unsigned)).mul(e);u.isZero()&&(u=b),s=s.add(u),r=r.sub(f)}return s},_.div=_.divide,_.modulo=function(e){return n(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},_.mod=_.modulo,_.rem=_.modulo,_.not=function(){return c(~this.low,~this.high,this.unsigned)},_.and=function(e){return n(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},_.or=function(e){return n(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},_.xor=function(e){return n(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},_.shiftLeft=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},_.shl=_.shiftLeft,_.shiftRight=function(e){return n(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},_.shr=_.shiftRight,_.shiftRightUnsigned=function(e){if(n(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},_.shru=_.shiftRightUnsigned,_.shr_u=_.shiftRightUnsigned,_.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},_.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},_.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},_.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},_.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},i.fromBytes=function(e,t,n){return n?i.fromBytesLE(e,t):i.fromBytesBE(e,t)},i.fromBytesLE=function(e,t){return new i(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},i.fromBytesBE=function(e,t){return new i(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},3503:(e,t,i)=>{var n,r,s,o,a;n=i(3939),r=i(2151).utf8,s=i(652),o=i(2151).bin,(a=function(e,t){e.constructor==String?e=t&&"binary"===t.encoding?o.stringToBytes(e):r.stringToBytes(e):s(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||e.constructor===Uint8Array||(e=e.toString());for(var i=n.bytesToWords(e),c=8*e.length,l=1732584193,h=-271733879,d=-1732584194,u=271733878,f=0;f<i.length;f++)i[f]=16711935&(i[f]<<8|i[f]>>>24)|4278255360&(i[f]<<24|i[f]>>>8);i[c>>>5]|=128<<c%32,i[14+(c+64>>>9<<4)]=c;var p=a._ff,g=a._gg,m=a._hh,w=a._ii;for(f=0;f<i.length;f+=16){var b=l,F=h,v=d,y=u;l=p(l,h,d,u,i[f+0],7,-680876936),u=p(u,l,h,d,i[f+1],12,-389564586),d=p(d,u,l,h,i[f+2],17,606105819),h=p(h,d,u,l,i[f+3],22,-1044525330),l=p(l,h,d,u,i[f+4],7,-176418897),u=p(u,l,h,d,i[f+5],12,1200080426),d=p(d,u,l,h,i[f+6],17,-1473231341),h=p(h,d,u,l,i[f+7],22,-45705983),l=p(l,h,d,u,i[f+8],7,1770035416),u=p(u,l,h,d,i[f+9],12,-1958414417),d=p(d,u,l,h,i[f+10],17,-42063),h=p(h,d,u,l,i[f+11],22,-1990404162),l=p(l,h,d,u,i[f+12],7,1804603682),u=p(u,l,h,d,i[f+13],12,-40341101),d=p(d,u,l,h,i[f+14],17,-1502002290),l=g(l,h=p(h,d,u,l,i[f+15],22,1236535329),d,u,i[f+1],5,-165796510),u=g(u,l,h,d,i[f+6],9,-1069501632),d=g(d,u,l,h,i[f+11],14,643717713),h=g(h,d,u,l,i[f+0],20,-373897302),l=g(l,h,d,u,i[f+5],5,-701558691),u=g(u,l,h,d,i[f+10],9,38016083),d=g(d,u,l,h,i[f+15],14,-660478335),h=g(h,d,u,l,i[f+4],20,-405537848),l=g(l,h,d,u,i[f+9],5,568446438),u=g(u,l,h,d,i[f+14],9,-1019803690),d=g(d,u,l,h,i[f+3],14,-187363961),h=g(h,d,u,l,i[f+8],20,1163531501),l=g(l,h,d,u,i[f+13],5,-1444681467),u=g(u,l,h,d,i[f+2],9,-51403784),d=g(d,u,l,h,i[f+7],14,1735328473),l=m(l,h=g(h,d,u,l,i[f+12],20,-1926607734),d,u,i[f+5],4,-378558),u=m(u,l,h,d,i[f+8],11,-2022574463),d=m(d,u,l,h,i[f+11],16,1839030562),h=m(h,d,u,l,i[f+14],23,-35309556),l=m(l,h,d,u,i[f+1],4,-1530992060),u=m(u,l,h,d,i[f+4],11,1272893353),d=m(d,u,l,h,i[f+7],16,-155497632),h=m(h,d,u,l,i[f+10],23,-1094730640),l=m(l,h,d,u,i[f+13],4,681279174),u=m(u,l,h,d,i[f+0],11,-358537222),d=m(d,u,l,h,i[f+3],16,-722521979),h=m(h,d,u,l,i[f+6],23,76029189),l=m(l,h,d,u,i[f+9],4,-640364487),u=m(u,l,h,d,i[f+12],11,-421815835),d=m(d,u,l,h,i[f+15],16,530742520),l=w(l,h=m(h,d,u,l,i[f+2],23,-995338651),d,u,i[f+0],6,-198630844),u=w(u,l,h,d,i[f+7],10,1126891415),d=w(d,u,l,h,i[f+14],15,-1416354905),h=w(h,d,u,l,i[f+5],21,-57434055),l=w(l,h,d,u,i[f+12],6,1700485571),u=w(u,l,h,d,i[f+3],10,-1894986606),d=w(d,u,l,h,i[f+10],15,-1051523),h=w(h,d,u,l,i[f+1],21,-2054922799),l=w(l,h,d,u,i[f+8],6,1873313359),u=w(u,l,h,d,i[f+15],10,-30611744),d=w(d,u,l,h,i[f+6],15,-1560198380),h=w(h,d,u,l,i[f+13],21,1309151649),l=w(l,h,d,u,i[f+4],6,-145523070),u=w(u,l,h,d,i[f+11],10,-1120210379),d=w(d,u,l,h,i[f+2],15,718787259),h=w(h,d,u,l,i[f+9],21,-343485551),l=l+b>>>0,h=h+F>>>0,d=d+v>>>0,u=u+y>>>0}return n.endian([l,h,d,u])})._ff=function(e,t,i,n,r,s,o){var a=e+(t&i|~t&n)+(r>>>0)+o;return(a<<s|a>>>32-s)+t},a._gg=function(e,t,i,n,r,s,o){var a=e+(t&n|i&~n)+(r>>>0)+o;return(a<<s|a>>>32-s)+t},a._hh=function(e,t,i,n,r,s,o){var a=e+(t^i^n)+(r>>>0)+o;return(a<<s|a>>>32-s)+t},a._ii=function(e,t,i,n,r,s,o){var a=e+(i^(t|~n))+(r>>>0)+o;return(a<<s|a>>>32-s)+t},a._blocksize=16,a._digestsize=16,e.exports=function(e,t){if(null==e)throw new Error("Illegal argument "+e);var i=n.wordsToBytes(a(e,t));return t&&t.asBytes?i:t&&t.asString?o.bytesToString(i):n.bytesToHex(i)}},652:e=>{function t(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}e.exports=function(e){return null!=e&&(t(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&t(e.slice(0,0))}(e)||!!e._isBuffer)}},1668:(e,t,i)=>{var n={};(0,i(9805).assign)(n,i(3303),i(7083),i(9681)),e.exports=n},3303:(e,t,i)=>{var n=i(8411),r=i(9805),s=i(1996),o=i(4674),a=i(4442),c=Object.prototype.toString,l=0,h=-1,d=0,u=8;function f(e){if(!(this instanceof f))return new f(e);this.options=r.assign({level:h,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:d,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new a,this.strm.avail_out=0;var i=n.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(i!==l)throw new Error(o[i]);if(t.header&&n.deflateSetHeader(this.strm,t.header),t.dictionary){var p;if(p="string"==typeof t.dictionary?s.string2buf(t.dictionary):"[object ArrayBuffer]"===c.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(i=n.deflateSetDictionary(this.strm,p))!==l)throw new Error(o[i]);this._dict_set=!0}}function p(e,t){var i=new f(t);if(i.push(e,!0),i.err)throw i.msg||o[i.err];return i.result}f.prototype.push=function(e,t){var i,o,a=this.strm,h=this.options.chunkSize;if(this.ended)return!1;o=t===~~t?t:!0===t?4:0,"string"==typeof e?a.input=s.string2buf(e):"[object ArrayBuffer]"===c.call(e)?a.input=new Uint8Array(e):a.input=e,a.next_in=0,a.avail_in=a.input.length;do{if(0===a.avail_out&&(a.output=new r.Buf8(h),a.next_out=0,a.avail_out=h),1!==(i=n.deflate(a,o))&&i!==l)return this.onEnd(i),this.ended=!0,!1;0!==a.avail_out&&(0!==a.avail_in||4!==o&&2!==o)||("string"===this.options.to?this.onData(s.buf2binstring(r.shrinkBuf(a.output,a.next_out))):this.onData(r.shrinkBuf(a.output,a.next_out)))}while((a.avail_in>0||0===a.avail_out)&&1!==i);return 4===o?(i=n.deflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===l):2!==o||(this.onEnd(l),a.avail_out=0,!0)},f.prototype.onData=function(e){this.chunks.push(e)},f.prototype.onEnd=function(e){e===l&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Deflate=f,t.deflate=p,t.deflateRaw=function(e,t){return(t=t||{}).raw=!0,p(e,t)},t.gzip=function(e,t){return(t=t||{}).gzip=!0,p(e,t)}},7083:(e,t,i)=>{var n=i(1447),r=i(9805),s=i(1996),o=i(9681),a=i(4674),c=i(4442),l=i(7414),h=Object.prototype.toString;function d(e){if(!(this instanceof d))return new d(e);this.options=r.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(15&t.windowBits||(t.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var i=n.inflateInit2(this.strm,t.windowBits);if(i!==o.Z_OK)throw new Error(a[i]);if(this.header=new l,n.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=s.string2buf(t.dictionary):"[object ArrayBuffer]"===h.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=n.inflateSetDictionary(this.strm,t.dictionary))!==o.Z_OK))throw new Error(a[i])}function u(e,t){var i=new d(t);if(i.push(e,!0),i.err)throw i.msg||a[i.err];return i.result}d.prototype.push=function(e,t){var i,a,c,l,d,u=this.strm,f=this.options.chunkSize,p=this.options.dictionary,g=!1;if(this.ended)return!1;a=t===~~t?t:!0===t?o.Z_FINISH:o.Z_NO_FLUSH,"string"==typeof e?u.input=s.binstring2buf(e):"[object ArrayBuffer]"===h.call(e)?u.input=new Uint8Array(e):u.input=e,u.next_in=0,u.avail_in=u.input.length;do{if(0===u.avail_out&&(u.output=new r.Buf8(f),u.next_out=0,u.avail_out=f),(i=n.inflate(u,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&p&&(i=n.inflateSetDictionary(this.strm,p)),i===o.Z_BUF_ERROR&&!0===g&&(i=o.Z_OK,g=!1),i!==o.Z_STREAM_END&&i!==o.Z_OK)return this.onEnd(i),this.ended=!0,!1;u.next_out&&(0!==u.avail_out&&i!==o.Z_STREAM_END&&(0!==u.avail_in||a!==o.Z_FINISH&&a!==o.Z_SYNC_FLUSH)||("string"===this.options.to?(c=s.utf8border(u.output,u.next_out),l=u.next_out-c,d=s.buf2string(u.output,c),u.next_out=l,u.avail_out=f-l,l&&r.arraySet(u.output,u.output,c,l,0),this.onData(d)):this.onData(r.shrinkBuf(u.output,u.next_out)))),0===u.avail_in&&0===u.avail_out&&(g=!0)}while((u.avail_in>0||0===u.avail_out)&&i!==o.Z_STREAM_END);return i===o.Z_STREAM_END&&(a=o.Z_FINISH),a===o.Z_FINISH?(i=n.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===o.Z_OK):a!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),u.avail_out=0,!0)},d.prototype.onData=function(e){this.chunks.push(e)},d.prototype.onEnd=function(e){e===o.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=r.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Inflate=d,t.inflate=u,t.inflateRaw=function(e,t){return(t=t||{}).raw=!0,u(e,t)},t.ungzip=u},9805:(e,t)=>{var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;function n(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var i=t.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(var r in i)n(i,r)&&(e[r]=i[r])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var r={arraySet:function(e,t,i,n,r){if(t.subarray&&e.subarray)e.set(t.subarray(i,i+n),r);else for(var s=0;s<n;s++)e[r+s]=t[i+s]},flattenChunks:function(e){var t,i,n,r,s,o;for(n=0,t=0,i=e.length;t<i;t++)n+=e[t].length;for(o=new Uint8Array(n),r=0,t=0,i=e.length;t<i;t++)s=e[t],o.set(s,r),r+=s.length;return o}},s={arraySet:function(e,t,i,n,r){for(var s=0;s<n;s++)e[r+s]=t[i+s]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,r)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,s))},t.setTyped(i)},1996:(e,t,i)=>{var n=i(9805),r=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){r=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var o=new n.Buf8(256),a=0;a<256;a++)o[a]=a>=252?6:a>=248?5:a>=240?4:a>=224?3:a>=192?2:1;function c(e,t){if(t<65534&&(e.subarray&&s||!e.subarray&&r))return String.fromCharCode.apply(null,n.shrinkBuf(e,t));for(var i="",o=0;o<t;o++)i+=String.fromCharCode(e[o]);return i}o[254]=o[254]=1,t.string2buf=function(e){var t,i,r,s,o,a=e.length,c=0;for(s=0;s<a;s++)55296==(64512&(i=e.charCodeAt(s)))&&s+1<a&&56320==(64512&(r=e.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),c+=i<128?1:i<2048?2:i<65536?3:4;for(t=new n.Buf8(c),o=0,s=0;o<c;s++)55296==(64512&(i=e.charCodeAt(s)))&&s+1<a&&56320==(64512&(r=e.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),i<128?t[o++]=i:i<2048?(t[o++]=192|i>>>6,t[o++]=128|63&i):i<65536?(t[o++]=224|i>>>12,t[o++]=128|i>>>6&63,t[o++]=128|63&i):(t[o++]=240|i>>>18,t[o++]=128|i>>>12&63,t[o++]=128|i>>>6&63,t[o++]=128|63&i);return t},t.buf2binstring=function(e){return c(e,e.length)},t.binstring2buf=function(e){for(var t=new n.Buf8(e.length),i=0,r=t.length;i<r;i++)t[i]=e.charCodeAt(i);return t},t.buf2string=function(e,t){var i,n,r,s,a=t||e.length,l=new Array(2*a);for(n=0,i=0;i<a;)if((r=e[i++])<128)l[n++]=r;else if((s=o[r])>4)l[n++]=65533,i+=s-1;else{for(r&=2===s?31:3===s?15:7;s>1&&i<a;)r=r<<6|63&e[i++],s--;s>1?l[n++]=65533:r<65536?l[n++]=r:(r-=65536,l[n++]=55296|r>>10&1023,l[n++]=56320|1023&r)}return c(l,n)},t.utf8border=function(e,t){var i;for((t=t||e.length)>e.length&&(t=e.length),i=t-1;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+o[e[i]]>t?i:t}},3269:e=>{e.exports=function(e,t,i,n){for(var r=65535&e,s=e>>>16&65535,o=0;0!==i;){i-=o=i>2e3?2e3:i;do{s=s+(r=r+t[n++]|0)|0}while(--o);r%=65521,s%=65521}return r|s<<16}},9681:e=>{e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},4823:e=>{var t=function(){for(var e,t=[],i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t}();e.exports=function(e,i,n,r){var s=t,o=r+n;e^=-1;for(var a=r;a<o;a++)e=e>>>8^s[255&(e^i[a])];return~e}},8411:(e,t,i)=>{var n,r=i(9805),s=i(3665),o=i(3269),a=i(4823),c=i(4674),l=0,h=0,d=-2,u=2,f=8,p=286,g=30,m=19,w=2*p+1,b=15,F=3,v=258,y=v+F+1,A=42,C=103,_=113,x=666;function k(e,t){return e.msg=c[t],t}function I(e){return(e<<1)-(e>4?9:0)}function S(e){for(var t=e.length;--t>=0;)e[t]=0}function E(e){var t=e.state,i=t.pending;i>e.avail_out&&(i=e.avail_out),0!==i&&(r.arraySet(e.output,t.pending_buf,t.pending_out,i,e.next_out),e.next_out+=i,t.pending_out+=i,e.total_out+=i,e.avail_out-=i,t.pending-=i,0===t.pending&&(t.pending_out=0))}function N(e,t){s._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,E(e.strm)}function B(e,t){e.pending_buf[e.pending++]=t}function M(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function R(e,t,i,n){var s=e.avail_in;return s>n&&(s=n),0===s?0:(e.avail_in-=s,r.arraySet(t,e.input,e.next_in,s,i),1===e.state.wrap?e.adler=o(e.adler,t,s,i):2===e.state.wrap&&(e.adler=a(e.adler,t,s,i)),e.next_in+=s,e.total_in+=s,s)}function D(e,t){var i,n,r=e.max_chain_length,s=e.strstart,o=e.prev_length,a=e.nice_match,c=e.strstart>e.w_size-y?e.strstart-(e.w_size-y):0,l=e.window,h=e.w_mask,d=e.prev,u=e.strstart+v,f=l[s+o-1],p=l[s+o];e.prev_length>=e.good_match&&(r>>=2),a>e.lookahead&&(a=e.lookahead);do{if(l[(i=t)+o]===p&&l[i+o-1]===f&&l[i]===l[s]&&l[++i]===l[s+1]){s+=2,i++;do{}while(l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&s<u);if(n=v-(u-s),s=u-v,n>o){if(e.match_start=t,o=n,n>=a)break;f=l[s+o-1],p=l[s+o]}}}while((t=d[t&h])>c&&0!=--r);return o<=e.lookahead?o:e.lookahead}function T(e){var t,i,n,s,o,a=e.w_size;do{if(s=e.window_size-e.lookahead-e.strstart,e.strstart>=a+(a-y)){r.arraySet(e.window,e.window,a,a,0),e.match_start-=a,e.strstart-=a,e.block_start-=a,t=i=e.hash_size;do{n=e.head[--t],e.head[t]=n>=a?n-a:0}while(--i);t=i=a;do{n=e.prev[--t],e.prev[t]=n>=a?n-a:0}while(--i);s+=a}if(0===e.strm.avail_in)break;if(i=R(e.strm,e.window,e.strstart+e.lookahead,s),e.lookahead+=i,e.lookahead+e.insert>=F)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+F-1])&e.hash_mask,e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<F)););}while(e.lookahead<y&&0!==e.strm.avail_in)}function L(e,t){for(var i,n;;){if(e.lookahead<y){if(T(e),e.lookahead<y&&t===l)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=F&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+F-1])&e.hash_mask,i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==i&&e.strstart-i<=e.w_size-y&&(e.match_length=D(e,i)),e.match_length>=F)if(n=s._tr_tally(e,e.strstart-e.match_start,e.match_length-F),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=F){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+F-1])&e.hash_mask,i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<F-1?e.strstart:F-1,4===t?(N(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?1:2}function z(e,t){for(var i,n,r;;){if(e.lookahead<y){if(T(e),e.lookahead<y&&t===l)return 1;if(0===e.lookahead)break}if(i=0,e.lookahead>=F&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+F-1])&e.hash_mask,i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=F-1,0!==i&&e.prev_length<e.max_lazy_match&&e.strstart-i<=e.w_size-y&&(e.match_length=D(e,i),e.match_length<=5&&(1===e.strategy||e.match_length===F&&e.strstart-e.match_start>4096)&&(e.match_length=F-1)),e.prev_length>=F&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-F,n=s._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-F),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+F-1])&e.hash_mask,i=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=F-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if((n=s._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=s._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<F-1?e.strstart:F-1,4===t?(N(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?1:2}function H(e,t,i,n,r){this.good_length=e,this.max_lazy=t,this.nice_length=i,this.max_chain=n,this.func=r}function P(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=f,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(2*w),this.dyn_dtree=new r.Buf16(2*(2*g+1)),this.bl_tree=new r.Buf16(2*(2*m+1)),S(this.dyn_ltree),S(this.dyn_dtree),S(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16(b+1),this.heap=new r.Buf16(2*p+1),S(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(2*p+1),S(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function O(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=u,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?A:_,e.adler=2===t.wrap?0:1,t.last_flush=l,s._tr_init(t),h):k(e,d)}function U(e){var t,i=O(e);return i===h&&((t=e.state).window_size=2*t.w_size,S(t.head),t.max_lazy_match=n[t.level].max_lazy,t.good_match=n[t.level].good_length,t.nice_match=n[t.level].nice_length,t.max_chain_length=n[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=F-1,t.match_available=0,t.ins_h=0),i}function q(e,t,i,n,s,o){if(!e)return d;var a=1;if(-1===t&&(t=6),n<0?(a=0,n=-n):n>15&&(a=2,n-=16),s<1||s>9||i!==f||n<8||n>15||t<0||t>9||o<0||o>4)return k(e,d);8===n&&(n=9);var c=new P;return e.state=c,c.strm=e,c.wrap=a,c.gzhead=null,c.w_bits=n,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=s+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+F-1)/F),c.window=new r.Buf8(2*c.w_size),c.head=new r.Buf16(c.hash_size),c.prev=new r.Buf16(c.w_size),c.lit_bufsize=1<<s+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new r.Buf8(c.pending_buf_size),c.d_buf=1*c.lit_bufsize,c.l_buf=3*c.lit_bufsize,c.level=t,c.strategy=o,c.method=i,U(e)}n=[new H(0,0,0,0,(function(e,t){var i=65535;for(i>e.pending_buf_size-5&&(i=e.pending_buf_size-5);;){if(e.lookahead<=1){if(T(e),0===e.lookahead&&t===l)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+i;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-y&&(N(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(N(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),1)})),new H(4,4,8,4,L),new H(4,5,16,8,L),new H(4,6,32,32,L),new H(4,4,16,16,z),new H(8,16,32,32,z),new H(8,16,128,128,z),new H(8,32,128,256,z),new H(32,128,258,1024,z),new H(32,258,258,4096,z)],t.deflateInit=function(e,t){return q(e,t,f,15,8,0)},t.deflateInit2=q,t.deflateReset=U,t.deflateResetKeep=O,t.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?d:(e.state.gzhead=t,h):d},t.deflate=function(e,t){var i,r,o,c;if(!e||!e.state||t>5||t<0)return e?k(e,d):d;if(r=e.state,!e.output||!e.input&&0!==e.avail_in||r.status===x&&4!==t)return k(e,0===e.avail_out?-5:d);if(r.strm=e,i=r.last_flush,r.last_flush=t,r.status===A)if(2===r.wrap)e.adler=0,B(r,31),B(r,139),B(r,8),r.gzhead?(B(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),B(r,255&r.gzhead.time),B(r,r.gzhead.time>>8&255),B(r,r.gzhead.time>>16&255),B(r,r.gzhead.time>>24&255),B(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),B(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(B(r,255&r.gzhead.extra.length),B(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=a(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(B(r,0),B(r,0),B(r,0),B(r,0),B(r,0),B(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),B(r,3),r.status=_);else{var u=f+(r.w_bits-8<<4)<<8;u|=(r.strategy>=2||r.level<2?0:r.level<6?1:6===r.level?2:3)<<6,0!==r.strstart&&(u|=32),u+=31-u%31,r.status=_,M(r,u),0!==r.strstart&&(M(r,e.adler>>>16),M(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(o=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),E(e),o=r.pending,r.pending!==r.pending_buf_size));)B(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),E(e),o=r.pending,r.pending===r.pending_buf_size)){c=1;break}c=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,B(r,c)}while(0!==c);r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),0===c&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){o=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),E(e),o=r.pending,r.pending===r.pending_buf_size)){c=1;break}c=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,B(r,c)}while(0!==c);r.gzhead.hcrc&&r.pending>o&&(e.adler=a(e.adler,r.pending_buf,r.pending-o,o)),0===c&&(r.status=C)}else r.status=C;if(r.status===C&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&E(e),r.pending+2<=r.pending_buf_size&&(B(r,255&e.adler),B(r,e.adler>>8&255),e.adler=0,r.status=_)):r.status=_),0!==r.pending){if(E(e),0===e.avail_out)return r.last_flush=-1,h}else if(0===e.avail_in&&I(t)<=I(i)&&4!==t)return k(e,-5);if(r.status===x&&0!==e.avail_in)return k(e,-5);if(0!==e.avail_in||0!==r.lookahead||t!==l&&r.status!==x){var p=2===r.strategy?function(e,t){for(var i;;){if(0===e.lookahead&&(T(e),0===e.lookahead)){if(t===l)return 1;break}if(e.match_length=0,i=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,i&&(N(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(N(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?1:2}(r,t):3===r.strategy?function(e,t){for(var i,n,r,o,a=e.window;;){if(e.lookahead<=v){if(T(e),e.lookahead<=v&&t===l)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=F&&e.strstart>0&&(n=a[r=e.strstart-1])===a[++r]&&n===a[++r]&&n===a[++r]){o=e.strstart+v;do{}while(n===a[++r]&&n===a[++r]&&n===a[++r]&&n===a[++r]&&n===a[++r]&&n===a[++r]&&n===a[++r]&&n===a[++r]&&r<o);e.match_length=v-(o-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=F?(i=s._tr_tally(e,1,e.match_length-F),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(i=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),i&&(N(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(N(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?1:2}(r,t):n[r.level].func(r,t);if(3!==p&&4!==p||(r.status=x),1===p||3===p)return 0===e.avail_out&&(r.last_flush=-1),h;if(2===p&&(1===t?s._tr_align(r):5!==t&&(s._tr_stored_block(r,0,0,!1),3===t&&(S(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),E(e),0===e.avail_out))return r.last_flush=-1,h}return 4!==t?h:r.wrap<=0?1:(2===r.wrap?(B(r,255&e.adler),B(r,e.adler>>8&255),B(r,e.adler>>16&255),B(r,e.adler>>24&255),B(r,255&e.total_in),B(r,e.total_in>>8&255),B(r,e.total_in>>16&255),B(r,e.total_in>>24&255)):(M(r,e.adler>>>16),M(r,65535&e.adler)),E(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?h:1)},t.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==A&&69!==t&&73!==t&&91!==t&&t!==C&&t!==_&&t!==x?k(e,d):(e.state=null,t===_?k(e,-3):h):d},t.deflateSetDictionary=function(e,t){var i,n,s,a,c,l,u,f,p=t.length;if(!e||!e.state)return d;if(2===(a=(i=e.state).wrap)||1===a&&i.status!==A||i.lookahead)return d;for(1===a&&(e.adler=o(e.adler,t,p,0)),i.wrap=0,p>=i.w_size&&(0===a&&(S(i.head),i.strstart=0,i.block_start=0,i.insert=0),f=new r.Buf8(i.w_size),r.arraySet(f,t,p-i.w_size,i.w_size,0),t=f,p=i.w_size),c=e.avail_in,l=e.next_in,u=e.input,e.avail_in=p,e.next_in=0,e.input=t,T(i);i.lookahead>=F;){n=i.strstart,s=i.lookahead-(F-1);do{i.ins_h=(i.ins_h<<i.hash_shift^i.window[n+F-1])&i.hash_mask,i.prev[n&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=n,n++}while(--s);i.strstart=n,i.lookahead=F-1,T(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=F-1,i.match_available=0,e.next_in=l,e.input=u,e.avail_in=c,i.wrap=a,h},t.deflateInfo="pako deflate (from Nodeca project)"},7414:e=>{e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},7293:e=>{e.exports=function(e,t){var i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v,y,A,C,_,x,k;i=e.state,n=e.next_in,x=e.input,r=n+(e.avail_in-5),s=e.next_out,k=e.output,o=s-(t-e.avail_out),a=s+(e.avail_out-257),c=i.dmax,l=i.wsize,h=i.whave,d=i.wnext,u=i.window,f=i.hold,p=i.bits,g=i.lencode,m=i.distcode,w=(1<<i.lenbits)-1,b=(1<<i.distbits)-1;e:do{p<15&&(f+=x[n++]<<p,p+=8,f+=x[n++]<<p,p+=8),F=g[f&w];t:for(;;){if(f>>>=v=F>>>24,p-=v,0==(v=F>>>16&255))k[s++]=65535&F;else{if(!(16&v)){if(64&v){if(32&v){i.mode=12;break e}e.msg="invalid literal/length code",i.mode=30;break e}F=g[(65535&F)+(f&(1<<v)-1)];continue t}for(y=65535&F,(v&=15)&&(p<v&&(f+=x[n++]<<p,p+=8),y+=f&(1<<v)-1,f>>>=v,p-=v),p<15&&(f+=x[n++]<<p,p+=8,f+=x[n++]<<p,p+=8),F=m[f&b];;){if(f>>>=v=F>>>24,p-=v,16&(v=F>>>16&255)){if(A=65535&F,p<(v&=15)&&(f+=x[n++]<<p,(p+=8)<v&&(f+=x[n++]<<p,p+=8)),(A+=f&(1<<v)-1)>c){e.msg="invalid distance too far back",i.mode=30;break e}if(f>>>=v,p-=v,A>(v=s-o)){if((v=A-v)>h&&i.sane){e.msg="invalid distance too far back",i.mode=30;break e}if(C=0,_=u,0===d){if(C+=l-v,v<y){y-=v;do{k[s++]=u[C++]}while(--v);C=s-A,_=k}}else if(d<v){if(C+=l+d-v,(v-=d)<y){y-=v;do{k[s++]=u[C++]}while(--v);if(C=0,d<y){y-=v=d;do{k[s++]=u[C++]}while(--v);C=s-A,_=k}}}else if(C+=d-v,v<y){y-=v;do{k[s++]=u[C++]}while(--v);C=s-A,_=k}for(;y>2;)k[s++]=_[C++],k[s++]=_[C++],k[s++]=_[C++],y-=3;y&&(k[s++]=_[C++],y>1&&(k[s++]=_[C++]))}else{C=s-A;do{k[s++]=k[C++],k[s++]=k[C++],k[s++]=k[C++],y-=3}while(y>2);y&&(k[s++]=k[C++],y>1&&(k[s++]=k[C++]))}break}if(64&v){e.msg="invalid distance code",i.mode=30;break e}F=m[(65535&F)+(f&(1<<v)-1)]}}break}}while(n<r&&s<a);n-=y=p>>3,f&=(1<<(p-=y<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<r?r-n+5:5-(n-r),e.avail_out=s<a?a-s+257:257-(s-a),i.hold=f,i.bits=p}},1447:(e,t,i)=>{var n=i(9805),r=i(3269),s=i(4823),o=i(7293),a=i(1998),c=0,l=-2,h=1,d=12,u=30,f=852,p=592;function g(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function m(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new n.Buf16(320),this.work=new n.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function w(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=h,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new n.Buf32(f),t.distcode=t.distdyn=new n.Buf32(p),t.sane=1,t.back=-1,c):l}function b(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,w(e)):l}function F(e,t){var i,n;return e&&e.state?(n=e.state,t<0?(i=0,t=-t):(i=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?l:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,b(e))):l}function v(e,t){var i,n;return e?(n=new m,e.state=n,n.window=null,(i=F(e,t))!==c&&(e.state=null),i):l}var y,A,C=!0;function _(e){if(C){var t;for(y=new n.Buf32(512),A=new n.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(a(1,e.lens,0,288,y,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;a(2,e.lens,0,32,A,0,e.work,{bits:5}),C=!1}e.lencode=y,e.lenbits=9,e.distcode=A,e.distbits=5}function x(e,t,i,r){var s,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new n.Buf8(o.wsize)),r>=o.wsize?(n.arraySet(o.window,t,i-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((s=o.wsize-o.wnext)>r&&(s=r),n.arraySet(o.window,t,i-r,s,o.wnext),(r-=s)?(n.arraySet(o.window,t,i-r,r,0),o.wnext=r,o.whave=o.wsize):(o.wnext+=s,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=s))),0}t.inflateReset=b,t.inflateReset2=F,t.inflateResetKeep=w,t.inflateInit=function(e){return v(e,15)},t.inflateInit2=v,t.inflate=function(e,t){var i,f,p,m,w,b,F,v,y,A,C,k,I,S,E,N,B,M,R,D,T,L,z,H,P=0,O=new n.Buf8(4),U=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return l;(i=e.state).mode===d&&(i.mode=13),w=e.next_out,p=e.output,F=e.avail_out,m=e.next_in,f=e.input,b=e.avail_in,v=i.hold,y=i.bits,A=b,C=F,L=c;e:for(;;)switch(i.mode){case h:if(0===i.wrap){i.mode=13;break}for(;y<16;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(2&i.wrap&&35615===v){i.check=0,O[0]=255&v,O[1]=v>>>8&255,i.check=s(i.check,O,2,0),v=0,y=0,i.mode=2;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&v)<<8)+(v>>8))%31){e.msg="incorrect header check",i.mode=u;break}if(8!=(15&v)){e.msg="unknown compression method",i.mode=u;break}if(y-=4,T=8+(15&(v>>>=4)),0===i.wbits)i.wbits=T;else if(T>i.wbits){e.msg="invalid window size",i.mode=u;break}i.dmax=1<<T,e.adler=i.check=1,i.mode=512&v?10:d,v=0,y=0;break;case 2:for(;y<16;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(i.flags=v,8!=(255&i.flags)){e.msg="unknown compression method",i.mode=u;break}if(57344&i.flags){e.msg="unknown header flags set",i.mode=u;break}i.head&&(i.head.text=v>>8&1),512&i.flags&&(O[0]=255&v,O[1]=v>>>8&255,i.check=s(i.check,O,2,0)),v=0,y=0,i.mode=3;case 3:for(;y<32;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.head&&(i.head.time=v),512&i.flags&&(O[0]=255&v,O[1]=v>>>8&255,O[2]=v>>>16&255,O[3]=v>>>24&255,i.check=s(i.check,O,4,0)),v=0,y=0,i.mode=4;case 4:for(;y<16;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.head&&(i.head.xflags=255&v,i.head.os=v>>8),512&i.flags&&(O[0]=255&v,O[1]=v>>>8&255,i.check=s(i.check,O,2,0)),v=0,y=0,i.mode=5;case 5:if(1024&i.flags){for(;y<16;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.length=v,i.head&&(i.head.extra_len=v),512&i.flags&&(O[0]=255&v,O[1]=v>>>8&255,i.check=s(i.check,O,2,0)),v=0,y=0}else i.head&&(i.head.extra=null);i.mode=6;case 6:if(1024&i.flags&&((k=i.length)>b&&(k=b),k&&(i.head&&(T=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),n.arraySet(i.head.extra,f,m,k,T)),512&i.flags&&(i.check=s(i.check,f,k,m)),b-=k,m+=k,i.length-=k),i.length))break e;i.length=0,i.mode=7;case 7:if(2048&i.flags){if(0===b)break e;k=0;do{T=f[m+k++],i.head&&T&&i.length<65536&&(i.head.name+=String.fromCharCode(T))}while(T&&k<b);if(512&i.flags&&(i.check=s(i.check,f,k,m)),b-=k,m+=k,T)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=8;case 8:if(4096&i.flags){if(0===b)break e;k=0;do{T=f[m+k++],i.head&&T&&i.length<65536&&(i.head.comment+=String.fromCharCode(T))}while(T&&k<b);if(512&i.flags&&(i.check=s(i.check,f,k,m)),b-=k,m+=k,T)break e}else i.head&&(i.head.comment=null);i.mode=9;case 9:if(512&i.flags){for(;y<16;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(v!==(65535&i.check)){e.msg="header crc mismatch",i.mode=u;break}v=0,y=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=d;break;case 10:for(;y<32;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}e.adler=i.check=g(v),v=0,y=0,i.mode=11;case 11:if(0===i.havedict)return e.next_out=w,e.avail_out=F,e.next_in=m,e.avail_in=b,i.hold=v,i.bits=y,2;e.adler=i.check=1,i.mode=d;case d:if(5===t||6===t)break e;case 13:if(i.last){v>>>=7&y,y-=7&y,i.mode=27;break}for(;y<3;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}switch(i.last=1&v,y-=1,3&(v>>>=1)){case 0:i.mode=14;break;case 1:if(_(i),i.mode=20,6===t){v>>>=2,y-=2;break e}break;case 2:i.mode=17;break;case 3:e.msg="invalid block type",i.mode=u}v>>>=2,y-=2;break;case 14:for(v>>>=7&y,y-=7&y;y<32;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if((65535&v)!=(v>>>16^65535)){e.msg="invalid stored block lengths",i.mode=u;break}if(i.length=65535&v,v=0,y=0,i.mode=15,6===t)break e;case 15:i.mode=16;case 16:if(k=i.length){if(k>b&&(k=b),k>F&&(k=F),0===k)break e;n.arraySet(p,f,m,k,w),b-=k,m+=k,F-=k,w+=k,i.length-=k;break}i.mode=d;break;case 17:for(;y<14;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(i.nlen=257+(31&v),v>>>=5,y-=5,i.ndist=1+(31&v),v>>>=5,y-=5,i.ncode=4+(15&v),v>>>=4,y-=4,i.nlen>286||i.ndist>30){e.msg="too many length or distance symbols",i.mode=u;break}i.have=0,i.mode=18;case 18:for(;i.have<i.ncode;){for(;y<3;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.lens[U[i.have++]]=7&v,v>>>=3,y-=3}for(;i.have<19;)i.lens[U[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,z={bits:i.lenbits},L=a(0,i.lens,0,19,i.lencode,0,i.work,z),i.lenbits=z.bits,L){e.msg="invalid code lengths set",i.mode=u;break}i.have=0,i.mode=19;case 19:for(;i.have<i.nlen+i.ndist;){for(;N=(P=i.lencode[v&(1<<i.lenbits)-1])>>>16&255,B=65535&P,!((E=P>>>24)<=y);){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(B<16)v>>>=E,y-=E,i.lens[i.have++]=B;else{if(16===B){for(H=E+2;y<H;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(v>>>=E,y-=E,0===i.have){e.msg="invalid bit length repeat",i.mode=u;break}T=i.lens[i.have-1],k=3+(3&v),v>>>=2,y-=2}else if(17===B){for(H=E+3;y<H;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}y-=E,T=0,k=3+(7&(v>>>=E)),v>>>=3,y-=3}else{for(H=E+7;y<H;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}y-=E,T=0,k=11+(127&(v>>>=E)),v>>>=7,y-=7}if(i.have+k>i.nlen+i.ndist){e.msg="invalid bit length repeat",i.mode=u;break}for(;k--;)i.lens[i.have++]=T}}if(i.mode===u)break;if(0===i.lens[256]){e.msg="invalid code -- missing end-of-block",i.mode=u;break}if(i.lenbits=9,z={bits:i.lenbits},L=a(1,i.lens,0,i.nlen,i.lencode,0,i.work,z),i.lenbits=z.bits,L){e.msg="invalid literal/lengths set",i.mode=u;break}if(i.distbits=6,i.distcode=i.distdyn,z={bits:i.distbits},L=a(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,z),i.distbits=z.bits,L){e.msg="invalid distances set",i.mode=u;break}if(i.mode=20,6===t)break e;case 20:i.mode=21;case 21:if(b>=6&&F>=258){e.next_out=w,e.avail_out=F,e.next_in=m,e.avail_in=b,i.hold=v,i.bits=y,o(e,C),w=e.next_out,p=e.output,F=e.avail_out,m=e.next_in,f=e.input,b=e.avail_in,v=i.hold,y=i.bits,i.mode===d&&(i.back=-1);break}for(i.back=0;N=(P=i.lencode[v&(1<<i.lenbits)-1])>>>16&255,B=65535&P,!((E=P>>>24)<=y);){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(N&&!(240&N)){for(M=E,R=N,D=B;N=(P=i.lencode[D+((v&(1<<M+R)-1)>>M)])>>>16&255,B=65535&P,!(M+(E=P>>>24)<=y);){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}v>>>=M,y-=M,i.back+=M}if(v>>>=E,y-=E,i.back+=E,i.length=B,0===N){i.mode=26;break}if(32&N){i.back=-1,i.mode=d;break}if(64&N){e.msg="invalid literal/length code",i.mode=u;break}i.extra=15&N,i.mode=22;case 22:if(i.extra){for(H=i.extra;y<H;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.length+=v&(1<<i.extra)-1,v>>>=i.extra,y-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=23;case 23:for(;N=(P=i.distcode[v&(1<<i.distbits)-1])>>>16&255,B=65535&P,!((E=P>>>24)<=y);){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(!(240&N)){for(M=E,R=N,D=B;N=(P=i.distcode[D+((v&(1<<M+R)-1)>>M)])>>>16&255,B=65535&P,!(M+(E=P>>>24)<=y);){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}v>>>=M,y-=M,i.back+=M}if(v>>>=E,y-=E,i.back+=E,64&N){e.msg="invalid distance code",i.mode=u;break}i.offset=B,i.extra=15&N,i.mode=24;case 24:if(i.extra){for(H=i.extra;y<H;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}i.offset+=v&(1<<i.extra)-1,v>>>=i.extra,y-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg="invalid distance too far back",i.mode=u;break}i.mode=25;case 25:if(0===F)break e;if(k=C-F,i.offset>k){if((k=i.offset-k)>i.whave&&i.sane){e.msg="invalid distance too far back",i.mode=u;break}k>i.wnext?(k-=i.wnext,I=i.wsize-k):I=i.wnext-k,k>i.length&&(k=i.length),S=i.window}else S=p,I=w-i.offset,k=i.length;k>F&&(k=F),F-=k,i.length-=k;do{p[w++]=S[I++]}while(--k);0===i.length&&(i.mode=21);break;case 26:if(0===F)break e;p[w++]=i.length,F--,i.mode=21;break;case 27:if(i.wrap){for(;y<32;){if(0===b)break e;b--,v|=f[m++]<<y,y+=8}if(C-=F,e.total_out+=C,i.total+=C,C&&(e.adler=i.check=i.flags?s(i.check,p,C,w-C):r(i.check,p,C,w-C)),C=F,(i.flags?v:g(v))!==i.check){e.msg="incorrect data check",i.mode=u;break}v=0,y=0}i.mode=28;case 28:if(i.wrap&&i.flags){for(;y<32;){if(0===b)break e;b--,v+=f[m++]<<y,y+=8}if(v!==(4294967295&i.total)){e.msg="incorrect length check",i.mode=u;break}v=0,y=0}i.mode=29;case 29:L=1;break e;case u:L=-3;break e;case 31:return-4;default:return l}return e.next_out=w,e.avail_out=F,e.next_in=m,e.avail_in=b,i.hold=v,i.bits=y,(i.wsize||C!==e.avail_out&&i.mode<u&&(i.mode<27||4!==t))&&x(e,e.output,e.next_out,C-e.avail_out)?(i.mode=31,-4):(A-=e.avail_in,C-=e.avail_out,e.total_in+=A,e.total_out+=C,i.total+=C,i.wrap&&C&&(e.adler=i.check=i.flags?s(i.check,p,C,e.next_out-C):r(i.check,p,C,e.next_out-C)),e.data_type=i.bits+(i.last?64:0)+(i.mode===d?128:0)+(20===i.mode||15===i.mode?256:0),(0===A&&0===C||4===t)&&L===c&&(L=-5),L)},t.inflateEnd=function(e){if(!e||!e.state)return l;var t=e.state;return t.window&&(t.window=null),e.state=null,c},t.inflateGetHeader=function(e,t){var i;return e&&e.state&&2&(i=e.state).wrap?(i.head=t,t.done=!1,c):l},t.inflateSetDictionary=function(e,t){var i,n=t.length;return e&&e.state?0!==(i=e.state).wrap&&11!==i.mode?l:11===i.mode&&r(1,t,n,0)!==i.check?-3:x(e,t,n,n)?(i.mode=31,-4):(i.havedict=1,c):l},t.inflateInfo="pako inflate (from Nodeca project)"},1998:(e,t,i)=>{var n=i(9805),r=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],s=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],a=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(e,t,i,c,l,h,d,u){var f,p,g,m,w,b,F,v,y,A=u.bits,C=0,_=0,x=0,k=0,I=0,S=0,E=0,N=0,B=0,M=0,R=null,D=0,T=new n.Buf16(16),L=new n.Buf16(16),z=null,H=0;for(C=0;C<=15;C++)T[C]=0;for(_=0;_<c;_++)T[t[i+_]]++;for(I=A,k=15;k>=1&&0===T[k];k--);if(I>k&&(I=k),0===k)return l[h++]=20971520,l[h++]=20971520,u.bits=1,0;for(x=1;x<k&&0===T[x];x++);for(I<x&&(I=x),N=1,C=1;C<=15;C++)if(N<<=1,(N-=T[C])<0)return-1;if(N>0&&(0===e||1!==k))return-1;for(L[1]=0,C=1;C<15;C++)L[C+1]=L[C]+T[C];for(_=0;_<c;_++)0!==t[i+_]&&(d[L[t[i+_]]++]=_);if(0===e?(R=z=d,b=19):1===e?(R=r,D-=257,z=s,H-=257,b=256):(R=o,z=a,b=-1),M=0,_=0,C=x,w=h,S=I,E=0,g=-1,m=(B=1<<I)-1,1===e&&B>852||2===e&&B>592)return 1;for(;;){F=C-E,d[_]<b?(v=0,y=d[_]):d[_]>b?(v=z[H+d[_]],y=R[D+d[_]]):(v=96,y=0),f=1<<C-E,x=p=1<<S;do{l[w+(M>>E)+(p-=f)]=F<<24|v<<16|y}while(0!==p);for(f=1<<C-1;M&f;)f>>=1;if(0!==f?(M&=f-1,M+=f):M=0,_++,0==--T[C]){if(C===k)break;C=t[i+d[_]]}if(C>I&&(M&m)!==g){for(0===E&&(E=I),w+=x,N=1<<(S=C-E);S+E<k&&!((N-=T[S+E])<=0);)S++,N<<=1;if(B+=1<<S,1===e&&B>852||2===e&&B>592)return 1;l[g=M&m]=I<<24|S<<16|w-h}}return 0!==M&&(l[w+M]=C-E<<24|64<<16),u.bits=I,0}},4674:e=>{e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},3665:(e,t,i)=>{var n=i(9805);function r(e){for(var t=e.length;--t>=0;)e[t]=0}var s=15,o=16,a=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],c=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],h=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],d=new Array(576);r(d);var u=new Array(60);r(u);var f=new Array(512);r(f);var p=new Array(256);r(p);var g=new Array(29);r(g);var m,w,b,F=new Array(30);function v(e,t,i,n,r){this.static_tree=e,this.extra_bits=t,this.extra_base=i,this.elems=n,this.max_length=r,this.has_stree=e&&e.length}function y(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function A(e){return e<256?f[e]:f[256+(e>>>7)]}function C(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function _(e,t,i){e.bi_valid>o-i?(e.bi_buf|=t<<e.bi_valid&65535,C(e,e.bi_buf),e.bi_buf=t>>o-e.bi_valid,e.bi_valid+=i-o):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=i)}function x(e,t,i){_(e,i[2*t],i[2*t+1])}function k(e,t){var i=0;do{i|=1&e,e>>>=1,i<<=1}while(--t>0);return i>>>1}function I(e,t,i){var n,r,o=new Array(s+1),a=0;for(n=1;n<=s;n++)o[n]=a=a+i[n-1]<<1;for(r=0;r<=t;r++){var c=e[2*r+1];0!==c&&(e[2*r]=k(o[c]++,c))}}function S(e){var t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function E(e){e.bi_valid>8?C(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function N(e,t,i,n){var r=2*t,s=2*i;return e[r]<e[s]||e[r]===e[s]&&n[t]<=n[i]}function B(e,t,i){for(var n=e.heap[i],r=i<<1;r<=e.heap_len&&(r<e.heap_len&&N(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!N(t,n,e.heap[r],e.depth));)e.heap[i]=e.heap[r],i=r,r<<=1;e.heap[i]=n}function M(e,t,i){var n,r,s,o,l=0;if(0!==e.last_lit)do{n=e.pending_buf[e.d_buf+2*l]<<8|e.pending_buf[e.d_buf+2*l+1],r=e.pending_buf[e.l_buf+l],l++,0===n?x(e,r,t):(x(e,(s=p[r])+256+1,t),0!==(o=a[s])&&_(e,r-=g[s],o),x(e,s=A(--n),i),0!==(o=c[s])&&_(e,n-=F[s],o))}while(l<e.last_lit);x(e,256,t)}function R(e,t){var i,n,r,o=t.dyn_tree,a=t.stat_desc.static_tree,c=t.stat_desc.has_stree,l=t.stat_desc.elems,h=-1;for(e.heap_len=0,e.heap_max=573,i=0;i<l;i++)0!==o[2*i]?(e.heap[++e.heap_len]=h=i,e.depth[i]=0):o[2*i+1]=0;for(;e.heap_len<2;)o[2*(r=e.heap[++e.heap_len]=h<2?++h:0)]=1,e.depth[r]=0,e.opt_len--,c&&(e.static_len-=a[2*r+1]);for(t.max_code=h,i=e.heap_len>>1;i>=1;i--)B(e,o,i);r=l;do{i=e.heap[1],e.heap[1]=e.heap[e.heap_len--],B(e,o,1),n=e.heap[1],e.heap[--e.heap_max]=i,e.heap[--e.heap_max]=n,o[2*r]=o[2*i]+o[2*n],e.depth[r]=(e.depth[i]>=e.depth[n]?e.depth[i]:e.depth[n])+1,o[2*i+1]=o[2*n+1]=r,e.heap[1]=r++,B(e,o,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var i,n,r,o,a,c,l=t.dyn_tree,h=t.max_code,d=t.stat_desc.static_tree,u=t.stat_desc.has_stree,f=t.stat_desc.extra_bits,p=t.stat_desc.extra_base,g=t.stat_desc.max_length,m=0;for(o=0;o<=s;o++)e.bl_count[o]=0;for(l[2*e.heap[e.heap_max]+1]=0,i=e.heap_max+1;i<573;i++)(o=l[2*l[2*(n=e.heap[i])+1]+1]+1)>g&&(o=g,m++),l[2*n+1]=o,n>h||(e.bl_count[o]++,a=0,n>=p&&(a=f[n-p]),c=l[2*n],e.opt_len+=c*(o+a),u&&(e.static_len+=c*(d[2*n+1]+a)));if(0!==m){do{for(o=g-1;0===e.bl_count[o];)o--;e.bl_count[o]--,e.bl_count[o+1]+=2,e.bl_count[g]--,m-=2}while(m>0);for(o=g;0!==o;o--)for(n=e.bl_count[o];0!==n;)(r=e.heap[--i])>h||(l[2*r+1]!==o&&(e.opt_len+=(o-l[2*r+1])*l[2*r],l[2*r+1]=o),n--)}}(e,t),I(o,h,e.bl_count)}function D(e,t,i){var n,r,s=-1,o=t[1],a=0,c=7,l=4;for(0===o&&(c=138,l=3),t[2*(i+1)+1]=65535,n=0;n<=i;n++)r=o,o=t[2*(n+1)+1],++a<c&&r===o||(a<l?e.bl_tree[2*r]+=a:0!==r?(r!==s&&e.bl_tree[2*r]++,e.bl_tree[32]++):a<=10?e.bl_tree[34]++:e.bl_tree[36]++,a=0,s=r,0===o?(c=138,l=3):r===o?(c=6,l=3):(c=7,l=4))}function T(e,t,i){var n,r,s=-1,o=t[1],a=0,c=7,l=4;for(0===o&&(c=138,l=3),n=0;n<=i;n++)if(r=o,o=t[2*(n+1)+1],!(++a<c&&r===o)){if(a<l)do{x(e,r,e.bl_tree)}while(0!=--a);else 0!==r?(r!==s&&(x(e,r,e.bl_tree),a--),x(e,16,e.bl_tree),_(e,a-3,2)):a<=10?(x(e,17,e.bl_tree),_(e,a-3,3)):(x(e,18,e.bl_tree),_(e,a-11,7));a=0,s=r,0===o?(c=138,l=3):r===o?(c=6,l=3):(c=7,l=4)}}r(F);var L=!1;function z(e,t,i,r){_(e,0+(r?1:0),3),function(e,t,i){E(e),C(e,i),C(e,~i),n.arraySet(e.pending_buf,e.window,t,i,e.pending),e.pending+=i}(e,t,i)}t._tr_init=function(e){L||(function(){var e,t,i,n,r,o=new Array(s+1);for(i=0,n=0;n<28;n++)for(g[n]=i,e=0;e<1<<a[n];e++)p[i++]=n;for(p[i-1]=n,r=0,n=0;n<16;n++)for(F[n]=r,e=0;e<1<<c[n];e++)f[r++]=n;for(r>>=7;n<30;n++)for(F[n]=r<<7,e=0;e<1<<c[n]-7;e++)f[256+r++]=n;for(t=0;t<=s;t++)o[t]=0;for(e=0;e<=143;)d[2*e+1]=8,e++,o[8]++;for(;e<=255;)d[2*e+1]=9,e++,o[9]++;for(;e<=279;)d[2*e+1]=7,e++,o[7]++;for(;e<=287;)d[2*e+1]=8,e++,o[8]++;for(I(d,287,o),e=0;e<30;e++)u[2*e+1]=5,u[2*e]=k(e,5);m=new v(d,a,257,286,s),w=new v(u,c,0,30,s),b=new v(new Array(0),l,0,19,7)}(),L=!0),e.l_desc=new y(e.dyn_ltree,m),e.d_desc=new y(e.dyn_dtree,w),e.bl_desc=new y(e.bl_tree,b),e.bi_buf=0,e.bi_valid=0,S(e)},t._tr_stored_block=z,t._tr_flush_block=function(e,t,i,n){var r,s,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,i=4093624447;for(t=0;t<=31;t++,i>>>=1)if(1&i&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),R(e,e.l_desc),R(e,e.d_desc),o=function(e){var t;for(D(e,e.dyn_ltree,e.l_desc.max_code),D(e,e.dyn_dtree,e.d_desc.max_code),R(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*h[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),r=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=r&&(r=s)):r=s=i+5,i+4<=r&&-1!==t?z(e,t,i,n):4===e.strategy||s===r?(_(e,2+(n?1:0),3),M(e,d,u)):(_(e,4+(n?1:0),3),function(e,t,i,n){var r;for(_(e,t-257,5),_(e,i-1,5),_(e,n-4,4),r=0;r<n;r++)_(e,e.bl_tree[2*h[r]+1],3);T(e,e.dyn_ltree,t-1),T(e,e.dyn_dtree,i-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),M(e,e.dyn_ltree,e.dyn_dtree)),S(e),n&&E(e)},t._tr_tally=function(e,t,i){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&i,e.last_lit++,0===t?e.dyn_ltree[2*i]++:(e.matches++,t--,e.dyn_ltree[2*(p[i]+256+1)]++,e.dyn_dtree[2*A(t)]++),e.last_lit===e.lit_bufsize-1},t._tr_align=function(e){_(e,2,3),x(e,256,d),function(e){16===e.bi_valid?(C(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},4442:e=>{e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},7392:e=>{class t{constructor(e={}){if(!(e.maxSize&&e.maxSize>0))throw new TypeError("`maxSize` must be a number greater than 0");this.maxSize=e.maxSize,this.cache=new Map,this.oldCache=new Map,this._size=0}_set(e,t){this.cache.set(e,t),this._size++,this._size>=this.maxSize&&(this._size=0,this.oldCache=this.cache,this.cache=new Map)}get(e){if(this.cache.has(e))return this.cache.get(e);if(this.oldCache.has(e)){const t=this.oldCache.get(e);return this.oldCache.delete(e),this._set(e,t),t}}set(e,t){return this.cache.has(e)?this.cache.set(e,t):this._set(e,t),this}has(e){return this.cache.has(e)||this.oldCache.has(e)}peek(e){return this.cache.has(e)?this.cache.get(e):this.oldCache.has(e)?this.oldCache.get(e):void 0}delete(e){const t=this.cache.delete(e);return t&&this._size--,this.oldCache.delete(e)||t}clear(){this.cache.clear(),this.oldCache.clear(),this._size=0}*keys(){for(const[e]of this)yield e}*values(){for(const[,e]of this)yield e}*[Symbol.iterator](){for(const e of this.cache)yield e;for(const e of this.oldCache){const[t]=e;this.cache.has(t)||(yield e)}}get size(){let e=0;for(const t of this.oldCache.keys())this.cache.has(t)||e++;return this._size+e}}e.exports=t},1307:function(e,t,i){var n;n=e=>(()=>{var t=[,e=>{e.exports="data:application/wasm;base64,"},t=>{t.exports=e}],i={};function n(e){var r=i[e];if(void 0!==r)return r.exports;var s=i[e]={exports:{}};return t[e](s,s.exports,n),s.exports}n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{XzReadableStream:()=>s});var e=n(1);const t=globalThis.ReadableStream||n(2).ReadableStream;class i{constructor(e){this.exports=e.exports,this.memory=this.exports.memory,this.ptr=this.exports.create_context(),this._refresh(),this.bufSize=this.mem32[0],this.inStart=this.mem32[1]-this.ptr,this.inEnd=this.inStart+this.bufSize,this.outStart=this.mem32[4]-this.ptr}supplyInput(e){this._refresh(),this.mem8.subarray(this.inStart,this.inEnd).set(e,0),this.exports.supply_input(this.ptr,e.byteLength),this._refresh()}getNextOutput(){const e=this.exports.get_next_output(this.ptr);if(this._refresh(),0!==e&&1!==e)throw new Error(`get_next_output failed with error code ${e}`);return{outChunk:this.mem8.slice(this.outStart,this.outStart+this.mem32[5]),finished:1===e}}needsMoreInput(){return this.mem32[2]===this.mem32[3]}outputBufferIsFull(){return this.mem32[5]===this.bufSize}resetOutputBuffer(){this.outPos=this.mem32[5]=0}dispose(){this.exports.destroy_context(this.ptr),this.exports=null}_refresh(){this.memory.buffer!==this.mem8?.buffer&&(this.mem8=new Uint8Array(this.memory.buffer,this.ptr),this.mem32=new Uint32Array(this.memory.buffer,this.ptr))}}class s extends t{static _moduleInstancePromise;static _moduleInstance;static async _getModuleInstance(){const t=e.replace("data:application/wasm;base64,",""),i=Uint8Array.from(atob(t),(e=>e.charCodeAt(0))).buffer,n=await WebAssembly.instantiate(i,{});s._moduleInstance=n.instance}constructor(e){let t,n=null;const r=e.getReader();super({async start(e){s._moduleInstance||await(s._moduleInstancePromise||(s._moduleInstancePromise=s._getModuleInstance())),t=new i(s._moduleInstance)},async pull(e){if(t.needsMoreInput()){if(null===n||0===n.byteLength){const{done:e,value:t}=await r.read();e||(n=t)}const e=Math.min(t.bufSize,n.byteLength);t.supplyInput(n.subarray(0,e)),n=n.subarray(e)}const i=t.getNextOutput();e.enqueue(i.outChunk),t.resetOutputBuffer(),i.finished&&(t.dispose(),e.close())},cancel:()=>(t.dispose(),r.cancel())})}}})(),r})(),e.exports=n(i(772))},3617:()=>{},772:()=>{},4132:(e,t,i)=>{var n=i(8287).Buffer;const r=new Int32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);function s(e){if(n.isBuffer(e))return e;if("number"==typeof e)return n.alloc(e);if("string"==typeof e)return n.from(e);throw new Error("input must be buffer, number, or string, received "+typeof e)}function o(e,t){e=s(e),n.isBuffer(t)&&(t=t.readUInt32BE(0));let i=~t;for(var o=0;o<e.length;o++)i=r[255&(i^e[o])]^i>>>8;return~i}function a(){return function(e){const t=s(4);return t.writeInt32BE(e,0),t}(o.apply(null,arguments))}a.signed=function(){return o.apply(null,arguments)},a.unsigned=function(){return o.apply(null,arguments)>>>0};const c=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(a);e.exports=c}},t={};function i(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,i),s.exports}return i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i(7806)})(),Qp=[],Vp=[],jp="undefined"!=typeof Uint8Array?Uint8Array:Array,Wp="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Gp=0;Gp<64;++Gp)Qp[Gp]=Wp[Gp],Vp[Wp.charCodeAt(Gp)]=Gp;function $p(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=e.indexOf("=");return-1===i&&(i=t),[i,i===t?0:4-i%4]}function Kp(e,t,i){for(var n,r,s=[],o=t;o<i;o+=3)n=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),s.push(Qp[(r=n)>>18&63]+Qp[r>>12&63]+Qp[r>>6&63]+Qp[63&r]);return s.join("")}Vp["-".charCodeAt(0)]=62,Vp["_".charCodeAt(0)]=63;var Yp={byteLength:function(e){var t=$p(e),i=t[0],n=t[1];return 3*(i+n)/4-n},toByteArray:function(e){var t,i,n=$p(e),r=n[0],s=n[1],o=new jp(function(e,t,i){return 3*(t+i)/4-i}(0,r,s)),a=0,c=s>0?r-4:r;for(i=0;i<c;i+=4)t=Vp[e.charCodeAt(i)]<<18|Vp[e.charCodeAt(i+1)]<<12|Vp[e.charCodeAt(i+2)]<<6|Vp[e.charCodeAt(i+3)],o[a++]=t>>16&255,o[a++]=t>>8&255,o[a++]=255&t;return 2===s&&(t=Vp[e.charCodeAt(i)]<<2|Vp[e.charCodeAt(i+1)]>>4,o[a++]=255&t),1===s&&(t=Vp[e.charCodeAt(i)]<<10|Vp[e.charCodeAt(i+1)]<<4|Vp[e.charCodeAt(i+2)]>>2,o[a++]=t>>8&255,o[a++]=255&t),o},fromByteArray:function(e){for(var t,i=e.length,n=i%3,r=[],s=16383,o=0,a=i-n;o<a;o+=s)r.push(Kp(e,o,o+s>a?a:o+s));return 1===n?(t=e[i-1],r.push(Qp[t>>2]+Qp[t<<4&63]+"==")):2===n&&(t=(e[i-2]<<8)+e[i-1],r.push(Qp[t>>10]+Qp[t>>4&63]+Qp[t<<2&63]+"=")),r.join("")}};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */var Xp={read:function(e,t,i,n,r){var s,o,a=8*r-n-1,c=(1<<a)-1,l=c>>1,h=-7,d=i?r-1:0,u=i?-1:1,f=e[t+d];for(d+=u,s=f&(1<<-h)-1,f>>=-h,h+=a;h>0;s=256*s+e[t+d],d+=u,h-=8);for(o=s&(1<<-h)-1,s>>=-h,h+=n;h>0;o=256*o+e[t+d],d+=u,h-=8);if(0===s)s=1-l;else{if(s===c)return o?NaN:1/0*(f?-1:1);o+=Math.pow(2,n),s-=l}return(f?-1:1)*o*Math.pow(2,s-n)},write:function(e,t,i,n,r,s){var o,a,c,l=8*s-r-1,h=(1<<l)-1,d=h>>1,u=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:s-1,p=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,o=h):(o=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-o))<1&&(o--,c*=2),(t+=o+d>=1?u/c:u*Math.pow(2,1-d))*c>=2&&(o++,c/=2),o+d>=h?(a=0,o=h):o+d>=1?(a=(t*c-1)*Math.pow(2,r),o+=d):(a=t*Math.pow(2,d-1)*Math.pow(2,r),o=0));r>=8;e[i+f]=255&a,f+=p,a/=256,r-=8);for(o=o<<r|a,l+=r;l>0;e[i+f]=255&o,f+=p,o/=256,l-=8);e[i+f-p]|=128*g}};
/*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */const Zp="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null,Jp=2147483647;function eg(e){if(e>Jp)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,tg.prototype),t}function tg(e,t,i){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return rg(e)}return ig(e,t,i)}function ig(e,t,i){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!tg.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const i=0|cg(e,t);let n=eg(i);const r=n.write(e,t);r!==i&&(n=n.slice(0,r));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(qg(e,Uint8Array)){const t=new Uint8Array(e);return og(t.buffer,t.byteOffset,t.byteLength)}return sg(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(qg(e,ArrayBuffer)||e&&qg(e.buffer,ArrayBuffer))return og(e,t,i);if("undefined"!=typeof SharedArrayBuffer&&(qg(e,SharedArrayBuffer)||e&&qg(e.buffer,SharedArrayBuffer)))return og(e,t,i);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return tg.from(n,t,i);const r=function(e){if(tg.isBuffer(e)){const t=0|ag(e.length),i=eg(t);return 0===i.length||e.copy(i,0,0,t),i}if(void 0!==e.length)return"number"!=typeof e.length||Qg(e.length)?eg(0):sg(e);if("Buffer"===e.type&&Array.isArray(e.data))return sg(e.data)}(e);if(r)return r;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return tg.from(e[Symbol.toPrimitive]("string"),t,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function ng(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function rg(e){return ng(e),eg(e<0?0:0|ag(e))}function sg(e){const t=e.length<0?0:0|ag(e.length),i=eg(t);for(let n=0;n<t;n+=1)i[n]=255&e[n];return i}function og(e,t,i){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(i||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,t):new Uint8Array(e,t,i),Object.setPrototypeOf(n,tg.prototype),n}function ag(e){if(e>=Jp)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Jp.toString(16)+" bytes");return 0|e}function cg(e,t){if(tg.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||qg(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const i=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===i)return 0;let r=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return Pg(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return Og(e).length;default:if(r)return n?-1:Pg(e).length;t=(""+t).toLowerCase(),r=!0}}function lg(e,t,i){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return Cg(this,t,i);case"utf8":case"utf-8":return Fg(this,t,i);case"ascii":return yg(this,t,i);case"latin1":case"binary":return Ag(this,t,i);case"base64":return bg(this,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _g(this,t,i);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function hg(e,t,i){const n=e[t];e[t]=e[i],e[i]=n}function dg(e,t,i,n,r){if(0===e.length)return-1;if("string"==typeof i?(n=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),Qg(i=+i)&&(i=r?0:e.length-1),i<0&&(i=e.length+i),i>=e.length){if(r)return-1;i=e.length-1}else if(i<0){if(!r)return-1;i=0}if("string"==typeof t&&(t=tg.from(t,n)),tg.isBuffer(t))return 0===t.length?-1:ug(e,t,i,n,r);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,i):Uint8Array.prototype.lastIndexOf.call(e,t,i):ug(e,[t],i,n,r);throw new TypeError("val must be string, number or Buffer")}function ug(e,t,i,n,r){let s,o=1,a=e.length,c=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;o=2,a/=2,c/=2,i/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(r){let n=-1;for(s=i;s<a;s++)if(l(e,s)===l(t,-1===n?0:s-n)){if(-1===n&&(n=s),s-n+1===c)return n*o}else-1!==n&&(s-=s-n),n=-1}else for(i+c>a&&(i=a-c),s=i;s>=0;s--){let i=!0;for(let n=0;n<c;n++)if(l(e,s+n)!==l(t,n)){i=!1;break}if(i)return s}return-1}function fg(e,t,i,n){i=Number(i)||0;const r=e.length-i;n?(n=Number(n))>r&&(n=r):n=r;const s=t.length;let o;for(n>s/2&&(n=s/2),o=0;o<n;++o){const n=parseInt(t.substr(2*o,2),16);if(Qg(n))return o;e[i+o]=n}return o}function pg(e,t,i,n){return Ug(Pg(t,e.length-i),e,i,n)}function gg(e,t,i,n){return Ug(function(e){const t=[];for(let i=0;i<e.length;++i)t.push(255&e.charCodeAt(i));return t}(t),e,i,n)}function mg(e,t,i,n){return Ug(Og(t),e,i,n)}function wg(e,t,i,n){return Ug(function(e,t){let i,n,r;const s=[];for(let o=0;o<e.length&&!((t-=2)<0);++o)i=e.charCodeAt(o),n=i>>8,r=i%256,s.push(r),s.push(n);return s}(t,e.length-i),e,i,n)}function bg(e,t,i){return 0===t&&i===e.length?Yp.fromByteArray(e):Yp.fromByteArray(e.slice(t,i))}function Fg(e,t,i){i=Math.min(e.length,i);const n=[];let r=t;for(;r<i;){const t=e[r];let s=null,o=t>239?4:t>223?3:t>191?2:1;if(r+o<=i){let i,n,a,c;switch(o){case 1:t<128&&(s=t);break;case 2:i=e[r+1],128==(192&i)&&(c=(31&t)<<6|63&i,c>127&&(s=c));break;case 3:i=e[r+1],n=e[r+2],128==(192&i)&&128==(192&n)&&(c=(15&t)<<12|(63&i)<<6|63&n,c>2047&&(c<55296||c>57343)&&(s=c));break;case 4:i=e[r+1],n=e[r+2],a=e[r+3],128==(192&i)&&128==(192&n)&&128==(192&a)&&(c=(15&t)<<18|(63&i)<<12|(63&n)<<6|63&a,c>65535&&c<1114112&&(s=c))}}null===s?(s=65533,o=1):s>65535&&(s-=65536,n.push(s>>>10&1023|55296),s=56320|1023&s),n.push(s),r+=o}return function(e){const t=e.length;if(t<=vg)return String.fromCharCode.apply(String,e);let i="",n=0;for(;n<t;)i+=String.fromCharCode.apply(String,e.slice(n,n+=vg));return i}(n)}tg.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),tg.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(tg.prototype,"parent",{enumerable:!0,get:function(){if(tg.isBuffer(this))return this.buffer}}),Object.defineProperty(tg.prototype,"offset",{enumerable:!0,get:function(){if(tg.isBuffer(this))return this.byteOffset}}),tg.poolSize=8192,tg.from=function(e,t,i){return ig(e,t,i)},Object.setPrototypeOf(tg.prototype,Uint8Array.prototype),Object.setPrototypeOf(tg,Uint8Array),tg.alloc=function(e,t,i){return function(e,t,i){return ng(e),e<=0?eg(e):void 0!==t?"string"==typeof i?eg(e).fill(t,i):eg(e).fill(t):eg(e)}(e,t,i)},tg.allocUnsafe=function(e){return rg(e)},tg.allocUnsafeSlow=function(e){return rg(e)},tg.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==tg.prototype},tg.compare=function(e,t){if(qg(e,Uint8Array)&&(e=tg.from(e,e.offset,e.byteLength)),qg(t,Uint8Array)&&(t=tg.from(t,t.offset,t.byteLength)),!tg.isBuffer(e)||!tg.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let i=e.length,n=t.length;for(let r=0,s=Math.min(i,n);r<s;++r)if(e[r]!==t[r]){i=e[r],n=t[r];break}return i<n?-1:n<i?1:0},tg.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},tg.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return tg.alloc(0);let i;if(void 0===t)for(t=0,i=0;i<e.length;++i)t+=e[i].length;const n=tg.allocUnsafe(t);let r=0;for(i=0;i<e.length;++i){let t=e[i];if(qg(t,Uint8Array))r+t.length>n.length?(tg.isBuffer(t)||(t=tg.from(t)),t.copy(n,r)):Uint8Array.prototype.set.call(n,t,r);else{if(!tg.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,r)}r+=t.length}return n},tg.byteLength=cg,tg.prototype._isBuffer=!0,tg.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)hg(this,t,t+1);return this},tg.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)hg(this,t,t+3),hg(this,t+1,t+2);return this},tg.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)hg(this,t,t+7),hg(this,t+1,t+6),hg(this,t+2,t+5),hg(this,t+3,t+4);return this},tg.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?Fg(this,0,e):lg.apply(this,arguments)},tg.prototype.toLocaleString=tg.prototype.toString,tg.prototype.equals=function(e){if(!tg.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===tg.compare(this,e)},tg.prototype.inspect=function(){let e="";const t=exports.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},Zp&&(tg.prototype[Zp]=tg.prototype.inspect),tg.prototype.compare=function(e,t,i,n,r){if(qg(e,Uint8Array)&&(e=tg.from(e,e.offset,e.byteLength)),!tg.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===i&&(i=e?e.length:0),void 0===n&&(n=0),void 0===r&&(r=this.length),t<0||i>e.length||n<0||r>this.length)throw new RangeError("out of range index");if(n>=r&&t>=i)return 0;if(n>=r)return-1;if(t>=i)return 1;if(this===e)return 0;let s=(r>>>=0)-(n>>>=0),o=(i>>>=0)-(t>>>=0);const a=Math.min(s,o),c=this.slice(n,r),l=e.slice(t,i);for(let e=0;e<a;++e)if(c[e]!==l[e]){s=c[e],o=l[e];break}return s<o?-1:o<s?1:0},tg.prototype.includes=function(e,t,i){return-1!==this.indexOf(e,t,i)},tg.prototype.indexOf=function(e,t,i){return dg(this,e,t,i,!0)},tg.prototype.lastIndexOf=function(e,t,i){return dg(this,e,t,i,!1)},tg.prototype.write=function(e,t,i,n){if(void 0===t)n="utf8",i=this.length,t=0;else if(void 0===i&&"string"==typeof t)n=t,i=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(i)?(i>>>=0,void 0===n&&(n="utf8")):(n=i,i=void 0)}const r=this.length-t;if((void 0===i||i>r)&&(i=r),e.length>0&&(i<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let s=!1;for(;;)switch(n){case"hex":return fg(this,e,t,i);case"utf8":case"utf-8":return pg(this,e,t,i);case"ascii":case"latin1":case"binary":return gg(this,e,t,i);case"base64":return mg(this,e,t,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return wg(this,e,t,i);default:if(s)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),s=!0}},tg.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const vg=4096;function yg(e,t,i){let n="";i=Math.min(e.length,i);for(let r=t;r<i;++r)n+=String.fromCharCode(127&e[r]);return n}function Ag(e,t,i){let n="";i=Math.min(e.length,i);for(let r=t;r<i;++r)n+=String.fromCharCode(e[r]);return n}function Cg(e,t,i){const n=e.length;(!t||t<0)&&(t=0),(!i||i<0||i>n)&&(i=n);let r="";for(let n=t;n<i;++n)r+=Vg[e[n]];return r}function _g(e,t,i){const n=e.slice(t,i);let r="";for(let e=0;e<n.length-1;e+=2)r+=String.fromCharCode(n[e]+256*n[e+1]);return r}function xg(e,t,i){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>i)throw new RangeError("Trying to access beyond buffer length")}function kg(e,t,i,n,r,s){if(!tg.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<s)throw new RangeError('"value" argument is out of bounds');if(i+n>e.length)throw new RangeError("Index out of range")}function Ig(e,t,i,n,r){Tg(t,n,r,e,i,7);let s=Number(t&BigInt(4294967295));e[i++]=s,s>>=8,e[i++]=s,s>>=8,e[i++]=s,s>>=8,e[i++]=s;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[i++]=o,o>>=8,e[i++]=o,o>>=8,e[i++]=o,o>>=8,e[i++]=o,i}function Sg(e,t,i,n,r){Tg(t,n,r,e,i,7);let s=Number(t&BigInt(4294967295));e[i+7]=s,s>>=8,e[i+6]=s,s>>=8,e[i+5]=s,s>>=8,e[i+4]=s;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[i+3]=o,o>>=8,e[i+2]=o,o>>=8,e[i+1]=o,o>>=8,e[i]=o,i+8}function Eg(e,t,i,n,r,s){if(i+n>e.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function Ng(e,t,i,n,r){return t=+t,i>>>=0,r||Eg(e,0,i,4),Xp.write(e,t,i,n,23,4),i+4}function Bg(e,t,i,n,r){return t=+t,i>>>=0,r||Eg(e,0,i,8),Xp.write(e,t,i,n,52,8),i+8}tg.prototype.slice=function(e,t){const i=this.length;(e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,tg.prototype),n},tg.prototype.readUintLE=tg.prototype.readUIntLE=function(e,t,i){e>>>=0,t>>>=0,i||xg(e,t,this.length);let n=this[e],r=1,s=0;for(;++s<t&&(r*=256);)n+=this[e+s]*r;return n},tg.prototype.readUintBE=tg.prototype.readUIntBE=function(e,t,i){e>>>=0,t>>>=0,i||xg(e,t,this.length);let n=this[e+--t],r=1;for(;t>0&&(r*=256);)n+=this[e+--t]*r;return n},tg.prototype.readUint8=tg.prototype.readUInt8=function(e,t){return e>>>=0,t||xg(e,1,this.length),this[e]},tg.prototype.readUint16LE=tg.prototype.readUInt16LE=function(e,t){return e>>>=0,t||xg(e,2,this.length),this[e]|this[e+1]<<8},tg.prototype.readUint16BE=tg.prototype.readUInt16BE=function(e,t){return e>>>=0,t||xg(e,2,this.length),this[e]<<8|this[e+1]},tg.prototype.readUint32LE=tg.prototype.readUInt32LE=function(e,t){return e>>>=0,t||xg(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},tg.prototype.readUint32BE=tg.prototype.readUInt32BE=function(e,t){return e>>>=0,t||xg(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},tg.prototype.readBigUInt64LE=jg((function(e){Lg(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||zg(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,r=this[++e]+256*this[++e]+65536*this[++e]+i*2**24;return BigInt(n)+(BigInt(r)<<BigInt(32))})),tg.prototype.readBigUInt64BE=jg((function(e){Lg(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||zg(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],r=this[++e]*2**24+65536*this[++e]+256*this[++e]+i;return(BigInt(n)<<BigInt(32))+BigInt(r)})),tg.prototype.readIntLE=function(e,t,i){e>>>=0,t>>>=0,i||xg(e,t,this.length);let n=this[e],r=1,s=0;for(;++s<t&&(r*=256);)n+=this[e+s]*r;return r*=128,n>=r&&(n-=Math.pow(2,8*t)),n},tg.prototype.readIntBE=function(e,t,i){e>>>=0,t>>>=0,i||xg(e,t,this.length);let n=t,r=1,s=this[e+--n];for(;n>0&&(r*=256);)s+=this[e+--n]*r;return r*=128,s>=r&&(s-=Math.pow(2,8*t)),s},tg.prototype.readInt8=function(e,t){return e>>>=0,t||xg(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},tg.prototype.readInt16LE=function(e,t){e>>>=0,t||xg(e,2,this.length);const i=this[e]|this[e+1]<<8;return 32768&i?4294901760|i:i},tg.prototype.readInt16BE=function(e,t){e>>>=0,t||xg(e,2,this.length);const i=this[e+1]|this[e]<<8;return 32768&i?4294901760|i:i},tg.prototype.readInt32LE=function(e,t){return e>>>=0,t||xg(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},tg.prototype.readInt32BE=function(e,t){return e>>>=0,t||xg(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},tg.prototype.readBigInt64LE=jg((function(e){Lg(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||zg(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(i<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),tg.prototype.readBigInt64BE=jg((function(e){Lg(e>>>=0,"offset");const t=this[e],i=this[e+7];void 0!==t&&void 0!==i||zg(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+i)})),tg.prototype.readFloatLE=function(e,t){return e>>>=0,t||xg(e,4,this.length),Xp.read(this,e,!0,23,4)},tg.prototype.readFloatBE=function(e,t){return e>>>=0,t||xg(e,4,this.length),Xp.read(this,e,!1,23,4)},tg.prototype.readDoubleLE=function(e,t){return e>>>=0,t||xg(e,8,this.length),Xp.read(this,e,!0,52,8)},tg.prototype.readDoubleBE=function(e,t){return e>>>=0,t||xg(e,8,this.length),Xp.read(this,e,!1,52,8)},tg.prototype.writeUintLE=tg.prototype.writeUIntLE=function(e,t,i,n){if(e=+e,t>>>=0,i>>>=0,!n){kg(this,e,t,i,Math.pow(2,8*i)-1,0)}let r=1,s=0;for(this[t]=255&e;++s<i&&(r*=256);)this[t+s]=e/r&255;return t+i},tg.prototype.writeUintBE=tg.prototype.writeUIntBE=function(e,t,i,n){if(e=+e,t>>>=0,i>>>=0,!n){kg(this,e,t,i,Math.pow(2,8*i)-1,0)}let r=i-1,s=1;for(this[t+r]=255&e;--r>=0&&(s*=256);)this[t+r]=e/s&255;return t+i},tg.prototype.writeUint8=tg.prototype.writeUInt8=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,1,255,0),this[t]=255&e,t+1},tg.prototype.writeUint16LE=tg.prototype.writeUInt16LE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},tg.prototype.writeUint16BE=tg.prototype.writeUInt16BE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},tg.prototype.writeUint32LE=tg.prototype.writeUInt32LE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},tg.prototype.writeUint32BE=tg.prototype.writeUInt32BE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},tg.prototype.writeBigUInt64LE=jg((function(e,t=0){return Ig(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),tg.prototype.writeBigUInt64BE=jg((function(e,t=0){return Sg(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),tg.prototype.writeIntLE=function(e,t,i,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*i-1);kg(this,e,t,i,n-1,-n)}let r=0,s=1,o=0;for(this[t]=255&e;++r<i&&(s*=256);)e<0&&0===o&&0!==this[t+r-1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+i},tg.prototype.writeIntBE=function(e,t,i,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*i-1);kg(this,e,t,i,n-1,-n)}let r=i-1,s=1,o=0;for(this[t+r]=255&e;--r>=0&&(s*=256);)e<0&&0===o&&0!==this[t+r+1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+i},tg.prototype.writeInt8=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},tg.prototype.writeInt16LE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},tg.prototype.writeInt16BE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},tg.prototype.writeInt32LE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},tg.prototype.writeInt32BE=function(e,t,i){return e=+e,t>>>=0,i||kg(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},tg.prototype.writeBigInt64LE=jg((function(e,t=0){return Ig(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),tg.prototype.writeBigInt64BE=jg((function(e,t=0){return Sg(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),tg.prototype.writeFloatLE=function(e,t,i){return Ng(this,e,t,!0,i)},tg.prototype.writeFloatBE=function(e,t,i){return Ng(this,e,t,!1,i)},tg.prototype.writeDoubleLE=function(e,t,i){return Bg(this,e,t,!0,i)},tg.prototype.writeDoubleBE=function(e,t,i){return Bg(this,e,t,!1,i)},tg.prototype.copy=function(e,t,i,n){if(!tg.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<i&&(n=i),n===i)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-i&&(n=e.length-t+i);const r=n-i;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,i,n):Uint8Array.prototype.set.call(e,this.subarray(i,n),t),r},tg.prototype.fill=function(e,t,i,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,i=this.length):"string"==typeof i&&(n=i,i=this.length),void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!tg.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<i)throw new RangeError("Out of range index");if(i<=t)return this;let r;if(t>>>=0,i=void 0===i?this.length:i>>>0,e||(e=0),"number"==typeof e)for(r=t;r<i;++r)this[r]=e;else{const s=tg.isBuffer(e)?e:tg.from(e,n),o=s.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(r=0;r<i-t;++r)this[r+t]=s[r%o]}return this};const Mg={};function Rg(e,t,i){Mg[e]=class extends i{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function Dg(e){let t="",i=e.length;const n="-"===e[0]?1:0;for(;i>=n+4;i-=3)t=`_${e.slice(i-3,i)}${t}`;return`${e.slice(0,i)}${t}`}function Tg(e,t,i,n,r,s){if(e>i||e<t){const n="bigint"==typeof t?"n":"";let r;throw r=s>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(s+1)}${n}`:`>= -(2${n} ** ${8*(s+1)-1}${n}) and < 2 ** ${8*(s+1)-1}${n}`:`>= ${t}${n} and <= ${i}${n}`,new Mg.ERR_OUT_OF_RANGE("value",r,e)}!function(e,t,i){Lg(t,"offset"),void 0!==e[t]&&void 0!==e[t+i]||zg(t,e.length-(i+1))}(n,r,s)}function Lg(e,t){if("number"!=typeof e)throw new Mg.ERR_INVALID_ARG_TYPE(t,"number",e)}function zg(e,t,i){if(Math.floor(e)!==e)throw Lg(e,i),new Mg.ERR_OUT_OF_RANGE(i||"offset","an integer",e);if(t<0)throw new Mg.ERR_BUFFER_OUT_OF_BOUNDS;throw new Mg.ERR_OUT_OF_RANGE(i||"offset",`>= ${i?1:0} and <= ${t}`,e)}Rg("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),Rg("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),Rg("ERR_OUT_OF_RANGE",(function(e,t,i){let n=`The value of "${e}" is out of range.`,r=i;return Number.isInteger(i)&&Math.abs(i)>2**32?r=Dg(String(i)):"bigint"==typeof i&&(r=String(i),(i>BigInt(2)**BigInt(32)||i<-(BigInt(2)**BigInt(32)))&&(r=Dg(r)),r+="n"),n+=` It must be ${t}. Received ${r}`,n}),RangeError);const Hg=/[^+/0-9A-Za-z-_]/g;function Pg(e,t){let i;t=t||1/0;const n=e.length;let r=null;const s=[];for(let o=0;o<n;++o){if(i=e.charCodeAt(o),i>55295&&i<57344){if(!r){if(i>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(o+1===n){(t-=3)>-1&&s.push(239,191,189);continue}r=i;continue}if(i<56320){(t-=3)>-1&&s.push(239,191,189),r=i;continue}i=65536+(r-55296<<10|i-56320)}else r&&(t-=3)>-1&&s.push(239,191,189);if(r=null,i<128){if((t-=1)<0)break;s.push(i)}else if(i<2048){if((t-=2)<0)break;s.push(i>>6|192,63&i|128)}else if(i<65536){if((t-=3)<0)break;s.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return s}function Og(e){return Yp.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(Hg,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Ug(e,t,i,n){let r;for(r=0;r<n&&!(r+i>=t.length||r>=e.length);++r)t[r+i]=e[r];return r}function qg(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Qg(e){return e!=e}const Vg=function(){const e="0123456789abcdef",t=new Array(256);for(let i=0;i<16;++i){const n=16*i;for(let r=0;r<16;++r)t[n+r]=e[i]+e[r]}return t}();function jg(e){return"undefined"==typeof BigInt?Wg:e}function Wg(){throw new Error("BigInt not supported")}class Gg{constructor(e,t){this.position=0,this.url=e,this.config=t,Ht(e)||!1===t.cacheFetches?this.useCache=!1:(this.useCache=!0,this.cache=new $g({fetch:(e,t)=>this._fetch(e,t),fetchSize:t.fetchSize||1e4}))}async _fetch(e,t){const i={start:e,size:t};this._stat={size:void 0};const n=await Qs.loadArrayBuffer(this.url,qa(this.config,{range:i}));return tg.from(n)}async read(e,t=0,i=1/0,n=0){if(this.useCache)await this.cache.get(e,t,n,i);else{(await this._fetch(n,i)).copy(e,t)}return{bytesRead:i,buffer:e}}async readFile(){const e=await Qs.loadArrayBuffer(this.url,qa(this.config));return tg.from(e)}async stat(){if(!this._stat){const e=tg.allocUnsafe(10);if(await this.read(e,0,10,0),!this._stat)throw new Error(`unable to determine size of file at ${this.url}`)}return this._stat}}class $g{constructor({fetch:e,fetchSize:t=3e4}){this.fetch=e,this.position=0,this.buffer=tg.allocUnsafe(0),this.fetchSize=t}async get(e,t,i,n){if(e.length<t+n)throw new Error("output buffer not big enough for request");if(i>=this.position&&i+n<=this.position+this.buffer.length);else{const e=Math.max(n,this.fetchSize);this.buffer=await this.fetch(i,e),this.position=i}const r=t,s=i-this.position,o=s+n;this.buffer.copy(e,r,s,o)}}class Kg{chrAliasTable=new Map;constructor(e,t,i){this.config=e,this.browser=i,this.genome=t,this.cramFile=new qp.CramFile({filehandle:e.fileHandle?e.fileHandle:new Gg(e.url,e),seqFetch:e.seqFetch||async function(e,t,i){const n=this.genome,r=await this.getHeader(),s=n.getChromosomeName(r.indexToChr[e]);return this.genome.getSequence(s,t-1,i)}.bind(this),checkSequenceMD5:void 0===e.checkSequenceMD5||e.checkSequenceMD5});const n=e.indexFileHandle?e.indexFileHandle:new Gg(e.indexURL,e);this.indexedCramFile=new qp.IndexedCramFile({cram:this.cramFile,index:new qp.CraiIndex({filehandle:n}),fetchSizeLimit:e.fetchSizeLimit||1e9}),Bp.setReaderDefaults(this,e)}async getHeader(){if(!this.header){const e=await this.cramFile.getSamHeader(),t={},i=[],n=[];for(let r of e)if("SQ"===r.tag){for(let e of r.data)if("SN"===e.tag){const n=e.value;t[n]=i.length,i.push(n);break}}else"RG"===r.tag&&n.push(r.data);this.header={indexToChr:i,chrToIndex:t,chrNames:Object.keys(t),readGroups:n}}return this.header}async#A(e){if(await this.getHeader(),this.chrAliasTable.has(e)&&void 0===(e=this.chrAliasTable.get(e)))return;let t=this.header.chrToIndex[e];if(void 0===t){const i=await this.genome.getAliasRecord(e);let n;if(i){const e=Object.keys(i).filter((e=>"start"!==e&&"end"!==e)).map((e=>i[e])).filter((e=>void 0!==this.header.chrToIndex[e]));e.length>0&&(n=e[0],t=this.header.chrToIndex[e[0]])}this.chrAliasTable.set(e,n)}return t}async readAlignments(e,t,i){const n=await this.getHeader(),r=await this.#A(e),s=new ep(e,t,i,this.config);if(void 0===r)return s;try{const e=await this.indexedCramFile.getRecordsForRange(r,t,i);for(let a of e){const e=a.sequenceId,c=a.alignmentStart,l=c+a.lengthOnRef;if(e<0)continue;if(e>r||c>i)return;if(e<r)continue;if(l<t)continue;const h=o(a,n.chrNames);this.filter.pass(h)&&s.push(h)}return s.finish(),s}catch(e){let t=e.message;throw t&&t.indexOf("MD5")>=0&&(t="Sequence mismatch. Is this the correct genome for the loaded CRAM?"),this.browser.alert.present(new Error(t)),e}function o(e,t){const i=new mp;if(i.chr=t[e.sequenceId],i.start=e.alignmentStart-1,i.lengthOnRef=e.lengthOnRef,i.flags=e.flags,i.strand=!(16&e.flags),i.fragmentLength=e.templateLength||e.templateSize,i.mq=e.mappingQuality,i.end=e.alignmentStart+e.lengthOnRef,i.readGroupId=e.readGroupId,e.mate&&void 0!==e.mate.sequenceId){const n=void 0!==e.mate.flags?!(1&e.mate.flags):!(32&e.flags);i.mate={chr:t[e.mate.sequenceId],position:e.mate.alignmentStart,strand:n}}return i.seq=e.getReadBases(),i.qual=e.qualityScores,i.tagDict=e.tags,i.readName=e.readName,function(e,t){const i=[];let n,r,s=0,o="";if(t.scStart=t.start,t.scLengthOnRef=t.lengthOnRef,e.readFeatures)for(let a of e.readFeatures){const e=a.code,c=a.data,l=a.pos-1,h=a.refPos-1;switch(e){case"S":case"I":case"i":case"N":case"D":if(l>s){const e=l-s;i.push(new xp({start:h-e,seqOffset:s,len:e,type:"M"})),s+=e,o+=e+"M"}if("S"===e){let n=h;t.scLengthOnRef+=c.length,0===l&&(t.scStart-=c.length,n-=c.length);const r=c.length;i.push(new xp({start:n,seqOffset:s,len:r,type:"S"})),s+=r,o+=r+e}else if("I"===e||"i"===e){void 0===n&&(n=[]);const t="i"===e?1:c.length;n.push(new xp({start:h,len:t,seqOffset:s,type:"I"})),s+=t,o+=t+e}else"D"!==e&&"N"!==e||(r||(r=[]),r.push({start:h,len:c,type:e}),o+=c+e);break;case"H":case"P":o+=c+e}}const a=e.readLength-s;a>0&&(i.push(new xp({start:e.alignmentStart+e.lengthOnRef-a-1,seqOffset:s,len:a,type:"M"})),o+=a+"M");t.blocks=i,t.insertions=n,t.gaps=r,t.cigar=o}(e,i),i.mate&&i.start>i.mate.position&&i.fragmentLength>0&&(i.fragmentLength=-i.fragmentLength),Bp.setPairOrientation(i),i}}}const Yg=2291137574,Xg=2273964779,Zg=[84,68,70,52],Jg=new Uint8Array([66,65,77,1]),em=[67,82,65,77],tm=[31,139],im=4,nm=new Set(["narrowpeak","broadpeak","regionpeak","peaks","bedgraph","wig","gff3","gff","gtf","fusionjuncspan","refflat","seg","aed","bed","bedMethyl","vcf","bb","bigbed","biginteract","biggenepred","bignarrowpeak","bw","bigwig","bam","tdf","refgene","genepred","genepredext","bedpe","bp","snp","rmsk","cram","gwas","maf","mut","hiccups","fasta","fa","fna","pytor","hic","qtl"]);function rm(e,t){const i=Math.min(e.length,t.length);if(0==i)return!1;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}async function sm(e){let t;const i=e.filename||await Wa(e.url);return i&&(t=await function(e){if(!e)return;if((e=e.toLowerCase()).endsWith("refgene.txt.gz")||e.endsWith("refgene.txt.bgz")||e.endsWith("refgene.txt")||e.endsWith("refgene.sorted.txt.gz")||e.endsWith("refgene.sorted.txt.bgz"))return"refgene";e.endsWith(".gz")&&(e=e.substring(0,e.length-3));e.endsWith(".bgz")&&(e=e.substring(0,e.length-4));(e.endsWith(".txt")||e.endsWith(".tab")||e.endsWith(".tsv"))&&(e=e.substring(0,e.length-4));const t=e.lastIndexOf("."),i=t<0?e:e.substring(t+1);switch(i){case"bw":return"bigwig";case"bb":return"bigbed";case"fasta":case"fa":case"fna":return"fasta";default:return nm.has(i)?i:void 0}}(i)),t||(t=await async function(e){const t=e.url;let i=qa(e,{range:{start:0,size:1e3}}),n=await Qs.loadArrayBuffer(t,i),r=new Uint8Array(n);if(rm(r,tm)){if(0!==(r[3]&im)&&66===r[12]&&67===r[13]){i=qa(e,{range:{start:0,size:ms(n)}}),n=await Qs.loadArrayBuffer(t,i),r=gs(n)}else i=qa(e,{}),n=await Qs.loadArrayBuffer(t,i),r=ps(n),e._filecontents=r}if(rm(r,Jg))return"bam";if(rm(r,em))return"cram";const s=!0;let o=new Ac(new DataView(n),s).getUInt();if(o===Yg)return"bigwig";if(o===Xg)return"bigbed";if(rm(r,Zg))return"tdf";const a=new TextDecoder("utf-8").decode(r),c=a.split(/\r?\n/)[0];if(c.startsWith("##fileformat=VCF"))return"vcf";if(c.startsWith("##gff-version 3"))return"gff3";if(c.startsWith("##gff-version"))return"gff";if(xh.isQTL(c))return"qtl";if(Jl.isGWAS(c))return"gwas";if(Tc(c.split("\t")))return"hiccups";return null}(e)),t}class om{constructor(e,t){const i=t.genome;if(this.config=e,this.genome=i,$a(e.url)&&(this.config.indexed=!1),"ga4gh"===e.sourceType)throw Error("Unsupported source type 'ga4gh'");if("pysam"===e.sourceType)this.bamReader=new Pp(e,i);else if("htsget"===e.sourceType)this.bamReader=new Up(e,i);else if("shardedBam"===e.sourceType)this.bamReader=new Hp(e,i);else if("cram"===e.format)this.bamReader=new Kg(e,i,t);else{if(!this.config.indexURL&&!1!==e.indexed)if(Mt(this.config.url)){const e=function(e,t){if(Mt(e)){if(e.includes("?")){const i=e.indexOf("?");return e.substring(0,i)+"."+t+e.substring(i)}return e+"."+t}}(this.config.url,"bai");e?(console.warn(`Warning: no indexURL specified for ${this.config.url}.  Guessing ${e}`),this.config.indexURL=e):(console.warning(`Warning: no indexURL specified for ${this.config.url}.`),this.config.indexed=!1)}else console.warning(`Warning: no indexURL specified for ${this.config.name}.`),this.config.indexed=!1;!1!==this.config.indexed?this.bamReader=new zp(e,i):this.bamReader=new Lp(e,i)}}async getAlignments(e,t,i){const n=this.genome,r=await this.bamReader.readAlignments(e,t,i);if(r.hasAlignments){const t=await n.getSequence(e,r.start,r.end);if(t)return r.coverageMap.refSeq=t,r.sequence=t,r;console.error("No sequence for: "+e+":"+r.start+"-"+r.end)}return r}}class am{constructor({chr:e,start:t,end:i}){this.chr=e,this.start=t,this.end=i}contains(e){return e.chr===this.chr&&e.start>=this.start&&e.end<=this.end}overlaps(e){return e.chr===this.chr&&!(e.end<this.start||e.start>this.end)}extend(e){e.chr===this.chr&&(this.start=Math.min(e.start,this.start),this.end=Math.max(e.end,this.end))}getLocusString(){if("all"===this.chr)return"all";{const e=Rt(Math.floor(this.start)+1),t=Rt(Math.round(this.end));return`${this.chr}:${e}-${t}`}}static fromLocusString(e){if("all"===e)return new am({chr:"all"});const t=e.split(":"),i=t[0],n=t[1].split("-"),r=Number.parseInt(n[0].replace(/,/g,""))-1,s=Number.parseInt(n[1].replace(/,/g,""));return new am({chr:i,start:r,end:s})}}
/*!
     * vanilla-picker v2.12.1
     * https://vanilla-picker.js.org
     *
     * Copyright 2017-2021 Andreas Borgen (https://github.com/Sphinxxxx), Adam Brooks (https://github.com/dissimulate)
     * Released under the ISC license.
     */var cm=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},lm=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),hm=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,s=void 0;try{for(var o,a=e[Symbol.iterator]();!(n=(o=a.next()).done)&&(i.push(o.value),!t||i.length!==t);n=!0);}catch(e){r=!0,s=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw s}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};String.prototype.startsWith=String.prototype.startsWith||function(e){return 0===this.indexOf(e)},String.prototype.padStart=String.prototype.padStart||function(e,t){for(var i=this;i.length<e;)i=t+i;return i};var dm={cb:"0f8ff",tqw:"aebd7",q:"-ffff",qmrn:"7fffd4",zr:"0ffff",bg:"5f5dc",bsq:"e4c4",bck:"---",nch:"ebcd",b:"--ff",bvt:"8a2be2",brwn:"a52a2a",brw:"deb887",ctb:"5f9ea0",hrt:"7fff-",chcT:"d2691e",cr:"7f50",rnw:"6495ed",crns:"8dc",crms:"dc143c",cn:"-ffff",Db:"--8b",Dcn:"-8b8b",Dgnr:"b8860b",Dgr:"a9a9a9",Dgrn:"-64-",Dkhk:"bdb76b",Dmgn:"8b-8b",Dvgr:"556b2f",Drng:"8c-",Drch:"9932cc",Dr:"8b--",Dsmn:"e9967a",Dsgr:"8fbc8f",DsTb:"483d8b",DsTg:"2f4f4f",Dtrq:"-ced1",Dvt:"94-d3",ppnk:"1493",pskb:"-bfff",mgr:"696969",grb:"1e90ff",rbrc:"b22222",rwht:"af0",stg:"228b22",chs:"-ff",gnsb:"dcdcdc",st:"8f8ff",g:"d7-",gnr:"daa520",gr:"808080",grn:"-8-0",grnw:"adff2f",hnw:"0fff0",htpn:"69b4",nnr:"cd5c5c",ng:"4b-82",vr:"0",khk:"0e68c",vnr:"e6e6fa",nrb:"0f5",wngr:"7cfc-",mnch:"acd",Lb:"add8e6",Lcr:"08080",Lcn:"e0ffff",Lgnr:"afad2",Lgr:"d3d3d3",Lgrn:"90ee90",Lpnk:"b6c1",Lsmn:"a07a",Lsgr:"20b2aa",Lskb:"87cefa",LsTg:"778899",Lstb:"b0c4de",Lw:"e0",m:"-ff-",mgrn:"32cd32",nn:"af0e6",mgnt:"-ff",mrn:"8--0",mqm:"66cdaa",mmb:"--cd",mmrc:"ba55d3",mmpr:"9370db",msg:"3cb371",mmsT:"7b68ee","":"-fa9a",mtr:"48d1cc",mmvt:"c71585",mnLb:"191970",ntc:"5fffa",mstr:"e4e1",mccs:"e4b5",vjw:"dead",nv:"--80",c:"df5e6",v:"808-0",vrb:"6b8e23",rng:"a5-",rngr:"45-",rch:"da70d6",pgnr:"eee8aa",pgrn:"98fb98",ptrq:"afeeee",pvtr:"db7093",ppwh:"efd5",pchp:"dab9",pr:"cd853f",pnk:"c0cb",pm:"dda0dd",pwrb:"b0e0e6",prp:"8-080",cc:"663399",r:"--",sbr:"bc8f8f",rb:"4169e1",sbrw:"8b4513",smn:"a8072",nbr:"4a460",sgrn:"2e8b57",ssh:"5ee",snn:"a0522d",svr:"c0c0c0",skb:"87ceeb",sTb:"6a5acd",sTgr:"708090",snw:"afa",n:"-ff7f",stb:"4682b4",tn:"d2b48c",t:"-8080",thst:"d8bfd8",tmT:"6347",trqs:"40e0d0",vt:"ee82ee",whT:"5deb3",wht:"",hts:"5f5f5",w:"-",wgrn:"9acd32"};function um(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(t>0?e.toFixed(t).replace(/0+$/,"").replace(/\.$/,""):e.toString())||"0"}var fm=function(){function e(t,i,n,r){cm(this,e);var s=this;if(void 0===t);else if(Array.isArray(t))this.rgba=t;else if(void 0===n){var o=t&&""+t;o&&function(t){if(t.startsWith("hsl")){var i=t.match(/([\-\d\.e]+)/g).map(Number),n=hm(i,4),r=n[0],o=n[1],a=n[2],c=n[3];void 0===c&&(c=1),r/=360,o/=100,a/=100,s.hsla=[r,o,a,c]}else if(t.startsWith("rgb")){var l=t.match(/([\-\d\.e]+)/g).map(Number),h=hm(l,4),d=h[0],u=h[1],f=h[2],p=h[3];void 0===p&&(p=1),s.rgba=[d,u,f,p]}else t.startsWith("#")?s.rgba=e.hexToRgb(t):s.rgba=e.nameToRgb(t)||e.hexToRgb(t)}(o.toLowerCase())}else this.rgba=[t,i,n,void 0===r?1:r]}return lm(e,[{key:"printRGB",value:function(e){var t=(e?this.rgba:this.rgba.slice(0,3)).map((function(e,t){return um(e,3===t?3:0)}));return e?"rgba("+t+")":"rgb("+t+")"}},{key:"printHSL",value:function(e){var t=[360,100,100,1],i=["","%","%",""],n=(e?this.hsla:this.hsla.slice(0,3)).map((function(e,n){return um(e*t[n],3===n?3:1)+i[n]}));return e?"hsla("+n+")":"hsl("+n+")"}},{key:"printHex",value:function(e){var t=this.hex;return e?t:t.substring(0,7)}},{key:"rgba",get:function(){if(this._rgba)return this._rgba;if(!this._hsla)throw new Error("No color is set");return this._rgba=e.hslToRgb(this._hsla)},set:function(e){3===e.length&&(e[3]=1),this._rgba=e,this._hsla=null}},{key:"rgbString",get:function(){return this.printRGB()}},{key:"rgbaString",get:function(){return this.printRGB(!0)}},{key:"hsla",get:function(){if(this._hsla)return this._hsla;if(!this._rgba)throw new Error("No color is set");return this._hsla=e.rgbToHsl(this._rgba)},set:function(e){3===e.length&&(e[3]=1),this._hsla=e,this._rgba=null}},{key:"hslString",get:function(){return this.printHSL()}},{key:"hslaString",get:function(){return this.printHSL(!0)}},{key:"hex",get:function(){var e=this.rgba.map((function(e,t){return t<3?e.toString(16):Math.round(255*e).toString(16)}));return"#"+e.map((function(e){return e.padStart(2,"0")})).join("")},set:function(t){this.rgba=e.hexToRgb(t)}}],[{key:"hexToRgb",value:function(e){var t=(e.startsWith("#")?e.slice(1):e).replace(/^(\w{3})$/,"$1F").replace(/^(\w)(\w)(\w)(\w)$/,"$1$1$2$2$3$3$4$4").replace(/^(\w{6})$/,"$1FF");if(!t.match(/^([0-9a-fA-F]{8})$/))throw new Error("Unknown hex color; "+e);var i=t.match(/^(\w\w)(\w\w)(\w\w)(\w\w)$/).slice(1).map((function(e){return parseInt(e,16)}));return i[3]=i[3]/255,i}},{key:"nameToRgb",value:function(t){var i=t.toLowerCase().replace("at","T").replace(/[aeiouyldf]/g,"").replace("ght","L").replace("rk","D").slice(-5,4),n=dm[i];return void 0===n?n:e.hexToRgb(n.replace(/\-/g,"00").padStart(6,"f"))}},{key:"rgbToHsl",value:function(e){var t=hm(e,4),i=t[0],n=t[1],r=t[2],s=t[3];i/=255,n/=255,r/=255;var o=Math.max(i,n,r),a=Math.min(i,n,r),c=void 0,l=void 0,h=(o+a)/2;if(o===a)c=l=0;else{var d=o-a;switch(l=h>.5?d/(2-o-a):d/(o+a),o){case i:c=(n-r)/d+(n<r?6:0);break;case n:c=(r-i)/d+2;break;case r:c=(i-n)/d+4}c/=6}return[c,l,h,s]}},{key:"hslToRgb",value:function(e){var t=hm(e,4),i=t[0],n=t[1],r=t[2],s=t[3],o=void 0,a=void 0,c=void 0;if(0===n)o=a=c=r;else{var l=function(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e},h=r<.5?r*(1+n):r+n-r*n,d=2*r-h;o=l(d,h,i+1/3),a=l(d,h,i),c=l(d,h,i-1/3)}var u=[255*o,255*a,255*c].map(Math.round);return u[3]=s,u}}]),e}(),pm=function(){function e(){cm(this,e),this._events=[]}return lm(e,[{key:"add",value:function(e,t,i){e.addEventListener(t,i,!1),this._events.push({target:e,type:t,handler:i})}},{key:"remove",value:function(t,i,n){this._events=this._events.filter((function(r){var s=!0;return t&&t!==r.target&&(s=!1),i&&i!==r.type&&(s=!1),n&&n!==r.handler&&(s=!1),s&&e._doRemove(r.target,r.type,r.handler),!s}))}},{key:"destroy",value:function(){this._events.forEach((function(t){return e._doRemove(t.target,t.type,t.handler)})),this._events=[]}}],[{key:"_doRemove",value:function(e,t,i){e.removeEventListener(t,i,!1)}}]),e}();function gm(e,t,i){var n=!1;function r(e,t,i){return Math.max(t,Math.min(e,i))}function s(e,s,o){if(o&&(n=!0),n){e.preventDefault();var a=t.getBoundingClientRect(),c=a.width,l=a.height,h=s.clientX,d=s.clientY,u=r(h-a.left,0,c),f=r(d-a.top,0,l);i(u/c,f/l)}}function o(e,t){1===(void 0===e.buttons?e.which:e.buttons)?s(e,e,t):n=!1}function a(e,t){1===e.touches.length?s(e,e.touches[0],t):n=!1}e.add(t,"mousedown",(function(e){o(e,!0)})),e.add(t,"touchstart",(function(e){a(e,!0)})),e.add(window,"mousemove",o),e.add(t,"touchmove",a),e.add(window,"mouseup",(function(e){n=!1})),e.add(t,"touchend",(function(e){n=!1})),e.add(t,"touchcancel",(function(e){n=!1}))}var mm="keydown",wm="mousedown",bm="focusin";function Fm(e,t){return(t||document).querySelector(e)}function vm(e){e.preventDefault(),e.stopPropagation()}function ym(e,t,i,n,r){e.add(t,mm,(function(e){i.indexOf(e.key)>=0&&(r&&vm(e),n(e))}))}var Am=function(){function e(t){cm(this,e),this.settings={popup:"right",layout:"default",alpha:!0,editor:!0,editorFormat:"hex",cancelButton:!1,defaultColor:"#0cf"},this._events=new pm,this.onChange=null,this.onDone=null,this.onOpen=null,this.onClose=null,this.setOptions(t)}return lm(e,[{key:"setOptions",value:function(e){var t=this;if(e){var i=this.settings;if(e instanceof HTMLElement)i.parent=e;else{i.parent&&e.parent&&i.parent!==e.parent&&(this._events.remove(i.parent),this._popupInited=!1),function(e,t,i){for(var n in e)i&&i.indexOf(n)>=0||(t[n]=e[n])}(e,i),e.onChange&&(this.onChange=e.onChange),e.onDone&&(this.onDone=e.onDone),e.onOpen&&(this.onOpen=e.onOpen),e.onClose&&(this.onClose=e.onClose);var n=e.color||e.colour;n&&this._setColor(n)}var r=i.parent;if(r&&i.popup&&!this._popupInited){var s=function(e){return t.openHandler(e)};this._events.add(r,"click",s),ym(this._events,r,[" ","Spacebar","Enter"],s),this._popupInited=!0}else e.parent&&!i.popup&&this.show()}}},{key:"openHandler",value:function(e){if(this.show()){e&&e.preventDefault(),this.settings.parent.style.pointerEvents="none";var t=e&&e.type===mm?this._domEdit:this.domElement;setTimeout((function(){return t.focus()}),100),this.onOpen&&this.onOpen(this.colour)}}},{key:"closeHandler",value:function(e){var t=e&&e.type,i=!1;if(e)if(t===wm||t===bm){var n=(this.__containedEvent||0)+100;e.timeStamp>n&&(i=!0)}else vm(e),i=!0;else i=!0;i&&this.hide()&&(this.settings.parent.style.pointerEvents="",t!==wm&&this.settings.parent.focus(),this.onClose&&this.onClose(this.colour))}},{key:"movePopup",value:function(e,t){this.closeHandler(),this.setOptions(e),t&&this.openHandler()}},{key:"setColor",value:function(e,t){this._setColor(e,{silent:t})}},{key:"_setColor",value:function(e,t){if("string"==typeof e&&(e=e.trim()),e){t=t||{};var i=void 0;try{i=new fm(e)}catch(e){if(t.failSilently)return;throw e}if(!this.settings.alpha){var n=i.hsla;n[3]=1,i.hsla=n}this.colour=this.color=i,this._setHSLA(null,null,null,null,t)}}},{key:"setColour",value:function(e,t){this.setColor(e,t)}},{key:"show",value:function(){if(!this.settings.parent)return!1;if(this.domElement){var e=this._toggleDOM(!0);return this._setPosition(),e}var t=function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstElementChild}(this.settings.template||'<div class="picker_wrapper" tabindex="-1"><div class="picker_arrow"></div><div class="picker_hue picker_slider"><div class="picker_selector"></div></div><div class="picker_sl"><div class="picker_selector"></div></div><div class="picker_alpha picker_slider"><div class="picker_selector"></div></div><div class="picker_editor"><input aria-label="Type a color name or hex value"/></div><div class="picker_sample"></div><div class="picker_done"><button>Ok</button></div><div class="picker_cancel"><button>Cancel</button></div></div>');return this.domElement=t,this._domH=Fm(".picker_hue",t),this._domSL=Fm(".picker_sl",t),this._domA=Fm(".picker_alpha",t),this._domEdit=Fm(".picker_editor input",t),this._domSample=Fm(".picker_sample",t),this._domOkay=Fm(".picker_done button",t),this._domCancel=Fm(".picker_cancel button",t),t.classList.add("layout_"+this.settings.layout),this.settings.alpha||t.classList.add("no_alpha"),this.settings.editor||t.classList.add("no_editor"),this.settings.cancelButton||t.classList.add("no_cancel"),this._ifPopup((function(){return t.classList.add("popup")})),this._setPosition(),this.colour?this._updateUI():this._setColor(this.settings.defaultColor),this._bindEvents(),!0}},{key:"hide",value:function(){return this._toggleDOM(!1)}},{key:"destroy",value:function(){this._events.destroy(),this.domElement&&this.settings.parent.removeChild(this.domElement)}},{key:"_bindEvents",value:function(){var e=this,t=this,i=this.domElement,n=this._events;function r(e,t,i){n.add(e,t,i)}r(i,"click",(function(e){return e.preventDefault()})),gm(n,this._domH,(function(e,i){return t._setHSLA(e)})),gm(n,this._domSL,(function(e,i){return t._setHSLA(null,e,1-i)})),this.settings.alpha&&gm(n,this._domA,(function(e,i){return t._setHSLA(null,null,null,1-i)}));var s=this._domEdit;r(s,"input",(function(e){t._setColor(this.value,{fromEditor:!0,failSilently:!0})})),r(s,"focus",(function(e){var t=this;t.selectionStart===t.selectionEnd&&t.select()})),this._ifPopup((function(){var t=function(t){return e.closeHandler(t)};r(window,wm,t),r(window,bm,t),ym(n,i,["Esc","Escape"],t);var s=function(t){e.__containedEvent=t.timeStamp};r(i,wm,s),r(i,bm,s),r(e._domCancel,"click",t)}));var o=function(t){e._ifPopup((function(){return e.closeHandler(t)})),e.onDone&&e.onDone(e.colour)};r(this._domOkay,"click",o),ym(n,i,["Enter"],o)}},{key:"_setPosition",value:function(){var e=this.settings.parent,t=this.domElement;e!==t.parentNode&&e.appendChild(t),this._ifPopup((function(i){"static"===getComputedStyle(e).position&&(e.style.position="relative");var n=!0===i?"popup_right":"popup_"+i;["popup_top","popup_bottom","popup_left","popup_right"].forEach((function(e){e===n?t.classList.add(e):t.classList.remove(e)})),t.classList.add(n)}))}},{key:"_setHSLA",value:function(e,t,i,n,r){r=r||{};var s=this.colour,o=s.hsla;[e,t,i,n].forEach((function(e,t){(e||0===e)&&(o[t]=e)})),s.hsla=o,this._updateUI(r),this.onChange&&!r.silent&&this.onChange(s)}},{key:"_updateUI",value:function(e){if(this.domElement){e=e||{};var t=this.colour,i=t.hsla,n="hsl("+360*i[0]+", 100%, 50%)",r=t.hslString,s=t.hslaString,o=this._domH,a=this._domSL,c=this._domA,l=Fm(".picker_selector",o),h=Fm(".picker_selector",a),d=Fm(".picker_selector",c);b(0,l,i[0]),this._domSL.style.backgroundColor=this._domH.style.color=n,b(0,h,i[1]),F(0,h,1-i[2]),a.style.color=r,F(0,d,1-i[3]);var u=r,f=u.replace("hsl","hsla").replace(")",", 0)"),p="linear-gradient("+[u,f]+")";if(this._domA.style.background=p+", linear-gradient(45deg, lightgrey 25%, transparent 25%, transparent 75%, lightgrey 75%) 0 0 / 2em 2em,\n                   linear-gradient(45deg, lightgrey 25%,       white 25%,       white 75%, lightgrey 75%) 1em 1em / 2em 2em",!e.fromEditor){var g=this.settings.editorFormat,m=this.settings.alpha,w=void 0;switch(g){case"rgb":w=t.printRGB(m);break;case"hsl":w=t.printHSL(m);break;default:w=t.printHex(m)}this._domEdit.value=w}this._domSample.style.color=s}function b(e,t,i){t.style.left=100*i+"%"}function F(e,t,i){t.style.top=100*i+"%"}}},{key:"_ifPopup",value:function(e,t){this.settings.parent&&this.settings.popup?e&&e(this.settings.popup):t&&t()}},{key:"_toggleDOM",value:function(e){var t=this.domElement;if(!t)return!1;var i=e?"":"none",n=t.style.display!==i;return n&&(t.style.display=i),n}}]),e}(),Cm=document.createElement("style");function _m(e){if(xm[e])return xm[e];if(xm["chr"+e]){const t=xm["chr"+e];return xm[e]=t,t}{const r=(t=Math.round(255*Math.random()).toString(10),i=Math.round(255*Math.random()).toString(10),n=Math.round(255*Math.random()).toString(10),"rgb("+t+","+i+","+n+")");return xm[e]=r,r}var t,i,n}Cm.textContent='.picker_wrapper.no_alpha .picker_alpha{display:none}.picker_wrapper.no_editor .picker_editor{position:absolute;z-index:-1;opacity:0}.picker_wrapper.no_cancel .picker_cancel{display:none}.layout_default.picker_wrapper{display:flex;flex-flow:row wrap;justify-content:space-between;align-items:stretch;font-size:10px;width:25em;padding:.5em}.layout_default.picker_wrapper input,.layout_default.picker_wrapper button{font-size:1rem}.layout_default.picker_wrapper>*{margin:.5em}.layout_default.picker_wrapper::before{content:"";display:block;width:100%;height:0;order:1}.layout_default .picker_slider,.layout_default .picker_selector{padding:1em}.layout_default .picker_hue{width:100%}.layout_default .picker_sl{flex:1 1 auto}.layout_default .picker_sl::before{content:"";display:block;padding-bottom:100%}.layout_default .picker_editor{order:1;width:6.5rem}.layout_default .picker_editor input{width:100%;height:100%}.layout_default .picker_sample{order:1;flex:1 1 auto}.layout_default .picker_done,.layout_default .picker_cancel{order:1}.picker_wrapper{box-sizing:border-box;background:#f2f2f2;box-shadow:0 0 0 1px silver;cursor:default;font-family:sans-serif;color:#444;pointer-events:auto}.picker_wrapper:focus{outline:none}.picker_wrapper button,.picker_wrapper input{box-sizing:border-box;border:none;box-shadow:0 0 0 1px silver;outline:none}.picker_wrapper button:focus,.picker_wrapper button:active,.picker_wrapper input:focus,.picker_wrapper input:active{box-shadow:0 0 2px 1px #1e90ff}.picker_wrapper button{padding:.4em .6em;cursor:pointer;background-color:#f5f5f5;background-image:linear-gradient(0deg, gainsboro, transparent)}.picker_wrapper button:active{background-image:linear-gradient(0deg, transparent, gainsboro)}.picker_wrapper button:hover{background-color:#fff}.picker_selector{position:absolute;z-index:1;display:block;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);border:2px solid #fff;border-radius:100%;box-shadow:0 0 3px 1px #67b9ff;background:currentColor;cursor:pointer}.picker_slider .picker_selector{border-radius:2px}.picker_hue{position:relative;background-image:linear-gradient(90deg, red, yellow, lime, cyan, blue, magenta, red);box-shadow:0 0 0 1px silver}.picker_sl{position:relative;box-shadow:0 0 0 1px silver;background-image:linear-gradient(180deg, white, rgba(255, 255, 255, 0) 50%),linear-gradient(0deg, black, rgba(0, 0, 0, 0) 50%),linear-gradient(90deg, #808080, rgba(128, 128, 128, 0))}.picker_alpha,.picker_sample{position:relative;background:linear-gradient(45deg, lightgrey 25%, transparent 25%, transparent 75%, lightgrey 75%) 0 0/2em 2em,linear-gradient(45deg, lightgrey 25%, white 25%, white 75%, lightgrey 75%) 1em 1em/2em 2em;box-shadow:0 0 0 1px silver}.picker_alpha .picker_selector,.picker_sample .picker_selector{background:none}.picker_editor input{font-family:monospace;padding:.2em .4em}.picker_sample::before{content:"";position:absolute;display:block;width:100%;height:100%;background:currentColor}.picker_arrow{position:absolute;z-index:-1}.picker_wrapper.popup{position:absolute;z-index:2;margin:1.5em}.picker_wrapper.popup,.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{background:#f2f2f2;box-shadow:0 0 10px 1px rgba(0,0,0,.4)}.picker_wrapper.popup .picker_arrow{width:3em;height:3em;margin:0}.picker_wrapper.popup .picker_arrow::before,.picker_wrapper.popup .picker_arrow::after{content:"";display:block;position:absolute;top:0;left:0;z-index:-99}.picker_wrapper.popup .picker_arrow::before{width:100%;height:100%;-webkit-transform:skew(45deg);transform:skew(45deg);-webkit-transform-origin:0 100%;transform-origin:0 100%}.picker_wrapper.popup .picker_arrow::after{width:150%;height:150%;box-shadow:none}.popup.popup_top{bottom:100%;left:0}.popup.popup_top .picker_arrow{bottom:0;left:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.popup.popup_bottom{top:100%;left:0}.popup.popup_bottom .picker_arrow{top:0;left:0;-webkit-transform:rotate(90deg) scale(1, -1);transform:rotate(90deg) scale(1, -1)}.popup.popup_left{top:0;right:100%}.popup.popup_left .picker_arrow{top:0;right:0;-webkit-transform:scale(-1, 1);transform:scale(-1, 1)}.popup.popup_right{top:0;left:100%}.popup.popup_right .picker_arrow{top:0;left:0}',document.documentElement.firstElementChild.appendChild(Cm),Am.StyleElement=Cm;const xm={chrX:"rgb(204, 153, 0)",chrY:"rgb(153, 204, 0",chrUn:"rgb(50, 50, 50)",chr1:"rgb(80, 80, 255)",chrI:"rgb(139, 155, 187)",chr2:"rgb(206, 61, 50)",chrII:"rgb(206, 61, 50)",chr2a:"rgb(216, 71, 60)",chr2b:"rgb(226, 81, 70)",chr3:"rgb(116, 155, 88)",chrIII:"rgb(116, 155, 88)",chr4:"rgb(240, 230, 133)",chrIV:"rgb(240, 230, 133)",chr5:"rgb(70, 105, 131)",chr6:"rgb(186, 99, 56)",chr7:"rgb(93, 177, 221)",chr8:"rgb(128, 34, 104)",chr9:"rgb(107, 215, 107)",chr10:"rgb(213, 149, 167)",chr11:"rgb(146, 72, 34)",chr12:"rgb(131, 123, 141)",chr13:"rgb(199, 81, 39)",chr14:"rgb(213, 143, 92)",chr15:"rgb(122, 101, 165)",chr16:"rgb(228, 175, 105)",chr17:"rgb(59, 27, 83)",chr18:"rgb(205, 222, 183)",chr19:"rgb(97, 42, 121)",chr20:"rgb(174, 31, 99)",chr21:"rgb(231, 199, 111)",chr22:"rgb(90, 101, 94)",chr23:"rgb(204, 153, 0)",chr24:"rgb(153, 204, 0)",chr25:"rgb(51, 204, 0)",chr26:"rgb(0, 204, 51)",chr27:"rgb(0, 204, 153)",chr28:"rgb(0, 153, 204)",chr29:"rgb(10, 71, 255)",chr30:"rgb(71, 117, 255)",chr31:"rgb(255, 194, 10)",chr32:"rgb(255, 209, 71)",chr33:"rgb(153, 0, 51)",chr34:"rgb(153, 26, 0)",chr35:"rgb(153, 102, 0)",chr36:"rgb(128, 153, 0)",chr37:"rgb(51, 153, 0)",chr38:"rgb(0, 153, 26)",chr39:"rgb(0, 153, 102)",chr40:"rgb(0, 128, 153)",chr41:"rgb(0, 51, 153)",chr42:"rgb(26, 0, 153)",chr43:"rgb(102, 0, 153)",chr44:"rgb(153, 0, 128)",chr45:"rgb(214, 0, 71)",chr46:"rgb(255, 20, 99)",chr47:"rgb(0, 214, 143)",chr48:"rgb(20, 255, 177)"};class km{constructor(e){this.tracks=[],this.chordSets=[]}addChordSet(e){this.chordSets=this.chordSets.filter((t=>t.name!==e.name)),this.chordSets.push(e);let t=this.tracks.find((t=>e.trackName===t.name));t&&(t.chordSets=t.chordSets.filter((t=>t.name!==e.name)),t.chordSets.push(e)),t||(t=new Im(e),this.tracks.push(t))}clearChords(){this.tracks=[],this.chordSets=[]}getTrack(e){return this.tracks.find((t=>e===t.name))}getChordSet(e){return this.chordSets.find((t=>e===t.name))}}class Im{constructor(e){this.name=e.trackName,this.color=e.trackColor,this.visible=!0,this.chordSets=[e],this.id=("0000"+(Math.random()*Math.pow(36,4)|0).toString(36)).slice(-4)}get chords(){if(1===this.chordSets.length)return this.chordSets[0].chords;const e=[];for(let t of this.chordSets)for(let i of t.chords)e.push(i);return e}}const Sm=Math.exp(5);class Em{static isInstalled(){return void 0!==window.JBrowseReactCircularGenomeView&&void 0!==window.React&&void 0!==window.ReactDOM}constructor(e,t){if(t=t||{},this.config=t,Em.isInstalled()){this.parent=e,this.groupByTrack=!0===t.groupByTrack,this.chordManager=new km(t);const i=document.createElement("div");i.className="igv-circview-container",e.appendChild(i),this.createControls(i),this.resetControlPanel();const n=document.createElement("div");n.className="igv-circview-circular-genome-view",i.appendChild(n),this.container=n,t.assembly&&this.setAssembly(t.assembly),this.width=t.width||500,this.height=t.height||500,this.setSize(this.width,this.height)}else console.error("JBrowse circular view is not installed")}createControls(e){const t=document.createElement("div");t.className="igv-circview-toolbar",e.appendChild(t),this.toolbar=t;const i=document.createElement("div");i.className="igv-circview-track-panel",e.appendChild(i),this.controlPanel=i,this.controlPanel.style.display="none";const n=document.createElement("div");n.className="igv-circview-toolbar-button-container",this.toolbar.appendChild(n),this.showControlsButton=document.createElement("div"),this.showControlsButton.className="igv-circview-button",n.appendChild(this.showControlsButton),this.showControlsButton.innerText="none"===this.controlPanel.style.display?"Show Controls":"Hide Controls",this.showControlsButton.addEventListener("click",(e=>{this.controlPanel.querySelectorAll("div").length>0&&("none"===this.controlPanel.style.display?(this.controlPanel.style.display="flex",e.target.innerText="Hide Controls"):(this.controlPanel.style.display="none",e.target.innerText="Show Controls"))}));let r=document.createElement("div");r.className="igv-circview-button",n.appendChild(r),r.innerText="Clear All",r.addEventListener("click",(()=>{this.clearChords()})),!1!==this.config.showCloseButton&&(r=document.createElement("div"),r.className="igv-circview-button",n.appendChild(r),r.innerText="Close",r.addEventListener("click",(()=>{this.visible=!1})))}resetControlPanel(){this.controlPanel.innerHTML="",this.controlPanel.appendChild(this.createGroupByCB());const e=this.groupByTrack?this.chordManager.tracks:this.chordManager.chordSets;for(let t of e)this.addToControlPanel(t)}createGroupByCB(){const e=document.createElement("input");e.type="checkbox",e.id="groupByCB",e.style.width="1.4em",e.style.height="1.4em",e.checked=this.groupByTrack,e.onclick=e=>{this.groupByTrack=e.target.checked,this.resetControlPanel(),this.render()};const t=document.createElement("label");t.for="groupByCB",t.innerText="Group by track",t.style.color="black",t.style.paddingLeft="10px";const i=document.createElement("div");return i.style.width="100%",i.style.paddingTop="5px",i.style.paddingBottom="5px",i.style.background="rgb(216, 230, 234)",i.appendChild(e),i.appendChild(t),i}addToControlPanel(e){const t=document.createElement("div");this.controlPanel.appendChild(t);const i=document.createElement("div");i.className="igv-circview-button",t.appendChild(i),i.innerText=!0===e.visible?"Hide":"Show",i.addEventListener("click",(t=>{!0===e.visible?(this.hideChordSet(e.name),t.target.innerText="Show"):(this.showChordSet(e.name),t.target.innerText="Hide")}));const n=document.createElement("input"),r=e=>200*Math.log(e*Sm),s=document.createElement("div");s.className="igv-circview-button",s.innerHTML="&nbsp;&nbsp;&nbsp;&nbsp;",t.appendChild(s),s.style.backgroundColor=Nm(e.color,1);const o={parent:s,popup:"right",editorFormat:"rgb",color:e.color,onChange:({rgbaString:t})=>{s.style.backgroundColor=Nm(t,1),this.setColor(e.name,t),n.value=r(Bm(e.color))}},a=new Am(o);n.setAttribute("title","Adjust transparency of arcs"),n.type="range",n.style.width="100px",n.style.marginRight="10px",n.setAttribute("class","range"),n.setAttribute("min","0"),n.setAttribute("max","1000"),n.value=r(Bm(e.color)),n.oninput=()=>{const t=(i=n.value,Math.exp(i/200)/Sm);var i;this.setColor(e.name,Nm(e.color,t)),a.setColor(e.color)},t.appendChild(n);const c=document.createElement("div");c.style.color="black",t.appendChild(c),c.innerText=c.title=e.name}setAssembly(e){const t=this.genomeId||Dm();if(this.genomeId===t)return;this.chordManager.clearChords(),this.genomeId=t,this.chrNames=new Set(e.chromosomes.map((e=>Mm(e.name))));const i=[],n=[];for(let t of e.chromosomes){const e=Mm(t.name);n.push(t.color||_m(e)),i.push({refName:e,uniqueId:e,start:0,end:t.bpLength})}this.assembly={name:e.name,sequence:{trackId:t,type:"ReferenceSequenceTrack",adapter:{type:"FromConfigSequenceAdapter",features:i}},refNameColors:n},this.render()}addChords(e,t={}){const i=t.name||t.track||"*",n=i.split(" ")[0].replaceAll("%20"," "),r={name:i.replaceAll("%20"," "),trackName:n,chords:e,color:t.color||"black",trackColor:t.trackColor||t.color||"black",visible:!0,id:t.id||Dm()};this.chordManager.addChordSet(r),this.resetControlPanel(),this.render()}setSize(e,t){if(t=t||e,this.width=e,this.height=t,this.viewState){const i=this.viewState.session.view;i.setWidth(e),i.setHeight(t),i.setBpPerPx(i.minBpPerPx)}}getSize(){return Math.min(this.width,this.height)}clearChords(){this.chordManager.clearChords(),this.resetControlPanel(),this.render()}clearSelection(){this.viewState.pluginManager.rootModel.session.clearSelection()}show(){this.parent.style.display="block"}hide(){this.parent.style.display="none"}get visible(){return"none"!==this.parent.style.display}set visible(e){this.parent.style.display=e?"block":"none"}hideChordSet(e){let t=this.getChordSet(e);t?(t.visible=!1,this.render()):console.warn(`No track with name: ${name}`)}showChordSet(e){let t=this.getChordSet(e);t?(t.visible=!0,this.render()):console.warn(`No track with name: ${e}`)}deleteTrack(e){let t=this.tracks.findIndex((t=>e===t.name));t>=0&&this.tracks.splice(t,1),this.render()}getChordSet(e){return this.groupByTrack?this.chordManager.getTrack(e):this.chordManager.getChordSet(e)}setColor(e,t){const i=this.getChordSet(e);if(i){i.color=t;const e=i.id;for(let i of this.viewState.config.tracks)if(e===i.trackId){i.displays[0].renderer.strokeColor.set(t);break}}}render(){const{createViewState:e,JBrowseCircularGenomeView:t}=JBrowseReactCircularGenomeView;ReactDOM.unmountComponentAtNode(this.container);const i=(this.groupByTrack?this.chordManager.tracks:this.chordManager.chordSets).filter((e=>e.visible)),n=[],r=[];for(let e of i)n.push({trackId:e.id,name:e.name,assemblyNames:["forIGV"],type:"VariantTrack",adapter:{type:"FromConfigAdapter",features:e.chords}}),r.push(e.color);this.viewState=e({assembly:this.assembly,tracks:n});for(let e=0;e<i.length;e++)this.viewState.config.tracks[e].displays[0].renderer.strokeColor.set(r[e]);this.element=React.createElement(t,{viewState:this.viewState}),this.setSize(this.width,this.height),ReactDOM.render(this.element,this.container);const s=this.config.onChordClick||Rm;for(let e=0;e<i.length;e++)this.viewState.session.view.showTrack(this.viewState.config.tracks[e].trackId),s&&(this.viewState.pluginManager.jexl.addFunction("onChordClick",s),this.viewState.config.tracks[e].displays[0].onChordClick.set("jexl:onChordClick(feature, track, pluginManager)"))}}function Nm(e,t){const[i,n,r,s]=e.split(",");return`${i},${n},${r},${t})`}function Bm(e){return e.startsWith("rgba(")?Number(e.split(",")[3].replace(")","")):1}function Mm(e){return e.startsWith("chr")?e.substring(3):e}function Rm(e,t,i){console.log(e)}function Dm(){return("0000"+(Math.random()*Math.pow(36,4)|0).toString(36)).slice(-4)}if("undefined"!=typeof document){function SA(e){for(let t of document.styleSheets)if(t=t.href?t.href.replace(/^.*[\\\/]/,""):"",t===e)return!0;return!1}SA("circular-view.css")||function(){const e=document.createElement("style");e.setAttribute("type","text/css"),e.innerHTML='.igv-circview-container {\n  width: fit-content;\n  height: fit-content;\n  box-sizing: content-box;\n  color: dimgray;\n  font-family: "Open Sans", sans-serif;\n  font-size: 12px;\n  background-color: white;\n  border-color: dimgray;\n  border-style: solid;\n  border-width: thin;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.igv-circview-toolbar {\n  position: relative;\n  width: 100%;\n  height: 32px;\n  background-color: lightgrey;\n  border-bottom-style: solid;\n  border-bottom-color: dimgray;\n  border-bottom-width: thin;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.igv-circview-toolbar-button-container {\n  height: 100%;\n  width: fit-content;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-circview-toolbar-button-container > div {\n  margin: 4px;\n}\n\n.igv-circview-track-panel {\n  z-index: 1024;\n  position: absolute;\n  top: 33px;\n  left: 0;\n  width: 100%;\n  height: fit-content;\n  border-bottom-style: solid;\n  border-bottom-color: dimgray;\n  border-bottom-width: thin;\n  background-color: white;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n.igv-circview-track-panel > div {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-circview-track-panel > div > div {\n  margin: 4px;\n}\n\n.igv-circview-swatch-button {\n  cursor: pointer;\n  padding: 5px;\n  width: 8px;\n  height: 8px;\n  border: 1px solid #8d8b8b;\n  border-radius: 16px;\n}\n\n.igv-circview-button {\n  cursor: pointer;\n  padding: 5px;\n  color: #444;\n  vertical-align: middle;\n  text-align: center;\n  font-family: "Open Sans", sans-serif;\n  font-size: 12px;\n  border: 1px solid #8d8b8b;\n  border-radius: 4px;\n  background: #efefef;\n  box-shadow: 0 0 5px -1px rgba(0, 0, 0, 0.2);\n}\n\n.igv-circview-button:hover {\n  background: #efefef;\n  box-shadow: 0 0 5px -1px rgba(0, 0, 0, 0.6);\n}\n\n.igv-circview-button:active {\n  color: #007bff;\n  box-shadow: 0 0 5px -1px rgba(0, 0, 0, 0.6);\n}\n\n/*# sourceMappingURL=circular-view.css.map */\n',document.head.insertBefore(e,document.head.childNodes[document.head.childNodes.length-1])}()}const Tm=e=>e.startsWith("chr")?e.substring(3):e;function Lm(e){const t=[],i=[];if(e.wgChromosomeNames)for(let n of e.wgChromosomeNames){const r=e.getChromosome(n);i.push(_u(r.name)),t.push({name:r.name,bpLength:r.bpLength})}return t}function zm(e,t,i,n){const r=t.color||"rgb(0,0,255)",s=_s.addAlpha("all"===i.chr?r:_u(i.chr),n),o=_s.addAlpha(r,n),a=t.name.replaceAll(" ","%20"),c="all"===i.chr?a:`${a}  ${i.chr}:${i.start}-${i.end}`;t.browser.circularView.addChords(e,{track:c,color:s,trackColor:o}),t.browser.circularViewVisible||(t.browser.circularViewVisible=!0)}class Hm{constructor(e,{minTLENPercentile:t,maxTLENPercentile:i}){this.totalCount=0,this.frCount=0,this.rfCount=0,this.ffCount=0,this.sumF=0,this.sumF2=0,this.lp=void 0===t?.1:t,this.up=void 0===i?99.5:i,this.isizes=[],this.compute(e)}compute(e){for(let n of e)if(n.isProperPair()){var t=Math.abs(n.fragmentLength);this.sumF+=t,this.sumF2+=t*t,this.isizes.push(t);var i=n.pairOrientation;if("string"==typeof i&&4===i.length)switch(""+i.charAt(0)+i.charAt(2)){case"FF":case"RR":this.ffCount++;break;case"FR":this.frCount++;break;case"RF":this.rfCount++}this.totalCount++}this.ffCount/this.totalCount>.9?this.orienation="ff":this.frCount/this.totalCount>.9?this.orienation="fr":this.rfCount/this.totalCount>.9&&(this.orienation="rf"),this.minTLEN=0===this.lp?0:Pm(this.isizes,this.lp),this.maxTLEN=Pm(this.isizes,this.up)}}function Pm(e,t){if(0!==e.length){var i=Math.floor(e.length*(t/100));return e.sort((function(e,t){return e-t})),e[i]}}const Om="rgb(255,0,255)",Um="rgb(0,0,255)",qm="rgb(132, 178, 158)",Qm=new Map;Qm.set("m","rgb(255,0,0)"),Qm.set("h",Om),Qm.set("o","rgb(111, 78, 129)"),Qm.set("f","rgb(246, 200, 95)"),Qm.set("c","rgb(157, 216, 102)"),Qm.set("g","rgb(255, 160, 86)"),Qm.set("e","rgb(141, 221, 208)"),Qm.set("b","rgb(202, 71, 47)"),Qm.set("h",Om),Qm.set("a","rgb(51,0,111)"),Qm.set("NONE_A",Um),Qm.set("NONE_C",Um),Qm.set("NONE_T",Um),Qm.set("NONE_G",Um),Qm.set("NONE_N",Um);const Vm=new Map;function jm(e,t,i){let n=function(e){return Qm.has(e)?Qm.get(e):qm}(e),r=Yf(t);if(r>255)return n;const s=e+r+i;if(r<0&&(r=0),!Vm.has(s)){const e="basemod2"===i?Math.max(20,Math.min(255,r*r/50-4*r+200+20)):Math.max(20,Math.min(255,.006127*r*r)),[t,o,a]=_s.rgbComponents(n);Vm.set(s,`rgba(${t},${o},${a},${e/255})`)}return Vm.get(s)}class Wm{constructor(e){this.alignmentTrack=e}updateContext(e){this.context=e}drawModifications(e,t,i,n,r,s){const{ctx:o,pixelEnd:a,bpStart:c,bpPerPixel:l}=n,h=e.getBaseModificationSets();if(h){let n;const d=r.split(":");2==d.length&&(r=d[0],n=d[1]);for(let d of e.blocks){if("S"===d.type)continue;const e=t,u=i;let f=Math.max(1,1/l);for(let t=d.seqOffset;t<d.seqOffset+d.len;t++){let i=(d.start+(t-d.seqOffset)-c)/l;if(i>a)break;if(i+f<0)continue;let p,g=-1,m=255,w=0;for(let e of h)if((!n||e.modification===n)&&e.containsPosition(t)){const i=Yf(e.likelihoods.get(t));m-=i,(!p||i>g)&&(p=e.modification,w=e.canonicalBase,g=i)}if(p){const t=255*s;let n;m>g&&"basemod2"===r&&m>=t?n=jm("NONE_"+w,m,r):g>=t&&(n=jm(p,g,r)),o.fillStyle=n,f<3&&(f=3,i--),o.fillRect(i,e,f,Math.max(1,u-2))}}}}}}const Gm=new Set(["firstOfPairStrand"]);class $m extends Hl{static defaults={viewAsPairs:!1,showSoftClips:!1,showAllBases:!1,showInsertions:!0,showMismatches:!0,colorBy:void 0,groupBy:void 0,displayMode:"EXPANDED",alignmentRowHeight:14,squishedRowHeight:3,negStrandColor:"rgba(150, 150, 230, 0.75)",posStrandColor:"rgba(230, 150, 150, 0.75)",baseModPosStrandColor:"rgb(195, 195, 195)",baseModNegStrandColor:"rgb(195, 210, 195)",insertionColor:"rgb(138, 94, 161)",insertionTextColor:"white",showInsertionText:!1,deletionColor:"black",deletionTextColor:"black",showDeletionText:!1,skippedColor:"rgb(150, 170, 170)",pairConnectorColor:void 0,smallTLENColor:"rgb(0, 0, 150)",largeTLENColor:"rgb(200, 0, 0)",expectedPairOrientation:"fr",rlColor:"rgb(0, 150, 0)",rrColor:"rgb(20, 50, 200)",llColor:"rgb(0, 150, 150)",bamColorTag:"YC",hideSmallIndels:!1,indelSizeThreshold:1,highlightColor:void 0,minTLEN:void 0,maxTLEN:void 0,tagColorPallete:"Set1"};_colorTables=new Map;_baseModifications=new Set;constructor(e,t){super(e,t),(e.colorTable||e.tagColorTable)&&(this.colorTable=new ao(e.tagColorTable)),e.largeFragmentLengthColor&&(this.largeTLENColor=e.largeFragmentLengthColor),e.pairOrienation&&(this.expectedPairOrientation=e.pairOrientation),e.smallFragmentLengthColor&&(this.smallTLENColor=e.smallFragmentLengthColor),e.largeFragmentLengthColor&&(this.largeTLENColor=e.largeFragmentLengthColor),e.minFragmentLength&&(this.minTLEN=e.minFragmentLength),e.maxFragmentLength&&(this.maxTLEN=e.maxFragmentLength),e.displayMode&&(this.displayMode=e.displayMode.toUpperCase()),e.colorBy&&e.colorByTag&&(this.colorBy=e.colorBy+":"+e.colorByTag),this.featureSource=this.parent.featureSource,this.top=0===e.coverageTrackHeight?0:e.coverageTrackHeight+5,this.pairColors={RL:this.rlColor,RR:this.rrColor,LL:this.llColor},e.highlightedReads&&this.setHighlightedReads(e.highlightedReads),this.hasPairs=!1,this.hasSupplemental=!1,this._groupByTags=[],this._groupByPositions=[],e.groupBy&&(this.groupBy=e.groupBy,e.groupBy.startsWith("base:")&&this._groupByPositions.push(e.groupBy.substring(5)),e.groupBy.startsWith("tag:")&&this._groupByTags.push(e.groupBy.substring(4))),this._locusChange=Ym.bind(this),this.browser.on("locuschange",this._locusChange)}init(e){this.parent=e.parent,delete e.parent,super.init(e)}dispose(){this.browser.off("locuschage",this._locusChange)}get baseModRenderer(){return this._baseModRenderer||(this._baseModRenderer=new Wm(this)),this._baseModRenderer}get baseModificationThreshold(){return this.parent.baseModificationThreshold}setTop(e,t){this.top=0===e.height||!1===t?0:5+e.height}setHighlightedReads(e,t){if(!Array.isArray(e)||!e.every((e=>"string"==typeof e)))throw new Error("AlignmentTrack.setHighlightedReads() only accept array of strings");t&&(this.highlightColor=t),this.highlightedReads=new Set(e)}computePixelHeight(e){if(e.packedGroups){let t=e.hasDownsampledIntervals()?15:0;const i="SQUISHED"===this.displayMode?this.squishedRowHeight:this.alignmentRowHeight;for(let n of e.packedGroups.values())t+=i*n.length+10;return t+5}return 0}draw(e){const t=e.features,i=e.context,n=e.bpPerPixel,r=e.bpStart,s=e.pixelWidth,o=r+s*n+1,a=this.showSoftClips,c=this.showAllBases,l=this.browser.nucleotideColors;i.save();for(let e of t.baseModificationKeys)this._baseModifications.add(e.modification);let h=t.sequence;h&&(h=h.toUpperCase());let d=0;this.colorBy||(this.colorBy=this.hasPairs?"unexpectedPair":"none");let u=e.pixelTop;this.top&&i.translate(0,this.top);const f=u+e.pixelHeight;t.hasDownsampledIntervals()?(d=15,t.downsampledIntervals.forEach((function(e){var t=(e.start-r)/n,s=(e.end-r)/n;s-t>5&&(t+=1,s-=1),xo.fillRect(i,t,2,s-t,8,{fillStyle:"black"})}))):d=0,this.alignmentsYOffset=d;const p="SQUISHED"===this.displayMode?this.squishedRowHeight:this.alignmentRowHeight,g=t.packedGroups;if(g){let t=d;for(let n of g.keys()){const a=g.get(n),c=a.rows,l=c.length;a.pixelTop=t;for(let e=0;e<l;e++){const i=c[e],n=p<=4?p:p-2;if(t>f)break;if(t+n<u)t+=p;else{for(let e of i.alignments)if(this.browser.circularView&&(this.hasSupplemental=this.hasSupplemental||e.hasTag("SA")),!(e.start+e.lengthOnRef<r)){if(e.start>o)break;!0!==e.hidden&&(e instanceof qf?(m.call(this,e,t,n),w.call(this,e.firstAlignment,t,n),e.secondAlignment&&w.call(this,e.secondAlignment,t,n)):w.call(this,e,t,n))}t+=p}}if(a.pixelBottom=t,this.groupBy&&n){i.save(),i.font="400 12px sans-serif";const r=i.measureText(n),o=r.width+10,c=-e.pixelShift+e.viewportWidth-o-10,l=r.actualBoundingBoxAscent+r.actualBoundingBoxDescent+10,h=Math.min(a.pixelTop+l-1,a.pixelBottom);i.textAlign="center",i.fillStyle="white",i.strokeStyle="lightGray",i.beginPath(),i.roundRect(c,h-r.actualBoundingBoxAscent-5,o,l,2),i.fill(),i.stroke(),i.fillStyle="black",i.fillText(n,c+o/2,h),xo.dashedLine(i,0,t,s,t),i.restore(),t+=10}}}function m(e,t,s){var a=this.getConnectorColor(e.firstAlignment),c=(e.connectingStart-r)/n,l=(e.connectingEnd-r)/n,h=t+s/2;e.connectingEnd<r||e.connectingStart>o||(e.mq<=0&&(a=_s.addAlpha(a,.15)),xo.setProperties(i,{fillStyle:a,strokeStyle:a}),xo.strokeLine(i,c,h,l,h))}function w(e,d,u){if(e.start+e.lengthOnRef<r||e.start>o)return;const f=a?e.blocks:e.blocks.filter((e=>"S"!==e.type));let g=this.getAlignmentColor(e);const m=g;e.mq<=0&&(g=_s.addAlpha(g,.15)),xo.setProperties(i,{fillStyle:g,strokeStyle:m});const w=[];for(let e=0;e<f.length;e++){const t=f[e];if(!(e!==f.length-1&&f[e+1].start<r)&&(w.push(...b.call(this,t,e)),t.start+t.len>o))break}if(e.gaps){const t=d+u/2;for(let s of e.gaps){const e=(s.start-r)/n,o=(s.start+s.len-r)/n,a=o-e,c=s.len.toString(),l=6*c.length,h=e+a/2,u="D"===s.type?this.deletionColor:this.skippedColor;if(xo.strokeLine(i,e,t,o,t,{strokeStyle:u,lineWidth:2}),this.showDeletionText&&s.len>1&&a>=l+8){const e=h-l/2;xo.fillRect(i,e-1,d-1,l+2,12,{fillStyle:"white"}),xo.fillText(i,c,e,d+10,{font:"normal 10px monospace",fillStyle:this.deletionTextColor})}}}if(e.insertions&&this.showInsertions){let t=-1;for(let s of e.insertions){if(this.hideSmallIndels&&s.len<=this.indelSizeThreshold)continue;if(s.start<r)continue;if(s.start>o)break;const e=s.start-r,a=s.len.toString(),c=2+6*a.length,l=this.showInsertionText&&1!==s.len?Math.round(s.len/n):2,h=Math.max(Math.min(c,l),2),f=e/n-h/2;if(f-t>2){const e={fillStyle:this.insertionColor};xo.fillRect(i,f-2,d,h+4,2,e),xo.fillRect(i,f,d+2,h,u-4,e),xo.fillRect(i,f-2,d+u-2,h+4,2,e),this.showInsertionText&&s.len>1&&l>c&&xo.fillText(i,a,f+1,d+10,{font:"normal 10px monospace",fillStyle:this.insertionTextColor}),t=f}}}for(let{bbox:e,baseColor:t,readChar:r}of w){if(n<=.1&&e.height>=8){const n=Math.min(10,e.height);i.font=n+"px sans-serif";const s=e.x+e.width/2;xo.strokeText(i,r,s-i.measureText(r).width/2,n-1+e.y,{strokeStyle:t})}else xo.fillRect(i,e.x,e.y,e.width,e.height,{fillStyle:t})}if(this.colorBy&&this.colorBy.startsWith("basemod")){const t={ctx:i,bpPerPixel:n,bpStart:r,bpEnd:o,pixelEnd:s};this.baseModRenderer.drawModifications(e,d,u,t,this.colorBy,this.baseModificationThreshold)}function b(o,a){const w=[],b=o.start-t.start,F=(o.start-r)/n,v=(o.start+o.len-r)/n,y=Math.max(1,v-F),A=100/n,C=Math.min(p/2,A/6),_="S"===o.type,x=e.mq<=0||this.selectedReadName===e.readName||_||this.highlightedReads&&this.highlightedReads.has(e.readName);let k=m;this.selectedReadName===e.readName?k="red":_?k="rgb(50,50,50)":this.highlightedReads&&this.highlightedReads.has(e.readName)&&(k=this.highlightColor||"#00ff00");const I=!0===e.strand&&a===f.length-1,S=!1===e.strand&&0===a;if(I|S){let e,t;I?(e=[F,v,v+C,v,F,F],t=[d,d,d+u/2,d+u,d+u,d]):S&&(e=[v,F,F-C,F,v,v],t=[d,d,d+u/2,d+u,d+u,d]),xo.fillPolygon(i,e,t,{fillStyle:g}),x&&xo.strokePolygon(i,e,t,{strokeStyle:k})}else xo.fillRect(i,F,d,y,u,{fillStyle:g}),x&&(i.save(),i.strokeStyle=k,i.strokeRect(F,d,y,u),i.restore());if(_||c||this.showMismatches&&h&&e.seq&&"*"!==e.seq){const t=e.seq?e.seq.toUpperCase():void 0,i=e.qual,a=o.seqOffset,f=Math.max(1,1/n);for(let e=0,p=o.len;e<p;e++){const p=(o.start+e-r)/n;if(p+f<0)continue;if(p>s)break;let g=t?t.charAt(a+e):"";const m=b+e>=0?h.charAt(b+e):"";if("="===g&&(g=m),"X"===g||m!==g||_||c){let t=l[g]||"rgb(0,0,0)";if(!_&&void 0!==i&&i.length>a+e){t=Km(i[a+e],t)}w.push({bbox:{x:p,y:d,width:f,height:u},baseColor:t,readChar:g})}}}return w}}i.restore()}popupData(e){const t=this.getClickedObject(e);return t?t.popupData(e.genomicLocation):void 0}menuItemList(){let e=[];e.push("<hr/>");const t=Bt('<div class="igv-track-menu-category">');t.text("Color by:"),e.push({name:void 0,object:t,click:void 0,init:void 0});const i=[];i.push({key:"none",label:"none"}),i.push({key:"strand",label:"read strand"}),this.hasPairs&&(i.push({key:"firstOfPairStrand",label:"first-of-pair strand"}),i.push({key:"pairOrientation",label:"pair orientation"}),i.push({key:"tlen",label:"insert size (TLEN)"}),i.push({key:"unexpectedPair",label:"pair orientation & insert size (TLEN)"})),i.push({key:"tag",label:"tag"});for(let t of i){const i=void 0===this.colorBy&&"none"===t.key||this.colorBy===t.key;e.push(this.colorByCB(t,i))}const n=this._baseModifications.size;if(n>0){e.push('<hr style="border-top:1px dotted;border-bottom: none;">');let t=1===n?"base modification":"base modification (all)";if(e.push(this.basemodColorByCB({key:"basemod",label:t})),n>1)for(let t of this._baseModifications)e.push(this.basemodColorByCB({key:"basemod:"+t,label:`base modification (${$f(t)})`}));if(e.push('<hr style="border-top:1px dotted;border-bottom: none;">'),t=1===n?"base modification 2-color":"base modification 2-color (all)",e.push(this.basemodColorByCB({key:"basemod2",label:t})),n>1)for(let t of this._baseModifications)e.push(this.basemodColorByCB({key:"basemod2:"+t,label:`base modification 2-color (${$f(t)})`}))}e.push("<hr/>");const r=Bt('<div class="igv-track-menu-category">');r.text("Group by:"),e.push({name:void 0,object:r,click:void 0,init:void 0});const s=[];s.push({key:"none",label:"none"}),s.push({key:"strand",label:"read strand"}),this.hasPairs&&(s.push({key:"firstOfPairStrand",label:"first-of-pair strand"}),s.push({key:"pairOrientation",label:"pair orientation"}),s.push({key:"mateChr",label:"chromosome of mate"})),s.push({key:"chimeric",label:"chimeric"}),s.push({key:"supplementary",label:"supplementary flag"}),s.push({key:"readOrder",label:"read order"});for(let e of this._groupByTags)s.push({key:`tag:${e}`,label:`tag:${e}`});for(let e of this._groupByPositions)s.push({key:`base:${e}`,label:`base:${e}`});s.push({key:"tag",label:"tag..."});for(let t of s){const i=void 0===this.groupBy&&"none"===t.key||this.groupBy===t.key;e.push(this.groupByCB(t,i))}e.push("<hr/>"),e.push({object:Bt(Dl("Show all bases",this.showAllBases)),click:function(){this.alignmentTrack.showAllBases=!this.alignmentTrack.showAllBases,this.trackView.repaintViews()}}),e.push({object:Bt(Dl("Show mismatches",this.showMismatches)),click:function(){this.alignmentTrack.showMismatches=!this.alignmentTrack.showMismatches,this.trackView.repaintViews()}}),e.push({object:Bt(Dl("Show insertions",this.showInsertions)),click:function(){this.alignmentTrack.showInsertions=!this.alignmentTrack.showInsertions,this.trackView.repaintViews()}}),e.push({object:Bt(Dl("Show soft clips",this.showSoftClips)),click:function(){this.alignmentTrack.showSoftClips=!this.alignmentTrack.showSoftClips;const e=this.getCachedAlignmentContainers();for(let t of e)t.pack(this);this.trackView.repaintViews()}}),this.hasPairs&&(e.push("<hr/>"),e.push({object:Bt(Dl("View as pairs",this.viewAsPairs)),click:function(){const e=!this.alignmentTrack.viewAsPairs;if(e&&this.groupBy&&!Gm.has(this.groupBy))return void this.browser.alert.present(`'View as Pairs' is incompatible with 'Group By ${this.groupBy}'`);this.alignmentTrack.viewAsPairs=e;const t=this.getCachedAlignmentContainers();for(let e of t)e.pack(this);this.trackView.checkContentHeight(),this.trackView.repaintViews()}})),this.browser.circularView&&(this.hasPairs||this.hasSupplemental)&&(e.push("<hr/>"),this.hasPairs&&e.push({label:"Add discordant pairs to circular view",click:function(){for(let e of this.trackView.viewports)this.addPairedChordsForViewport(e)}}),this.hasSupplemental&&e.push({label:"Add split reads to circular view",click:function(){for(let e of this.trackView.viewports)this.addSplitChordsForViewport(e)}})),e.push("<hr/>");const o=Bt('<div class="igv-track-menu-category">');o.text("Display mode:"),e.push({name:void 0,object:o,click:void 0,init:void 0});for(let t of["EXPANDED","SQUISHED","FULL"])e.push({object:Bt(Dl(t.toLowerCase(),this.displayMode===t)),click:function(){this.alignmentTrack.setDisplayMode(t)}});return e}setDisplayMode(e){const t="FULL"===this.displayMode||"FULL"===e;if(this.displayMode=e,t){const e=this.getCachedAlignmentContainers();for(let t of e)t.pack(this)}this.trackView.checkContentHeight(),this.trackView.repaintViews()}colorByCB(e,t){const i=Bt(Dl(e.label,t));if("tag"!==e.key){function n(){this.alignmentTrack.colorBy=e.key,this.trackView.repaintViews()}return{name:void 0,object:i,click:n,init:void 0}}{function r(e){const t=this.alignmentTrack.colorBy.startsWith("tag:")?this.alignmentTrack.colorBy.substring(4):"";this.browser.inputDialog.present({label:"Tag Name",value:t,callback:e=>{const t=this.alignmentTrack;e?(t.colorBy="tag:"+e,t.colorTable||(t.colorTable=new oo("Set1"))):t.colorBy=void 0,this.trackView.repaintViews()}},e)}return{name:void 0,object:i,dialog:r,init:void 0}}}basemodColorByCB(e){const t=this.colorBy===e.key;return{name:void 0,object:Bt(Dl(e.label,t)),click:function(){this.alignmentTrack.colorBy=e.key,"strand"!==this.alignmentTrack.groupBy&&(this.alignmentTrack.groupBy="strand",this.alignmentTrack.repackAlignments()),this.trackView.repaintViews()},init:void 0}}groupByCB(e,t){return{name:void 0,object:Bt(Dl(e.label,t)),dialog:function(t){const i=()=>this.alignmentTrack.repackAlignments();if("tag"===e.key){let e="";this.alignmentTrack.groupBy&&this.alignmentTrack.groupBy.startsWith("tag:")&&(e=this.alignmentTrack.groupBy.substring(4)),this.browser.inputDialog.present({label:"Tag Name",value:e,callback:e=>{e&&(this.alignmentTrack.groupBy="tag:"+e,this.alignmentTrack._groupByTags.push(e),i())}},t)}else"none"===e.key?this.alignmentTrack.groupBy=void 0:this.alignmentTrack.groupBy=e.key,i()},init:void 0}}repackAlignments(){const e=this.getCachedAlignmentContainers();for(let t of e)"function"==typeof t.pack&&t.pack(this);this.trackView.checkContentHeight(),this.trackView.repaintViews()}contextMenuItemList(e){const t=e.viewport,i=[],n=i=>{const n=this.sortObject,r=!n||n.position!==Math.floor(e.genomicLocation)||!n.direction,s={chr:t.referenceFrame.chr,position:Math.floor(e.genomicLocation),option:i,direction:r,sortAsPairs:t.trackView.track.viewAsPairs};this.sortObject=s,t.cachedFeatures.sortRows(s),t.repaint()};i.push("<b>Sort by...</b>"),i.push({label:"&nbsp; base",click:()=>n("BASE")}),i.push({label:"&nbsp; read strand",click:()=>n("strand")}),i.push({label:"&nbsp; start location",click:()=>n("START")}),i.push({label:"&nbsp; insert size",click:()=>n("INSERT_SIZE")}),i.push({label:"&nbsp; gap size",click:()=>n("GAP_SIZE")}),i.push({label:"&nbsp; chromosome of mate",click:()=>n("MATE_CHR")}),i.push({label:"&nbsp; mapping quality",click:()=>n("MQ")}),i.push({label:"&nbsp; read name",click:()=>n("READ_NAME")}),i.push({label:"&nbsp; aligned read length",click:()=>n("ALIGNED_READ_LENGTH")}),i.push({label:"&nbsp; tag",click:()=>{const i=this.sortObject,n=!i||i.position!==Math.floor(e.genomicLocation)||!i.direction,r={label:"Tag Name",value:this.sortByTag?this.sortByTag:"",callback:i=>{if(i){const r={chr:t.referenceFrame.chr,position:Math.floor(e.genomicLocation),option:"TAG",tag:i,direction:n};this.sortByTag=i,this.sortObject=r,t.cachedFeatures.sortRows(r),t.repaint()}}};this.browser.inputDialog.present(r,e.event)}}),i.push("<hr/>");const r=`${t.referenceFrame.chr}:${Rt(Math.floor(e.genomicLocation)+1)}`;i.push({label:`Group by base @${r}`,click:()=>{this._groupByPositions.push(r),this.groupBy=`base:${r}`;const e=this.getCachedAlignmentContainers();for(let t of e)t.pack(this);this.trackView.checkContentHeight(),this.trackView.repaintViews()}}),i.push("<hr/>");const s=this.getClickedObject(e);if(s){const t=this.showSoftClips,n="function"==typeof s.alignmentContaining?s.alignmentContaining(e.genomicLocation,t):s;if(n){n.isPaired()&&n.isMateMapped()&&i.push({label:"View mate in split screen",click:()=>{if(n.mate){const t=e.viewport.referenceFrame,i=this.browser.genome.getChromosome(n.mate.chr);if(i){this.selectedReadName=n.readName;const r=t.bpPerPixel*e.viewport.getWidth(),s=n.mate.position-r/2,o=n.mate.position+r/2;this.browser.addMultiLocusPanel(i.name,s,o,t)}else this.browser.alert.present(`Reference does not contain chromosome: ${n.mate.chr}`)}},init:void 0}),i.push({label:"View read sequence",click:()=>{const e=n.seq;e&&"*"!==e?this.browser.alert.present(e):this.browser.alert.present("Read sequence: *")}}),Za()&&i.push({label:"Copy read sequence",click:async()=>{const e=n.seq;try{await navigator.clipboard.writeText(e)}catch(e){console.error(e),this.browser.alert.present(`error copying sequence to clipboard ${e}`)}}});const t=n.seq;if(t&&"*"!==t){t.length<Hd&&i.push({label:"BLAT read sequence",click:()=>{const e=n.isNegativeStrand()?lc(t):t,i=`${n.readName} - blat`,r=`${this.name} - ${i}`;Od({sequence:e,browser:this.browser,name:i,title:r})}});const e=n.softClippedBlocks();e.left&&e.left.len>20&&e.left.len<Hd&&i.push({label:"BLAT left soft-clipped sequence",click:()=>{const i=t.substr(e.left.seqOffset,e.left.len),r=n.isNegativeStrand()?lc(i):i,s=`${n.readName} - blat left clip`,o=`${this.name} - ${s}`;Od({sequence:r,browser:this.browser,name:s,title:o})}}),e.right&&e.right.len>20&&e.right.len<Hd&&i.push({label:"BLAT right soft-clipped sequence",click:()=>{const i=t.substr(e.right.seqOffset,e.right.len),r=n.isNegativeStrand()?lc(i):i,s=`${n.readName} - blat right clip`,o=`${this.name} - ${s}`;Od({sequence:r,browser:this.browser,name:s,title:o})}})}i.push("<hr/>")}}return this.browser.circularView&&(this.hasPairs||this.hasSupplemental)&&(this.hasPairs&&i.push({label:"Add discordant pairs to circular view",click:()=>{this.addPairedChordsForViewport(t)}}),this.hasSupplemental&&i.push({label:"Add split reads to circular view",click:()=>{this.addSplitChordsForViewport(t)}}),i.push("<hr/>")),i}getClickedObject(e){let t=e.viewport.cachedFeatures;if(!t)return;const i=e.y-this.top,n=e.genomicLocation,r=this.showSoftClips;let s=Number.MAX_VALUE;for(let e of t.packedGroups.values())if(s=Math.min(s,e.pixelTop),i>e.pixelTop&&i<=e.pixelBottom){const t="SQUISHED"===this.displayMode?this.squishedRowHeight:this.alignmentRowHeight;let s=Math.floor((i-e.pixelTop)/t);if(s>=0&&s<e.length){const t=e.rows[s].alignments.filter((e=>e.containsLocation(n,r)));if(t.length>0)return t[0]}}if(i<s&&t.downsampledIntervals)for(const e of t.downsampledIntervals)if(e.start<=n&&e.end>=n)return e}getConnectorColor(e){if(this.pairConnectorColor)return this.pairConnectorColor;let t=this.colorBy;switch(t&&t.startsWith("tag:")&&(t.substring(4),t="tag"),t){case"strand":case"firstOfPairStrand":case"pairOrientation":case"tag":return this.color?"function"==typeof this.color?this.color(e):this.color:"rgb(200, 200, 200)";default:return this.getAlignmentColor(e)}}getAlignmentColor(e){let t;t=this.color?"function"==typeof this.color?this.color(e):this.color:"rgb(185, 185, 185)";let i,n=this.colorBy;switch(n&&n.startsWith("tag:")&&(i=n.substring(4),n="tag"),n){case"basemod":case"basemod2":t=e.strand?this.baseModPosStrandColor:this.baseModNegStrandColor;break;case"strand":t=e.strand?this.posStrandColor:this.negStrandColor;break;case"firstOfPairStrand":const r=e.firstOfPairStrand;void 0!==r&&(t=r?this.posStrandColor:this.negStrandColor);break;case"unexpectedPair":case"pairOrientation":if(e.pairOrientation){const i=Jf[this.expectedPairOrientation];if(i){const n=this.pairColors[i[e.pairOrientation]];if(n){t=n;break}}}if("pairOrientation"===n)break;case"tlen":case"fragmentLength":e.mate&&e.isMateMapped()&&(e.mate.chr!==e.chr?t=_u(e.mate.chr):this.minTemplateLength&&Math.abs(e.fragmentLength)<this.minTemplateLength?t=this.smallTLENColor:this.maxTemplateLength&&Math.abs(e.fragmentLength)>this.maxTemplateLength&&(t=this.largeTLENColor));break;case"tag":const s=e.tags()[i];void 0!==s&&(this.bamColorTag===i&&(t=_s.createColorStringSafe(s)),this.colorTable||(this.colorTable=new oo(this.tagColorPallete)),t=this.colorTable.getColor(s))}return t}get nucleotideColors(){return this.browser.nucleotideColors}get minTemplateLength(){return void 0!==this.minTLEN?this.minTLEN:this.parent._pairedEndStats?this.parent._pairedEndStats.minTLEN:0}get maxTemplateLength(){return void 0!==this.maxTLEN?this.maxTLEN:this.parent._pairedEndStats?this.parent._pairedEndStats.maxTLEN:1e3}getState(){const e=super.getState();return this.highlightedReads&&(e.highlightedReads=Array.from(this.highlightedReads)),e}get name(){return this.parent.name}set name(e){this.parent.name=e}get color(){return this.parent.color}set color(e){this.parent.color=e}get trackView(){return this.parent.trackView}get getCachedAlignmentContainers(){return this.parent.getCachedAlignmentContainers}get sortObject(){return this.parent.sortObject}set sortObject(e){this.parent.sortObject=e}addPairedChordsForViewport(e){return this.parent.addPairedChordsForViewport(e)}addSplitChordsForViewport(e){return this.parent.addSplitChordsForViewport(e)}}function Km(e,t){let i;return i=e<5?.1:Math.max(.1,Math.min(1,.1+.9*(e-5)/15)),i=Math.round(10*i)/10,i<1&&(t=_s.addAlpha(t,i)),t}function Ym(){"FULL"!==this.displayMode||this.browser.isTrackPanning()||this.repackAlignments()}function Xm(e,t,i,n,r,s,o,a,c){const l=o.baseModCounts,h=o.coverageMap;if(l){let o;const d=a.split(":");2==d.length&&(a=d[0],o=d[1]);const u=Array.from(l.allModifications);u.sort(Qf.compare);const f=h.getTotalCount(s);if(!u.filter((e=>o?o===e.modification:!e.modification.startsWith("NONE_"))).find((e=>l.getCount(s,e,0,!1)>0)))return;for(let d of u){if(d.modification.startsWith("NONE_")&&"basemod2"!==a)continue;if(o&&o!==d.modification&&!d.modification.startsWith("NONE_"))continue;const u=d.base,p=ac(u),g=h.getCount(s,u)+h.getCount(s,p),m=l.simplexModifications.has(d.modification)?h.getPosCount(s,u)+h.getNegCount(s,p):g;if(0==m)continue;const w="basemod2"===a,b=l.getCount(s,d,c,w);if(0==b)continue;const F=g/f*(b/m),v=Math.round(F*r),y=l.getLikelihoodSum(s,d,c,w)/b,A=i-v,C=jm(d.modification,y,a);e.fillStyle=C,e.fillRect(t,A,n,v),i=A}}}class Zm{constructor(e,t){this.featureType="numeric",this.parent=t,this.featureSource=t.featureSource,this.paintAxis=Yu,this.top=0,this.autoscale=e.autoscale||void 0===e.max,e.coverageColor&&(this.color=e.coverageColor),this.autoscale||(this.dataRange={min:e.min||0,max:e.max})}get height(){return this.parent.coverageTrackHeight}draw(e){const t=e.pixelTop;e.pixelHeight;const i=this.parent.browser.nucleotideColors;if(t>this.height)return;const n=e.context,r=e.features,s=r.coverageMap;let o;s.refSeq&&(o=s.refSeq.toUpperCase());const a=e.bpPerPixel,c=e.bpStart,l=c+e.pixelWidth*a+1;let h;h=this.color?this.color:this.parent.color&&"function"!=typeof this.parent.color?_s.darkenLighten(this.parent.color,-35):"rgb(150, 150, 150)",xo.setProperties(n,{fillStyle:h,strokeStyle:h});const d=Math.max(1,1/a);for(let e=0,t=s.coverage.length;e<t;e++){const t=s.bpStart+e;if(t<c)continue;if(t>l)break;const i=s.coverage[e];if(!i)continue;const r=i.total/this.dataRange.max*this.height,o=this.height-r,h=(t-c)/a;xo.fillRect(n,h,o,d,r)}if(o)for(let e=0,t=s.coverage.length;e<t;e++){const t=s.bpStart+e;if(t<c)continue;if(t>l)break;const h=s.coverage[e];if(!h)continue;const u=h.total/this.dataRange.max*this.height;let f=this.height-u;const p=Math.floor((t-c)/a),g=o[e];if(this.parent.colorBy&&this.parent.colorBy.startsWith("basemod"))Xm(n,p,this.height,d,u,t,r,this.parent.colorBy,this.parent.baseModificationThreshold);else if(h.isMismatch(g)){xo.setProperties(n,{fillStyle:i[g]}),xo.fillRect(n,p,f,d,u);let e=0;for(let t of["A","C","T","G"]){const r=(h["pos"+t]+h["neg"+t])/this.dataRange.max*this.height;f=this.height-r-e,e+=r,xo.setProperties(n,{fillStyle:i[t]}),xo.fillRect(n,p,f,d,r)}}}}getClickedObject(e){let t=e.viewport.cachedFeatures;if(!t||0===t.length)return;const i=Math.floor(e.genomicLocation),n=t.coverageMap,r=Math.floor(i-n.bpStart),s=n.coverage[r];return s?{coverage:s,baseModCounts:t.baseModCounts,hoverText:()=>n.coverage[r].hoverText()}:void 0}popupData(e){const t=[],{coverage:i,baseModCounts:n}=this.getClickedObject(e);if(i){const r=Math.floor(e.genomicLocation),s=e.viewport.referenceFrame;t.push(s.chr+":"+Rt(1+r)),t.push({name:"Total Count",value:i.total});let o=i.posA+i.negA;o>0&&(o=o.toString()+" ("+Math.round(o/i.total*100)+"%, "+i.posA+"+, "+i.negA+"- )"),t.push({name:"A",value:o}),o=i.posC+i.negC,o>0&&(o=o.toString()+" ("+Math.round(o/i.total*100)+"%, "+i.posC+"+, "+i.negC+"- )"),t.push({name:"C",value:o}),o=i.posG+i.negG,o>0&&(o=o.toString()+" ("+Math.round(o/i.total*100)+"%, "+i.posG+"+, "+i.negG+"- )"),t.push({name:"G",value:o}),o=i.posT+i.negT,o>0&&(o=o.toString()+" ("+Math.round(o/i.total*100)+"%, "+i.posT+"+, "+i.negT+"- )"),t.push({name:"T",value:o}),o=i.posN+i.negN,o>0&&(o=o.toString()+" ("+Math.round(o/i.total*100)+"%, "+i.posN+"+, "+i.negN+"- )"),t.push({name:"N",value:o}),t.push("<HR/>"),t.push({name:"DEL",value:i.del.toString()}),t.push({name:"INS",value:i.ins.toString()}),n&&(t.push("<hr/>"),t.push(...n.popupData(r,this.parent.colorBy)))}return t}}class Jm extends Hl{static defaults={alleleFreqThreshold:.2,visibilityWindow:3e4,showCoverage:!0,showAlignments:!0,height:300,coverageTrackHeight:50,baseModificationThreshold:0};constructor(e,t){super(e,t)}init(e){this.type="alignment",this.featureSource=new om(e,this.browser);const t=Object.assign({parent:this},e);this.coverageTrack=new Zm(t,this);const i=Object.assign({parent:this},e);this.alignmentTrack=new $m(i,this.browser),super.init(e),this.showAlignments||(this._height=this.coverageTrackHeight),e.sort&&(Array.isArray(e.sort)?this.assignSort(e.sort[0]):this.assignSort(e.sort))}dispose(){this.alignmentTrack.dispose()}setHighlightedReads(e,t){this.alignmentTrack.setHighlightedReads(e,t),this.updateViews()}get expectedPairOrientation(){return this.alignmentTrack.expectedPairOrientation}get viewAsPairs(){return this.alignmentTrack.viewAsPairs}get colorBy(){return this.alignmentTrack.colorBy}set height(e){this._height=e,this.showAlignments&&(this.alignmentTrack.height=this.showCoverage?e-this.coverageTrackHeight:e)}get height(){return this._height}sort(e){e=this.assignSort(e);for(let t of this.trackView.viewports)if(t.containsPosition(e.chr,e.position)){const i=t.cachedFeatures;i&&(i.sortRows(e),t.repaint())}}assignSort(e){if(e.locus){const t=function(e){const t=e.split(":"),i=t[1].split("-"),n={chr:t[0],start:Number.parseInt(i[0].replace(/,/g,""))-1};return i.length>1?n.end=Number.parseInt(i[1].replace(/,/g,"")):n.end=n.start+1,n}(e.locus);e.chr=t.chr,e.position=t.start}else e.position--;return e.direction="ASC"===e.direction||!0===e.direction,e.chr=this.browser.genome.getChromosomeName(e.chr),this.sortObject=e,this.sortObject}async getFeatures(e,t,i,n,r){const s=await this.featureSource.getAlignments(e,t,i);if(s.viewport=r,s.hasPairs&&!this._pairedEndStats&&!this.config.maxFragmentLength){const e=new Hm(s.allAlignments(),this.config);e.totalCount>99&&(this._pairedEndStats=e)}s.pack(this.alignmentTrack);const o=this.sortObject;return o&&o.chr===e&&o.position>=t&&o.position<=i&&s.sortRows(o),this.alignmentTrack.hasPairs=this.alignmentTrack.hasPairs||s.hasPairs,s}computePixelHeight(e){return(this.showCoverage?this.coverageTrackHeight:0)+(this.showAlignments?this.alignmentTrack.computePixelHeight(e):0)}draw(e){xo.fillRect(e.context,0,e.pixelTop,e.pixelWidth,e.pixelHeight,{fillStyle:"rgb(255, 255, 255)"}),!0===this.showCoverage&&this.coverageTrackHeight>0?(this.trackView.axisCanvas.style.display="block",this.coverageTrack.draw(e)):this.trackView.axisCanvas.style.display="none",!0===this.showAlignments&&(this.alignmentTrack.setTop(this.coverageTrack,this.showCoverage),this.alignmentTrack.draw(e))}paintAxis(e,t,i){this.coverageTrack.paintAxis(e,t,this.coverageTrackHeight)}contextMenuItemList(e){return this.alignmentTrack.contextMenuItemList(e)}popupData(e){return!0===this.showCoverage&&e.y>=this.coverageTrack.top&&e.y<this.coverageTrackHeight?this.coverageTrack.popupData(e):this.alignmentTrack.popupData(e)}clickedFeatures(e){let t;return t=!0===this.showCoverage&&e.y>=this.coverageTrack.top&&e.y<this.coverageTrackHeight?this.coverageTrack.getClickedObject(e):this.alignmentTrack.getClickedObject(e),t?[t]:void 0}hoverText(e){if(!0===this.showCoverage&&e.y>=this.coverageTrack.top&&e.y<this.coverageTrackHeight){const t=this.coverageTrack.getClickedObject(e);if(t)return t.hoverText()}}menuItemList(){let e=[];e=e.concat(this.numericDataMenuItems()),e=e.concat(this.alignmentTrack.menuItemList());const t=()=>{if(!this.autoHeight){const e=(this.showCoverage?this.coverageTrackHeight:0)+(this.showAlignments?this.alignmentTrack.height:0);this.trackView.setTrackHeight(e)}};return e.push("<hr/>"),e.push({object:Bt(Dl("Show Coverage",this.showCoverage)),click:function(){this.showCoverage=!this.showCoverage,t(),this.trackView.checkContentHeight(),this.trackView.repaintViews()}}),e.push({object:Bt(Dl("Show Alignments",this.showAlignments)),click:function(){this.showAlignments=!this.showAlignments,t(),this.trackView.checkContentHeight(),this.trackView.repaintViews()}}),e}getState(){const e=super.getState();return this.sortObject&&(e.sort={chr:this.sortObject.chr,position:this.sortObject.position+1,option:this.sortObject.option,direction:this.sortObject.direction?"ASC":"DESC"}),Object.assign(e,this.alignmentTrack.getState()),e}getCachedAlignmentContainers(){return this.trackView.viewports.map((e=>e.cachedFeatures))}get dataRange(){return this.coverageTrack.dataRange}set dataRange(e){this.coverageTrack.dataRange=e}get logScale(){return this.coverageTrack.logScale}set logScale(e){this.coverageTrack.logScale=e}get autoscale(){return this.coverageTrack.autoscale}set autoscale(e){this.coverageTrack.autoscale=e}addPairedChordsForViewport(e){const t=this.maxTemplateLength,i=[],n=e.referenceFrame;for(let r of e.cachedFeatures.allAlignments())r.end>=n.start&&r.start<=n.end&&(r.paired?r.end-r.start>t&&i.push(r):r.mate&&r.mate.chr&&(r.mate.chr!==r.chr||Math.max(r.fragmentLength)>t)&&i.push(r));zm((e=>{const t=[];for(let i of e)if(i.paired)i.firstAlignment&&i.secondAlignment&&t.push({uniqueId:i.readName,refName:Tm(i.firstAlignment.chr),start:i.firstAlignment.start,end:i.firstAlignment.end,mate:{refName:Tm(i.secondAlignment.chr),start:i.secondAlignment.start,end:i.secondAlignment.end}});else{const e=i.mate;e&&e.chr&&e.position&&t.push({uniqueId:i.readName,refName:Tm(i.chr),start:i.start,end:i.end,mate:{refName:Tm(e.chr),start:e.position-1,end:e.position}})}return t})(i),this,n,.02)}addSplitChordsForViewport(e){const t=[],i=e.referenceFrame;for(let n of e.cachedFeatures.allAlignments()){const e=n.hasTag("SA");n.end>=i.start&&n.start<=i.end&&e&&t.push(n)}zm((e=>{const t=e=>{const t=pp(e.tags().SA);let n=0;for(let r of t)r.start!==e.start&&i.push({uniqueId:`${e.readName}_${n++}`,refName:Tm(e.chr),start:e.start,end:e.end,mate:{refName:Tm(r.chr),start:r.start,end:r.start+r.lenOnRef}})},i=[];for(let i of e)i.paired?(t(i.firstAlignment),i.secondAlignment&&t(i.secondAlignment)):t(i);return i})(t),this,i,.02)}}class ew extends Hl{static defaults={height:250,theta:Math.PI/4,arcOrientation:"UP",showBlocks:!0,blockHeight:3,thickness:1,color:"rgb(180,25,137)",alpha:.02,logScale:!0};constructor(e,t){super(e,t)}init(e){super.init(e),!1===e.arcOrientation?this.arcOrientation="DOWN":!0===e.arcOrientation?this.arcOrientation="UP":e.arcOrientation?this.arcOrientation=e.arcOrientation.toUpperCase():this.arcOrientation="UP",this.sinTheta=Math.sin(this.theta),this.cosTheta=Math.cos(this.theta),this.arcType=function(e){if(!e.arcType)return"nested";switch(e.arcType){case"chiapet":return"inView";case"chiapetoutbound":return"partialInView";default:return e.arcType}}(e),this.painter={flipAxis:"DOWN"===this.arcOrientation,dataRange:this.dataRange,paintAxis:Yu},e.valueColumn?(this.valueColumn=e.valueColumn,this.hasValue=!0):e.useScore&&(this.hasValue=!0,this.valueColumn="score"),e.max?(this.dataRange={min:e.min||0,max:e.max},this.autoscale=!1):this.autoscale=!0,e.featureSource?(this.featureSource=e.featureSource,delete e._featureSource):(this.featureSource=wd(e,this.browser.genome),this.featureSource.getWGFeatures=sw)}async postInit(){if("function"!=typeof this.featureSource.getHeader||(this.header=await this.featureSource.getHeader(),!this.disposed))return this.header&&this.setTrackProperties(this.header),void 0===this.visibilityWindow&&"function"==typeof this.featureSource.defaultVisibilityWindow&&(this.visibilityWindow=await this.featureSource.defaultVisibilityWindow(),this.featureSource.visibilityWindow=this.visibilityWindow),this}get supportsWholeGenome(){return!0}async getFeatures(e,t,i){const n=this.visibilityWindow,r=await this.featureSource.getFeatures({chr:e,start:t,end:i,visibilityWindow:n});return void 0===this.hasValue&&r&&r.length>0&&(this.hasValue=void 0!==r[0].score),r}draw(e){"proportional"===this.arcType||"inView"===this.arcType||"partialInView"===this.arcType?this.drawProportional(e):this.drawNested(e)}drawNested(e){const t=e.context,i=e.pixelWidth,n=e.pixelHeight,r=e.viewportWidth,s=e.bpPerPixel,o=e.bpStart,a=s;xo.fillRect(t,0,e.pixelTop,i,n,{fillStyle:"rgb(255, 255, 255)"});const c=e.features;if(c){(function(){let e=0;for(let t of c){let n=(t.start-o)/a,r=(t.end-o)/a;n>=0&&r<=i&&(e=Math.max(e,r-n))}let t=Math.min(r,e)/2;if(e>0){let e=(n-10)/t;this.theta=function(e){let t,i=[.01570925532366355,.15838444032453644,.3249196962329063,.5095254494944288,.7265425280053609,.9999999999999999],n=[.031415926535897934,.3141592653589793,.6283185307179586,.9424777960769379,1.2566370614359172,1.5707963267948966];for(t=0;t<i.length&&!(i[t]>e);t++);let r=0===t?0:i[t-1],s=t<i.length?i[t]:1,o=(e-r)/(s-r),a=0===t?0:n[t-1],c=t<n.length?n[t]:Math.PI/2;return Math.min(Math.PI/2,a+o*(c-a))}(e),this.sinTheta=Math.sin(this.theta),this.cosTheta=Math.cos(this.theta)}}).call(this);const s="UP"===this.arcOrientation,h=s?e.pixelHeight:0;t.font="8px sans-serif",t.textAlign="center";for(let e of c){let n;if(e.drawState=void 0,"function"==typeof this.color?n=this.color(e):(n=this.color||e.color||"rgb(180,25,137)",n&&this.config.useScore&&(n=rw(n,(l=e.score,Math.min(1,.11+l/779*.89).toString())))),t.lineWidth=e.thickness||this.thickness||1,e.chr1===e.chr2||"all"===e.chr){const{m1:c,m2:l}=tw(e,this.browser.genome);let d=Math.round((c-o)/a),u=Math.round((l-o)/a);if(u<0||d>i)continue;let f=u-d;f<3&&(f=3,d--);const p=f/2,g=p/this.sinTheta,m=this.cosTheta*g,w=d+p;let b,F,v;if(s?(b=this.height+m,F=Math.PI+Math.PI/2-this.theta,v=Math.PI+Math.PI/2+this.theta):(b=-m,F=Math.PI/2-this.theta,v=Math.PI/2+this.theta),this.showBlocks&&"all"!==e.chr){const i=(e.start1-o)/a,n=(e.end1-o)/a,r=(e.start2-o)/a,c=(e.end2-o)/a,l=s?-this.blockHeight:this.blockHeight;t.fillRect(i,h,n-i,l),t.fillRect(r,h,c-r,l)}n&&!this.config.useScore&&f>r&&(n=rw(n,this.alpha)),t.strokeStyle=n,t.fillStyle=n,t.beginPath(),t.arc(w,b,g,F,v,!1),t.stroke(),e.drawState={xc:w,yc:b,r:g}}else{let r=Math.round((e.start-o)/a),c=Math.round((e.end-o)/a);if(c<0||r>i)continue;let l=c-r;l<3&&(l=3,r--);const h=e.chr===e.chr1?e.chr2:e.chr1;t.strokeStyle=n,t.fillStyle=rw(_u(h),.5),s?(t.fillRect(r,this.height/2,l,this.height/2),t.fillText(h,r+l/2,this.height/2-5),e.drawState={x:r,y:this.height/2,w:l,h:this.height/2}):(t.fillRect(r,0,l,this.height/2),t.fillText(h,r+l/2,this.height/2+13),e.drawState={x:r,y:0,w:l,h:this.height/2})}}}var l}getScaleFactor(e,t,i,n){return n?i/(Math.log10(t+1)-(e<=0?0:Math.log10(e+1))):i/(t-e)}drawProportional(e){const t=e.context,i=e.pixelWidth,n=e.pixelHeight,r=e.bpPerPixel,s=e.bpStart,o=r,a=e.referenceFrame.start,c=e.referenceFrame.end,l="UP"===this.arcOrientation;xo.fillRect(t,0,e.pixelTop,i,n,{fillStyle:"rgb(255, 255, 255)"});const h=e.features;if(h&&h.length>0){const n=0,r=this.getScaleFactor(n,this.dataRange.max,e.pixelHeight-1,this.logScale),d=l?e.pixelHeight:0;for(let e of h){e.drawState=void 0;const n=this.valueColumn?e[this.valueColumn]:e.score;if(void 0===n||Number.isNaN(n))continue;const h=Math.round((this.logScale?Math.log10(n+1):n)*r);if(e.chr1===e.chr2||"all"===e.chr){const{m1:i,m2:r}=tw(e,this.browser.genome);let u=Math.round((i-s)/o),f=Math.round((r-s)/o)-u;if(f<3&&(f=3,u--),n<this.dataRange.min||n>this.dataRange.max)continue;if("proportional"!==this.arcType){const e="partialInView"===this.arcType,t=i>=a&&r<=c;let n=!1,s=!1;if(!t&&e&&(n=a<=i&&i<=c,n||(s=a<=r&&r<=c)),!(t||n||s))continue}const p=f/2,g=u+f/2;e.drawState={xc:g,yc:d,radiusX:p,radiusY:h};const m=l,w=e.color||this.color;if(t.strokeStyle=w,t.lineWidth=e.thickness||this.thickness||1,!0===t.isSVG?t.strokeEllipse(g,d,p,h,0,0,Math.PI,m):(t.beginPath(),t.ellipse(g,d,p,h,0,0,Math.PI,m),t.stroke()),this.alpha&&(t.fillStyle=rw(w,this.alpha),!0===t.isSVG?t.fillEllipse(g,d,p,h,0,0,Math.PI,m):t.fill()),this.showBlocks&&"all"!==e.chr){t.fillStyle=w;const i=(e.start1-s)/o,n=(e.end1-s)/o,r=(e.start2-s)/o,a=(e.end2-s)/o,c=l?-this.blockHeight:this.blockHeight;t.fillRect(i,d,n-i,c),t.fillRect(r,d,a-r,c)}}else{let r=Math.round((e.start-s)/o),a=Math.round((e.end-s)/o);if(a<0||r>i||n<this.dataRange.min||n>this.dataRange.max)continue;const c=Math.min(h,this.height-13);let d=a-r;d<3&&(d=3,r--);const u=e.chr===e.chr1?e.chr2:e.chr1;if(t.font="8px sans-serif",t.textAlign="center",t.fillStyle=rw(_u(u),.5),l){const i=this.height-c;t.fillRect(r,i,d,c),t.fillText(u,r+d/2,i-5),e.drawState={x:r,y:i,w:d,h:c}}else t.fillRect(r,0,d,c),t.fillText(u,r+d/2,c+13),e.drawState={x:r,y:0,w:d,h:c}}}}}clearAxis(e,t,i){xo.fillRect(e,0,0,t,i,{fillStyle:"rgb(255, 255, 255)"})}paintAxis(e,t,i){const n={min:0,max:this.dataRange.max};"proportional"===this.arcType||"inView"===this.arcType||"partialInView"===this.arcType?(this.painter.flipAxis="DOWN"===this.arcOrientation,this.painter.dataRange=n,this.painter.paintAxis(e,t,i)):this.clearAxis(e,t,i)}menuItemList(){let e=[];if(this.hasValue){e.push("<hr/>");const t={nested:"Nested",proportional:"Proportional - All",inView:"Proportional - Both Ends in View",partialInView:"Proportional - One End in View"};e.push("<b>Arc Type</b>");for(let i of["nested","proportional","inView","partialInView"])e.push({object:Bt(Dl(t[i],i===this.arcType)),click:function(){this.arcType=i,this.trackView.repaintViews()}})}return e.push("<hr/>"),e.push({name:"Toggle arc direction",click:function(){this.arcOrientation="UP"===this.arcOrientation?"DOWN":"UP",this.trackView.repaintViews()}}),e.push({name:this.showBlocks?"Hide Blocks":"Show Blocks",click:function(){this.showBlocks=!this.showBlocks,this.trackView.repaintViews()}}),"proportional"!==this.arcType&&"inView"!==this.arcType&&"partialInView"!==this.arcType||(e=e.concat(this.numericDataMenuItems())),this.browser.circularView&&(e.push("<hr/>"),e.push({label:"Add interactions to circular view",click:function(){for(let e of this.trackView.viewports)this.addChordsForViewport(e.referenceFrame)}})),e}contextMenuItemList(e){if(this.browser.circularView){const t=e.viewport,i=[];return i.push({label:"Add interactions to circular view",click:()=>{const e=t.referenceFrame;this.addChordsForViewport(e)}}),i.push("<hr/>"),i}}addChordsForViewport(e){let t;if("all"===e.chr)t=Object.values(this.featureSource.getAllFeatures()).flat();else{t=this.featureSource.featureCache.queryFeatures(e.chr,e.start,e.end).filter((e=>e.drawState))}if(0===t.length)return;zm(t.map((e=>{const t=e._f||e;return{uniqueId:`${t.chr1}:${t.start1}-${t.end1}_${t.chr2}:${t.start2}-${t.end2}`,refName:Tm(t.chr1),start:t.start1,end:t.end1,mate:{refName:Tm(t.chr2),start:t.start2,end:t.end2}}})),this,e,.5)}doAutoscale(e){let t=0;if(e)for(let i of e){const e=this.valueColumn?i[this.valueColumn]:i.score;Number.isNaN(e)||(t=Math.max(t,e))}return{min:0,max:t}}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=[];for(let e of t){const t=e._||e;if(i.push({name:"Region 1",value:iw(t.chr1,t.start1,t.end1,t.strand1)}),i.push({name:"Region 2",value:iw(t.chr2,t.start2,t.end2,t.strand2)}),t.name&&i.push({name:"Name",value:t.name}),void 0!==t.value&&i.push({name:"Value",value:t.value}),void 0!==t.score&&i.push({name:"Score",value:t.score}),t.extras&&this.header&&this.header.columnNames){const e=this.header.columnNames,n=this.header.hiccups?6:10;for(let r=n;r<e.length;r++)this.header.colorColumn!==r&&("info"===e[r]?ow(i,t.extras[r-n]):i.push({name:e[r],value:t.extras[r-n]}))}break}return i}clickedFeatures(e){const t=e.viewport.cachedFeatures,i=[];if(t){const n="proportional"===this.arcType||"inView"===this.arcType||"partialInView"===this.arcType;for(let r of t)if(r.drawState)if(r.chr1===r.chr2||"all"===r.chr)if(n){const{xc:t,yc:n,radiusX:s,radiusY:o}=r.drawState,a=e.canvasX-t,c=e.canvasY-n,l=a/s*(a/s)+c/o*(c/o);l<=1&&i.push({score:1/l,feature:r})}else{const{xc:t,yc:n,r:s}=r.drawState,o=e.canvasX-t,a=e.canvasY-n,c=Math.abs(Math.sqrt(o*o+a*a)-s);c<5&&i.push({score:c,feature:r})}else{const{x:t,y:n,w:s,h:o}=r.drawState,a=5;if(e.canvasX>=t-a&&e.canvasX<=t+s+a&&e.canvasY>=n&&e.canvasY<=n+o){const n=-Math.abs(e.canvasX-(t+s/2));i.push({score:n,feature:r});break}}}return i.length>1&&i.sort(((e,t)=>e.score-t.score)),i.map((e=>e.feature))}}function tw(e,t){let i=(e.start1+e.end1)/2,n=(e.start2+e.end2)/2;if("all"===e.chr&&(i=t.getGenomeCoordinate(e.chr1,i),n=t.getGenomeCoordinate(e.chr2,n)),i>n){const e=i;i=n,n=e}return{m1:i,m2:n}}function iw(e,t,i,n){return n&&"."!==n?`${e}:${Rt(t+1)}-${Rt(i)} (${n})`:`${e}:${Rt(t+1)}-${Rt(i)}`}const nw=new Map;function rw(e,t){const i=`${e}_${t}`;let n=nw.get(i);return n||(n=_s.addAlpha(e,t),nw.set(i,n)),n}function sw(e){const t=e=>{const t=Object.assign({},e);return t.chr="all",t.start=i.getGenomeCoordinate(e.chr1,e.start1),t.end=i.getGenomeCoordinate(e.chr2,e.end2),t},i=this.genome;let n,r=0;for(let t of i.wgChromosomeNames){let i=e[t];if(i)for(let e of i)e.dup||(r++,e.score&&(!n||e.score>n.score)&&(n=e))}const s=this.maxWGCount,o=n&&n.score>0&&r>s?5:1,a=Math.floor(s/o),c=n&&n.score>0?Math.log(n.score)/o:Number.MAX_SAFE_INTEGER;let l,h=[],d=[];for(let e=0;e<o;e++)d.push([0]),h.push([]);for(let n of i.wgChromosomeNames){let i=e[n];if(i)for(let e of i)if(!e.dup){const i=e.score?Math.max(0,Math.min(o-1,Math.floor(Math.log(e.score)/c))):0;if(h[i].length<a)h[i].push(t(e));else{const n=a/(d[i]+1);if(Math.random()<n){const n=Math.floor(Math.random()*(a-1));h[i][n]=t(e)}}d[i]++}}if(1===o)l=h[0];else{l=[];for(let e of h)for(let t of e)l.push(t);n&&l.push(t(n)),l.sort((function(e,t){return e.start-t.start})),console.log(l.length)}return l}function ow(e,t){const i=t.split(";");for(let t of i){const i=t.split("=");2===i.length&&e.push({name:i[0],value:i[1]})}}class aw{constructor(e){var t;this.config=e,this.url=(t=e.path||e.url).includes("//www.dropbox.com")?t.replace("//www.dropbox.com","//dl.dropboxusercontent.com"):t.startsWith("ftp://ftp.ncbi.nlm.nih.gov")?t.replace("ftp://","https://"):t}async read(e,t){const i=this.config.headers||{};if(void 0!==e&&t){const n="bytes="+e+"-"+(e+t-1);i.Range=n}let n=this.url.slice();if(this.config.oauthToken){const e=async function(e){return"function"==typeof e?await Promise.resolve(e()):e}(this.config.oauthToken);i.Authorization=`Bearer ${e}`}this.config.apiKey&&(n=function(e,t,i){const n=e.includes("?")?"&":"?";return e+n+t+"="+i}(n,"key",this.config.apiKey));const r=await fetch(n,{method:"GET",headers:i,redirect:"follow",mode:"cors"}),s=r.status;if(s>=400){const e=Error(r.statusText);throw e.code=s,e}return r.arrayBuffer()}}class cw{constructor(e){this.file=e.file,this.fetchSize=e.fetchSize||16e3,this.maxSize=e.maxSize||1e6,this.buffers=[]}async read(e,t){let i=this.buffers.filter((i=>i.overlaps(e,e+t)));for(let n of i)if(n.contains(e,e+t))return n.slice(e,e+t);if(0===i.length){let i=Math.max(t,this.fetchSize);this.buffers.sort(((e,t)=>e.start-t.start));const n=function(e,t,i){let n=i-1,r=e.length;for(;1+n<r;){const i=n+(r-n>>1);t(e[i])?r=i:n=i}return r}(this.buffers,(t=>t.start>e),0);n<this.buffers.length&&(i=Math.min(i,this.buffers[n].start-e));const r=e,s=await this.file.read(r,i),o=new lw(r,s);return this.addBuffer(o),o.slice(e,e+t)}{i.sort(((e,t)=>e.start-t.start));const n=[];let r=e;for(let e of i){if(r<e.start){const t=r,i=e.start-r,s=await this.file.read(t,i),o=new lw(t,s);n.push(o)}n.push(e),r=e.end}const s=e+t;if(s>r){const e=r,t=s-e,i=await this.file.read(e,t),o=new lw(e,i);n.push(o)}const o=n[0].start,a=function(e){const t=e.reduce(((e,t)=>e+t.byteLength),0),i=new Uint8Array(t);let n=0;for(let t of e)i.set(new Uint8Array(t),n),n+=t.byteLength;return i.buffer}(n.map((e=>e.buffer))),c=new lw(o,a),l=new Set(i);return this.buffers=this.buffers.filter((e=>!l.has(e))),this.addBuffer(c),c.slice(e,e+t)}}addBuffer(e){const t=this.buffers.reduce(((e,t)=>e+t.size),0)+e.size;if(t>this.maxSize){const e=t-this.maxSize;this.buffers.sort(((e,t)=>e.creationTime-t.creationTime));let i,n=0;for(i=0;i<this.buffers.length&&(n+=this.buffers[i].size,!(n>e));i++);this.buffers=i<this.buffers.length-1?this.buffers.slice(i):[]}e.size<=this.maxSize&&this.buffers.push(e)}}class lw{constructor(e,t){this.creationTime=Date.now(),this.start=e,this.buffer=t}slice(e,t){if(e<this.start||t-e>this.buffer.byteLength)throw Error("buffer bounds error");return this.buffer.slice(e-this.start,t-this.start)}get end(){return this.start+this.buffer.byteLength}get size(){return this.buffer.byteLength}contains(e,t){return e>=this.start&&t<=this.end}overlaps(e,t){return e>this.start&&e<this.end||t>this.start&&t<this.end}toString(){return`Buffer ${this.creationTime}   ${this.start} - ${this.end}`}}class hw{constructor(e){this.file=e}async read(e,t){if(0===t)return new ArrayBuffer;return(null!=e&&t?this.file.slice(e,e+t):this.file).arrayBuffer()}}var dw=Object.defineProperty,uw=(e,t,i)=>(((e,t,i)=>{t in e?dw(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i})(e,"symbol"!=typeof t?t+"":t,i),i);async function fw(e,t,i=0){var n=new Map;for(let[r,s]of e.entries()){let e=await vw.unpack_from_async("<"+s,t,i);i+=vw.calcsize(s),1==e.length&&(e=e[0]),n.set(r,e)}return n}function pw(e,t,i=0){var n=new Map;for(let[r,s]of e.entries()){let e=vw.unpack_from("<"+s,t,i);i+=vw.calcsize(s),1==e.length&&(e=e[0]),n.set(r,e)}return n}function gw(e){e||e()}function mw(e){var t="<"+Array.from(e.values()).join("");return vw.calcsize(t)}function ww(e,t=8){return Math.ceil(e/t)*t}var bw={u:"Uint",i:"Int",f:"Float"};function Fw(e){var t,i,n=vw._is_big_endian(e);if(/S/.test(e))t="getString",i=0|((e.match(/S(\d*)/)||[])[1]||1);else{let[n,r,s]=e.match(/[<>=!@]?(i|u|f)(\d*)/);i=parseInt(s||4,10),t="get"+bw[r]+(8*i).toFixed()}return[t,n,i]}var vw=new class{constructor(){this.big_endian=function(){const e=new Uint8Array(4);return!((new Uint32Array(e.buffer)[0]=1)&e[0])}(),this.getters={s:"getUint8",b:"getInt8",B:"getUint8",h:"getInt16",H:"getUint16",i:"getInt32",I:"getUint32",l:"getInt32",L:"getUint32",q:"getInt64",Q:"getUint64",f:"getFloat32",d:"getFloat64"},this.byte_lengths={s:1,b:1,B:1,h:2,H:2,i:4,I:4,l:4,L:4,q:8,Q:8,f:4,d:8};let e=Object.keys(this.byte_lengths).join("");this.fmt_size_regex="(\\d*)(["+e+"])"}calcsize(e){for(var t,i=0,n=new RegExp(this.fmt_size_regex,"g");null!==(t=n.exec(e));){let e=parseInt(t[1]||1,10),n=t[2];i+=e*this.byte_lengths[n]}return i}_is_big_endian(e){return!/^</.test(e)&&(!!/^(!|>)/.test(e)||this.big_endian)}async unpack_from_async(e,t,i){i=Number.parseInt(i||0);const n=this.calcsize(e),r=await t.slice(i,i+n);let s=0;for(var o,a=new yw(r),c=[],l=this._is_big_endian(e),h=new RegExp(this.fmt_size_regex,"g");null!==(o=h.exec(e));){let e=parseInt(o[1]||1,10),t=o[2],i=this.getters[t],n=this.byte_lengths[t];if("s"==t)c.push((new TextDecoder).decode(r.slice(s,s+e))),s+=e;else for(var d=0;d<e;d++)c.push(a[i](s,!l)),s+=n}return c}unpack_from(e,t,i){i=Number.parseInt(i||0);const n=this.calcsize(e),r=t.slice(i,i+n);let s=0;for(var o,a=new yw(r),c=[],l=this._is_big_endian(e),h=new RegExp(this.fmt_size_regex,"g");null!==(o=h.exec(e));){let e=parseInt(o[1]||1,10),t=o[2],i=this.getters[t],n=this.byte_lengths[t];if("s"==t)c.push((new TextDecoder).decode(r.slice(s,s+e))),s+=e;else for(var d=0;d<e;d++)c.push(a[i](s,!l)),s+=n}return c}};var yw=class extends DataView{getUint64(e,t){const i=BigInt(this.getUint32(e,t)),n=BigInt(this.getUint32(e+4,t));let r=t?i+(n<<32n):(i<<32n)+n;return Number.parseInt(r)}getInt64(e,t){var i,n;t?(i=this.getUint32(e,!0),n=this.getInt32(e+4,!0)):(n=this.getInt32(e,!1),i=this.getUint32(e+4,!1));let r=BigInt(i)+(BigInt(n)<<32n);return Number.parseInt(r)}getString(e,t,i){const n=this.buffer.slice(e,e+i);return(new TextDecoder).decode(n)}getVLENStruct(e,t,i){return[this.getUint32(e,t),this.getUint64(e+4,t),this.getUint32(e+12,t)]}};function Aw(e){return e.toString(2).length}function Cw(e,t,i=0,n=!0){const r=t.slice(i,i+e);let s=new Uint8Array(r);n||s.reverse();let o=s.reduce(((e,t,i)=>e+(t<<8*i)),0);return o}var _w=class{constructor(e,t){this.buf=e,this.offset=t,this.dtype=this.determine_dtype()}async determine_dtype(){let e=await fw(xw,this.buf,this.offset);this.offset+=kw;let t=15&e.get("class_and_version");if(t==Iw)return this._determine_dtype_fixed_point(e);if(t==Sw)return this._determine_dtype_floating_point(e);if(t==Ew)throw"Time datatype class not supported.";if(t==Nw)return this._determine_dtype_string(e);if(t==Bw)throw"Bitfield datatype class not supported.";if(t==Mw)return{datatype_class:Mw,size:e.get("size")};if(t==Rw)return this._determine_dtype_compound(e);if(t==Dw)return["REFERENCE",e.get("size")];if(t==Tw)return this.determine_dtype();if(t==zw)throw"Array datatype class not supported.";if(t==Lw){let t=this._determine_dtype_vlen(e);if("VLEN_SEQUENCE"==t[0]){t=["VLEN_SEQUENCE",this.determine_dtype()]}return t}throw"Invalid datatype class "+t}_determine_dtype_fixed_point(e){let t=e.get("size");if(![1,2,4,8].includes(t))throw"Unsupported datatype size";var i;var n;return i=(8&e.get("class_bit_field_0"))>0?"i":"u",n=0==(1&e.get("class_bit_field_0"))?"<":">",this.offset+=4,n+i+t.toFixed()}_determine_dtype_floating_point(e){let t=e.get("size");if(![1,2,4,8].includes(t))throw"Unsupported datatype size";var i;return i=0==(1&e.get("class_bit_field_0"))?"<":">",this.offset+=12,i+"f"+t.toFixed()}_determine_dtype_string(e){return"S"+e.get("size").toFixed()}_determine_dtype_vlen(e){return 1!=(1&e.get("class_bit_field_0"))?["VLEN_SEQUENCE",0,0]:["VLEN_STRING",e.get("class_bit_field_0")>>4,1&e.get("class_bit_field_1")]}_determine_dtype_compound(e){throw"Compound type not yet implemented!"}},xw=new Map([["class_and_version","B"],["class_bit_field_0","B"],["class_bit_field_1","B"],["class_bit_field_2","B"],["size","I"]]),kw=mw(xw);mw(new Map([["offset","I"],["dimensionality","B"],["reserved_0","B"],["reserved_1","B"],["reserved_2","B"],["permutation","I"],["reserved_3","I"],["dim_size_1","I"],["dim_size_2","I"],["dim_size_3","I"],["dim_size_4","I"]]));var Iw=0,Sw=1,Ew=2,Nw=3,Bw=4,Mw=5,Rw=6,Dw=7,Tw=8,Lw=9,zw=10;function Hw(e){let t=e.length;for(;--t>=0;)e[t]=0}Hw(new Array(576)),Hw(new Array(60)),Hw(new Array(512)),Hw(new Array(256)),Hw(new Array(29)),Hw(new Array(30));var Pw=(e,t,i,n)=>{let r=65535&e,s=e>>>16&65535,o=0;for(;0!==i;){o=i>2e3?2e3:i,i-=o;do{r=r+t[n++]|0,s=s+r|0}while(--o);r%=65521,s%=65521}return r|s<<16},Ow=new Uint32Array((()=>{let e,t=[];for(var i=0;i<256;i++){e=i;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[i]=e}return t})()),Uw=(e,t,i,n)=>{const r=Ow,s=n+i;e^=-1;for(let i=n;i<s;i++)e=e>>>8^r[255&(e^t[i])];return~e},qw={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Qw={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8},Vw=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),jw={assign:function(e){const t=Array.prototype.slice.call(arguments,1);for(;t.length;){const i=t.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(const t in i)Vw(i,t)&&(e[t]=i[t])}}return e},flattenChunks:e=>{let t=0;for(let i=0,n=e.length;i<n;i++)t+=e[i].length;const i=new Uint8Array(t);for(let t=0,n=0,r=e.length;t<r;t++){let r=e[t];i.set(r,n),n+=r.length}return i}},Ww=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(EA){Ww=!1}var Gw=new Uint8Array(256);for(let NA=0;NA<256;NA++)Gw[NA]=NA>=252?6:NA>=248?5:NA>=240?4:NA>=224?3:NA>=192?2:1;Gw[254]=Gw[254]=1;var $w={string2buf:e=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(e);let t,i,n,r,s,o=e.length,a=0;for(r=0;r<o;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),a+=i<128?1:i<2048?2:i<65536?3:4;for(t=new Uint8Array(a),s=0,r=0;s<a;r++)i=e.charCodeAt(r),55296==(64512&i)&&r+1<o&&(n=e.charCodeAt(r+1),56320==(64512&n)&&(i=65536+(i-55296<<10)+(n-56320),r++)),i<128?t[s++]=i:i<2048?(t[s++]=192|i>>>6,t[s++]=128|63&i):i<65536?(t[s++]=224|i>>>12,t[s++]=128|i>>>6&63,t[s++]=128|63&i):(t[s++]=240|i>>>18,t[s++]=128|i>>>12&63,t[s++]=128|i>>>6&63,t[s++]=128|63&i);return t},buf2string:(e,t)=>{const i=t||e.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(e.subarray(0,t));let n,r;const s=new Array(2*i);for(r=0,n=0;n<i;){let t=e[n++];if(t<128){s[r++]=t;continue}let o=Gw[t];if(o>4)s[r++]=65533,n+=o-1;else{for(t&=2===o?31:3===o?15:7;o>1&&n<i;)t=t<<6|63&e[n++],o--;o>1?s[r++]=65533:t<65536?s[r++]=t:(t-=65536,s[r++]=55296|t>>10&1023,s[r++]=56320|1023&t)}}return((e,t)=>{if(t<65534&&e.subarray&&Ww)return String.fromCharCode.apply(null,e.length===t?e:e.subarray(0,t));let i="";for(let n=0;n<t;n++)i+=String.fromCharCode(e[n]);return i})(s,r)},utf8border:(e,t)=>{(t=t||e.length)>e.length&&(t=e.length);let i=t-1;for(;i>=0&&128==(192&e[i]);)i--;return i<0||0===i?t:i+Gw[e[i]]>t?i:t}};var Kw=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0},Yw=function(e,t){let i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v,y,A,C,_,x;const k=e.state;i=e.next_in,_=e.input,n=i+(e.avail_in-5),r=e.next_out,x=e.output,s=r-(t-e.avail_out),o=r+(e.avail_out-257),a=k.dmax,c=k.wsize,l=k.whave,h=k.wnext,d=k.window,u=k.hold,f=k.bits,p=k.lencode,g=k.distcode,m=(1<<k.lenbits)-1,w=(1<<k.distbits)-1;e:do{f<15&&(u+=_[i++]<<f,f+=8,u+=_[i++]<<f,f+=8),b=p[u&m];t:for(;;){if(F=b>>>24,u>>>=F,f-=F,F=b>>>16&255,0===F)x[r++]=65535&b;else{if(!(16&F)){if(64&F){if(32&F){k.mode=12;break e}e.msg="invalid literal/length code",k.mode=30;break e}b=p[(65535&b)+(u&(1<<F)-1)];continue t}for(v=65535&b,F&=15,F&&(f<F&&(u+=_[i++]<<f,f+=8),v+=u&(1<<F)-1,u>>>=F,f-=F),f<15&&(u+=_[i++]<<f,f+=8,u+=_[i++]<<f,f+=8),b=g[u&w];;){if(F=b>>>24,u>>>=F,f-=F,F=b>>>16&255,16&F){if(y=65535&b,F&=15,f<F&&(u+=_[i++]<<f,f+=8,f<F&&(u+=_[i++]<<f,f+=8)),y+=u&(1<<F)-1,y>a){e.msg="invalid distance too far back",k.mode=30;break e}if(u>>>=F,f-=F,F=r-s,y>F){if(F=y-F,F>l&&k.sane){e.msg="invalid distance too far back",k.mode=30;break e}if(A=0,C=d,0===h){if(A+=c-F,F<v){v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}}else if(h<F){if(A+=c+h-F,F-=h,F<v){v-=F;do{x[r++]=d[A++]}while(--F);if(A=0,h<v){F=h,v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}}}else if(A+=h-F,F<v){v-=F;do{x[r++]=d[A++]}while(--F);A=r-y,C=x}for(;v>2;)x[r++]=C[A++],x[r++]=C[A++],x[r++]=C[A++],v-=3;v&&(x[r++]=C[A++],v>1&&(x[r++]=C[A++]))}else{A=r-y;do{x[r++]=x[A++],x[r++]=x[A++],x[r++]=x[A++],v-=3}while(v>2);v&&(x[r++]=x[A++],v>1&&(x[r++]=x[A++]))}break}if(64&F){e.msg="invalid distance code",k.mode=30;break e}b=g[(65535&b)+(u&(1<<F)-1)]}}break}}while(i<n&&r<o);v=f>>3,i-=v,f-=v<<3,u&=(1<<f)-1,e.next_in=i,e.next_out=r,e.avail_in=i<n?n-i+5:5-(i-n),e.avail_out=r<o?o-r+257:257-(r-o),k.hold=u,k.bits=f},Xw=15,Zw=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),Jw=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),eb=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),tb=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]),ib=(e,t,i,n,r,s,o,a)=>{const c=a.bits;let l,h,d,u,f,p,g=0,m=0,w=0,b=0,F=0,v=0,y=0,A=0,C=0,_=0,x=null,k=0;const I=new Uint16Array(16),S=new Uint16Array(16);let E,N,B,M=null,R=0;for(g=0;g<=Xw;g++)I[g]=0;for(m=0;m<n;m++)I[t[i+m]]++;for(F=c,b=Xw;b>=1&&0===I[b];b--);if(F>b&&(F=b),0===b)return r[s++]=20971520,r[s++]=20971520,a.bits=1,0;for(w=1;w<b&&0===I[w];w++);for(F<w&&(F=w),A=1,g=1;g<=Xw;g++)if(A<<=1,A-=I[g],A<0)return-1;if(A>0&&(0===e||1!==b))return-1;for(S[1]=0,g=1;g<Xw;g++)S[g+1]=S[g]+I[g];for(m=0;m<n;m++)0!==t[i+m]&&(o[S[t[i+m]]++]=m);if(0===e?(x=M=o,p=19):1===e?(x=Zw,k-=257,M=Jw,R-=257,p=256):(x=eb,M=tb,p=-1),_=0,m=0,g=w,f=s,v=F,y=0,d=-1,C=1<<F,u=C-1,1===e&&C>852||2===e&&C>592)return 1;for(;;){E=g-y,o[m]<p?(N=0,B=o[m]):o[m]>p?(N=M[R+o[m]],B=x[k+o[m]]):(N=96,B=0),l=1<<g-y,h=1<<v,w=h;do{h-=l,r[f+(_>>y)+h]=E<<24|N<<16|B}while(0!==h);for(l=1<<g-1;_&l;)l>>=1;if(0!==l?(_&=l-1,_+=l):_=0,m++,0==--I[g]){if(g===b)break;g=t[i+o[m]]}if(g>F&&(_&u)!==d){for(0===y&&(y=F),f+=w,v=g-y,A=1<<v;v+y<b&&(A-=I[v+y],!(A<=0));)v++,A<<=1;if(C+=1<<v,1===e&&C>852||2===e&&C>592)return 1;d=_&u,r[d]=F<<24|v<<16|f-s}}return 0!==_&&(r[f+_]=g-y<<24|64<<16),a.bits=F,0},{Z_FINISH:nb,Z_BLOCK:rb,Z_TREES:sb,Z_OK:ob,Z_STREAM_END:ab,Z_NEED_DICT:cb,Z_STREAM_ERROR:lb,Z_DATA_ERROR:hb,Z_MEM_ERROR:db,Z_BUF_ERROR:ub,Z_DEFLATED:fb}=Qw,pb=12,gb=30,mb=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function wb(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}var bb,Fb,vb=e=>{if(!e||!e.state)return lb;const t=e.state;return e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Int32Array(852),t.distcode=t.distdyn=new Int32Array(592),t.sane=1,t.back=-1,ob},yb=e=>{if(!e||!e.state)return lb;const t=e.state;return t.wsize=0,t.whave=0,t.wnext=0,vb(e)},Ab=(e,t)=>{let i;if(!e||!e.state)return lb;const n=e.state;return t<0?(i=0,t=-t):(i=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?lb:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=i,n.wbits=t,yb(e))},Cb=(e,t)=>{if(!e)return lb;const i=new wb;e.state=i,i.window=null;const n=Ab(e,t);return n!==ob&&(e.state=null),n},_b=!0,xb=e=>{if(_b){bb=new Int32Array(512),Fb=new Int32Array(32);let t=0;for(;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(ib(1,e.lens,0,288,bb,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;ib(2,e.lens,0,32,Fb,0,e.work,{bits:5}),_b=!1}e.lencode=bb,e.lenbits=9,e.distcode=Fb,e.distbits=5},kb=(e,t,i,n)=>{let r;const s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),n>=s.wsize?(s.window.set(t.subarray(i-s.wsize,i),0),s.wnext=0,s.whave=s.wsize):(r=s.wsize-s.wnext,r>n&&(r=n),s.window.set(t.subarray(i-n,i-n+r),s.wnext),(n-=r)?(s.window.set(t.subarray(i-n,i),0),s.wnext=n,s.whave=s.wsize):(s.wnext+=r,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=r))),0},Ib=(e,t)=>{let i,n,r,s,o,a,c,l,h,d,u,f,p,g,m,w,b,F,v,y,A,C,_=0;const x=new Uint8Array(4);let k,I;const S=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return lb;i=e.state,i.mode===pb&&(i.mode=13),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,l=i.hold,h=i.bits,d=a,u=c,C=ob;e:for(;;)switch(i.mode){case 1:if(0===i.wrap){i.mode=13;break}for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(2&i.wrap&&35615===l){i.check=0,x[0]=255&l,x[1]=l>>>8&255,i.check=Uw(i.check,x,2,0),l=0,h=0,i.mode=2;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&l)<<8)+(l>>8))%31){e.msg="incorrect header check",i.mode=gb;break}if((15&l)!==fb){e.msg="unknown compression method",i.mode=gb;break}if(l>>>=4,h-=4,A=8+(15&l),0===i.wbits)i.wbits=A;else if(A>i.wbits){e.msg="invalid window size",i.mode=gb;break}i.dmax=1<<i.wbits,e.adler=i.check=1,i.mode=512&l?10:pb,l=0,h=0;break;case 2:for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(i.flags=l,(255&i.flags)!==fb){e.msg="unknown compression method",i.mode=gb;break}if(57344&i.flags){e.msg="unknown header flags set",i.mode=gb;break}i.head&&(i.head.text=l>>8&1),512&i.flags&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Uw(i.check,x,2,0)),l=0,h=0,i.mode=3;case 3:for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.head&&(i.head.time=l),512&i.flags&&(x[0]=255&l,x[1]=l>>>8&255,x[2]=l>>>16&255,x[3]=l>>>24&255,i.check=Uw(i.check,x,4,0)),l=0,h=0,i.mode=4;case 4:for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.head&&(i.head.xflags=255&l,i.head.os=l>>8),512&i.flags&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Uw(i.check,x,2,0)),l=0,h=0,i.mode=5;case 5:if(1024&i.flags){for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.length=l,i.head&&(i.head.extra_len=l),512&i.flags&&(x[0]=255&l,x[1]=l>>>8&255,i.check=Uw(i.check,x,2,0)),l=0,h=0}else i.head&&(i.head.extra=null);i.mode=6;case 6:if(1024&i.flags&&(f=i.length,f>a&&(f=a),f&&(i.head&&(A=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Uint8Array(i.head.extra_len)),i.head.extra.set(n.subarray(s,s+f),A)),512&i.flags&&(i.check=Uw(i.check,n,f,s)),a-=f,s+=f,i.length-=f),i.length))break e;i.length=0,i.mode=7;case 7:if(2048&i.flags){if(0===a)break e;f=0;do{A=n[s+f++],i.head&&A&&i.length<65536&&(i.head.name+=String.fromCharCode(A))}while(A&&f<a);if(512&i.flags&&(i.check=Uw(i.check,n,f,s)),a-=f,s+=f,A)break e}else i.head&&(i.head.name=null);i.length=0,i.mode=8;case 8:if(4096&i.flags){if(0===a)break e;f=0;do{A=n[s+f++],i.head&&A&&i.length<65536&&(i.head.comment+=String.fromCharCode(A))}while(A&&f<a);if(512&i.flags&&(i.check=Uw(i.check,n,f,s)),a-=f,s+=f,A)break e}else i.head&&(i.head.comment=null);i.mode=9;case 9:if(512&i.flags){for(;h<16;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(l!==(65535&i.check)){e.msg="header crc mismatch",i.mode=gb;break}l=0,h=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),e.adler=i.check=0,i.mode=pb;break;case 10:for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}e.adler=i.check=mb(l),l=0,h=0,i.mode=11;case 11:if(0===i.havedict)return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,cb;e.adler=i.check=1,i.mode=pb;case pb:if(t===rb||t===sb)break e;case 13:if(i.last){l>>>=7&h,h-=7&h,i.mode=27;break}for(;h<3;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}switch(i.last=1&l,l>>>=1,h-=1,3&l){case 0:i.mode=14;break;case 1:if(xb(i),i.mode=20,t===sb){l>>>=2,h-=2;break e}break;case 2:i.mode=17;break;case 3:e.msg="invalid block type",i.mode=gb}l>>>=2,h-=2;break;case 14:for(l>>>=7&h,h-=7&h;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if((65535&l)!=(l>>>16^65535)){e.msg="invalid stored block lengths",i.mode=gb;break}if(i.length=65535&l,l=0,h=0,i.mode=15,t===sb)break e;case 15:i.mode=16;case 16:if(f=i.length,f){if(f>a&&(f=a),f>c&&(f=c),0===f)break e;r.set(n.subarray(s,s+f),o),a-=f,s+=f,c-=f,o+=f,i.length-=f;break}i.mode=pb;break;case 17:for(;h<14;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(i.nlen=257+(31&l),l>>>=5,h-=5,i.ndist=1+(31&l),l>>>=5,h-=5,i.ncode=4+(15&l),l>>>=4,h-=4,i.nlen>286||i.ndist>30){e.msg="too many length or distance symbols",i.mode=gb;break}i.have=0,i.mode=18;case 18:for(;i.have<i.ncode;){for(;h<3;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.lens[S[i.have++]]=7&l,l>>>=3,h-=3}for(;i.have<19;)i.lens[S[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,k={bits:i.lenbits},C=ib(0,i.lens,0,19,i.lencode,0,i.work,k),i.lenbits=k.bits,C){e.msg="invalid code lengths set",i.mode=gb;break}i.have=0,i.mode=19;case 19:for(;i.have<i.nlen+i.ndist;){for(;_=i.lencode[l&(1<<i.lenbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(b<16)l>>>=m,h-=m,i.lens[i.have++]=b;else{if(16===b){for(I=m+2;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(l>>>=m,h-=m,0===i.have){e.msg="invalid bit length repeat",i.mode=gb;break}A=i.lens[i.have-1],f=3+(3&l),l>>>=2,h-=2}else if(17===b){for(I=m+3;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,A=0,f=3+(7&l),l>>>=3,h-=3}else{for(I=m+7;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=m,h-=m,A=0,f=11+(127&l),l>>>=7,h-=7}if(i.have+f>i.nlen+i.ndist){e.msg="invalid bit length repeat",i.mode=gb;break}for(;f--;)i.lens[i.have++]=A}}if(i.mode===gb)break;if(0===i.lens[256]){e.msg="invalid code -- missing end-of-block",i.mode=gb;break}if(i.lenbits=9,k={bits:i.lenbits},C=ib(1,i.lens,0,i.nlen,i.lencode,0,i.work,k),i.lenbits=k.bits,C){e.msg="invalid literal/lengths set",i.mode=gb;break}if(i.distbits=6,i.distcode=i.distdyn,k={bits:i.distbits},C=ib(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,k),i.distbits=k.bits,C){e.msg="invalid distances set",i.mode=gb;break}if(i.mode=20,t===sb)break e;case 20:i.mode=21;case 21:if(a>=6&&c>=258){e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,Yw(e,u),o=e.next_out,r=e.output,c=e.avail_out,s=e.next_in,n=e.input,a=e.avail_in,l=i.hold,h=i.bits,i.mode===pb&&(i.back=-1);break}for(i.back=0;_=i.lencode[l&(1<<i.lenbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(w&&!(240&w)){for(F=m,v=w,y=b;_=i.lencode[y+((l&(1<<F+v)-1)>>F)],m=_>>>24,w=_>>>16&255,b=65535&_,!(F+m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=F,h-=F,i.back+=F}if(l>>>=m,h-=m,i.back+=m,i.length=b,0===w){i.mode=26;break}if(32&w){i.back=-1,i.mode=pb;break}if(64&w){e.msg="invalid literal/length code",i.mode=gb;break}i.extra=15&w,i.mode=22;case 22:if(i.extra){for(I=i.extra;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.length+=l&(1<<i.extra)-1,l>>>=i.extra,h-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=23;case 23:for(;_=i.distcode[l&(1<<i.distbits)-1],m=_>>>24,w=_>>>16&255,b=65535&_,!(m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(!(240&w)){for(F=m,v=w,y=b;_=i.distcode[y+((l&(1<<F+v)-1)>>F)],m=_>>>24,w=_>>>16&255,b=65535&_,!(F+m<=h);){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}l>>>=F,h-=F,i.back+=F}if(l>>>=m,h-=m,i.back+=m,64&w){e.msg="invalid distance code",i.mode=gb;break}i.offset=b,i.extra=15&w,i.mode=24;case 24:if(i.extra){for(I=i.extra;h<I;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}i.offset+=l&(1<<i.extra)-1,l>>>=i.extra,h-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){e.msg="invalid distance too far back",i.mode=gb;break}i.mode=25;case 25:if(0===c)break e;if(f=u-c,i.offset>f){if(f=i.offset-f,f>i.whave&&i.sane){e.msg="invalid distance too far back",i.mode=gb;break}f>i.wnext?(f-=i.wnext,p=i.wsize-f):p=i.wnext-f,f>i.length&&(f=i.length),g=i.window}else g=r,p=o-i.offset,f=i.length;f>c&&(f=c),c-=f,i.length-=f;do{r[o++]=g[p++]}while(--f);0===i.length&&(i.mode=21);break;case 26:if(0===c)break e;r[o++]=i.length,c--,i.mode=21;break;case 27:if(i.wrap){for(;h<32;){if(0===a)break e;a--,l|=n[s++]<<h,h+=8}if(u-=c,e.total_out+=u,i.total+=u,u&&(e.adler=i.check=i.flags?Uw(i.check,r,u,o-u):Pw(i.check,r,u,o-u)),u=c,(i.flags?l:mb(l))!==i.check){e.msg="incorrect data check",i.mode=gb;break}l=0,h=0}i.mode=28;case 28:if(i.wrap&&i.flags){for(;h<32;){if(0===a)break e;a--,l+=n[s++]<<h,h+=8}if(l!==(4294967295&i.total)){e.msg="incorrect length check",i.mode=gb;break}l=0,h=0}i.mode=29;case 29:C=ab;break e;case gb:C=hb;break e;case 31:return db;default:return lb}return e.next_out=o,e.avail_out=c,e.next_in=s,e.avail_in=a,i.hold=l,i.bits=h,(i.wsize||u!==e.avail_out&&i.mode<gb&&(i.mode<27||t!==nb))&&kb(e,e.output,e.next_out,u-e.avail_out),d-=e.avail_in,u-=e.avail_out,e.total_in+=d,e.total_out+=u,i.total+=u,i.wrap&&u&&(e.adler=i.check=i.flags?Uw(i.check,r,u,e.next_out-u):Pw(i.check,r,u,e.next_out-u)),e.data_type=i.bits+(i.last?64:0)+(i.mode===pb?128:0)+(20===i.mode||15===i.mode?256:0),(0===d&&0===u||t===nb)&&C===ob&&(C=ub),C},Sb={inflateReset:yb,inflateReset2:Ab,inflateResetKeep:vb,inflateInit:e=>Cb(e,15),inflateInit2:Cb,inflate:Ib,inflateEnd:e=>{if(!e||!e.state)return lb;let t=e.state;return t.window&&(t.window=null),e.state=null,ob},inflateGetHeader:(e,t)=>{if(!e||!e.state)return lb;const i=e.state;return 2&i.wrap?(i.head=t,t.done=!1,ob):lb},inflateSetDictionary:(e,t)=>{const i=t.length;let n,r,s;return e&&e.state?(n=e.state,0!==n.wrap&&11!==n.mode?lb:11===n.mode&&(r=1,r=Pw(r,t,i,0),r!==n.check)?hb:(s=kb(e,t,i,i),s?(n.mode=31,db):(n.havedict=1,ob))):lb},inflateInfo:"pako inflate (from Nodeca project)"};var Eb=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},Nb=Object.prototype.toString,{Z_NO_FLUSH:Bb,Z_FINISH:Mb,Z_OK:Rb,Z_STREAM_END:Db,Z_NEED_DICT:Tb,Z_STREAM_ERROR:Lb,Z_DATA_ERROR:zb,Z_MEM_ERROR:Hb}=Qw;function Pb(e){this.options=jw.assign({chunkSize:65536,windowBits:15,to:""},e||{});const t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(15&t.windowBits||(t.windowBits|=15)),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Kw,this.strm.avail_out=0;let i=Sb.inflateInit2(this.strm,t.windowBits);if(i!==Rb)throw new Error(qw[i]);if(this.header=new Eb,Sb.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=$w.string2buf(t.dictionary):"[object ArrayBuffer]"===Nb.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(i=Sb.inflateSetDictionary(this.strm,t.dictionary),i!==Rb)))throw new Error(qw[i])}function Ob(e,t){const i=new Pb(t);if(i.push(e),i.err)throw i.msg||qw[i.err];return i.result}Pb.prototype.push=function(e,t){const i=this.strm,n=this.options.chunkSize,r=this.options.dictionary;let s,o,a;if(this.ended)return!1;for(o=t===~~t?t:!0===t?Mb:Bb,"[object ArrayBuffer]"===Nb.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;;){for(0===i.avail_out&&(i.output=new Uint8Array(n),i.next_out=0,i.avail_out=n),s=Sb.inflate(i,o),s===Tb&&r&&(s=Sb.inflateSetDictionary(i,r),s===Rb?s=Sb.inflate(i,o):s===zb&&(s=Tb));i.avail_in>0&&s===Db&&i.state.wrap>0&&0!==e[i.next_in];)Sb.inflateReset(i),s=Sb.inflate(i,o);switch(s){case Lb:case zb:case Tb:case Hb:return this.onEnd(s),this.ended=!0,!1}if(a=i.avail_out,i.next_out&&(0===i.avail_out||s===Db))if("string"===this.options.to){let e=$w.utf8border(i.output,i.next_out),t=i.next_out-e,r=$w.buf2string(i.output,e);i.next_out=t,i.avail_out=n-t,t&&i.output.set(i.output.subarray(e,e+t),0),this.onData(r)}else this.onData(i.output.length===i.next_out?i.output:i.output.subarray(0,i.next_out));if(s!==Rb||0!==a){if(s===Db)return s=Sb.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===i.avail_in)break}}return!0},Pb.prototype.onData=function(e){this.chunks.push(e)},Pb.prototype.onEnd=function(e){e===Rb&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=jw.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Ub=function(e,t){return(t=t||{}).raw=!0,Ob(e,t)},qb={Inflate:Pb,inflate:Ob,inflateRaw:Ub,ungzip:Ob,constants:Qw},{Inflate:Qb,inflate:Vb,inflateRaw:jb,ungzip:Wb}=qb,Gb=Vb,$b=Wb;var Kb=new Map([[1,function(e,t){let i=new Uint8Array(e);return Gb(i).buffer}],[2,function(e,t){let i=e.byteLength,n=new Uint8Array(i),r=Math.floor(i/t),s=new DataView(e);for(var o=0;o<t;o++)for(var a=0;a<r;a++)n[o+a*t]=s.getUint8(o*r+a);return n.buffer}],[3,function(e,t){return function(e){for(var t=e.byteLength%2!=0,i=e.byteLength-4,n=new DataView(e),r=0,s=0,o=0;o<i-1;o+=2){s=(s+(r=(r+n.getUint16(o,!0))%65535))%65535}if(t){s=(s+(r=(r+n.getUint8(i-1))%65535))%65535}var[a,c]=vw.unpack_from(">HH",e,i);if(c%=65535,r!=(a%=65535)||s!=c)throw'ValueError("fletcher32 checksum invalid")'}(e),e.slice(0,-4)}]]),Yb=class{constructor(e,t){this.fh=e,this.offset=t,this.depth=null}async init(){this.all_nodes=new Map,await this._read_root_node(),await this._read_children()}async _read_children(){let e=this.depth;for(;e>0;){for(var t of this.all_nodes.get(e))for(var i of t.get("addresses"))this._add_node(await this._read_node(i,e-1));e--}}async _read_root_node(){let e=await this._read_node(this.offset,null);this._add_node(e),this.depth=e.get("node_level")}_add_node(e){let t=e.get("node_level");this.all_nodes.has(t)?this.all_nodes.get(t).push(e):this.all_nodes.set(t,[e])}async _read_node(e,t){let i=await this._read_node_header(e,t);return i.set("keys",[]),i.set("addresses",[]),i}async _read_node_header(e){throw"NotImplementedError: must define _read_node_header in implementation class"}},Xb=class extends Yb{constructor(){super(...arguments),uw(this,"B_LINK_NODE",new Map([["signature","4s"],["node_type","B"],["node_level","B"],["entries_used","H"],["left_sibling","Q"],["right_sibling","Q"]]))}async _read_node_header(e,t){let i=await fw(this.B_LINK_NODE,this.fh,e);if(null!=t&&i.get("node_level")!=t)throw"node level does not match";return i}},Zb=class extends Xb{constructor(e,t){super(e,t),uw(this,"NODE_TYPE",0),this.ready=this.init()}async _read_node(e,t){let i=await this._read_node_header(e,t);e+=mw(this.B_LINK_NODE);let n=[],r=[],s=i.get("entries_used");for(var o=0;o<s;o++){let t=(await vw.unpack_from_async("<Q",this.fh,e))[0];e+=8;let i=(await vw.unpack_from_async("<Q",this.fh,e))[0];e+=8,n.push(t),r.push(i)}return n.push((await vw.unpack_from_async("<Q",this.fh,e))[0]),i.set("keys",n),i.set("addresses",r),i}symbol_table_addresses(){var e=[],t=this.all_nodes.get(0);for(var i of t)e=e.concat(i.get("addresses"));return e}},Jb=class extends Xb{constructor(e,t,i){super(e,t),uw(this,"NODE_TYPE",1),this.dims=i,this.ready=this.init()}async _read_node(e,t){let i=await this._read_node_header(e,t);e+=mw(this.B_LINK_NODE);var n=[],r=[];let s=i.get("entries_used");for(var o=0;o<s;o++){let[t,i]=await vw.unpack_from_async("<II",this.fh,e);e+=8;let s="<"+this.dims.toFixed()+"Q",o=vw.calcsize(s),a=await vw.unpack_from_async(s,this.fh,e);e+=o;let c=(await vw.unpack_from_async("<Q",this.fh,e))[0];e+=8,n.push(new Map([["chunk_size",t],["filter_mask",i],["chunk_offset",a]])),r.push(c)}return i.set("keys",n),i.set("addresses",r),i}async construct_data_from_chunks(e,t,i,n){var r,s,o;if(i instanceof Array){let e=i[0];if("REFERENCE"==e){if(8!=i[1])throw"NotImplementedError('Unsupported Reference type')";i="<u8",r="getUint64",s=!1,o=8}else{if("VLEN_STRING"!=e&&"VLEN_SEQUENCE"!=e)throw"NotImplementedError('datatype not implemented')";r="getVLENStruct",s=!1,o=16}}else[r,s,o]=Fw(i);var a=t.reduce((function(e,t){return e*t}),1),c=e.reduce((function(e,t){return e*t}),1);let l=t.length;var h=1;e.slice().map((function(e){let t=h;return h*=e,t}));h=1;var d=t.slice().reverse().map((function(e){let t=h;return h*=e,t})).reverse(),u=new Array(a);let f=c*o;for(var p of this.all_nodes.get(0)){let i=p.get("keys"),a=p.get("addresses"),h=i.length;for(var g=0;g<h;g++){let h=i[g],p=a[g];var m;if(null==n)m=await this.fh.slice(p,p+f);else{m=await this.fh.slice(p,p+h.get("chunk_size"));let e=h.get("filter_mask");m=this._filter_chunk(m,e,n,o)}for(var w=h.get("chunk_offset").slice(),b=w.slice(),F=b.map((function(){return 0})),v=new yw(m),y=0;y<c;y++){for(var A=l-1;A>=0&&F[A]>=e[A];A--)F[A]=0,b[A]=w[A],A>0&&(F[A-1]+=1,b[A-1]+=1);if(b.slice(0,-1).every((function(e,i){return e<t[i]}))){let e=y*o,t=v[r](e,!s,o),i=b.slice(0,-1).reduce((function(e,t,i){return t*d[i]+e}),0);u[i]=t}F[l-1]+=1,b[l-1]+=1}}}return u}_filter_chunk(e,t,i,n){let r=i.length,s=e.slice();for(var o=r-1;o>=0;o--){if(t&1<<o)continue;let e=i[o],r=e.get("filter_id"),a=e.get("client_data");if(!Kb.has(r))throw'NotImplementedError("Filter with id:'+r.toFixed()+' not supported")';s=Kb.get(r)(s,n,a)}return s}},eF=class extends Yb{constructor(e,t){super(e,t),uw(this,"B_TREE_HEADER",new Map([["signature","4s"],["version","B"],["node_type","B"],["node_size","I"],["record_size","H"],["depth","H"],["split_percent","B"],["merge_percent","B"],["root_address","Q"],["root_nrecords","H"],["total_nrecords","Q"]])),uw(this,"B_LINK_NODE",new Map([["signature","4s"],["version","B"],["node_type","B"]])),this.ready=this.init()}async _read_root_node(){let e=await this._read_tree_header(this.offset);this.address_formats=this._calculate_address_formats(e),this.header=e,this.depth=e.get("depth");let t=[e.get("root_address"),e.get("root_nrecords"),e.get("total_nrecords")],i=await this._read_node(t,this.depth);this._add_node(i)}async _read_tree_header(e){return await fw(this.B_TREE_HEADER,this.fh,this.offset)}_calculate_address_formats(e){let t=e.get("node_size"),i=e.get("record_size"),n=0,r=0,s=new Map,o=e.get("depth");for(var a=0;a<=o;a++){let e,c,l,h="",d="",u="";if(0==a?(e=0,c=0,l=0):1==a?(e=8,h="<Q",c=this._required_bytes(n),d=this._int_format(c),l=0):(e=8,h="<Q",c=this._required_bytes(n),d=this._int_format(c),l=this._required_bytes(r),u=this._int_format(l)),s.set(a,[e,c,l,h,d,u]),a<o){let s=e+c+l;n=this._nrecords_max(t,i,s),r>0?r*=n:r=n}}return s}_nrecords_max(e,t,i){return Math.floor((e-10-i)/(t+i))}_required_bytes(e){return Math.ceil(Aw(e)/8)}_int_format(e){return["<B","<H","<I","<Q"][e-1]}async _read_node(e,t){let[i,n,r]=e,s=this._read_node_header(i,t);i+=mw(this.B_LINK_NODE);let o=this.header.get("record_size"),a=[];for(let e=0;e<n;e++){let e=await this._parse_record(this.fh,i,o);i+=o,a.push(e)}let c=[],l=this.address_formats.get(t);if(0!=t){let[e,t,r,s,o,a]=l;for(let l=0;l<=n;l++){let n=(await vw.unpack_from_async(s,this.fh,i))[0];i+=e;let l=(await vw.unpack_from_async(o,this.fh,i))[0];i+=t;let h=l;r>0&&(h=(await vw.unpack_from_async(a,this.fh,i))[0],i+=r),c.push([n,l,h])}}return s.set("keys",a),s.set("addresses",c),s}async _read_node_header(e,t){let i=await fw(this.B_LINK_NODE,this.fh,e);return i.set("node_level",t),i}*iter_records(){for(let e of this.all_nodes.values())for(let t of e)for(let e of t.get("keys"))yield e}_parse_record(e){throw"NotImplementedError"}},tF=class extends eF{constructor(){super(...arguments),uw(this,"NODE_TYPE",5)}async _parse_record(e,t,i){let n=(await vw.unpack_from_async("<I",e,t))[0];t+=4;const r=await e.slice(t,t+7);return new Map([["namehash",n],["heapid",r]])}},iF=class extends eF{constructor(){super(...arguments),uw(this,"NODE_TYPE",6)}async _parse_record(e,t,i){let n=(await vw.unpack_from_async("<Q",e,t))[0];t+=8;const r=await e.slice(t,t+7);return new Map([["creationorder",n],["heapid",r]])}},nF=class{constructor(e,t){this.ready=this.init(e,t)}async init(e,t){let i=await vw.unpack_from_async("<B",e,t+8);var n;if(0==i)n=await fw(hF,e,t),this._end_of_sblock=t+dF;else{if(2!=i&&3!=i)throw"unsupported superblock version: "+i.toFixed();n=await fw(uF,e,t),this._end_of_sblock=t+fF}if(n.get("format_signature")!=cF)throw"Incorrect file signature: "+n.get("format_signature");if(8!=n.get("offset_size")||8!=n.get("length_size"))throw"File uses non-64-bit addressing";this.version=n.get("superblock_version"),this._contents=n,this._root_symbol_table=null,this._fh=e}async get_offset_to_dataobjects(){if(0==this.version){var e=new sF(this._fh,this._end_of_sblock,!0);return await e.ready,this._root_symbol_table=e,e.group_offset}if(2==this.version||3==this.version)return this._contents.get("root_group_address");throw"Not implemented version = "+this.version.toFixed()}},rF=class{constructor(e,t){this.ready=this.init(e,t)}async init(e,t){let i=await fw(bF,e,t);gw("HEAP"==i.get("signature")),gw(0==i.get("version"));let n=i.get("address_of_data_segment"),r=await e.slice(n,n+i.get("data_segment_size"));i.set("heap_data",r),this._contents=i,this.data=r}get_object_name(e){let t=new Uint8Array(this.data).indexOf(0,e)-e;return vw.unpack_from("<"+t.toFixed()+"s",this.data,e)[0]}},sF=class{constructor(e,t,i=!1){this.ready=this.init(e,t,i)}async init(e,t,i){var n;if(i)n=new Map([["symbols",1]]);else{if("SNOD"!=(n=await fw(mF,e,t)).get("signature"))throw"incorrect node type";t+=wF}for(var r=[],s=n.get("symbols"),o=0;o<s;o++)r.push(await fw(pF,e,t)),t+=gF;return i&&(this.group_offset=r[0].get("object_header_address")),this.entries=r,this._contents=n,this}assign_name(e){this.entries.forEach((function(t){let i=t.get("link_name_offset"),n=e.get_object_name(i);t.set("link_name",n)}))}get_links(e){var t={};return this.entries.forEach((function(i){let n=i.get("cache_type"),r=i.get("link_name");if(0==n||1==n)t[r]=i.get("object_header_address");else if(2==n){let n=i.get("scratch"),o=new ArrayBuffer(4),a=new Uint8Array(o);for(var s=0;s<4;s++)a[s]=n.charCodeAt(s);let c=vw.unpack_from("<I",o,0)[0];t[r]=e.get_object_name(c)}})),t}},oF=class{constructor(e,t){this.ready=this.init(e,t)}async init(e,t){let i=await fw(FF,e,t);t+=vF;let n=i.get("collection_size")-vF,r=await e.slice(t,t+n);this.heap_data=r,this._header=i,this._objects=null}get objects(){if(null==this._objects){this._objects=new Map;for(var e=0;e<=this.heap_data.byteLength-AF;){let t=pw(yF,this.heap_data,e);if(0==t.get("object_index"))break;e+=AF;let i=this.heap_data.slice(e,e+t.get("object_size"));this._objects.set(t.get("object_index"),i),e+=ww(t.get("object_size"))}}return this._objects}},aF=class{constructor(e,t){this.fh=e,this.ready=this.init(t)}async init(e){let t=await fw(CF,this.fh,e);if(e+=mw(CF),gw("FRHP"==t.get("signature")),gw(0==t.get("version")),t.get("filter_info_size")>0)throw"Filter info size not supported on FractalHeap";if(t.get("btree_address_huge_objects")!=lF)throw"Huge objects not implemented in FractalHeap";t.set("btree_address_huge_objects",null),t.get("root_block_address")==lF&&t.set("root_block_address",null);let i=t.get("log2_maximum_heap_size"),n=this._min_size_nbits(i),r=new Map([["signature","4s"],["version","B"],["heap_header_adddress","Q"],["block_offset",`${n}B`]]);this.indirect_block_header=new Map(r),this.indirect_block_header_size=mw(r),2&~t.get("flags")||r.set("checksum","I"),this.direct_block_header=r,this.direct_block_header_size=mw(r);let s=t.get("maximum_direct_block_size");this._managed_object_offset_size=this._min_size_nbits(i);let o=Math.min(s,t.get("max_managed_object_size"));this._managed_object_length_size=this._min_size_integer(o);let a=t.get("starting_block_size"),c=t.get("table_width");if(!(a>0))throw"Starting block size == 0 not implemented";let l=Number(Math.floor(Math.log2(s)));gw(1n<<BigInt(l)==s);let h=Number(Math.floor(Math.log2(a)));gw(1n<<BigInt(h)==a),this._max_direct_nrows=l-h+2;let d=Math.floor(Math.log2(c));gw(1<<d==c),this._indirect_nrows_sub=d+h-1,this.header=t,this.nobjects=t.get("managed_object_count")+t.get("huge_object_count")+t.get("tiny_object_count");let u=[],f=t.get("root_block_address"),p=0;if(null!=f&&(p=t.get("indirect_current_rows_count")),p>0)for await(let e of this._iter_indirect_block(this.fh,f,p))u.push(e);else{let e=await this._read_direct_block(this.fh,f,a);u.push(e)}let g=u.reduce(((e,t)=>e+t.byteLength),0),m=new Uint8Array(g),w=0;u.forEach((e=>{m.set(new Uint8Array(e),w),w+=e.byteLength})),this.managed=m.buffer}async _read_direct_block(e,t,i){let n=await e.slice(t,t+i);return gw("FHDB"==pw(this.direct_block_header,n).get("signature")),n}get_data(e){let t=vw.unpack_from("<B",e,0)[0],i=t>>4&3,n=1;if(0==i){gw(0==t>>6);let i=this._managed_object_offset_size,r=Cw(i,e,n);n+=i,i=this._managed_object_length_size;let s=Cw(i,e,n);return this.managed.slice(r,r+s)}throw 1==i?"tiny objectID not supported in FractalHeap":2==i?"huge objectID not supported in FractalHeap":"unknown objectID type in FractalHeap"}_min_size_integer(e){return this._min_size_nbits(Aw(e))}_min_size_nbits(e){return Math.ceil(e/8)}async*_iter_indirect_block(e,t,i){let n=await fw(this.indirect_block_header,e,t);t+=this.indirect_block_header_size,gw("FHIB"==n.get("signature"));let r=n.get("block_offset").reduce(((e,t,i)=>e+(t<<8*i)),0);n.set("block_offset",r);let[s,o]=this._indirect_info(i),a=[];for(let i=0;i<s;i++){let n=(await vw.unpack_from_async("<Q",e,t))[0];if(t+=8,n==lF)break;let r=this._calc_block_size(i);a.push([n,r])}let c=[];for(let i=s;i<s+o;i++){let n=(await vw.unpack_from_async("<Q",e,t))[0];if(t+=8,n==lF)break;let r=this._calc_block_size(i),s=this._iblock_nrows_from_block_size(r);c.push([n,s])}for(let[t,i]of a){let n=await this._read_direct_block(e,t,i);yield n}for(let[t,i]of c)for await(let n of this._iter_indirect_block(e,t,i))yield n}_calc_block_size(e){let t=Math.floor(e/this.header.get("table_width"));return 2**Math.max(t-1,0)*this.header.get("starting_block_size")}_iblock_nrows_from_block_size(e){let t=Math.floor(Math.log2(e));return gw(2**t==e),t-this._indirect_nrows_sub}_indirect_info(e){let t,i,n=this.header.get("table_width"),r=e*n,s=this._max_direct_nrows*n;return e<=s?(t=r,i=0):(t=s,i=r-s),[t,i]}_int_format(e){return["B","H","I","Q"][e-1]}},cF=vw.unpack_from("8s",new Uint8Array([137,72,68,70,13,10,26,10]).buffer)[0],lF=vw.unpack_from("<Q",new Uint8Array([255,255,255,255,255,255,255,255]).buffer)[0],hF=new Map([["format_signature","8s"],["superblock_version","B"],["free_storage_version","B"],["root_group_version","B"],["reserved_0","B"],["shared_header_version","B"],["offset_size","B"],["length_size","B"],["reserved_1","B"],["group_leaf_node_k","H"],["group_internal_node_k","H"],["file_consistency_flags","L"],["base_address_lower","Q"],["free_space_address","Q"],["end_of_file_address","Q"],["driver_information_address","Q"]]),dF=mw(hF),uF=new Map([["format_signature","8s"],["superblock_version","B"],["offset_size","B"],["length_size","B"],["file_consistency_flags","B"],["base_address","Q"],["superblock_extension_address","Q"],["end_of_file_address","Q"],["root_group_address","Q"],["superblock_checksum","I"]]),fF=mw(uF),pF=new Map([["link_name_offset","Q"],["object_header_address","Q"],["cache_type","I"],["reserved","I"],["scratch","16s"]]),gF=mw(pF),mF=new Map([["signature","4s"],["version","B"],["reserved_0","B"],["symbols","H"]]),wF=mw(mF),bF=new Map([["signature","4s"],["version","B"],["reserved","3s"],["data_segment_size","Q"],["offset_to_free_list","Q"],["address_of_data_segment","Q"]]),FF=new Map([["signature","4s"],["version","B"],["reserved","3s"],["collection_size","Q"]]),vF=mw(FF),yF=new Map([["object_index","H"],["reference_count","H"],["reserved","I"],["object_size","Q"]]),AF=mw(yF),CF=new Map([["signature","4s"],["version","B"],["object_index_size","H"],["filter_info_size","H"],["flags","B"],["max_managed_object_size","I"],["next_huge_object_index","Q"],["btree_address_huge_objects","Q"],["managed_freespace_size","Q"],["freespace_manager_address","Q"],["managed_space_size","Q"],["managed_alloc_size","Q"],["next_directblock_iterator_address","Q"],["managed_object_count","Q"],["huge_objects_total_size","Q"],["huge_object_count","Q"],["tiny_objects_total_size","Q"],["tiny_object_count","Q"],["table_width","H"],["starting_block_size","Q"],["maximum_direct_block_size","Q"],["log2_maximum_heap_size","H"],["indirect_starting_rows_count","H"],["root_block_address","Q"],["indirect_current_rows_count","H"]]),_F=class{constructor(e,t){this.ready=this.init(e,t)}async init(e,t){let i=(await vw.unpack_from_async("<B",e,t))[0];if(1==i)var[n,r,s]=await this._parse_v1_objects(e,t);else{if(i!="O".charCodeAt(0))throw"InvalidHDF5File('unknown Data Object Header')";var[n,r,s]=await this._parse_v2_objects(e,t)}this.fh=e,this.msgs=n,this.msg_data=r,this.offset=t,this._global_heaps={},this._header=s,this._filter_pipeline=null,this._chunk_params_set=!1,this._chunks=null,this._chunk_dims=null,this._chunk_address=null}get dtype(){let e=this.find_msg_type(ZF)[0].get("offset_to_message");return new _w(this.fh,e).dtype}get chunks(){return this._get_chunk_params().then((()=>this._chunks))}get shape(){let e=this.find_msg_type(YF)[0].get("offset_to_message");return async function(e,t){let i=(await vw.unpack_from_async("<B",e,t))[0];var n;if(1==i)gw(1==(n=await fw(RF,e,t)).get("version")),t+=DF;else{if(2!=i)throw"InvalidHDF5File('unknown dataspace message version')";gw(2==(n=await fw(TF,e,t)).get("version")),t+=LF}let r=n.get("dimensionality");return(await vw.unpack_from_async("<"+(2*r).toFixed()+"I",e,t)).filter((function(e,t){return t%2==0}))}(this.fh,e)}async get_filter_pipeline(){if(null!=this._filter_pipeline)return this._filter_pipeline;let e=this.find_msg_type(iv);if(!e.length)return this._filter_pipeline=null,this._filter_pipeline;var t=e[0].get("offset_to_message");let[i,n]=await vw.unpack_from_async("<BB",this.fh,t);t+=vw.calcsize("<BB");var r=[];if(1==i){await vw.unpack_from_async("<HI",this.fh,t),t+=vw.calcsize("<HI");for(var s=0;s<n;s++){let e=await fw($F,this.fh,t);t+=KF;let i=ww(e.get("name_length"),8),n="<"+i.toFixed()+"s",s=(await vw.unpack_from_async(n,this.fh,t))[0];e.set("filter_name",s),t+=i,n="<"+e.get("client_data_values").toFixed()+"I";let o=await vw.unpack_from_async(n,this.fh,t);e.set("client_data",o),t+=4*e.get("client_data_values"),e.get("client_data_values")%2&&(t+=4),r.push(e)}}else{if(2!=i)throw`version ${i} is not supported`;for(let e=0;e<n;e++){let e=new Map,i=this.fh,n=(await vw.unpack_from_async("<H",i,t))[0];t+=2,e.set("filter_id",n);let s=0;n>255&&(s=(await vw.unpack_from_async("<H",i,t))[0],t+=2);let o=(await vw.unpack_from_async("<H",i,t))[0];t+=2;let a=(1&o)>0;e.set("optional",a);let c,l=(await vw.unpack_from_async("<H",i,t))[0];t+=2,s>0&&(c=(await vw.unpack_from_async(`${s}s`,i,t))[0],t+=s),e.set("name",c);let h=await vw.unpack_from_async(`<${l}i`,i,t);t+=4*l,e.set("client_data_values",h),r.push(e)}}return this._filter_pipeline=r,this._filter_pipeline}find_msg_type(e){return this.msgs.filter((function(t){return t.get("type")==e}))}async get_attributes(){let e={},t=this.find_msg_type(nv);for(let i of t){let t=i.get("offset_to_message"),[n,r]=await this.unpack_attribute(t);e[n]=r}return e}async get_fillvalue(){var e,t=this.find_msg_type(JF)[0].get("offset_to_message");let i=(await vw.unpack_from_async("<B",this.fh,t))[0];var n,r,s;if(1==i||2==i)n=await fw(VF,this.fh,t),t+=jF,e=n.get("fillvalue_defined");else{if(3!=i)throw'InvalidHDF5File("Unknown fillvalue msg version: "'+String(i);n=await fw(WF,this.fh,t),t+=GF,e=32&n.get("flags")}if(e?(r=(await vw.unpack_from_async("<I",this.fh,t))[0],t+=4):r=0,r){let[e,i,n]=Fw(await this.dtype);s=new yw(await this.fh.slice(t,t+n))[e](t,!i,n)}else s=0;return s}async unpack_attribute(e){let t=(await vw.unpack_from_async("<B",this.fh,e))[0];var i,n;if(1==t)gw(1==(i=await fw(IF,this.fh,e)).get("version")),e+=SF,n=8;else{if(3!=t)throw"unsupported attribute message version: "+t;gw(3==(i=await fw(EF,this.fh,e)).get("version")),e+=NF,n=1}let r=i.get("name_size"),s=(await vw.unpack_from_async("<"+r.toFixed()+"s",this.fh,e))[0];var o;s=s.replace(/\x00$/,""),e+=ww(r,n);try{o=await new _w(this.fh,e).dtype}catch(e){return console.warn("Attribute "+s+" type not implemented, set to null."),[s,null]}e+=ww(i.get("datatype_size"),n);let a=await this.determine_data_shape(this.fh,e),c=a.reduce((function(e,t){return e*t}),1);if(e+=ww(i.get("dataspace_size"),n),5===o.datatype_class)l=await this.fh.slice(e,e+o.size);else{var l=await this._attr_value(o,this.fh,c,e);0==a.length&&(l=l[0])}return[s,l]}async determine_data_shape(e,t){let i=(await vw.unpack_from_async("<B",e,t))[0];var n;if(1==i)gw(1==(n=await fw(RF,e,t)).get("version")),t+=DF;else{if(2!=i)throw"unknown dataspace message version";gw(2==(n=await fw(TF,e,t)).get("version")),t+=LF}let r=n.get("dimensionality");return await vw.unpack_from_async("<"+r.toFixed()+"Q",e,t)}async _attr_value(e,t,i,n){var r=new Array(i);if(e instanceof Array){let l=e[0];for(var s=0;s<i;s++)if("VLEN_STRING"==l){let i=e[2];var[o,a]=await this._vlen_size_and_data(t,n);const c=new TextDecoder(0==i?"ascii":"utf-8");r[s]=c.decode(a),n+=16}else if("REFERENCE"==l){var c=await vw.unpack_from_async("<Q",t,n);r[s]=c,n+=8}else{if("VLEN_SEQUENCE"!=l)throw"NotImplementedError";{let i=e[1];var[o,a]=this._vlen_size_and_data(t,n);r[s]=this._attr_value(i,a,o,0),n+=16}}}else{let[o,a,c]=Fw(e);const l=await t.slice(n,n+i*c);let h=new yw(l,0),d=0;for(s=0;s<i;s++)r[s]=h[o](d,!a,c),d+=c}return r}async _vlen_size_and_data(e,t){let i=(await vw.unpack_from_async("<I",e,t))[0],n=await fw(kF,e,t+4),r=n.get("collection_address");var s;return gw(n.get("collection_address")<Number.MAX_SAFE_INTEGER),r in this._global_heaps||(s=new oF(this.fh,r),await s.ready,this._global_heaps[r]=s),[i,(s=this._global_heaps[r]).objects.get(n.get("object_index"))]}async _parse_v1_objects(e,t){let i=await fw(BF,e,t);gw(1==i.get("version"));let n=i.get("total_header_messages");for(var r=i.get("object_header_size"),s=t+mw(BF),o=await e.slice(s,s+r),a=[[s,r]],c=0,l=0,h=new Array(n),d=0;d<n;d++){l>=r&&([s,r]=a[++c],l=0);let t=await fw(zF,e,s+l),i=s+l+HF;if(t.set("offset_to_message",i),t.get("type")==rv){var[u,f]=await vw.unpack_from_async("<QQ",e,i);a.push([u,f])}l+=HF+t.get("size"),h[d]=t}return[h,o,i]}async _parse_v2_objects(e,t){var[i,n,r]=await this._parse_v2_header(e,t);t=r;for(var s=[],o=i.get("size_of_chunk_0"),a=e.slice(t,t+=o),c=[[r,o]],l=0,h=0;;){if(h>=o-OF){let e=c[++l];if(null==e)break;[r,o]=e,h=0}let t=await fw(PF,e,r+h),i=r+h+OF+n;if(t.set("offset_to_message",i),t.get("type")==rv){var[d,u]=await vw.unpack_from_async("<QQ",e,i);c.push([d+4,u-4])}h+=OF+t.get("size")+n,s.push(t)}return[s,a,i]}async _parse_v2_header(e,t){let i=await fw(MF,e,t);var n;if(t+=mw(MF),gw(2==i.get("version")),n=4&i.get("flags")?2:0,gw(!(16&i.get("flags"))),32&i.get("flags")){let n=await vw.unpack_from_async("<4I",e,t);t+=16,i.set("access_time",n[0]),i.set("modification_time",n[1]),i.set("change_time",n[2]),i.set("birth_time",n[3])}let r=["<B","<H","<I","<Q"][3&i.get("flags")];return i.set("size_of_chunk_0",(await vw.unpack_from_async(r,e,t))[0]),[i,n,t+=vw.calcsize(r)]}async find_link(e){if(this._links){for(link of this._links)if(e===link[0])return link}else{const t=[];for await(const i of this.iter_links()){if(e===i[0])return i;t.push(i)}this._links=t}}async get_links(){const e=[];for await(const t of this.iter_links())e.push(t);return Object.fromEntries(e)}async*iter_links(){for(let e of this.msgs)e.get("type")==sv?yield*this._iter_links_from_symbol_tables(e):e.get("type")==ev?yield this._get_link_from_link_msg(e):e.get("type")==XF&&(yield*this._iter_link_from_link_info_msg(e))}async*_iter_links_from_symbol_tables(e){gw(16==e.get("size"));let t=await fw(UF,this.fh,e.get("offset_to_message"));yield*this._iter_links_btree_v1(t.get("btree_address"),t.get("heap_address"))}async*_iter_links_btree_v1(e,t){let i=new Zb(this.fh,e);await i.ready;let n=new rF(this.fh,t);await n.ready;for(let e of i.symbol_table_addresses()){let t=new sF(this.fh,e);await t.ready,t.assign_name(n),yield*Object.entries(t.get_links(n))}}async _get_link_from_link_msg(e){let t=e.get("offset_to_message");return await this._decode_link_msg(this.fh,t)[1]}async _decode_link_msg(e,t){let[i,n]=await vw.unpack_from_async("<BB",e,t);t+=2,gw(1==i);let r,s,o=2**(3&n),a=(16&n)>0,c=(4&n)>0;(8&n)>0?(r=(await vw.unpack_from_async("<B",e,t))[0],t+=1):r=0,gw([0,1].includes(r)),c&&(s=(await vw.unpack_from_async("<Q",e,t))[0],t+=8);let l=0;a&&(l=(await vw.unpack_from_async("<B",e,t))[0],t+=1);let h=0==l?"ascii":"utf-8",d=["<B","<H","<I","<Q"][3&n],u=(await vw.unpack_from_async(d,e,t))[0];t+=o;let f,p=new TextDecoder(h).decode(await e.slice(t,t+u));if(t+=u,0==r)f=(await vw.unpack_from_async("<Q",e,t))[0];else if(1==r){let i=(await vw.unpack_from_async("<H",e,t))[0];t+=2,f=new TextDecoder(h).decode(await e.slice(t,t+i))}return[s,[p,f]]}async*_iter_link_from_link_info_msg(e){let t=e.get("offset_to_message"),i=await this._decode_link_info_msg(this.fh,t),n=i.get("heap_address"),r=i.get("name_btree_address"),s=i.get("order_btree_address");null!=r&&(yield*this._iter_links_btree_v2(r,s,n))}async*_iter_links_btree_v2(e,t,i){let n,r=new aF(this.fh,i);await r.ready;const s=null!=t;s?(n=new iF(this.fh,t),await n.ready):(n=new tF(this.fh,e),await n.ready);let o=new Map;for(let e of n.iter_records()){let t=r.get_data(e.get("heapid")),[i,n]=await this._decode_link_msg(t,0);const a=s?i:n[0];o.set(a,n)}let a=Array.from(o.keys()).sort();for(let e of a)yield o.get(e)}async _decode_link_info_msg(e,t){let[i,n]=await vw.unpack_from_async("<BB",e,t);gw(0==i),t+=2,(1&n)>0&&(t+=8);let r=(2&n)>0?QF:qF,s=await fw(r,e,t),o=new Map;for(let[e,t]of s.entries())o.set(e,t==xF?null:t);return o}get is_dataset(){return this.find_msg_type(YF).length>0}async get_data(){let e=this.find_msg_type(tv)[0].get("offset_to_message");var[t,i,n,r]=await this._get_data_message_properties(e);if(0==n)throw"Compact storage of DataObject not implemented";return 1==n?this._get_contiguous_data(r):2==n?this._get_chunked_data(e):void 0}async _get_data_message_properties(e){let t,i,n,[r,s,o]=await vw.unpack_from_async("<BBB",this.fh,e);return 1==r||2==r?(t=s,i=o,n=e,n+=vw.calcsize("<BBB"),n+=vw.calcsize("<BI"),gw(1==i||2==i)):3!=r&&4!=r||(i=s,n=e,n+=vw.calcsize("<BB")),gw(r>=1&&r<=4),[r,t,i,n]}async _get_contiguous_data(e){let[t]=await vw.unpack_from_async("<Q",this.fh,e);const i=await this.shape,n=await this.dtype;if(t==xF){let e=i.reduce((function(e,t){return e*t}),1);return new Array(e)}var r=i.reduce((function(e,t){return e*t}),1);if(n instanceof Array){let e=n[0];if("REFERENCE"==e){if(8!=n[1])throw"NotImplementedError('Unsupported Reference type')";return await this.fh.slice(t,t+r)}if("VLEN_STRING"==e){let e=n[2];const i=new TextDecoder(0==e?"ascii":"utf-8");var s=[];for(o=0;o<r;o++){const[e,n]=await this._vlen_size_and_data(this.fh,t);s[o]=i.decode(n),t+=16}return s}throw"NotImplementedError('datatype not implemented')"}if(/[<>=!@\|]?(i|u|f|S)(\d*)/.test(n)){let[e,i,s]=Fw(n),a=new Array(r);const c=await this.fh.slice(t,t+s*r);let l=new yw(c);for(var o=0;o<r;o++)a[o]=l[e](o*s,!i,s);return a}if(5===n.datatype_class)return this.fh.slice(t,t+n.size);throw"not Implemented - no proper dtype defined"}async _get_chunked_data(e){if(await this._get_chunk_params(),this._chunk_address==xF)return[];var t=new Jb(this.fh,this._chunk_address,this._chunk_dims);await t.ready;const i=await this.dtype,n=await this.shape,r=await this.chunks,s=await this.get_filter_pipeline();let o=await t.construct_data_from_chunks(r,n,i,s);if(i instanceof Array&&/^VLEN/.test(i[0])){let e=i[0];for(var a=0;a<o.length;a++){let[t,n,r]=o[a];var c;n in this._global_heaps?c=this._global_heaps[n]:(c=new oF(this.fh,n),await c.ready,this._global_heaps[n]=c);let s=c.objects.get(r);if("VLEN_STRING"==e){let e=i[2];const t=new TextDecoder(0==e?"ascii":"utf-8");o[a]=t.decode(s)}}}return o}async _get_chunk_params(){if(!this._chunk_params_set){this._chunk_params_set=!0;var e=this.find_msg_type(tv)[0].get("offset_to_message"),[t,i,n,r]=await this._get_data_message_properties(e);if(2==n){var s;if(1==t||2==t){var o=(await vw.unpack_from_async("<Q",this.fh,r))[0];s=r+vw.calcsize("<Q")}else if(3==t){var[i,o]=await vw.unpack_from_async("<BQ",this.fh,r);s=r+vw.calcsize("<BQ")}gw(t>=1&&t<=3);var a="<"+(i-1).toFixed()+"I",c=await vw.unpack_from_async(a,this.fh,s);this._chunks=c,this._chunk_dims=i,this._chunk_address=o}}}};var xF=vw.unpack_from("<Q",new Uint8Array([255,255,255,255,255,255,255,255]).buffer),kF=new Map([["collection_address","Q"],["object_index","I"]]);mw(kF);var IF=new Map([["version","B"],["reserved","B"],["name_size","H"],["datatype_size","H"],["dataspace_size","H"]]),SF=mw(IF),EF=new Map([["version","B"],["flags","B"],["name_size","H"],["datatype_size","H"],["dataspace_size","H"],["character_set_encoding","B"]]),NF=mw(EF),BF=new Map([["version","B"],["reserved","B"],["total_header_messages","H"],["object_reference_count","I"],["object_header_size","I"],["padding","I"]]),MF=new Map([["signature","4s"],["version","B"],["flags","B"]]),RF=new Map([["version","B"],["dimensionality","B"],["flags","B"],["reserved_0","B"],["reserved_1","I"]]),DF=mw(RF),TF=new Map([["version","B"],["dimensionality","B"],["flags","B"],["type","B"]]),LF=mw(TF),zF=new Map([["type","H"],["size","H"],["flags","B"],["reserved","3s"]]),HF=mw(zF),PF=new Map([["type","B"],["size","H"],["flags","B"]]),OF=mw(PF),UF=new Map([["btree_address","Q"],["heap_address","Q"]]),qF=new Map([["heap_address","Q"],["name_btree_address","Q"]]),QF=new Map([["heap_address","Q"],["name_btree_address","Q"],["order_btree_address","Q"]]),VF=new Map([["version","B"],["space_allocation_time","B"],["fillvalue_write_time","B"],["fillvalue_defined","B"]]),jF=mw(VF),WF=new Map([["version","B"],["flags","B"]]),GF=mw(WF),$F=new Map([["filter_id","H"],["name_length","H"],["flags","H"],["client_data_values","H"]]),KF=mw($F),YF=1,XF=2,ZF=3,JF=5,ev=6,tv=8,iv=11,nv=12,rv=16,sv=17,ov=class{constructor(e,t){null==t?(this.parent=this,this.file=this):(this.parent=t,this.file=t.file),this.name=e}async init(e){const t=this.file.index;t&&this.name in t?this._links=t[this.name]:this._links=await e.get_links(),this._dataobjects=e,this._attrs=null,this._keys=null}get keys(){return null==this._keys&&(this._keys=Object.keys(this._links)),this._keys.slice()}get values(){return this.keys.map((e=>this.get(e)))}length(){return this.keys.length}_dereference(e){if(!e)throw"cannot deference null reference";let t=this.file._get_object_by_address(e);if(null==t)throw"reference not found in file";return t}async get(e){if("number"==typeof e)return this._dereference(e);var t=lv(e);if("/"==t)return this.file;if("."==t)return this;if(/^\//.test(t))return this.file.get(t.slice(1));if(""!=function(e){let t="/",i=e.lastIndexOf(t)+1,n=e.slice(0,i),r=new RegExp("^"+t+"+$"),s=new RegExp(t+"$");n&&!r.test(n)&&(n=n.replace(s,""));return n}(t))var[i,n]=t.split(/\/(.*)/);else var i=t,n=".";if(!(i in this._links))throw i+" not found in group";var r=lv(this.name+"/"+i);let s=this._links[i];if("string"==typeof s)try{return this.get(s)}catch(e){return null}var o=new _F(this.file._fh,s);if(await o.ready,o.is_dataset){if("."!=n)throw r+" is a dataset, not a group";return new cv(r,o,this)}var a=new ov(r,this);return await a.init(o),a.get(n)}visit(e){return this.visititems(((t,i)=>e(t)))}visititems(e){var t=this.name.length;/\/$/.test(this.name)||(t+=1);for(var i=this.values.slice();i;){let n=i.shift();1==i.length&&console.log(n);let r=e(n.name.slice(t),n);if(null!=r)return r;n instanceof ov&&(i=i.concat(n.values))}return null}get attrs(){return null==this._attrs&&(this._attrs=this._dataobjects.get_attributes()),this._attrs}},av=class extends ov{constructor(e,t,i){super("/",null),this.ready=this.init(e,t,i)}async init(e,t,i){var n=new nF(e,0);await n.ready;var r=await n.get_offset_to_dataobjects(),s=new _F(e,r);if(await s.ready,this.parent=this,this.file=this,this.name="/",this._dataobjects=s,this._attrs=null,this._keys=null,this._fh=e,this.filename=t||"",this.mode="r",this.userblock_size=0,i&&i.index)this.index=i.index;else{let t;if(i&&i.indexOffset)t=i.indexOffset;else{const e=await this.attrs;if(e.hasOwnProperty("_index_offset"))t=e._index_offset;else{const e=this.indexName||"_index",i=await s.find_link(e);i&&(t=i[1])}}if(t)try{const i=new _F(e,t);await i.ready;const n=await i.get_data(),r=$b(n),s=(new TextDecoder).decode(r);this.index=JSON.parse(s)}catch(e){console.error(`Error loading index by offset ${e}`)}}this.index&&this.name in this.index?this._links=this.index[this.name]:this._links=await s.get_links()}_get_object_by_address(e){return this._dataobjects.offset==e?this:this.visititems((e=>{e._dataobjects.offset}))}},cv=class extends Array{constructor(e,t,i){super(),this.parent=i,this.file=i.file,this.name=e,this._dataobjects=t,this._attrs=null,this._astype=null}get value(){var e=this._dataobjects.get_data();return null==this._astype?this.getValue(e):e.astype(this._astype)}get shape(){return this._dataobjects.shape}get attrs(){return this._dataobjects.get_attributes()}get dtype(){return this._dataobjects.dtype}get fillvalue(){return this._dataobjects.get_fillvalue()}async to_array(){return function(e,t){const i=e.length,n=t.reduce(((e,t)=>e*t),1);i!==n&&console.warn(`shape product: ${n} does not match length of flattened array: ${i}`);let r=e;const s=t.slice(1).reverse();for(let e of s){const t=[],{length:i}=r;let n=0;for(;n<i;)t.push(r.slice(n,n+=e));r=t}return r}
/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */(await this.value,await this.shape)}async getValue(e){const t=await this.dtype;return("string"==typeof t||t instanceof String)&&t.startsWith("S")?(await e).map((e=>{let t=e.indexOf("\0");return t>=0?e.substring(0,t):e})):e}};function lv(e){return e.replace(/\/(\/)+/g,"/")}async function hv(e){var t;e.url&&("function"==typeof(t=e.url).slice&&"function"==typeof t.arrayBuffer)&&(e.file=e.url,e.url=void 0);const i=void 0!==e.url;let n=e.reader?e.reader:function(e){if(e.url)return new aw(e);if(e.path)return new NodeLocalFile(e);if(e.file)return new hw(e.file);throw Error("One of 'url', 'path (node only)', or 'file (browser only)' must be specified")}(e);const r=e.fetchSize||2e3,s=e.maxSize||2e5;i&&(n=new cw({file:n,fetchSize:r,maxSize:s}));const o=new dv(n),a=await async function(e){let t;if(e.indexReader)t=e.indexReader;else{if(e.index)return e.index;e.indexURL?t=new aw({url:e.indexURL}):e.indexPath?t=new NodeLocalFile({path:e.indexPath}):e.indexFile&&(t=new hw({file:e.indexFile}))}if(t){const e=await t.read(),i=(new TextDecoder).decode(e);return JSON.parse(i)}return}(e),c=e.indexOffset,l=function(e){if(e.url)return uv(e.url);if(e.path)return uv(e.path);if(e.file)return e.file.name}(e),h=new av(o,l,{index:a,indexOffset:c});return await h.ready,h}class dv{constructor(e){this.fileReader=e}async slice(e,t){return this.fileReader.read(e,t-e)}}function uv(e){const t=e.lastIndexOf("/");return t>0?e.substring(t+1):e}class fv{constructor(e,t){this.chrom=e,this.signal_bin_size=t;this.signals={raw_RD:`his_rd_p_${this.chrom}_${this.signal_bin_size}`,gc_RD:`his_rd_p_${this.chrom}_${this.signal_bin_size}_GC`,gc_partition:`his_rd_p_${this.chrom}_${this.signal_bin_size}_partition_GC_merge`,baf:`snp_likelihood_${this.chrom}_${this.signal_bin_size}_mask`,baf_i1:`snp_i1_${this.chrom}_${this.signal_bin_size}_mask`,Mosaic_segments:`his_rd_p_${this.chrom}_${this.signal_bin_size}_partition_GC_mosaic_segments_2d`,Mosaic_calls:`his_rd_p_${this.chrom}_${this.signal_bin_size}_partition_GC_mosaic_call_2d`}}}class pv{constructor(e,t=1e5){this.h5_file=e,this.bin_size=t,this.h5_obj=void 0}async fetch(){return this.h5_obj||(this.h5_obj=await hv({url:this.h5_file,fetchSize:1e6,maxSize:2e8})),this.h5_obj}async get_keys(){return(await this.fetch()).keys}async get_rd_signal(e=this.bin_size){let t=await this.fetch();this.h5_obj=t,this.pytor_keys=t.keys;let i=new gv(this.pytor_keys),n=i.get_rd_bins(),r=i.get_snp_bins();this.available_bins=[...new Set(n,r)],this.available_bins.includes(e)||(e=this.available_bins.at(-1));const s=await t.get("rd_chromosomes");await s.dtype;let o=await s.value,a=await this.rd_stat(e);var c=[],l=[],h=[],d=[],u=[],f=[];for(let t of o){let i=new fv(t,e);var p=i.signals.raw_RD;let n=await this.get_chr_signal(t,e,p,a);c=c.concat(n);var g=i.signals.gc_RD;let r=await this.get_chr_signal(t,e,g,a);l=l.concat(r);let s=i.signals.gc_partition,o=await this.get_chr_signal(t,e,s,a);h=h.concat(o);let m=await this.rd_call_combined(t,e,a,i);d=d.concat(m);let w=i.signals.baf_i1,b=await this.get_baf_signals_v2(t,e,w);u=u.concat(b[0]),f=f.concat(b[1])}this.callers=[],0!=d.length&&this.callers.push("ReadDepth"),0!=d.length&&this.callers.push("2D");var m={},w={RD_Raw:c,RD_Raw_gc_coor:l,ReadDepth:h,"2D":d,BAF1:u,BAF2:f};return m[e]=w,m}decode_segments(e){let t=[],i=[];for(let n of e)4294967295==n?(t.push(i),i=[]):i.push(n);return t}async rd_call_combined(e,t,i,n){let r,s=[],o=n.signals.Mosaic_segments;if(this.pytor_keys.includes(o)){const e=await this.h5_obj.get(o);let t=await e.value;r=this.decode_segments(t)}let a=n.signals.Mosaic_calls;if(this.pytor_keys.includes(a)){const n=await this.h5_obj.get(a);let o=await n.to_array();r.forEach(((n,r)=>{n.forEach(((n,a)=>{s.push({chr:e,start:n*t,end:(n+1)*t,value:o[0][r]/i[4]*2})}))}))}return s}async rd_stat(e){let t,i=`rd_stat_${e}_auto`;if(this.pytor_keys.includes(i)){const e=await this.h5_obj.get(i);t=await e.value}return t}async get_chr_signal(e,t,i,n){let r=[];if(this.pytor_keys.includes(i)){const s=await this.h5_obj.get(i);(await s.value).forEach(((i,s)=>{r.push({chr:e,start:s*t,end:(s+1)*t,value:i/n[4]*2})}))}return r}async get_baf_signals(e,t,i,n=-1){let r=[],s=[];if(this.pytor_keys.includes(i)){let o=await this.h5_obj.get(i);(await o.to_array()).forEach(((i,o)=>{let a=Math.max(...i);const c=i.indexOf(a);let l=Math.max(c/200,1-c/200);r.push({chr:e,start:o*t,end:(o+1)*t,value:n*l}),.5!=l&&s.push({chr:e,start:o*t,end:(o+1)*t,value:n*(1-l)})}))}return[r,s]}async get_baf_signals_v2(e,t,i,n=-1){let r=[],s=[];if(this.pytor_keys.includes(i)){let o=await this.h5_obj.get(i);(await o.to_array()).forEach(((i,o)=>{isNaN(i)||(r.push({chr:e,start:o*t,end:(o+1)*t,value:n*(.5-i)}),.5!=i&&s.push({chr:e,start:o*t,end:(o+1)*t,value:n*(.5+i)}))}))}return[r,s]}}class gv{constructor(e){this.signals=e}get_rd_bins(){let e=[];this.signals.forEach((t=>{let i=t.match(/^his_rd_p_(.*)_(\d+)$/);i&&e.push({chr:i[1],bin_size:i[2]})}));return[...new Set(e.map((e=>Number(e.bin_size))))]}get_snp_bins(){let e=[];this.signals.forEach((t=>{let i=t.match(/^snp_likelihood_(.*)_(\d+)_mask$/);i&&e.push({chr:i[1],bin_size:i[2]})}));return[...new Set(e.map((e=>Number(e.bin_size))))]}}function mv(e){let t=function(e){if(e.length<4)return e;let t,i,n,r,s,o;return t=e.slice().sort(((e,t)=>e-t)),t.length/4%1==0?(i=.5*(t[t.length/4]+t[t.length/4+1]),n=.5*(t[t.length*(3/4)]+t[t.length*(3/4)+1])):(i=t[Math.floor(t.length/4+1)],n=t[Math.ceil(t.length*(3/4)+1)]),r=n-i,s=n+1.5*r,o=i-1.5*r,t.filter((e=>e>=o&&e<=s))}(e);const i=t.length,n=t.reduce(((e,t)=>e+t))/i,r=Math.sqrt(t.map((e=>Math.pow(e-n,2))).reduce(((e,t)=>e+t))/i);return[n,r]}var wv={range_function:function(e,t,i){return Array(Math.ceil((t-e)/i)).fill(e).map(((e,t)=>e+t*i))},getDistParams:mv,linspace:function(e,t,i){if(void 0===i&&(i=Math.max(Math.round(t-e)+1,1)),i<2)return 1===i?[e]:[];var n=Array(i);for(let r=--i;r>=0;r--)n[r]=(r*t+(i-r)*e)/i;return n},GetFit:class{constructor(e){this.allBins=e}getValues(){return Object.values(this.allBins).reduce(((e,t)=>e.concat(t.filter((e=>e.binScore>0)).map((e=>e.binScore)))),[])}getMean(e){return e.reduce((function(e,t){return e+t}))/e.length}fit_data(){return mv(this.getValues())}histogram(e,t){const i=t[1]-t[0],n=[];e.forEach(((e,r)=>{t.forEach(((t,r)=>{if(n[t]||(n[t]={count:0}),t<=e&&e<t+i)return n[t].count++,!1}))}));const r=[];return n.forEach(((e,t)=>{r.push(e.count)})),r}}};function bv(e,t){return isNaN(e)||isNaN(t)||t<=0?NaN:0===e?.5:.5+.5*(Fv(.5*t,.5,1)-Fv(.5*t,.5,t/(t+e*e)))*Math.sign(e)}function Fv(e,t,i){if(0==i)return 0;if(1==i)return 1;{let n=Cv(e+t)-Cv(e)-Cv(t)+e*Math.log(i)+t*Math.log(1-i);return i<(e+1)/(e+t+2)?Math.exp(n)*vv(e,t,i)/e:1-Math.exp(n)*vv(t,e,1-i)/t}}function vv(e,t,i,n=1e3){let r=1,s=1,o=1,a=e+t,c=e+1,l=e-1,h=1-a*i/c;for(let d=0;d<=n;d++){let n=parseFloat(d+1),u=n+n,f=n*(t-n)*i/((l+u)*(e+u)),p=r+f*s,g=h+f*o;f=-(e+n)*(a+n)*i/((c+u)*(e+u));let m=g+f*h,w=r;if(s=p/m,o=g/m,r=(p+f*r)/m,h=1,Math.abs(r-w)<3e-7*Math.abs(r))return r}}function yv(e){if(0==e||1==e)return 1;return e*yv(e-1)}function Av(e){let t;var i=[75122.633153,80916.6278952,36308.2951477,8687.24529705,1168.92649479,83.8676043424,2.50662827511],n=0,r=1;if(0==e)t=1e99;else if(e%1==0)t=yv(e-1);else{for(let t=0;t<i.length;t++)n+=i[t]*Math.pow(e,t),r*=e+t;t=n*Math.pow(e+5.5,e+.5)*Math.exp(-(e+5.5))/r}return t}function Cv(e){return Math.log(Av(e))}var _v={TdistributionCDF:bv,gamma:Av,t_test_1_sample:function(e,t,i,n){0==i&&(i=1);var r=(e-t)/i*Math.sqrt(n);return 1-bv(Math.abs(r),n-1)},t_test_2_samples:function(e,t,i,n,r,s){0==t&&(t=1),0==r&&(r=1);var o=(e-n)/Math.sqrt(t**2/i+r**2/s),a=(t**2/i+r**2/s)**2*(i-1)*(s-1)/(t**4*(s-1)/i**2+r**4*(i-1)/s**2);return 1-bv(Math.abs(o),parseInt(a+.5))}};function xv(e){return e.reduce((function(e,t){return e>t?e:t}))}function kv(e,t,i,n){return t*Math.exp(-1*(e-i)**2/(2*n**2))/Math.sqrt(2*Math.PI)/n}function Iv(e,t,i,n){return Math.exp(-1*(e-i)**2/(t**2+n**2))}function Sv(e,t){let i;try{i=e.reduce(((e,i,n)=>e+Math.min(i,t[n])))}catch{return console.log("Failed to find likelihood overlap: ",e,t),0}return i}function Ev(e,t,i,n){return 0==t&&0==n?{nl:.5*(e+i),ne:0}:{nl:(e*n*n+i*t*t)/(t*t+n*n),ne:Math.sqrt(t*t*n*n/(t*t+n*n))}}function Nv(e,t){let i=parseInt(t*(e.length-1)),n=t*(e.length-1)-i;return i<e.length-1?e[i]*(1-n)+e[i+1]*n:e[i]}function Bv(e){const t=e.length,i=Math.max(...e);let n=e.indexOf(i);n>Math.floor(t/2)&&(n=t-1-n);const r=(t/2-n)/(t+1),s=Math.floor((t/2+n)/2),o=t-1-s;let a=e.slice(s,o+1).reduce(((e,t)=>e+t),0)/e.reduce(((e,t)=>e+t),0);return n===Math.floor(t/2)&&(a=1),{mean:r,p:a}}var Mv=class{constructor(e,t){this.wigFeatures=e,this.binSize=t}get_fit(){var e=new wv.GetFit(this.wigFeatures),[t,i]=e.fit_data();return{globalMean:t,globalStd:i}}async call_2d(e=null,t=null,i="both",n=.1,r=0,s=10,o=0){let a=this.get_fit();this.globalMean=a.globalMean,this.globalStd=a.globalStd;let c=null==e?.05*this.binSize/3e9:e,l=null==t?parseInt(this.binSize/1e4):t,h=[],d=[],u=[],f=[],p=[],g=[];for(const[e,t]of Object.entries(this.wigFeatures)){let e=[],i=[],s=[];t.forEach(((t,n)=>{t.hets_count>4&&t.dp_count>l&&(e.push([n]),i.push(t.binScore),s.push(t.likelihood_score),delete t.likelihood_score)}));let o=[];for(let e=1;e<i.length;e++)o.push(Math.abs(i[e]-i[e-1]));let a=[0];for(let e=1;e<o.length;e++)a.push(Math.min(o[e-1],o[e]));a.push(0);let g=i.map(((e,t)=>Math.sqrt(Math.sqrt(e)**2+this.globalStd**2+Math.pow(a[t]/2,2)))),m=[];for(let t=0;t<e.length-1;t++){let n=0;try{n=Sv(s[t],s[t+1])}catch{console.log("Overlap failed: ",t,s[t],e[t+1],s[t+1])}let r=Iv(i[t],g[t],i[t+1],g[t+1]);m.push(r*n)}for(;m.length>0;){m=m.filter((e=>"number"==typeof e));let t=xv(m);if(isNaN(t)&&console.log("NaN value",m),t<c)break;let n,r,o=m.indexOf(t),a=Ev(i[o],g[o],i[o+1],g[o+1]);try{n=s[o].map(((e,t)=>e*s[o+1][t])),r=n.reduce(((e,t)=>e+t))}catch{console.log(s),console.log("max_overlap:",t,o,m.length),console.log("likelihood: ",o,s[o],s[o+1]),console.log("nlh: ",r)}if(i[o]=a.nl,g[o]=a.ne,s[o]=n.map((function(e){return e/r})),e[o].push(...e[o+1]),i.splice(o+1,1),g.splice(o+1,1),e.splice(o+1,1),s.splice(o+1,1),m.splice(o,1),o<m.length){let e=Iv(i[o],g[o],i[o+1],g[o+1])*Sv(s[o],s[o+1]);m[o]=e}if(o>0){let e=Iv(i[o-1],g[o-1],i[o],g[o])*Sv(s[o-1],s[o]);m[o-1]=e}}let w=-1;for(;;){m=[];for(let t=0;t<i.length;t++)for(let r=t;r<i.length;r++)e[r][0]-e[t].at(-1)<n*(e[t].length+e[r].length)&&m.push(Iv(i[t],g[t],i[r],g[r])*Sv(s[t],s[r]));if(0==m.length)break;let t=xv(m);if(t<c)break;let r=0,o=1;for(;r<e.length-1;){let a=Iv(i[r],g[r],i[o],g[o])*Sv(s[r],s[o]);if(e[o][0]-e[r].at(-1)<n*(e[r].length+e[o].length)&&a==t){let t=Ev(i[r],g[r],i[r+1],g[r+1]);i[r]=t.nl,g[r]=t.ne;let n=s[r].map(((e,t)=>e*s[r+1][t])),a=n.reduce(((e,t)=>e+t));s[r]=n.map((function(e){return e/a})),e[r].push(...e[r+1]),e[r]=e[r].sort(((e,t)=>e-t)),i.splice(o,1),g.splice(o,1),e.splice(o,1),s.splice(o,1),o>=e.length&&(r+=1,o=r+1)}else o+=1,o>=e.length&&(r+=1,o=r+1)}if(w==e.length)break;w=e.length}e.forEach(((e,n)=>{let o=Bv(s[n]);e.length>1&&(e.forEach(((e,s)=>{d.push(t[e]),o.mean<=r&&h.push(t[e]),t[e].segment_score=i[n]})),u.push(i[n]),f.push(g[n]),p.push(s[n]))}))}let m=parseInt(1e3*(1-o));0==m&&(m=1);let w=wv.linspace(o,1,m),b={},F={};for(let e=10;e>-1;e--)for(let t=0;t<e/2+1;t++){let n,r,s=e-t,o=w.map(((t,i)=>1-t+t*e/2)),a=e/2;e>0?(n=.5-t/(t+s),r=w.map(((e,i)=>.5-(1-e+e*t)/(2-2*e+(t+s)*e)))):(n=0,r=w.map(((e,t)=>0*e)));for(let i=0;i<u.length;i++){let c=kv(a*this.globalMean,1,u[i],f[i])*Nv(p[i],.5+n);i in F?F[i].push([e,t,s,c,1]):F[i]=[e,t,s,c,1];let l=0,h=0,d=0;o.forEach(((e,t)=>{if(!isNaN(r[t])){let n=kv(e*this.globalMean,1,u[i],f[i])*Nv(p[i],.5+r[t]);l+=n,n>h&&(h=n,d=w[t])}})),i in b?b[i].push([e,t,s,l/w.length,d]):b[i]=[e,t,s,l/w.length,d]}for(let e=0;e<u.length;e++)if("germline"==i)b[e].sort(((e,t)=>e[3]-t[3]));else if(b[e].sort(((e,t)=>e[3]-t[3])),"both"==i&&(F[e].sort(((e,t)=>e[3]-t[3])),F[e][0][3]>b[e][0][3])){let t=b[e].filter((t=>t[0]!=F[e][0][0]&&t[1]<=F[e][0][1]));b[e]=[F[e][0]].push(...t)}for(let e=0;e<u.length;e++)b[e][0][0],b[e][0][0],u[e],this.globalMean,_v.t_test_1_sample(this.globalMean,u[e],f[e],g[e])}return{binScore:this.formatDataStructure(this.wigFeatures,"binScore",this.globalMean),segment_score:this.formatDataStructure(this.wigFeatures,"segment_score",this.globalMean)}}formatDataStructure(e,t,i=1){const n=[];for(const[r,s]of Object.entries(e))s.forEach((e=>{var r={...e};1!=i&&(r.value=e[t]/i*2),n.push(r)}));return n}formatDataStructure_BAF(e,t=-1){const i=[],n=[];for(const[r,s]of Object.entries(this.wigFeatures))s.forEach((r=>{var s={...r},o={...r};let a=r[e];.5!=a&&(o.value=t*(1-a),n.push(o)),s.value=t*a,i.push(s)}));return[i,n]}};const Rv=2871e6;function Dv(e){for(var t=1,i=1,n=1*e,r=1;r<50;r++)t*=r,n+=(i*=-1)*Math.pow(e,2*r+1)/(t*(2*r+1));return 2*n/Math.sqrt(3.14159265358979)}function Tv(e,t,i,n,r){var s=new Hv(i.slice(n,r));return 0==s.std&&(s.std=t>0?t*s.mean/e:1),Pv(e,s.mean,s.std,r-n)/(r-n)}function Lv(e,t,i,n,r){var s=new Hv(i.slice(n,r));if(s.mean<e){var o=(s.max-s.mean)/(t*Math.sqrt(2));return Math.pow(.5*(1+Dv(o)),r-n)}o=(s.min-s.mean)/(t*Math.sqrt(2));return Math.pow(.5*(1-Dv(o)),r-n)}function zv(e,t,i,n,r,s,o=1e3){for(var a=Tv(e,t,i,n,r),c=0,l=!1;a>s&!l&c<o;){l=!0,c+=1;var[h,d,u,f]=[1e10,1e10,1e10,1e10];if(n>0&&(h=Tv(e,t,i,n-1,r)),r-n>2)var d=Tv(e,t,i,n+1,r),u=Tv(e,t,i,n,r-1);if(r<i.length)var f=Tv(e,t,i,n,r+1);Math.min[f]<a&&(l=!1,h==Math.min[f]&&(n-=1,a=h),elif(d==Math.min[f]),n+=1,a=d,elif(u==Math.min[f]),r-=1,a=u,elif(f==Math.min[f]),r+=1,a=f)}return a<=s?r:0}class Hv{constructor(e){this.data=e,this.mean=e.reduce(((e,t)=>e+t))/e.length,this.std=Math.sqrt(e.reduce(((e,t)=>(t-this.mean)**2))/e.length)}}function Pv(e,t,i,n){0==i&&(i=1);var r=(e-t)/i*Math.sqrt(n);return 1-_v.TdistributionCDF(Math.abs(r),n-1)}function Ov(e,t,i,n,r,s){0==t&&(t=1),0==r&&(r=1);var o=(e-n)/Math.sqrt(t**2/i+r**2/s),a=(t**2/i+r**2/s)**2*(i-1)*(s-1)/(t**4*(s-1)/i**2+r**4*(i-1)/s**2);return 1-_v.TdistributionCDF(Math.abs(o),parseInt(a+.5))}var Uv=class{constructor(e,t,i){this.rd=e,this.mean=t,this.std=i,this.bin_bands=[2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128]}get_rd_signal_bandwidth(e){var t=[];return e.forEach(((e,i)=>{var n=0;n=e>this.mean/4?this.mean/(this.std**2*e):4/this.std**2,t.push(n)})),t}meanShiftCaller(e,t=3){var i={};return Object.entries(this.rd).forEach((([e,n])=>{var r=new Array(n.length).fill(!1),s=new Array(n.length);for(let e=0;e<n.length;e++)r[e]||(s[e]=n[e]);this.bin_bands.forEach(((e,i)=>{var o=r.map(((e,t)=>!e)),a=[];Object.entries(n).forEach((([e,t])=>{a.push(t.binScore)}));var c=[0],l=0;for(let e=0;e<r.length;e++)r[e]?l>0&&(c.push(c[c.length-1]+l-1),l=0):l+=1;c.shift();for(let i=0;i<t;i++){var h=this.get_rd_signal_bandwidth(a),d=new Array(a.length).fill(0);for(let t=0;t<a.length;t++)for(let i=t-3*e;i<=t+3*e+1;i++)if(!(i<0||i>=a.length||Math.abs(t-i)>=a.length)){var u=(i-t)*Math.exp(-.5*(i-t)**2/e**2)*Math.exp(-.5*(a[t]-a[i])**2*h[t]);d[t]+=u}for(var f=new Array,p=0;p<d.length-1;p++)d[p]<0&d[p+1]>=0&&f.push(p);f.push(d.length-1),f=f.concat(c).sort(((e,t)=>e-t)),f=Array.from(new Set(f));var g=0;for(p=0;p<f.length;p++){var m=a.slice(g,f[p]+1),w=m.reduce(((e,t)=>e+t))/m.length;a.fill(w,g,f[p]+1),g=f[p]+1}}p=0;for(var b=0;p<s.length;p++)o[p]&&(s[p]=a[b],b++);for(f=new Array,p=0;p<s.length-1;p++){Math.abs(s[p+1]-s[p])>.01&&f.push(p+1)}f.unshift(0),f.push(s.length),r=new Array(this.rd.length).fill(!1);for(p=1;p<f.length;p++){var F=[f[p-1],f[p]],v=[f[p-1],f[p-1]];if(!(p>1))continue;v[0]=f[p-2];var y=[f[p],f[p]];if(!(p<f.length-1))continue;y[1]=f[p+1];var A=F[1]-F[0],C=v[1]-v[0],_=y[1]-y[0];if(A<=1)continue;var x=new Hv(s.slice(F[0],F[1]));if(_<=15||C<=15||A<=15){var k=1.8*Math.sqrt(s[v[0]]/this.mean)*this.std;if(Math.abs(s[v[0]]-s[F[0]])<k)continue;if(k=1.8*Math.sqrt(s[y[0]]/this.mean)*this.std,Math.abs(s[y[0]]-s[F[0]])<k)continue}else{var I=s.slice(v[0],v[1]),S=new Hv(I),E=s.slice(y[0],y[1]),N=new Hv(E);if(Ov(x.mean,x.std,x.data.length,S.mean,S.std,S.data.length)>.01/Rv*bin_size*(A+C))continue;if(Ov(x.mean,x.std,x.data.length,N.mean,N.std,N.data.length)>.01/Rv*bin_size*(A+_))continue}if(Pv(this.mean,x.mean,x.std,x.data.length)>.05)continue;let e=a.slice(F[0],F[1]);var B=new Hv(e);r.fill(!0,F[0],F[1]),s.fill(B.mean,F[0],F[1])}})),i[e]=s})),i}call_mean_shift(e=3){for(var t=new Array(this.rd.length).fill(!1),i=new Array(this.rd.length),n=0;n<this.rd.length;n++)t[n]||(i[n]=this.rd[n]);return this.bin_bands.forEach(((n,r)=>{var s=t.map(((e,t)=>!e)),o=[];s.forEach(((e,t)=>{e&&o.push(this.rd[t])}));for(var a=[0],c=0,l=0;l<t.length;l++)t[l]?c>0&&(a.push(a[a.length-1]+c-1),c=0):c+=1;a.shift();for(var h=0;h<e;h++){var d=this.get_rd_signal_bandwidth(o),u=new Array(o.length).fill(0);for(l=0;l<o.length;l++)for(var f=l-3*n;f<=l+3*n+1;f++)if(!(f<0||f>=o.length||Math.abs(l-f)>=o.length)){var p=(f-l)*Math.exp(-.5*(f-l)**2/n**2)*Math.exp(-.5*(o[l]-o[f])**2*d[l]);u[l]+=p}var g=new Array;for(l=0;l<u.length-1;l++)u[l]<0&u[l+1]>=0&&g.push(l);g.push(u.length-1),g=g.concat(a).sort(((e,t)=>e-t)),g=Array.from(new Set(g));var m=0;for(l=0;l<g.length;l++){var w=o.slice(m,g[l]+1),b=w.reduce(((e,t)=>e+t))/w.length;o.fill(b,m,g[l]+1),m=g[l]+1}}for(l=0,f=0;l<i.length;l++)s[l]&&(i[l]=o[f],f++);for(g=new Array,l=0;l<i.length-1;l++){Math.abs(i[l+1]-i[l])>.01&&g.push(l+1)}g.unshift(0),g.push(i.length),t=new Array(this.rd.length).fill(!1);for(l=1;l<g.length;l++){var F=[g[l-1],g[l]],v=[g[l-1],g[l-1]];if(l>1){v[0]=g[l-2];var y=[g[l],g[l]];if(l<g.length-1){y[1]=g[l+1];var A=F[1]-F[0],C=v[1]-v[0],_=y[1]-y[0];if(!(A<=1)){var x=new Hv(i.slice(F[0],F[1]));if(_<=15||C<=15||A<=15){var k=1.8*Math.sqrt(i[v[0]]/this.mean)*this.std;if(Math.abs(i[v[0]]-i[F[0]])<k)continue;if(k=1.8*Math.sqrt(i[y[0]]/this.mean)*this.std,Math.abs(i[y[0]]-i[F[0]])<k)continue}else{var I=i.slice(v[0],v[1]),S=new Hv(I),E=i.slice(y[0],y[1]),N=new Hv(E);if(Ov(x.mean,x.std,x.data.length,S.mean,S.std,S.data.length)>3.483106931382794e-9*(A+C))continue;if(Ov(x.mean,x.std,x.data.length,N.mean,N.std,N.data.length)>3.483106931382794e-9*(A+_))continue}if(!(Pv(this.mean,x.mean,x.std,x.data.length)>.05)){var B=new Hv(this.rd.slice(F[0],F[1]));t.fill(!0,F[0],F[1]),i.fill(B.mean,F[0],F[1])}}}}}})),i}cnv_calling(e=1e5){var t=.25*this.mean,i=this.mean-t,n=this.mean+t,r=2971e6,s=this.meanShiftCaller(e),o={},a=[];return Object.entries(s).forEach((([c,l])=>{for(var h=!1;!h;){h=!0;var d=new Array(1).fill(0);for(let e=0;e<l.length-1;e++){Math.abs(l[e+1]-l[e])>.01&&d.push(e+1)}d.push(l.length);for(let e=0;e<d.length-2;e++){var u=Math.abs(l[d[e]]-l[d[e+1]]);if(u<t){var f=u+1,p=u+1;if(e>0&&(f=Math.abs(l[d[e]]-l[d[e-1]])),e<d.length-3&&(p=Math.abs(s[d[e+1]]-l[d[e+2]])),u<f&&u<p){h=!1;var g=new Hv(l.slice(d[e],d[e+2]));l.fill(g.mean,d[e],d[e+2]),d.splice(e+1,e+1)}}}}var m=[];Object.entries(this.rd[c]).forEach((([e,t])=>{m.push(t.binScore)}));for(var w,b=new Array(l.length).fill(""),F=0,v=.05*e/r;F<l.length;){for(var y=F,A=F;F<l.length&l[F]<i;)F+=1;if((_=F)>A+1){var C=zv(this.mean,this.std,m,A,_,v);if(C){var _=C;b.fill("D",A,_)}}for(A=F;F<l.length&l[F]>n;)F+=1;(_=F)>A+1&&(C=zv(this.mean,this.std,m,A,_,v))&&(_=C,b.fill("A",A,_)),F==y&&(F+=1)}for(F=0;F<l.length;){for(;F<l.length&""!=b[F];)F+=1;for(A=F;F<l.length&l[F]<i;)F+=1;(_=F)>A+1&&(Lv(this.mean,this.std,m,A,_)<1682935038707506e-26&&b.fill(["d"]*(_-A),A,_),F-=1),F+=1}(F=0)<l.length&&(w=b[F]),A=0;for(var x=[...m];F<l.length;){for(;b[F]==w&&!((F+=1)>=b.length););if(F>A){var k=new Hv(x.slice(A,F));x.fill(k.mean,A,F)}F<l.length&&(w=b[F]),A=F}for(o[c]=x,F=0;F<l.length;){if(""==(w=b[F])){F+=1;continue}for(A=F;F<l.length&w==b[F];)F+=1;let t,i=new Hv(x.slice(A,F)).mean/this.mean;t="D"==w?"deletion":"duplication";let n={chr:c,start:e*A+1,end:e*F,size:e*(F-A+1),value:2*i,event_type:t};a.push(n)}})),[o,a]}};class qv{constructor(e,t){this.allVariants=e,this.rowBinSize=1e4,this.binSize=t,this.binFactor=parseInt(t/this.rowBinSize)}async read_rd_baf(e="ReadDepth"){var t={};for(let e=this.allVariants.length-1;e>=0;e--){var i;let n=this.allVariants[e];this.allVariants.splice(e,1);let r=n.chr;i=Math.max(Math.floor(n.start/this.rowBinSize),0),t[r]||(t[r]=[]),t[r][i]||(t[r][i]={chr:r,start:i*this.rowBinSize,end:(i+1)*this.rowBinSize,dp_sum_score:0,dp_count:0,hets_count:0,hets:[]});const s=Object.values(n.calls);if(1!==s.length)throw Error(`Unexpected number of genotypes: ${s.length}.  CNVPytor expects 1 and only 1 genotype`);const o=s[0],a=o.info.DP;a&&(t[r][i].dp_sum_score+=Number.parseInt(a),t[r][i].dp_count++);let c=o.info.AD.split(","),l=o.genotype;if(0==l[0]&&1==l[1]||1==l[0]&&0==l[1]){t[r][i].hets_count++;let e=parseInt(c[0]),n=parseInt(c[1]);t[r][i].hets.push({ref:e,alt:n})}}this.chromosomes=Object.keys(t);var n,r=this.adjust_bin_size(t);if("ReadDepth"==e){n=new Vv(r,this.binSize).ReadDepth_caller();var s=this.formatDataStructure_BAF(r,"max_likelihood")}else if("2D"==e){let e=new Mv(r,this.binSize),t=await e.call_2d();n=[t.binScore,[],t.segment_score];s=e.formatDataStructure_BAF("max_likelihood",-1)}return[n,s]}formatDataStructure(e,t,i=1){const n=[];for(const[s,o]of Object.entries(e))for(let e of o){var r={...e};1!=i&&(r.value=e[t]/i*2),n.push(r)}return n}format_BAF_likelihood(e){const t=[];for(const[n,r]of Object.entries(e))for(let e of r){var i={...e};.5!=e.value&&(i.value=1-e.value,t.push(i))}return t}get_max_min_score(e){if(e.likelihood_score.length>0){const t=Math.max(...e.likelihood_score),i=e.likelihood_score.indexOf(t);e.value=Math.max(i/100,1-i/100),e.min_score=Math.min(i/100,1-i/100)}else e.score=0;return e}async getAllbins(){const e=await this.computeDepthFeatures();return new wv.GetFit(e).fit_data(),e}formatDataStructure_BAF(e,t,i=-1){const n=[],r=[];for(const[a,c]of Object.entries(e))for(let e of c){var s={...e},o={...e};let a=e[t];.5!=a&&(o.value=i*(1-a),r.push(o)),s.value=i*a,n.push(s)}return[n,r]}adjust_bin_size(e){var t={};for(let r of this.chromosomes){t[r]||(t[r]=[]);for(let s=0;s<e[r].length/this.binFactor;s++){const o=s;t[r][s]||(t[r][s]={chr:r,start:o*this.binSize,end:(o+1)*this.binSize,dp_count:0,hets_count:0,binScore:0,likelihood_score:[],dp_sum_score:0});for(var i=s*this.binFactor;i<this.binFactor*s+this.binFactor;i++)if(e[r][i]&&(t[r][s].dp_sum_score+=e[r][i].dp_sum_score,t[r][s].dp_count+=e[r][i].dp_count,t[r][s].hets_count+=e[r][i].hets_count,0!=e[r][i].hets.length))for(let o of e[r][i].hets)if(0==t[r][s].likelihood_score.length)t[r][s].likelihood_score=wv.linspace(0,1,100).map(((e,t)=>Qv(o.ref,o.alt,e)));else{var n=0;t[r][s].likelihood_score=wv.linspace(0,1,100).map(((e,i)=>{var a=t[r][s].likelihood_score[i]*Qv(o.ref,o.alt,e);return n+=a,a})),t[r][s].likelihood_score=wv.linspace(0,1,100).map(((e,i)=>t[r][s].likelihood_score[i]/n))}t[r][s].binScore=100*parseInt(t[r][s].dp_sum_score/t[r][s].dp_count);const a=this.get_max_min_score(t[r][s]);t[r][s].max_likelihood=a.value}}return t}}function Qv(e,t,i,n=!0){return Math.pow(i,e)*Math.pow(1-i,t)+Math.pow(i,t)*Math.pow(1-i,e)}class Vv{constructor(e,t){this.wigFeatures=e,this.binSize=t}ReadDepth_caller(){var e=new wv.GetFit(this.wigFeatures),[t,i]=e.fit_data(),n=new Uv(this.wigFeatures,t,i),r=n.meanShiftCaller(this.binSize),s=n.cnv_calling();return Object.entries(this.wigFeatures).forEach((([e,t])=>{t.forEach(((t,i)=>{t.partition_level=parseInt(r[e][i]),t.partition_call=parseInt(s[0][e][i])}))})),[this.formatDataStructure("binScore",t),this.formatDataStructure("partition_level",t),this.formatDataStructure("partition_call",t),s[1]]}formatDataStructure(e,t=1){const i=[];for(const[r,s]of Object.entries(this.wigFeatures))for(let r of s){var n={...r};1!=t&&(n.value=r[e]/t*2),i.push(n)}return i}}class jv extends Hl{static DEFAULT_TRACK_HEIGHT=250;constructor(e,t){super(e,t)}init(e){this.featureType="numeric",this.type="cnvpytor",e.max||(this.defaultScale=!0,this.autoscale=!1),e.height||(e.height=jv.DEFAULT_TRACK_HEIGHT),this.type="cnvpytor",this.graphType=e.graphType||"points",this.bin_size=e.bin_size||1e5,this.signal_name=e.signal_name||"rd_snp",this.cnv_caller=e.cnv_caller||"2D",this.colors=e.colors||["gray","black","green","blue"],super.init(e)}get supportsWholeGenome(){return!0}get_signals(){let e=[];return"rd_snp"==this.signal_name?e=["RD_Raw","RD_Raw_gc_coor",this.cnv_caller,"BAF1","BAF2"]:"rd"==this.signal_name?e=["RD_Raw","RD_Raw_gc_coor",this.cnv_caller]:"snp"==this.signal_name?e=["BAF1","BAF2"]:"cnh"==this.signal_name&&(e=[this.cnv_caller]),e}get_signal_colors(){return[{singal_name:"RD_Raw",color:this.colors[0]},{singal_name:"RD_Raw_gc_coor",color:this.colors[1]},{singal_name:"ReadDepth",color:this.colors[2]},{singal_name:"2D",color:this.colors[2]},{singal_name:"BAF1",color:this.colors[3]},{singal_name:"BAF2",color:this.colors[3]}]}async postInit(){if("vcf"==this.config.format){let e;this.featureSource?e=Object.values(this.featureSource.getAllFeatures()).flat():(this.featureSource=this.featureSource||wd(this.config,this.browser.genome),this.header=await this.getHeader(),e=this.featureSource.reader.features);const t=new qv(e,this.bin_size);let i,n,r;this.wigFeatures_obj={},this.wigFeatures_obj[this.bin_size]={},"2D"==this.cnv_caller?(r=await t.read_rd_baf("2D"),i=r[0],n=r[1],this.wigFeatures_obj[this.bin_size]["2D"]=i[2],this.available_callers=["2D"]):(r=await t.read_rd_baf(),i=r[0],n=r[1],this.wigFeatures_obj[this.bin_size].ReadDepth=i[2],this.available_callers=["ReadDepth"]),this.wigFeatures_obj[this.bin_size].RD_Raw=i[0],this.wigFeatures_obj[this.bin_size].RD_Raw_gc_coor=i[1],this.wigFeatures_obj[this.bin_size].BAF1=n[0],this.wigFeatures_obj[this.bin_size].BAF2=n[1],this.available_bins=[this.bin_size],this.set_available_callers()}else this.cnvpytor_obj=new pv(this.config.url,this.bin_size),this.wigFeatures_obj=await this.cnvpytor_obj.get_rd_signal(this.bin_size),this.available_bins=this.cnvpytor_obj.available_bins,this.available_callers=this.cnvpytor_obj.callers,this.set_available_callers();this.tracks=[];const e=[];this.signals=this.get_signals(),this.signal_colors=this.get_signal_colors();for(let t in this.wigFeatures_obj)for(const[i,n]of Object.entries(this.wigFeatures_obj[t]))if(this.signals.includes(i)){let t={type:"wig"};t.features=n,t.name=i,t.color=this.signal_colors.filter((e=>e.singal_name===i)).map((e=>e.color));const r=await this.browser.createTrack(t);r?(r.isMergedTrack=!0,r.autoscale=!1,this.tracks.push(r)):console.warn("Could not create track "+t),"function"==typeof r.postInit&&e.push(r.postInit())}this.flipAxis=!!this.config.flipAxis&&this.config.flipAxis,this.logScale=!!this.config.logScale&&this.config.logScale,this.autoscale=this.config.autoscale,this.autoscale||(this.dataRange={min:this.config.min||0,max:this.config.max});for(let e of this.tracks)e.autoscale=!1,e.dataRange=this.dataRange;return Promise.all(e)}set_available_callers(){this.available_callers.includes(this.cnv_caller)||(this.available_callers.length>0?this.cnv_caller=this.available_callers[0]:this.cnv_caller=null)}async getHeader(){if(!this.header){if("function"==typeof this.featureSource.getHeader){const e=await this.featureSource.getHeader();e&&(this.callSets=e.callSets||[]),this.header=e}this.sampleKeys=this.callSets?this.callSets.map((e=>e.sample)):[],this.sampleNames=this.sampleKeys}return this.header}get height(){return this._height}set height(e){if(this._height=e,this.tracks)for(let t of this.tracks)t.height=e,t.config.height=e}menuItemList(){let e=[];void 0!==this.flipAxis&&e.push({label:"Flip y-axis",click:function(){this.flipAxis=!this.flipAxis,this.trackView.repaintViews()}}),e=e.concat(this.numericDataMenuItems()),e.push("<hr/>"),e.push("Bin Sizes");for(let t of this.available_bins){const i=Dl(t,t===this.bin_size);e.push({object:Bt(i),click:async function(){this.bin_size=t,this.trackView.startSpinner(),await this.recreate_tracks(t),this.clearCachedFeatures(),this.trackView.updateViews(),this.trackView.repaintViews()}})}e.push("<hr/>"),e.push("Signal Type");let t={rd_snp:"RD and BAF Likelihood",rd:"RD Signal",snp:"BAF Likelihood"};for(let i in t){const n=Dl(t[i],i===this.signal_name);e.push({object:Bt(n),click:async function(){this.signal_name=i,await this.recreate_tracks(this.bin_size),this.clearCachedFeatures(),this.trackView.updateViews(),this.trackView.repaintViews()}})}e.push("<hr/>"),e.push("CNV caller");for(let t of this.available_callers){const i=Dl(t,t===this.cnv_caller);e.push({object:Bt(i),click:async function(){this.cnv_caller=t,this.trackView.startSpinner(),await this.recreate_tracks(this.bin_size),this.clearCachedFeatures(),this.trackView.updateViews(),this.trackView.repaintViews()}})}if(this.variantState){e.push("<hr/>");for(let t of this.available_callers)e.push({label:"Convert to variant track",click:()=>{this.convertToVariant()}})}return e}async recreate_tracks(e){this.tracks=[];const t=[];e in this.wigFeatures_obj||(this.wigFeatures_obj={...this.wigFeatures_obj,...await this.cnvpytor_obj.get_rd_signal(e)}),this.signals=this.get_signals(),this.signal_colors=this.get_signal_colors();for(const[i,n]of Object.entries(this.wigFeatures_obj[e]))if(this.signals.includes(i)){let e={type:"wig"};e.features=n,e.name=i,e.color=this.signal_colors.filter((e=>e.singal_name===i)).map((e=>e.color));const r=await this.browser.createTrack(e);r?(r.isMergedTrack=!0,r.autoscale=!1,this.tracks.push(r)):console.warn("Could not create track "+e),"function"==typeof r.postInit&&t.push(r.postInit())}this.flipAxis=!!this.config.flipAxis&&this.config.flipAxis,this.logScale=!!this.config.logScale&&this.config.logScale,this.autoscale=this.config.autoscale,this.autoscale||(this.dataRange={min:this.config.min||0,max:this.config.max});for(let e of this.tracks)e.autoscale=!1,e.dataRange=this.dataRange;return Promise.all(t)}async getFeatures(e,t,i,n){if(this.tracks){const r=this.tracks.map((r=>r.getFeatures(e,t,i,n)));return Promise.all(r)}}getScaleFactor(e,t,i,n){return n?i/(Math.log10(t+1)-(e<=0?0:Math.log10(e+1))):i/(t-e)}computeYPixelValue(e,t){return(this.flipAxis?e-this.dataRange.min:this.dataRange.max-e)*t}computeYPixelValueInLogScale(e,t){let i=this.dataRange.max,n=this.dataRange.min;return i<=0?0:(n<=-1&&(n=0),n=n<=0?0:Math.log10(n+1),i=Math.log10(i+1),e=Math.log10(e+1),(this.flipAxis?e-n:i-e)*t)}draw(e){const t=e.features;if(!t)return;if(this.defaultScale&&("rd_snp"==this.signal_name?this.dataRange={min:this.config.min||this.dataRange.min||-1,max:this.config.max||this.dataRange.max||5}:"rd"==this.signal_name?this.dataRange={min:this.config.min||this.dataRange.min||0,max:this.config.max||this.dataRange.max||5}:"snp"==this.signal_name&&(this.dataRange={min:this.config.min||this.dataRange.min||-1,max:this.config.max||this.dataRange.max||0})),this.autoscale&&(this.dataRange=function(e,t){let i=0,n=-Number.MAX_VALUE;for(let e of t)for(let t of e)void 0===t.value||Number.isNaN(t.value)||(i=Math.min(i,t.value),n=Math.max(n,t.value));return{min:i,max:n}}(e.referenceFrame.chr,t)),this.tracks)for(let i=0,n=this.tracks.length;i<n;i++){const n=Object.assign({},e);n.features=t[i],this.tracks[i].dataRange=this.dataRange,this.tracks[i].flipAxis=this.flipAxis,this.tracks[i].logScale=this.logScale,this.graphType&&(this.tracks[i].graphType=this.graphType),this.tracks[i].draw(n)}const i=this.getScaleFactor(this.dataRange.min,this.dataRange.max,e.pixelHeight,this.logScale),n=e=>this.logScale?this.computeYPixelValueInLogScale(e,i):this.computeYPixelValue(e,i);if(this.config.hasOwnProperty("guideLines"))for(let t of this.config.guideLines)if(t.hasOwnProperty("color")&&t.hasOwnProperty("y")&&t.hasOwnProperty("dotted")){let i=n(t.y),r={strokeStyle:t.color,strokeWidth:1};t.dotted?xo.dashedLine(e.context,0,i,e.pixelWidth,i,5,r):xo.strokeLine(e.context,0,i,e.pixelWidth,i,r)}let r=n(2);xo.dashedLine(e.context,0,r,e.pixelWidth,r,5,{strokeStyle:"lightgray",strokeWidth:.5})}paintAxis(e,t,i){var n,r,s,o,a,c,l,h={font:"normal 10px Arial",textAlign:"right",strokeStyle:"black"};if(void 0===this.dataRange||void 0===this.dataRange.max||void 0===this.dataRange.min)return;let d=void 0!==this.flipAxis&&this.flipAxis;function u(e){return e<0?Math.abs(e):0===e?"0":Math.abs(e)>=10||e%1==0?e.toFixed():Math.abs(e)>=1?e.toFixed(1):e.toFixed(2)}xo.fillRect(e,0,0,t,i,{fillStyle:"rgb(255, 255, 255)"}),n=(l=.95*t)-8,a={x:r=l,y:s=o=.01*i},xo.strokeLine(e,n,s,r,o,h),xo.fillText(e,u(d?this.dataRange.min:this.dataRange.max),n+4,s+12,h),c={x:r,y:s=o=.99*i},xo.strokeLine(e,n,s,r,o,h),xo.fillText(e,u(d?this.dataRange.max:this.dataRange.min),n+4,s-4,h),xo.strokeLine(e,a.x,a.y,c.x,c.y,h);const f=this.getScaleFactor(this.dataRange.min,this.dataRange.max,i,this.logScale),p=e=>this.logScale?this.computeYPixelValueInLogScale(e,f):this.computeYPixelValue(e,f),g=Math.ceil((this.dataRange.max-this.dataRange.min)/10);for(let t=Math.ceil(this.dataRange.min+1);t<Math.round(this.dataRange.max-.4);t+=g){const i=p(t);xo.strokeLine(e,45,i,50,i,h),xo.fillText(e,u(d?this.dataRange.max-t:t),44,i+4,h)}}popupData(e,t){const i=t||e.viewport.cachedFeatures;if(i&&i.length===this.tracks.length){const t=[];for(let n=0;n<this.tracks.length;n++){n>0&&t.push("<hr/>"),t.push(`<div style=background-color:rgb(245,245,245);border-bottom-style:dashed;border-bottom-width:1px;padding-bottom:5px;padding-top:10px;font-weight:bold;font-size:larger >${this.tracks[n].name}</div>`);const r=this.tracks[n].popupData(e,i[n]);t.push(...r)}return t}}async convertToVariant(){this.variantState&&(Object.setPrototypeOf(this,$v.prototype),this.init(this.variantState),await this.postInit(),this.trackView.clearCachedFeatures(),this.variantState.trackHeight&&this.trackView.setTrackHeight(this.variantState.trackHeight),this.trackView.checkContentHeight(),this.trackView.updateViews(),delete this.variantState)}}const Wv=Mt,Gv=10;class $v extends Hl{static defaults={displayMode:"EXPANDED",sortDirection:"ASC",showGenotypes:!0,expandedVariantHeight:10,squishedVariantHeight:2,squishedCallHeight:1,expandedCallHeight:10,expandedVGap:2,squishedVGap:1,expandedGroupGap:10,squishedGroupGap:5,featureHeight:14,noGenotypeColor:"rgb(200,180,180)",noCallColor:"rgb(225, 225, 225)",nonRefColor:"rgb(200, 200, 215)",mixedColor:"rgb(200, 220, 200)",homrefColor:"rgb(200, 200, 200)",homvarColor:"rgb(17,248,254)",hetvarColor:"rgb(34,12,253)",refColor:"rgb(0,0,220)",altColor:"rgb(255,0,0)",visibilityWindow:void 0,labelDisplayMode:void 0,type:"variant"};_sortDirections=new Map;constructor(e,t){super(e,t)}init(e){if(super.init(e),e.variantHeight&&(this.expandedVariantHeight=e.variantHeight),this.featureSource=wd(e,this.browser.genome),this.colorTables=new Map,e.colorTable){const t=e.colorBy||"*";this.colorTables.set(t,new ao(e.colorTable))}if(this.strokecolor=e.strokecolor,this._context_hook=e.context_hook,e.color&&(this.colorBy=void 0),this.nVariantRows=1,e.samples)for(let t of e.samples)this.sampleKeys=e.samples;e.sort&&(this.initialSort=e.sort),this._colorByItems=new Map([["none","None"]])}async postInit(){if(this.header=await this.getHeader(),this.header.INFO){const e=new Set(Object.keys(this.header.INFO));this.config.colorBy?this.colorBy=this.config.colorBy:!this.config.color&&e.has("AF")&&(this.colorBy="AF"),e.has("AF")&&this._colorByItems.set("AF","Allele frequency"),e.has("VT")&&this._colorByItems.set("VT","Variant Type"),e.has("SVTYPE")&&this._colorByItems.set("SVTYPE","SV Type")}if(this.config.colorBy&&!this._colorByItems.has(this.config.colorBy)&&this._colorByItems.set(this.config.colorBy,this.config.colorBy),!this.disposed){if(this.header&&!this.sampleKeys&&(this.sampleKeys=this.header.sampleNameMap?Array.from(this.header.sampleNameMap.keys()):[]),void 0===this.visibilityWindow&&!1!==this.config.indexed){const e=Ht(this.config.url)?this.config.url.name:this.config.url;Wv(e)&&e.toLowerCase().includes("gnomad")?this.visibilityWindow=1e3:"function"==typeof this.featureSource.defaultVisibilityWindow?this.visibilityWindow=await this.featureSource.defaultVisibilityWindow():this.visibilityWindow=1e6}return this}}get supportsWholeGenome(){return!this.config.indexURL||!0===this.config.supportsWholeGenome}get color(){return this._color||"rgb(0,0,150)"}set color(e){this._color=e,e&&(this.colorBy=void 0)}async getHeader(){return this.header||"function"==typeof this.featureSource.getHeader&&(this.header=await this.featureSource.getHeader()),this.header}getSampleCount(){return this.sampleKeys?this.sampleKeys.length:0}async getFeatures(e,t,i,n){void 0===this.header&&(this.header=await this.getHeader());const r=await this.featureSource.getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:this.visibilityWindow});if(this.initialSort){const e=this.initialSort;if(void 0===e.option||"GENOTYPE"===e.option.toUpperCase())this.sortSamplesByGenotype(e,r);else if("ATTRIBUTE"===e.option.toUpperCase()&&e.attribute){const t="ASC"===e.direction?1:-1;this.sortByAttribute(e.attribute,t)}this.initialSort=void 0}return r}hasSamples(){return this.getSampleCount()>0}getSamples(){const e="SQUISHED"===this.displayMode?this.squishedVGap:this.expandedVGap,t="COLLAPSED"===this.displayMode?1:this.nVariantRows,i="SQUISHED"===this.displayMode?this.squishedVariantHeight:this.expandedVariantHeight,n=t*(("SQUISHED"===this.displayMode?this.squishedCallHeight:this.expandedCallHeight)+e),r=Gv+t*(i+e);return{names:this.sampleKeys,yOffset:r,height:n}}computePixelHeight(e){if(!e||0===e.length)return Gv;const t="COLLAPSED"===this.displayMode?1:this.nVariantRows,i="SQUISHED"===this.displayMode?this.squishedVGap:this.expandedVGap,n="SQUISHED"===this.displayMode?this.squishedVariantHeight:this.expandedVariantHeight,r="SQUISHED"===this.displayMode?this.squishedCallHeight:this.expandedCallHeight,s=!1===this.showGenotypes?0:this.getSampleCount()*t;return Gv+t*(n+i)+i+(s+1)*(r+i)}variantRowCount(e){this.nVariantRows=e}draw({context:e,pixelWidth:t,pixelHeight:i,bpPerPixel:n,bpStart:r,pixelTop:s,features:o}){xo.fillRect(e,0,s,t,i,{fillStyle:"rgb(255, 255, 255)"});const a="SQUISHED"===this.displayMode?this.squishedVGap:this.expandedVGap,c="COLLAPSED"===this.displayMode?1:this.nVariantRows,l="SQUISHED"===this.displayMode?this.squishedVariantHeight:this.expandedVariantHeight;this.variantBandHeight=Gv+c*(l+a);let h=this.sampleColumns;const d=this.hasSamples();if(h&&d&&!1!==this.showGenotypes&&xo.strokeLine(e,0,this.variantBandHeight,t,this.variantBandHeight,{strokeStyle:"rgb(224,224,224) "}),o){const i="SQUISHED"===this.displayMode?this.squishedCallHeight:this.expandedCallHeight,s="SQUISHED"===this.displayMode?this.squishedVGap:this.expandedVGap,a=r+t*n+1;for(let t of o){if(t.end<r)continue;if(t.start>a)break;const o="SQUISHED"===this.displayMode?this.squishedVariantHeight:this.expandedVariantHeight,c=Gv+("COLLAPSED"===this.displayMode?0:t.row*(o+s)),l=o;let h=(t.start-r)/n,u=(t.end-r)/n,f=Math.max(1,u-h);f<3?(f=3,h-=1):f>5&&(h+=1,f-=2);const p=t._f||t;let g;try{g=p.alleleFreq()}catch(e){console.log(e)}if("AF"===this.colorBy&&g){const t=Math.min(1,g)*l,i=l-t;e.fillStyle=p.isFiltered()?this.refColorFiltered:this.refColor,e.fillRect(h,c,f,i),e.fillStyle=p.isFiltered()?this.altColorFiltered:this.altColor,e.fillRect(h,c+i,f,t)}else e.fillStyle=this.getColorForFeature(p),e.fillRect(h,c,f,l);let m=this.getVariantStrokecolor(p);if(m&&(e.strokeStyle=m,e.strokeRect(h,c,f,l)),this.callContextHook(p,e,h,c,f,l),d&&!1!==this.showGenotypes){const t="COLLAPSED"===this.displayMode?1:this.nVariantRows;this.sampleYOffset=this.variantBandHeight+s,this.sampleHeight=t*(i+s);let n=0;for(let t of this.sampleKeys){const r=this.header.sampleNameMap.get(t),o=p.calls[r];if(o){const t="COLLAPSED"===this.displayMode?0:p.row,r=this.sampleYOffset+n*this.sampleHeight+t*(i+s);let a=!0,c=!0,l=!1;if(o.genotype)for(let e of o.genotype){if("."===e){l=!0;break}0!==e&&(c=!1),0===e&&(a=!1)}o.genotype?e.fillStyle=l?this.noCallColor:c?this.homrefColor:a?this.homvarColor:this.hetvarColor:e.fillStyle=this.noGenotypeColor,e.fillRect(h,r,f,i)}n++}}}}else console.log("No feature list")}get refColorFiltered(){return this._refColorFiltered||(this._refColorFiltered=_s.addAlpha(this.refColor,.2)),this._refColorFiltered}get altColorFiltered(){return this._altColorFiltered||(this._altColorFiltered=_s.addAlpha(this.altColor,.2)),this._altColorFiltered}getColorForFeature(e){const t=e._f||e;let i;if(this.colorBy&&"none"!==this.colorBy){const e=t.getAttributeValue(this.colorBy);i=void 0!==e?this.getVariantColorTable(this.colorBy).getColor(e):"gray"}else i=this.color?"function"==typeof this.color?this.color(e):this.color:"NONVARIANT"===t.type?this.nonRefColor:"MIXED"===t.type?this.mixedColor:this.color;return t.isFiltered()&&(i=_s.addAlpha(i,.2)),i}getVariantStrokecolor(e){const t=e._f||e;let i;return i=this.strokecolor?"function"==typeof this.strokecolor?this.strokecolor(t):this.strokecolor:void 0,i}callContextHook(e,t,i,n,r,s){if(this._context_hook&&"function"==typeof this._context_hook){const o=e._f||e;t.save(),this._context_hook(o,t,i,n,r,s),t.restore()}}clickedFeatures(e){let t=super.clickedFeatures(e);const i="EXPANDED"===this.displayMode?this.expandedVGap:this.squishedVGap,n=i+("SQUISHED"===this.displayMode?this.squishedCallHeight:this.expandedCallHeight),r=e.y;if(r<=this.variantBandHeight){const e="SQUISHED"===this.displayMode?this.squishedVariantHeight:this.expandedVariantHeight,n=Math.floor((r-Gv)/(e+i));"COLLAPSED"!==this.displayMode&&(t=t.filter((e=>e.row===n)))}else if(this.sampleKeys){const e=r-this.variantBandHeight,i=Math.floor(e/this.sampleHeight);if(i>=0&&i<this.sampleKeys.length){const r=Math.floor((e-i*this.sampleHeight)/n),s="COLLAPSED"===this.displayMode?t:t.filter((e=>e.row===r)),o=this.sampleKeys[i],a=this.header.sampleNameMap.get(o);t=s.map((e=>{const t=e.calls[a];return t.genotypeString=function(e,t){if(e.genotype){let i="";if("."===t.alternateBases)i="No Call";else{const n=t.alternateBases.split(",");for(let r of e.genotype)if(i.length>0&&(i+=" | "),"."===r)i+=".";else if(0===r)i+=t.referenceBases;else{i+=n[r-1].replace("<","&lt;")}}return i}}(t,e),t}))}}return t}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=e.genomicLocation,n=this.browser.genome.id;let r=[];for(let e of t){const t=e._f||e;if(r.length>0&&r.push({html:'<hr style="border-top-width:2px ;border-color: #c9c3ba" />'}),"function"==typeof t.popupData){const e=t.popupData(i,n);Array.prototype.push.apply(r,e)}}return r}menuItemList(){const e=[];if(this.header.INFO&&this.header.INFO){const t=this._colorByItems;e.push("<hr/>");const i=Bt('<div class="igv-track-menu-category igv-track-menu-border-top">');i.text("Color by:"),e.push({name:void 0,object:i,click:void 0,init:void 0});for(let n of t.keys()){const r=this.colorBy===n;e.push(this.colorByCB({key:n,label:t.get(n)},r))}e.push(this.colorByCB({key:"info",label:"Info field..."}))}if(!0===zf(this.browser.sampleInfo,this.sampleKeys)){e.push("<hr/>"),e.push("Sort by attribute:");for(const s of this.browser.sampleInfo.attributeNames)if(this.sampleKeys.some((e=>{const t=this.browser.sampleInfo.getAttributes(e);return t&&t[s]}))){const o=Bt("<div>");function a(){const e=this._sortDirections.get(s)||1;this.sortByAttribute(s,e),this.config.sort={option:"ATTRIBUTE",attribute:s,direction:e>0?"ASC":"DESC"},this._sortDirections.set(s,-1*e)}o.html(`&nbsp;&nbsp;${s.split(Tu.emptySpaceReplacement).join(" ")}`),e.push({object:o,click:a})}}e.push("<hr/>"),this.getSampleCount()>0&&(e.push({object:Bt('<div class="igv-track-menu-border-top">')}),e.push({object:Bt(Dl("Show Genotypes",this.showGenotypes)),click:function(){this.showGenotypes=!this.showGenotypes,this.trackView.checkContentHeight(),this.trackView.repaintViews(),this.browser.sampleNameControl.performClickWithState(this.browser,this.showGenotypes),this.browser.sampleInfoControl.performClickWithState(this.browser,this.showGenotypes)}})),e.push({object:Bt('<div class="igv-track-menu-border-top">')});for(let c of["COLLAPSED","SQUISHED","EXPANDED"]){e.push({object:Bt(Dl({COLLAPSED:"Collapse",SQUISHED:"Squish",EXPANDED:"Expand"}[c],c===this.displayMode)),click:function(){this.displayMode=c,this.trackView.checkContentHeight(),this.trackView.repaintViews()}})}return this.browser.circularView&&(e.push("<hr>"),e.push({label:"Add SVs to circular view",click:function(){for(let e of this.trackView.viewports)this.sendChordsForViewport(e)}})),this.canCovertToPytor()&&(e.push("<hr>"),e.push({label:"Convert to CNVpytor track",click:function(){this.convertToPytor()}})),e}contextMenuItemList(e){const t=[];if(this.hasSamples()&&this.showGenotypes){const i=e.viewport.referenceFrame,n=e.genomicLocation,r=i.toBP(2.5),s=this._sortDirections.get("genotype")||1;this._sortDirections.set("genotype",-1*s),t.push({label:"Sort by genotype",click:t=>{const i={direction:s,option:"genotype",chr:e.viewport.referenceFrame.chr,start:Math.floor(n-r),end:Math.ceil(n+r)},o=e.viewport.cachedFeatures;this.sortSamplesByGenotype(i,o),this.config.sort=i}}),t.push("<hr/>")}if(this.browser.circularView){const i=e.viewport;t.push({label:"Add SVs to Circular View",click:()=>{this.sendChordsForViewport(i)}}),t.push("<hr/>")}return t}async sortSamplesByGenotype({chr:e,position:t,start:i,end:n,direction:r},s){if(void 0===i&&(i=t-1),void 0===n&&(n=t),s||(s=await this.featureSource.getFeatures({chr:e,start:i,end:n})),!s)return;const o=new Map,a="ASC"===r?1:-1;for(let e of s)if(!(e.end<i)){if(e.start>n)break;for(let t of e.calls){const e=t.sample,i=t.zygosityScore();o.set(e,o.has(e)?o.get(e)+i:i)}}this.sampleKeys.sort((function(e,t){let i=o.get(e)||0,n=o.get(t)||0;return a*(i-n)})),this.trackView.repaintViews()}sortByAttribute(e,t){this.config.sort={option:"ATTRIBUTE",attribute:e,direction:1===t?"ASC":"DESC"},this.sampleKeys=this.browser.sampleInfo.getSortedSampleKeysByAttribute(this.sampleKeys,e,t),this.trackView.repaintViews()}sendChordsForViewport(e){const t=e.referenceFrame;let i;if("all"===t.chr){const e=this.featureSource.getAllFeatures(),t=Object.keys(e).map((t=>e[t]));i=[].concat(...t)}else i=this.featureSource.featureCache.queryFeatures(t.chr,t.start,t.end);zm(i.filter((e=>{const t=e._f||e;return t.info&&t.info.CHR2&&t.info.END&&(t.info.CHR2!==t.chr||Math.abs(Number.parseInt(t.info.END)-t.pos)>1e6)})).map((e=>{const t=e._f||e,i=Number.parseInt(t.info.END),n=i-100,r=i+100;return{uniqueId:`${t.chr}:${t.start}-${t.end}_${t.info.CHR2}:${t.info.END}`,refName:Tm(t.chr),start:t.start,end:t.end,mate:{refName:Tm(t.info.CHR2),start:n,end:r}}})),this,t,.5)}colorByCB(e,t){const i=Bt(Dl(e.label,t));if("info"!==e.key){function n(){const t="none"===e.key?void 0:e.key;this.colorBy=t,this.config.colorBy=t,this.trackView.repaintViews()}return{name:void 0,object:i,click:n,init:void 0}}{function r(e){this.browser.inputDialog.present({label:"Info field",value:"",callback:e=>{e?(this.colorBy=e,this._colorByItems.set(e,e)):this.colorBy=void 0,this.trackView.repaintViews()}},e)}return{name:void 0,object:i,dialog:r,init:void 0}}}getState(){const e=super.getState();return this.color&&"function"!=typeof this.color&&(e.color=this.color),e}getVariantColorTable(e){if(this.colorTables.has(e))return this.colorTables.get(e);if(this.colorTables.has("*"))return this.colorTables.get("*");{let t;if("SVTYPE"===e)t=Kv;else t=new oo("Set1");return this.colorTables.set(e,t),t}}paintAxis(){}canCovertToPytor(){return!this.config.indexURL&&(!!this.header&&(1===Object.keys(this.sampleKeys).length&&this.header.FORMAT&&this.header.FORMAT.AD&&this.header.FORMAT.DP))}async convertToPytor(){this.variantState={...this.config,...this.getState()},this.variantState.trackHeight=this.height,this.trackView.startSpinner(),setTimeout((async()=>{try{const e=Object.assign({},this.config);Object.setPrototypeOf(this,jv.prototype),this.init(e),await this.postInit(),this.trackView.clearCachedFeatures(),this.trackView.setTrackHeight(this.config.height||jv.DEFAULT_TRACK_HEIGHT),this.trackView.checkContentHeight(),this.trackView.updateViews(),this.trackView.track.autoHeight=!1}finally{this.trackView.stopSpinner()}}),100)}}const Kv=new ao({DEL:"#ff2101",INS:"#001888",DUP:"#028401",INV:"#008688",CNV:"#8931ff",BND:"#891100","*":"#002eff"}),Yv={timeout:5e3,type:"plain",url:"https://igv.org/genomes/locus.php?genome=$GENOME$&name=$FEATURE$",coords:0};async function Xv(e,t){const i=e.searchConfig||Yv;let n;const r=e.tracks.filter((e=>e.searchable));for(let e of r){const i=await e.search(t);if(i)return i}if(e.config&&!1!==e.config.search)try{return n=await async function(e,t,i){let n=i.url.replace("$FEATURE$",t.toUpperCase());n.indexOf("$GENOME$")>-1&&(n=n.replace("$GENOME$",e.genome.id?e.genome.id:"hg19"));const r=i.timeout?{timeout:i.timeout}:void 0,s=await Qs.loadString(n,r);return function(e,t,i){let n;n="plain"===i.type?function(e,t){const i=[],n=Dt(t);for(let t of n){const n=t.split("\t");if(n.length>=3){const t=n[1].split(":"),r=t[1].split("-");i.push({chromosome:e.genome.getChromosomeName(t[0].trim()),start:parseInt(r[0].replace(/,/g,"")),end:parseInt(r[1].replace(/,/g,"")),name:n[0].toUpperCase()})}}return i}(e,t):JSON.parse(t);i.resultsField&&(n=n[i.resultsField]);if(n&&0!==n.length){const e=i.chromosomeField||"chromosome",t=i.startField||"start",r=i.endField||"end",s=i.coords||1;let o;o=Array.isArray(n)?n[0]:n,o.hasOwnProperty(e)&&o.hasOwnProperty(t)||console.error("Search service results must include chromosome and start fields: "+o);const a=o[e];let c=o[t]-s,l=o[r];void 0===l&&(l=c+1);const h={chr:a,start:c,end:l};if(!o.type||o.type,i.geneField&&i.snpField){const e=o[i.geneField]||o[i.snpField];e&&(h.name=e.toUpperCase())}return h}return}(e,s,i)}(e,t,i),n}catch(e){console.log("Search service not available "+e)}}function Zv(e,t=!1){const i=e.split("\t");if(i.length>2)try{const e=i[0],t=parseInt(i[1].replace(/,/g,""),10)-1,n=parseInt(i[2].replace(/,/g,""),10);if(!isNaN(t)&&!isNaN(n))return{chr:e,start:t,end:n}}catch(e){}const n=e.split(":"),r={chr:n[0]};if(n.length>1){let e,i=n[1].split("-");if(i.length>2){if(!n[1].startsWith("-"))return;{const e=n[1].indexOf("-",1);if(e>0){i=[n[1].substring(0,e),n[1].substring(e+1)]}}}if(e=i[0].replace(/,/g,""),isNaN(e))return;if(r.start=parseInt(e,10)-1,r.end=r.start+1,1===i.length&&(r.start-=20,r.end+=20),2===i.length){if(e=i[1].replace(/,/g,""),isNaN(e))return;if(r.end=parseInt(e,10),r.start<0&&!t){const e=-extent.start;r.start+=e,r.end+=e}}}return r}class Jv extends Hl{constructor(e,t){super(e,t)}init(e){super.init(e),this.type="qtl",this.name=e.name;const t=e.minLogP||e.min,i=e.maxLogP||e.max;this.dataRange={min:void 0!==t?t:3.5,max:i||25},this.autoscale=!i||e.autoscale,this.autoscalePercentile=void 0===e.autoscalePercentile?98:e.autoscalePercentile,this.background=e.background,this.divider=e.divider||"rgb(225,225,225)",this.dotSize=e.dotSize||2,this.height=e.height||100,this.autoHeight=!1,this.disableButtons=e.disableButtons,this.featureSource=wd(e,this.browser.genome)}paintAxis(e,t,i){const n=(this.dataRange.max-this.dataRange.min)/i,r={font:"normal 10px Arial",textAlign:"right",strokeStyle:"black"};xo.fillRect(e,0,0,t,i,{fillStyle:"rgb(255, 255, 255)"});const s=Math.ceil(10*(this.dataRange.max-this.dataRange.min)/i);for(let o=4;o<=this.dataRange.max;o+=s){const s=.85*t,a=s-5,c=s,l=i-(o-this.dataRange.min)/n;xo.strokeLine(e,a,l,c,l,r),l>8&&xo.fillText(e,o,a-1,l+2,r)}r.textAlign="center",xo.fillText(e,"-log10(pvalue)",t/4,i/2,r,{rotate:{angle:-90}})}async getFeatures(e,t,i){const n=this.visibilityWindow;return await this.featureSource.getFeatures({chr:e,start:t,end:i,visibilityWindow:n})}draw(e){const{context:t,referenceFrame:i,pixelWidth:n,pixelHeight:r}=e;this.background&&xo.fillRect(t,0,0,n,r,{fillStyle:this.background}),xo.strokeLine(t,0,r-1,n,r-1,{strokeStyle:this.divider}),i.feature&&i.feature.match(/RS[0-9]+/);const s=i=>{const s=i?2*this.dotSize:this.dotSize,o=e.bpStart,a=(this.dataRange.max-this.dataRange.min)/r;for(let d of e.features){const u=(d.start-o+.5)/e.bpPerPixel;if(u<0)continue;if(u>n)break;const f=d.phenotype;let p;if(this.browser.qtlSelections.qtl?(l=this.browser.qtlSelections.qtl,h=d,p=l.chr===h.chr&&l.start===h.start&&l.pValue===h.pValue):p=this.browser.qtlSelections.snps.size>0?this.browser.qtlSelections.hasSnp(d.snp)&&this.browser.qtlSelections.hasPhenotype(f):this.browser.qtlSelections.hasPhenotype(f),!i||p){var c=-Math.log(d.pValue)/Math.LN10;if(c>=this.dataRange.min){let e;c>this.dataRange.max?(c=this.dataRange.max,e=!0):e=!1;const n=Math.max(0+s,r-Math.round((c-this.dataRange.min)/a));let o;d.px=u,d.py=n,d.radius=s,i&&p?(o=this.browser.qtlSelections.colorForGene(f),xo.setProperties(t,{fillStyle:o,strokeStyle:"black"})):(o=e?"rgb(150, 150, 150)":"rgb(180, 180, 180)",xo.setProperties(t,{fillStyle:o,strokeStyle:o})),xo.fillCircle(t,u,n,s),xo.strokeCircle(t,u,n,s)}}}var l,h};s(!1),s(!0)}popupData(e,t){if(void 0===t&&(t=e.viewport.cachedFeatures),!t||0===t.length)return[];const i=this.name,n=[];for(let r of this._clickedFeatures(e,t))n.length>0&&n.push("<hr/>"),"function"==typeof r.popupData?n.push(...r.popupData(e)):n.push({name:"snp id",value:r.snp},{name:"gene id",value:r.gencodeId},{name:"gene name",value:r.geneSymbol},{name:"p value",value:r.pValue},{name:"tissue",value:i});return n}_clickedFeatures(e,t){const i=(e,t)=>Math.sqrt((e.px-t.canvasX)*(e.px-t.canvasX)+(e.py-t.canvasY)*(e.py-t.canvasY)),n=t.filter((t=>i(t,e)<6));if(n.length>1){n.sort(((t,n)=>i(t,e)-i(n,e)));const t=i(n[0],e);return n.filter((n=>i(n,e)<=t))}return n}contextMenuItemList(e){const t=[],i=e.viewport.cachedFeatures;if(i){const n=this._clickedFeatures(e,i);n.length>0&&(t.push({label:"Highlight associated features",click:async()=>{this.browser.qtlSelections.clear();for(let e of n)this.browser.qtlSelections.qtl=e,this.browser.qtlSelections.addPhenotype(e.phenotype);this.browser.repaintViews()}}),t.push("<hr>"))}return t}menuItemList(){const e=[];return e.push(...this.numericDataMenuItems()),e.push("<hr/>"),e.push({label:"Search for...",dialog:function(e){this.browser.inputDialog.present({label:"Search for snp or phenotype",value:"",callback:async e=>{if(e){e=e.trim().toUpperCase();const t=t=>((t.phenotype&&t.phenotype.toUpperCase())===e||t.snp&&t.snp.toUpperCase()===e)&&-Math.log(t.pValue)/Math.LN10>this.dataRange.min;let i,n,r,s=await this.featureSource.findFeatures(t);if(0==s.length){await this.browser.search(e)&&(s=await this.featureSource.findFeatures(t))}if(s.length>0){this.browser.qtlSelections.clear();const t=new Set;i=s[0].chr,n=s[0].start,r=s[0].end;for(let o of s)o.snp&&o.snp.toUpperCase()===e&&this.browser.qtlSelections.addSnp(o.snp),this.browser.qtlSelections.addPhenotype(o.phenotype),t.add(o.phenotype),o.chr===i&&(n=Math.min(n,o.start),r=Math.max(r,o.end));const o=this.browser.genome.getChromosomeName(i);for(let e of t){const t=await Xv(this.browser,e);t&&o===this.browser.genome.getChromosomeName(t.chr)&&(n=Math.min(n,t.start),r=Math.max(r,t.end))}const a=Math.floor(.1*(r-n));n=Math.max(0,n-a),r+=a,await this.browser.search(`${i}:${n}-${r}`)}}}},e)}}),e}doAutoscale(e){let t=this.config.max||25;if(e.length>0){const i=e.map((e=>-Math.log(e.pValue)/Math.LN10));i.sort(((e,t)=>e-t));t=i[Math.floor(i.length*(this.autoscalePercentile/100))]}return this.dataRange.max=Math.max(t,10),this.dataRange}}const ey={X:"rgb(204, 153, 0)",Y:"rgb(153, 204, 0)",Un:"darkGray)",1:"rgb(80, 80, 255)",2:"rgb(206, 61, 50)","2a":"rgb(210, 65, 55)","2b":"rgb(215, 70, 60)",3:"rgb(116, 155, 88)",4:"rgb(240, 230, 133)",5:"rgb(70, 105, 131)",6:"rgb(186, 99, 56)",7:"rgb(93, 177, 221)",8:"rgb(128, 34, 104)",9:"rgb(107, 215, 107)",10:"rgb(213, 149, 167)",11:"rgb(146, 72, 34)",12:"rgb(131, 123, 141)",13:"rgb(199, 81, 39)",14:"rgb(213, 143, 92)",15:"rgb(122, 101, 165)",16:"rgb(228, 175, 105)",17:"rgb(59, 27, 83)",18:"rgb(205, 222, 183)",19:"rgb(97, 42, 121)",20:"rgb(174, 31, 99)",21:"rgb(231, 199, 111)",22:"rgb(90, 101, 94)",23:"rgb(204, 153, 0)",24:"rgb(153, 204, 0)",25:"rgb(51, 204, 0)",26:"rgb(0, 204, 51)",27:"rgb(0, 204, 153)",28:"rgb(0, 153, 204)",29:"rgb(10, 71, 255)",30:"rgb(71, 117, 255)",31:"rgb(255, 194, 10)",32:"rgb(255, 209, 71)",33:"rgb(153, 0, 51)",34:"rgb(153, 26, 0)",35:"rgb(153, 102, 0)",36:"rgb(128, 153, 0)",37:"rgb(51, 153, 0)",38:"rgb(0, 153, 26)",39:"rgb(0, 153, 102)",40:"rgb(0, 128, 153)",41:"rgb(0, 51, 153)",42:"rgb(26, 0, 153)",43:"rgb(102, 0, 153)",44:"rgb(153, 0, 128)",45:"rgb(214, 0, 71)",46:"rgb(255, 20, 99)",47:"rgb(0, 214, 143)",48:"rgb(20, 255, 177)"};for(let BA of Object.keys(ey)){ey["chr"+BA]=ey[BA]}for(let MA=1;MA<=48;MA++){if(10===MA)continue;const RA=ty(MA);ey[RA]=ey[MA.toString()]}function ty(e){if(!+e)return!1;for(var t=String(+e).split(""),i=["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM","","X","XX","XXX","XL","L","LX","LXX","LXXX","XC","","I","II","III","IV","V","VI","VII","VIII","IX"],n="",r=3;r--;)n=(i[+t.pop()+10*r]||"")+n;return Array(+t.join("")+1).join("M")+n}class iy extends Hl{constructor(e,t){super(e,t)}init(e){super.init(e),this.useChrColors=void 0===e.useChrColors||e.useChrColors,this.trait=e.trait,this.posteriorProbability=e.posteriorProbability,this.valueProperty="bed"===e.format?"score":"value",this.height=e.height||100,this.autoscale=e.autoscale,this.autoscalePercentile=void 0===e.autoscalePercentile?98:e.autoscalePercentile,this.background=e.background,this.divider=e.divider||"rgb(225,225,225)",this.dotSize=e.dotSize||3,this.popoverWindow=void 0===e.popoverWindow?1e8:e.popoverWindow,this.useChrColors?this.colorScale=new ao(e.colorTable||ey):e.color?this.colorScale=new uf(e.color):this.colorScale=new hf(e.colorScale||{thresholds:[5e-8,5e-4,.5],colors:["rgb(255,50,50)","rgb(251,100,100)","rgb(251,170,170)","rgb(227,238,249)"]}),this.featureSource=wd(e,this.browser.genome)}async postInit(){if("function"!=typeof this.featureSource.getHeader||(this.header=await this.featureSource.getHeader(),!this.disposed))return this.header&&this.setTrackProperties(this.header),this.autoscale||(this.posteriorProbability?this.dataRange={min:void 0===this.config.min?0:this.config.min,max:void 0===this.config.max?1:this.config.max}:this.dataRange={min:void 0===this.config.min?0:this.config.min,max:void 0===this.config.max?25:this.config.max}),this}get supportsWholeGenome(){return!0}async getFeatures(e,t,i){const n=this.visibilityWindow;return this.featureSource.getFeatures({chr:e,start:t,end:i,visibilityWindow:n})}draw(e){const t=e.features,i=e.context,n=e.pixelWidth,r=e.pixelHeight;if(this.background&&xo.fillRect(i,0,0,n,r,{fillStyle:this.background}),xo.strokeLine(i,0,r-1,n,r-1,{strokeStyle:this.divider}),t){const s=e.bpPerPixel,o=e.bpStart,a=o+n*s+1;for(let e of t){const t=e.start;if(t<o)continue;if(t>a)break;let n;if(this.posteriorProbability)n=e[this.valueProperty];else{const t=e[this.valueProperty];if(!t)continue;n=-Math.log10(t)}const c=this.useChrColors?e._f?e._f.chr:e.chr:n,l=this.colorScale.getColor(c),h=(this.dataRange.max-this.dataRange.min)/r,d=Math.round((t-o)/s),u=Math.max(this.dotSize,r-Math.round((n-this.dataRange.min)/h));l&&xo.setProperties(i,{fillStyle:l,strokeStyle:"black"}),xo.fillCircle(i,d,u,this.dotSize),e.px=d,e.py=u}}}paintAxis(e,t,i){xo.fillRect(e,0,0,t,i,{fillStyle:"rgb(255, 255, 255)"});var n={font:"normal 10px Arial",textAlign:"right",strokeStyle:"black"};const r=(this.dataRange.max-this.dataRange.min)/i;if(this.posteriorProbability){const t=.1;for(let s=this.dataRange.min;s<this.dataRange.max;s+=t){const t=i-Math.round((s-this.dataRange.min)/r);xo.strokeLine(e,45,t-2,50,t-2,n),xo.fillText(e,s.toFixed(1),44,t+2,n)}}else{const t=Math.ceil(10*(this.dataRange.max-this.dataRange.min)/i);for(let s=this.dataRange.min;s<this.dataRange.max;s+=t){const t=i-Math.round((s-this.dataRange.min)/r);xo.strokeLine(e,45,t,50,t,n),xo.fillText(e,Math.floor(s),44,t+4,n)}}n.textAlign="center",this.posteriorProbability?xo.fillText(e,"PPA",t/2,i/2,n,{rotate:{angle:-90}}):xo.fillText(e,"-log10(pvalue)",t/2,i/2,n,{rotate:{angle:-90}})}popupData(e,t){void 0===t&&(t=e.viewport.cachedFeatures);let i=[];const n=e.viewport.trackView.track;if(t){let r=0;for(let s of t){const t=Math.abs(e.canvasX-s.px),o=Math.abs(e.canvasY-s.py);if(t<this.dotSize&&o<this.dotSize){if(r>0&&i.push("<HR/>"),5==r){i.push("...");break}if(s=s._f||s,"function"==typeof s.popupData)i=i.concat(s.popupData());else{const e=s[this.valueProperty],t=s.chr,r=Rt(s.start+1);i.push({name:"chromosome",value:t}),i.push({name:"position",value:r}),i.push({name:"name",value:s.name}),n.posteriorProbability?i.push({name:"posterior probability",value:e}):i.push({name:"pValue",value:e})}r++}}}return i}menuItemList(){return this.numericDataMenuItems()}doAutoscale(e){if(e.length>0){const t=this.valueProperty,i=this.posteriorProbability,n=e.map((function(e){const n=e[t];return{value:i?n:-Math.log(n)/Math.LN10}}));this.dataRange=Qa(n)}else this.posteriorProbability?this.dataRange={min:this.config.min||0,max:this.config.max||1}:this.dataRange={min:this.config.max||25,max:this.config.min||0};return this.dataRange}}class ny extends Hl{constructor(e,t){super(e,t)}init(e){super.init(e),this.autoscale=e.autoscale||void 0===e.max,this.dataRange={min:e.min||0,max:e.max},this.windowFunction=e.windowFunction||"mean",this.paintAxis=Yu,this.graphType=e.graphType||"bar",e._featureSource?(this.featureSource=e._featureSource,delete e._featureSource):this.featureSource=wd(this.config,this.browser.genome),this.visibilityWindow=-1,this.featureSource.visibilityWindow=this.visibilityWindow}async postInit(){if("function"==typeof this.featureSource.getHeader){if(this.header=await this.featureSource.getHeader(),this.disposed)return;if(this.sampleKeys=this.header.columnNames.slice(3),this.setTrackProperties(this.header),this.header.hasOwnProperty("clickToHighlight")){let e=this.header.clickToHighlight;this.config.clickToHighlight=e,this.config.samplesClickedToHighlight={}}if(this.header.hasOwnProperty("highlight")){this.config.highlightSamples={};let e=this.header.highlight;Array.isArray(e)||(e=[e]);for(let t of e){const e=t.split(";");2===e.length&&(this.config.highlightSamples[e[0]]=e[1])}}}}menuItemList(){return this.numericDataMenuItems()}async getFeatures(e,t,i){const n=await this.featureSource.getFeatures({chr:e,start:0,end:Number.MAX_SAFE_INTEGER,visibilityWindow:this.visibilityWindow});let r,s;for(let e=1;e<n.length-1;e++)if(void 0===r&&n[e].end>t&&(r=e-1),void 0===s&&n[e].start>i){s=e+1;break}return void 0===r&&(r=0),void 0===s&&(s=n.length),n.slice(r,s)}draw(e){const{features:t,context:i,bpPerPixel:n,bpStart:r,pixelWidth:s,pixelHeight:o}=e,a=e=>(this.dataRange.max-e)/(this.dataRange.max-this.dataRange.min)*o,c=function(e){let t=Math.floor((e-r)/n);return isNaN(t)&&console.warn("isNaN(x). feature start "+Rt(e)+" bp start "+Rt(r)),t};if(t&&t.length>0&&(void 0===this.dataRange.min&&(this.dataRange.min=0),this.dataRange.max>this.dataRange.min)){const e=this.config.highlightSamples,n=this.config.onlyHandleClicksForHighlightedSamples,r=this.config.clickToHighlight;let s=-1,o={},l=[],h=[];this.clickDetectorCache={};for(let d of t){const t=c(d.start),u=c(d.end),f=s>=0?c(s):t;if(!isNaN(t)&&!isNaN(u)){this.clickDetectorCache[t]=[],this.clickDetectorCache[u]=[];for(let s=0;s<d.values.length;s++){const c=this.sampleKeys[s],p=d.values[s],g=a(p);if(t-f>=1){const s=o[c],h=a(s),d=e&&e[c];d?l.push([f,h,t,g,d]):r&&c in this.config.samplesClickedToHighlight?l.push([f,h,t,g,this.config.samplesClickedToHighlight[c]]):xo.strokeLine(i,f,h,t,g,{strokeStyle:"#D9D9D9"}),n&&!(c in e)||this.clickDetectorCache[t].push([f,h,t,g,c,d||"gray"])}if(u-t>=1){const s=e&&e[c];s?h.push([t,g,u,g,s]):r&&c in this.config.samplesClickedToHighlight?h.push([t,g,u,g,this.config.samplesClickedToHighlight[c]]):xo.strokeLine(i,t,g,u,g,{strokeStyle:"gray"}),n&&!(c in e)||this.clickDetectorCache[u].push([t,g,u,g,c,s||"gray"])}o[c]=p}s=d.end}}for(let e of l)xo.strokeLine(i,e[0],e[1],e[2],e[3],{strokeStyle:e[4],lineWidth:1.3});for(let e of h)xo.strokeLine(i,e[0],e[1],e[2],e[3],{strokeStyle:e[4],lineWidth:2})}(e=>{if(this.config.hasOwnProperty("guideLines"))for(let t of this.config.guideLines)if(t.hasOwnProperty("color")&&t.hasOwnProperty("y")&&t.hasOwnProperty("dotted")){let i=a(t.y),n={strokeStyle:t.color,strokeWidth:2};t.dotted?xo.dashedLine(e.context,0,i,e.pixelWidth,i,5,n):xo.strokeLine(e.context,0,i,e.pixelWidth,i,n)}})(e)}doAutoscale(e){let t,i;return e.length>0?(t=Number.MAX_VALUE,i=-Number.MAX_VALUE,e.forEach((function(e){t=Math.min(t,...e.values),i=Math.max(i,...e.values)})),t-=.01,i+=.01):(t=0,i=100),{min:t,max:i}}clickedFeatures(e){const t=e.canvasX,i=e.canvasY;let n=null;for(n of Object.keys(this.clickDetectorCache))if(n=parseInt(n),n>=t)break;if(n){let e=Number.MAX_VALUE,o=[];const a=this.clickDetectorCache[n];for(let n of a){const r=n[0],s=n[2];if(t<r||t>s)return[];const a=n[1],c=n[3];if(i<Math.min(a,c)-10||i>Math.max(a,c)+10)continue;const l=ry(t,i,r,a,s,c);l<e&&(o=[{name:n[4],color:n[5]}],e=l)}if(e<5){if(this.config.clickToHighlight){if(o[0].name in this.config.samplesClickedToHighlight)delete this.config.samplesClickedToHighlight[o[0].name];else if("any"===this.config.clickToHighlight){var r=["red","darkblue","green","teal","olivedrab","orange","maroon","purple","blue","gold"],s=r[Math.floor(Math.random()*(r.length+1))];this.config.samplesClickedToHighlight[o[0].name]=s}else this.config.samplesClickedToHighlight[o[0].name]=this.config.clickToHighlight;this.trackView.repaintViews()}return o}}return[]}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=[];return t.forEach((function(e){for(let t of Object.keys(e))Ua(e[t])&&i.push({name:t,value:e[t]})})),i}get supportsWholeGenome(){return!1}}function ry(e,t,i,n,r,s){const o=r-i,a=s-n,c=Math.abs(o*(n-t)-(i-e)*a),l=Math.sqrt(o*o+a*a);return l>0?c/l:0}class sy extends Hl{static defaults={height:300,theta:Math.PI/2,arcOrientation:"UP"};constructor(e,t){super(e,t),!1===e.arcOrientation?this.arcOrientation="DOWN":!0===e.arcOrientation?this.arcOrientation="UP":e.arcOrientation?this.arcOrientation=e.arcOrientation.toUpperCase():this.arcOrientation="UP","bp"===e.format?this.featureSource=new ay(e,t.genome):this.featureSource=new Ph(e,t.genome)}async getFeatures(e,t,i){const n=this.visibilityWindow;return this.featureSource.getFeatures({chr:e,start:t,end:i,visibilityWindow:n})}draw(e){const t=e.context,i=Math.PI/2,n=e.pixelWidth,r=e.pixelHeight;e.viewportWidth;const s=e.bpPerPixel,o=e.bpStart,a=s,c="UP"===this.arcOrientation;xo.fillRect(t,0,e.pixelTop,n,r,{fillStyle:"rgb(255, 255, 255)"});const l=e.features;if(l){oy(l,1);for(let e of l)if(e.startLeft){let n=Math.round((e.startLeft-o)/a),r=Math.round((e.startRight-o)/a),s=Math.round((e.endLeft-o)/a),l=Math.round((e.endRight-o)/a);t.fillStyle=e.color,t.strokeStyle=e.color,t.beginPath();let h=(n+l)/2,d=(l-n)/2,u=this.height,f=Math.PI+(Math.PI/2-i),p=2*Math.PI-(Math.PI/2-i);c?(t.arc(h,u,d,f,p),t.lineTo(s,u)):(u=0,t.arc(h,u,d,p,f),t.lineTo(l,u));const g=(r+s)/2,m=(s-r)/2,w=u;c?(t.arc(g,w,m,p,f,!0),t.lineTo(n,w)):(t.arc(g,w,m,f,p,!0),t.lineTo(s,w)),t.stroke(),t.fill(),e.drawState={x1:h,y1:u,r1:d,x2:g,y2:w,r2:m,sa:f,ea:p}}else{let n=Math.round((e.start-o)/a),r=Math.round((e.end-o)/a);t.strokeStyle=e.color,t.beginPath();let s=(n+r)/2,l=(r-n)/2,h=this.height,d=Math.PI+(Math.PI/2-i),u=2*Math.PI-(Math.PI/2-i);c?t.arc(s,h,l,d,u):(h=0,t.arc(s,h,l,u,d)),t.stroke(),e.drawState={x1:s,y1:h,r1:l,sa:d,ea:u}}}}clickedFeatures(e){const t=super.clickedFeatures(e),i=[];oy(t,-1);for(let n of t){const t=n.drawState,r=e.canvasX-t.x1,s=e.canvasY-t.y1,o=Math.sqrt(r*r+s*s),a=t.r1+3;let c,l;if(void 0===t.x2)c=o,l=t.r1-3;else{const i=e.canvasX-t.x2,n=e.canvasY-t.y2;c=Math.sqrt(i*i+n*n),l=t.r2-3}if(o<a&&c>l){i.push(n);break}}return i}popupData(e,t){if(void 0===t&&(t=this.clickedFeatures(e)),t&&t.length>0)return this.extractPopupData(t[0],this.getGenomeId())}menuItemList(){return[{name:"Toggle arc direction",click:function(){this.arcOrientation="UP"===this.arcOrientation?"DOWN":"UP",this.trackView.repaintViews()}}]}}function oy(e,t){e.sort((function(e,i){const n=void 0===e.score?-Number.MAX_VALUE:e.score,r=void 0===i.score?-Number.MAX_VALUE:i.score;return(void 0===t?1:t)*(n-r)}))}class ay{constructor(e,t){this.config=e,this.genome=t}async getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r}){const s=this.genome;if(this.featureCache)return this.featureCache.queryFeatures(e,t,i);{const n=qa(this.config),r=await Qs.loadByteArray(this.config.url,n);return this.featureCache=new Zs(function(e){if(!e)return null;const t=mh(e);let i,n=!0;const r=[],s=[],o=[];for(;void 0!==(i=t.nextLine());){const e=i.split("\t");if(n&&i.startsWith("color:")){const t="rgb("+e[1]+","+e[2]+","+e[3]+")";r.push(t),e.length>4&&s.push(e[4])}else{n=!1;const t=e[0],i=Number.parseInt(e[1])-1,c=Number.parseInt(e[2])-1,l=Number.parseInt(e[3]),h=Number.parseInt(e[4]);var a=Number.parseInt(e[5]);const d=r[a];let u;u=i<=h?{chr:t,startLeft:Math.min(i,c),startRight:Math.max(i,c),endLeft:Math.min(l,h),endRight:Math.max(l,h),color:d,score:a}:{chr:t,startLeft:Math.min(l,h),startRight:Math.max(l,h),endLeft:Math.min(i,c),endRight:Math.max(i,c),color:d,score:a},u.start=u.startLeft,u.end=u.endRight,s.length>a&&(u.description=s[a]),o.push(u)}}return o}(r),s),this.featureCache.queryFeatures(e,t,i)}}}class cy{constructor(e){this.browser=e,this.type="ideogram",this.height=16,this.order=Number.MIN_SAFE_INTEGER,this.disableButtons=!0,this.ignoreTrackMenu=!0}computePixelHeight(e){return this.height}draw({context:e,referenceFrame:t,pixelWidth:i,pixelHeight:n,features:r}){const s=t.chr,o=t.genome.getChromosome(s);if(void 0===o||i<=0||n<=0||"all"===s.toLowerCase())return;!function({ctx:e,chr:t,referenceFrame:i,genome:n,width:r,height:s,stainColors:o,features:a}){const c=1,l=.5*c,h=0;if(void 0===n)return;xo.fillRect(e,0,0,r,s,{fillStyle:_s.greyScale(255)});const d=a;if(d){const t=h+s/2,i=[],n=[];if(0===d.length)return;const a=r/d[d.length-1].end;e.beginPath(),xo.roundRect(e,l,l+h,r-2*l,s-2*l,(s-2*l)/2,0,1),e.clip();for(let r=0;r<d.length;r++){const l=d[r],u=a*l.start,f=a*l.end;"c"===l.type?("p"===l.name.charAt(0)?(i[0]=u,n[0]=s+h,i[1]=u,n[1]=h,i[2]=f,n[2]=t):(i[0]=f,n[0]=s+h,i[1]=f,n[1]=h,i[2]=u,n[2]=t),e.fillStyle="rgb(150, 0, 0)",e.strokeStyle="rgb(150, 0, 0)",xo.polygon(e,i,n,1,0)):(e.fillStyle=ly(o,l),xo.fillRect(e,u,c+h,f-u,s-2*c))}}e.strokeStyle=_s.greyScale(41),xo.roundRect(e,l,l+h,r-2*l,s-2*l,(s-2*l)/2,0,1)}({ctx:e,features:r,chr:s,referenceFrame:t,genome:t.genome,width:i,height:n,stainColors:[]});const a=Math.round(t.bpPerPixel*i),c=t.start;let l=o.bpLength;const h=t.genome.getCytobands(s);if(h&&h.length>0&&h[h.length-1].end&&(l=Math.max(l,h[h.length-1].end),o.bpLength=l),a<l){const t=a/l,r=c/l;let s=Math.floor(r*i),o=Math.floor(t*i);s=Math.max(0,s),s=Math.min(i-o,s),e.save(),e.strokeStyle="red",e.lineWidth=o<2?1:2;const h=s+e.lineWidth/2;o=o<2?1:o-e.lineWidth;const d=e.lineWidth/2,u=n-e.lineWidth;e.strokeRect(h,d,o,u),e.restore()}}dispose(){this.trackView=void 0}}function ly(e,t){if("c"===t.type)return"rgb(150, 10, 10)";var i=t.stain,n=230;"p"===t.type&&(n=Math.floor(230-i/100*230));var r=e[n];return r||(r="rgb("+n+","+n+","+n+")",e[n]=r),r}let hy=new oo("Dark2");["GT/AG","CT/AC","GC/AG","CT/GC","AT/AC","GT/AT","non-canonical"].forEach((e=>{hy.getColor(e)}));class dy extends Hl{static defaults={margin:10,colorByNumReadsThreshold:5,height:100};constructor(e,t){super(e,t)}init(e){super.init(e),this.type=e.type||"junctions",e._featureSource?(this.featureSource=e._featureSource,delete e._featureSource):this.featureSource=e.featureSource?e.featureSource:wd(e,this.browser.genome)}async postInit(){if("function"!=typeof this.featureSource.getHeader||(this.header=await this.featureSource.getHeader(),!this.disposed))return this.header&&this.setTrackProperties(this.header),void 0===this.visibilityWindow&&"function"==typeof this.featureSource.defaultVisibilityWindow&&(this.visibilityWindow=await this.featureSource.defaultVisibilityWindow()),this}get supportsWholeGenome(){return!1}async getFeatures(e,t,i,n){const r=this.visibilityWindow;return this.featureSource.getFeatures({chr:e,start:t,end:i,bpPerPixel:n,visibilityWindow:r})}computePixelHeight(e){return this.height}draw(e){const t=e.features,i=e.context,n=e.bpPerPixel,r=e.bpStart,s=e.pixelWidth,o=e.pixelHeight,a=r+s*n+1;if(this.isMergedTrack||xo.fillRect(i,0,e.pixelTop,s,o,{fillStyle:"rgb(255, 255, 255)"}),t){const s={};s.referenceFrame=e.viewport.referenceFrame,s.referenceFrameStart=s.referenceFrame.start,s.referenceFrameEnd=s.referenceFrameStart+s.referenceFrame.toBP(e.viewport.getWidth()),s.featureZoomOutTracker={};for(let e of t)if(!(e.end<r)){if(e.start>a)break;this.renderJunction(e,r,n,o,i,s)}}else console.log("No feature list")}renderJunction(e,t,i,n,r,s){e.isVisible=!1;const o=Math.round((e.start-t)/i),a=Math.round((e.end-t)/i),c=(o+a)/2;if(a-o<=3){if(c in s.featureZoomOutTracker)return;s.featureZoomOutTracker[c]=!0}if(this.config.hideAnnotatedJunctions&&"true"===e.attributes.annotated_junction)return;if(this.config.hideUnannotatedJunctions&&"false"===e.attributes.annotated_junction)return;if(this.config.hideMotifs&&this.config.hideMotifs.includes(e.attributes.motif))return;if(this.config.hideStrand===e.strand)return;if(this.config.minJunctionEndsVisible){let t=0;if(e.start>=s.referenceFrameStart&&e.start<=s.referenceFrameEnd&&(t+=1),e.end>=s.referenceFrameStart&&e.end<=s.referenceFrameEnd&&(t+=1),t<this.config.minJunctionEndsVisible)return}let l,h,d,u;if(e.attributes.uniquely_mapped){if(l=parseInt(e.attributes.uniquely_mapped),l<this.config.minUniquelyMappedReads)return;if(h=parseInt(e.attributes.multi_mapped),d=l+h,d<this.config.minTotalReads)return;if(d>0&&h/d>this.config.maxFractionMultiMappedReads)return;if(e.attributes.maximum_spliced_alignment_overhang&&parseInt(e.attributes.maximum_spliced_alignment_overhang)<this.config.minSplicedAlignmentOverhang)return}if(e.attributes.num_samples_with_this_junction){if(u=parseInt(e.attributes.num_samples_with_this_junction),this.config.minSamplesWithThisJunction&&u<this.config.minSamplesWithThisJunction)return;if(this.config.maxSamplesWithThisJunction&&u>this.config.maxSamplesWithThisJunction)return;if(e.attributes.num_samples_total&&(e.attributes.percent_samples_with_this_junction=100*u/Number(e.attributes.num_samples_total),this.config.minPercentSamplesWithThisJunction&&(e.attributes.percent_samples_with_this_junction<this.config.minPercentSamplesWithThisJunction||e.attributes.percent_samples_with_this_junction>this.config.maxPercentSamplesWithThisJunction)))return}const f=this.margin,p=n,g=f+.5*p;let m=f;const w=f+p-10,b=(o+c)/2,F=(c+a)/2;let v,y,A=1;e.attributes.line_width?A=Number(e.attributes.line_width):(void 0===this.config.thicknessBasedOn||"numUniqueReads"===this.config.thicknessBasedOn?A=l:"numReads"===this.config.thicknessBasedOn?A=d:"numSamplesWithThisJunction"===this.config.thicknessBasedOn&&void 0!==u&&(A=u),A=1+Math.log(A+1)/Math.log(12)),void 0===this.config.bounceHeightBasedOn||"random"===this.config.bounceHeightBasedOn?v=(e.start+e.end)%7:"distance"===this.config.bounceHeightBasedOn?v=6*(e.end-e.start)/(s.referenceFrameEnd-s.referenceFrameStart):"thickness"===this.config.bounceHeightBasedOn&&(v=2*A),m+=p*Math.max(7-v,0)/10,y=e.attributes.color?e.attributes.color:void 0===this.config.colorBy||"numUniqueReads"===this.config.colorBy?l>this.config.colorByNumReadsThreshold?"blue":"#AAAAAA":"numReads"===this.config.colorBy?d>this.config.colorByNumReadsThreshold?"blue":"#AAAAAA":"isAnnotatedJunction"===this.config.colorBy?"true"===e.attributes.annotated_junction?"#b0b0ec":"orange":"strand"===this.config.colorBy?"+"===e.strand?"#b0b0ec":"#ecb0b0":"motif"===this.config.colorBy?hy.getColor(e.attributes.motif):"#AAAAAA";let C="";e.attributes.label?C=e.attributes.label.replace(/_/g," "):void 0===this.config.labelWith||"uniqueReadCount"===this.config.labelWith?C=l:"totalReadCount"===this.config.labelWith?C=d:"numSamplesWithThisJunction"===this.config.labelWith?void 0!==u&&(C=u):"percentSamplesWithThisJunction"===this.config.labelWith?void 0!==e.attributes.percent_samples_with_this_junction&&(C=e.attributes.percent_samples_with_this_junction.toFixed(0)+"%"):"motif"===this.config.labelWith&&void 0!==e.attributes.motif&&(C+=e.attributes.motif),"uniqueReadCount"===this.config.labelWithInParen?C+=" ("+l+")":"totalReadCount"===this.config.labelWithInParen?C+=" ("+d+")":"multiMappedReadCount"===this.config.labelWithInParen?h>0&&(C+=" (+"+h+")"):"numSamplesWithThisJunction"===this.config.labelWithInParen?void 0!==u&&(C+=" ("+u+")"):"percentSamplesWithThisJunction"===this.config.labelWithInParen?void 0!==e.attributes.percent_samples_with_this_junction&&(C+=" ("+e.attributes.percent_samples_with_this_junction.toFixed(0)+"%)"):"motif"===this.config.labelWithInParen&&void 0!==e.attributes.motif&&(C+=` ${e.attributes.motif}`),e.isVisible=!0,r.beginPath(),r.moveTo(o,w),r.bezierCurveTo(b,m,F,m,a,w),r.lineWidth=A,r.strokeStyle=y,r.stroke();const _=(e,t,i,n)=>{e.beginPath(),e.moveTo(t,i),e.lineTo(t-n/2,i-n),e.lineTo(t+n/2,i-n),e.lineTo(t,i),e.closePath(),e.fill()};if(e.attributes.left_shape||e.attributes.right_shape){r.fillStyle=y;const t=r.lineWidth>2?10:7;e.attributes.left_shape&&_(r,o,w,t),e.attributes.right_shape&&_(r,a,w,t)}r.fillText(C,c-r.measureText(C).width/2,(7*m+g)/8)}clickedFeatures(e){return super.clickedFeatures(e).filter((function(e){return e.isVisible&&e.attributes}))}popupData(e,t){void 0===t&&(t=this.clickedFeatures(e));const i=e.genomicLocation,n=[];for(let e of t){const t="function"==typeof e.popupData?e.popupData(i):this.extractPopupData(e._f||e,this.getGenomeId());t&&(n.length>0&&n.push("<hr/><hr/>"),Array.prototype.push.apply(n,t))}return n}dispose(){this.trackView=void 0}}const uy=new Map([["ideogram",(e,t)=>new cy(e,t)],["sequence",(e,t)=>new Gd(e,t)],["feature",(e,t)=>new Rd(e,t)],["seg",(e,t)=>new Hf(e,t)],["mut",(e,t)=>new Hf(e,t)],["maf",(e,t)=>new Hf(e,t)],["shoebox",(e,t)=>new Hf(e,t)],["wig",(e,t)=>new cf(e,t)],["merged",(e,t)=>new Xu(e,t)],["alignment",(e,t)=>new Jm(e,t)],["interaction",(e,t)=>new ew(e,t)],["interact",(e,t)=>new ew(e,t)],["variant",(e,t)=>new $v(e,t)],["qtl",(e,t)=>new Jv(e,t)],["eqtl",(e,t)=>new Jv(e,t)],["gwas",(e,t)=>new iy(e,t)],["arc",(e,t)=>new sy(e,t)],["gcnv",(e,t)=>new ny(e,t)],["junction",(e,t)=>new dy(e,t)],["blat",(e,t)=>new Pd(e,t)],["cnvpytor",(e,t)=>new jv(e,t)]]);class fy{constructor(e,t){const i=(new DOMParser).parseFromString(e,"text/xml");this.processRootNode(i,t);const n=i.getElementsByTagName("Resource"),r=i.getElementsByTagName("Track"),s=r&&r.length>0,o=[];this.tracks=o;const a=new Map;Array.from(n).forEach((function(e,t){var i={url:e.getAttribute("path"),indexURL:e.getAttribute("index"),order:t};a.set(i.url,i),s||o.push(i)})),s&&Array.from(r).forEach((function(e){const t=e.getElementsByTagName("Track");if(t&&t.length>0){const i={type:"merged",tracks:[]};py(e,i),o.push(i),Array.from(t).forEach((function(e){e.processed=!0;const t=e.getAttribute("id"),n=a.get(t);n&&(i.tracks.push(n),py(e,n),n.autoscale=!1,i.height=n.height)}))}else if(!e.processed){const t=e.getAttribute("id"),i=a.get(t);i&&(o.push(i),py(e,i))}}))}processRootNode(e,t){const i=e.getElementsByTagName("Session");!i||i.length;const n=i.item(0),r=n.getAttribute("genome"),s=n.getAttribute("locus"),o=n.getAttribute("ucscID");t&&t.hasOwnProperty(r)?this.genome=r:(this.reference={fastaURL:r},o&&(this.reference.id=o)),s&&(this.locus=s)}}function py(e,t){t.name=e.getAttribute("name");const i=e.getAttribute("color");i&&(t.color="rgb("+i+")");const n=e.getAttribute("altColor");i&&(t.altColor="rgb("+n+")");const r=e.getAttribute("height");r&&(t.height=parseInt(r));const s=e.getAttribute("autoScale");s&&(t.autoscale="true"===s);const o=e.getAttribute("autoscaleGroup");o&&(t.autoscaleGroup=o);const a=e.getAttribute("windowFunction");a&&(t.windowFunction=a);const c=e.getAttribute("visibilityWindow")||e.getAttribute("featureVisibilityWindow");c&&(t.visibilityWindow=c);const l=e.getAttribute("indexed");l&&(t.indexed="true"===l);const h=e.getAttribute("normalize");h&&(t.normalize="true"===h);const d=e.getElementsByTagName("DataRange");if(d.length>0){const e=d.item(0);t.min=Number(e.getAttribute("minimum")),t.max=Number(e.getAttribute("maximum")),t.logScale="LOG"===e.getAttribute("type")}}class gy{constructor(e,t,i,n,r){this.genome=e,this.chr=t,this.start=i,this.end=n,this.bpPerPixel=r,this.id=s()}get center(){return(this.start+this.end)/2}get locusSearchString(){return`${this.chr}:${this.start+1}-${this.end}`}extend(e){const t=Math.min(e.start,this.start),i=Math.max(e.end,this.end),n=(i-t)/(this.end-this.start);this.start=t,this.end=i,this.bpPerPixel*=n}calculateEnd(e){return this.start+this.bpPerPixel*e}calculateCenter(e){return this.start+this.bpPerPixel*e/2}calculateBPP(e,t){return(e-this.start)/t}set(e){this.chr=e.chr,this.start=e.start,this.bpPerPixel=e.bpPerPixel}toPixels(e){return e/this.bpPerPixel}toBP(e){return this.bpPerPixel*e}shift(e){this.start+=e,this.end+=e}shiftPixels(e,t,i){const n=this.start,r=e*this.bpPerPixel;return this.start+=r,i&&this.clampStart(t),this.end=this.start+t*this.bpPerPixel,n!==this.start}clampStart(e){const t=this.genome.getChromosome(this.chr).bpStart||0;if(this.start=Math.max(t,this.start),e){const{bpLength:t}=this.genome.getChromosome(this.chr),i=t-e*this.bpPerPixel;this.start>i&&(this.start=i)}}async zoomWithScaleFactor(e,t,i,n){const r=void 0===n?this.start+this.toBP(i/2):n,s=this.start,o=this.bpPerPixel,a=this.getChromosome().bpLength,c=t<1?e.minimumBases()/i:a/i;this.bpPerPixel=t<1?Math.max(this.bpPerPixel*t,c):Math.min(this.bpPerPixel*t,c);const l=this.bpPerPixel*i;this.start=r-.5*l,this.clampStart(i),this.end=this.start+l;(s!==this.start||o!==this.bpPerPixel)&&await e.updateViews(!0)}getChromosome(){return this.genome.getChromosome(this.chr)}getMultiLocusLabelBPLengthOnly(e){const t="&nbsp",i=Math.floor(this.start)+1,n=Math.round(this.start+this.bpPerPixel*e);return`${t}${this.chr}${t}${Ga(n-i)}${t}`}getMultiLocusLabelLocusOnly(e){const t="&nbsp",{chr:i,start:n,end:r}=this.getPresentationLocusComponents(e);return`${t}${i}:${n}-${r}${t}`}getMultiLocusLabel(e){const t="&nbsp",{chr:i,start:n,end:r}=this.getPresentationLocusComponents(e),s=Math.floor(this.start)+1;return`${t}${i}:${n}-${r}${t}${t}(${Ga(Math.round(this.start+this.bpPerPixel*e)-s)})${t}`}getPresentationLocusComponents(e){if("all"===this.chr)return{chr:this.chr};{const t=Rt(Math.floor(this.start)+1),i=Rt(Math.round(this.start+this.bpPerPixel*e));return{chr:this.chr,start:t,end:i}}}getLocusString(){if("all"===this.chr)return"all";return`${this.genome.getChromosomeDisplayName(this.chr)}:${Rt(Math.floor(this.start)+1)}-${Rt(Math.round(this.end))}`}description(e){console.log(` ${e||""} referenceFrame - ${this.chr} bpp ${this.bpPerPixel.toFixed(3)} start ${Rt(Math.round(this.start))} end ${Rt(Math.round(this.end))} `)}overlaps(e){return this.chr===e.chr&&this.end>=e.start&&e.end>=this.start}}function my(){return"3.0.2"}const wy={},by=8;let Fy;function vy(e,t){"igv-navbar-text-button"===Gu.currentNavbarButtonClass(e)&&(Fy=e.$navigation.get(0).querySelector(".igv-navbar-right-container").getBoundingClientRect().width);const i=function(e,t){const i=e.isMultiLocusWholeGenomeView()||e.referenceFrameList&&hu.isWholeGenomeView(e.referenceFrameList[0].chr);i?e.windowSizePanel.hide():e.windowSizePanel.show();const{x:n,width:r}=e.$navigation.get(0).querySelector(".igv-navbar-left-container").getBoundingClientRect(),s=n+r,{x:o}=e.$navigation.get(0).querySelector(".igv-navbar-right-container").getBoundingClientRect(),a=o-s,c=Gu.currentNavbarButtonClass(e);if("igv-navbar-text-button"===c&&a<by)wy.navbarButton="igv-navbar-icon-button";else if(Fy&&"igv-navbar-icon-button"===c){t-s-Fy>by&&(wy.navbarButton="igv-navbar-text-button")}wy.zoomContainer=i?"igv-zoom-widget-hidden":t>860?"igv-zoom-widget":"igv-zoom-widget-900";return wy}(e,t);Bt(e.zoomWidget.zoomContainer).removeClass(),Bt(e.zoomWidget.zoomContainer).addClass(i.zoomContainer),e.fireEvent("navbar-resize",[i.navbarButton])}const yy="Maximum sequence count exceeded";class Ay{constructor(t,i){this.container=e({class:"igv-chromosome-select-widget-container"}),i.appendChild(this.container),this.select=document.createElement("select"),this.select.setAttribute("name","chromosome-select-widget"),this.container.appendChild(this.select),this.select.addEventListener("change",(()=>{this.select.blur(),""!==this.select.value&&yy!==this.select.value&&t.search(this.select.value)})),this.showAllChromosomes=!1!==t.config.showAllChromosomes}show(){this.container.style.display="flex"}hide(){this.container.style.display="none"}update(e){const t=e.wgChromosomeNames||[];if(this.showAllChromosomes&&e.chromosomeNames.length>1){const i=new Set(t);let n=0;for(let r of e.chromosomeNames){if(1e3==++n){t.push(yy);break}i.has(r)||t.push(r)}}this.select.innerHTML="",e.showWholeGenomeView()&&t.unshift("all");for(let i of t){const t=document.createElement("option");t.setAttribute("value",i),t.innerText=e.getChromosomeDisplayName(i),this.select.appendChild(t)}}}class Cy{constructor(t,i){this.container=e({class:"igv-windowsize-panel-container"}),t.appendChild(this.container),i.on("locuschange",(e=>{this.updatePanel(e)})),this.browser=i}show(){this.container.style.display="block"}hide(){this.container.style.display="none"}updatePanel(e){const t=this.browser.calculateViewportWidth(this.browser.referenceFrameList.length);this.container.innerText=1===e.length?Ga(Math.round(t*e[0].bpPerPixel)):""}}class _y{constructor(t,i){this.browser=i,this.columnContainer=t,this.horizontalGuide=e({class:"igv-cursor-guide-horizontal"}),t.appendChild(this.horizontalGuide),this.verticalGuide=e({class:"igv-cursor-guide-vertical"}),t.appendChild(this.verticalGuide),this.addMouseHandler(i),this.setVisibility(i.config.showCursorGuide)}addMouseHandler(e){this.boundMouseMoveHandler=function(t){t.target.tagName;const{x:i,y:n}=a(t,this.columnContainer);if(this.horizontalGuide.style.top=`${n}px`,"CANVAS"===t.target.tagName){const n=function(e,t){for(;e.parentElement;){if(e.parentElement.classList.contains(t))return e.parentElement;e=e.parentElement}return}(t.target,"igv-viewport");if(n&&e.getRulerTrackView()){this.verticalGuide.style.left=`${i}px`;const r=e.root.querySelectorAll(".igv-column");let s;const o=n.parentElement;for(let e=0;e<r.length;e++)void 0===s&&o===r[e]&&(s=e);if(void 0!==s){const i=e.getRulerTrackView().viewports[s].mouseMove(t);if(i){const{start:e,bp:t,end:n}=i,r=(t-e)/(n-e);this.customMouseHandler&&this.customMouseHandler({start:e,bp:t,end:n,interpolant:r})}}}}}.bind(this),this.columnContainer.addEventListener("mousemove",this.boundMouseMoveHandler)}removeMouseHandler(){this.columnContainer.removeEventListener("mousemove",this.boundMouseMoveHandler)}setVisibility(e){!0===e?this.show():this.hide()}show(){this.verticalGuide.style.display="block",this.horizontalGuide.style.display="block"}hide(){if(this.verticalGuide.style.display="none",this.horizontalGuide.style.display="none",this.browser.getRulerTrackView())for(let e of this.browser.getRulerTrackView().viewports)e.$tooltip.hide()}}class xy extends Gu{constructor(e,t){super(e,t,"Crosshairs",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>cursor</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="cursor" stroke="#737373">\n            <rect id="Rectangle-Copy-3" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="Group" transform="translate(5, 9)" stroke-width="24">\n                <line x1="0.5" y1="212.5" x2="614.5" y2="212.5" id="Line"></line>\n                <line x1="-115.5" y1="303.5" x2="490.5" y2="303.5" id="Line-Copy" transform="translate(187.5, 303.5) scale(-1, 1) rotate(90) translate(-187.5, -303.5)"></line>\n            </g>\n            <circle id="Oval" stroke-width="24" cx="191.5" cy="221.5" r="88.5"></circle>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>cursor hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="cursor-hover">\n            <rect id="Rectangle-Copy-5" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="Group-Copy-2" transform="translate(5, 9)" stroke="#FFFFFF" stroke-width="24">\n                <line x1="0.5" y1="212.5" x2="614.5" y2="212.5" id="Line"></line>\n                <line x1="-115.5" y1="303.5" x2="490.5" y2="303.5" id="Line-Copy" transform="translate(187.5, 303.5) scale(-1, 1) rotate(90) translate(-187.5, -303.5)"></line>\n            </g>\n            <circle id="Oval" stroke="#FFFFFF" stroke-width="24" cx="191.5" cy="221.5" r="88.5"></circle>\n        </g>\n    </g>\n</svg>',e.doShowCursorGuide),this.button.addEventListener("mouseenter",(()=>{!1===e.doShowCursorGuide&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===e.doShowCursorGuide&&this.setState(!1)}));this.boundMouseClickHandler=(()=>{e.doShowCursorGuide=!e.doShowCursorGuide,e.setCursorGuideVisibility(e.doShowCursorGuide),this.setState(e.doShowCursorGuide)}).bind(this),this.button.addEventListener("click",this.boundMouseClickHandler),this.setVisibility(e.config.showCursorTrackingGuideButton)}}class ky extends Gu{constructor(e,t){super(e,t,"Center Line",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>centerline</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="centerline" stroke="#737373">\n            <rect id="Rectangle-Copy-2" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <line x1="6.5" y1="312.5" x2="618.5" y2="312.5" id="Line-Copy" stroke-width="31" transform="translate(312.5, 312.5) scale(-1, 1) rotate(90) translate(-312.5, -312.5)"></line>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>centerline hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="centerline-hover">\n            <rect id="Rectangle-Copy-9" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <line x1="6.5" y1="312.5" x2="618.5" y2="312.5" id="Line-Copy" stroke="#FFFFFF" stroke-width="31" transform="translate(312.5, 312.5) scale(-1, 1) rotate(90) translate(-312.5, -312.5)"></line>\n        </g>\n    </g>\n</svg>',e.config.showCenterGuide),this.button.addEventListener("mouseenter",(()=>{!1===e.doShowCenterLine&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===e.doShowCenterLine&&this.setState(!1)}));this.boundMouseClickHandler=(()=>{e.doShowCenterLine=!e.doShowCenterLine,e.setCenterLineVisibility(e.doShowCenterLine),this.setState(e.doShowCenterLine)}).bind(this),this.button.addEventListener("click",this.boundMouseClickHandler),this.setVisibility(e.config.showCenterGuideButton)}}class Iy extends Gu{constructor(e,t){super(t,e,"Track Labels",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>track labels</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="track-labels" fill="#FFFFFF" stroke="#737373">\n            <rect id="Rectangle-Copy-27" stroke-width="12" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="group" transform="translate(52.2778, 149.7248)" stroke-width="24">\n                <path d="M448.444444,87.1189616 L448.444444,322.431462 L166.619398,322.431462 L19.2344421,204.775212 L166.619398,87.1189616 L448.444444,87.1189616 Z M244.028212,163.997434 C232.925565,163.997434 222.874656,168.493347 215.598982,175.760254 C208.318067,183.032394 203.815972,193.079106 203.815972,204.175675 C203.815972,215.272243 208.318067,225.318955 215.598982,232.591095 C222.874656,239.858002 232.925565,244.353915 244.028212,244.353915 C255.130858,244.353915 265.181767,239.858002 272.457442,232.591095 C279.738356,225.318955 284.240451,215.272243 284.240451,204.175675 C284.240451,193.079106 279.738356,183.032394 272.457442,175.760254 C265.181767,168.493347 255.130858,163.997434 244.028212,163.997434 Z" id="backdrop"></path>\n                <path d="M495.232604,12 L495.232604,264.550423 L193.616935,264.550423 L35.4455183,138.275212 L193.616935,12 L495.232604,12 Z M168.133512,95.1660194 C156.441871,95.1660194 145.858581,99.8943121 138.197214,107.534302 C130.523695,115.18641 125.780417,125.758499 125.780417,137.434423 C125.780417,149.110347 130.523695,159.682435 138.197214,167.334543 C145.858581,174.974533 156.441871,179.702826 168.133512,179.702826 C179.825153,179.702826 190.408443,174.974533 198.06981,167.334543 C205.743329,159.682435 210.486607,149.110347 210.486607,137.434423 C210.486607,125.758499 205.743329,115.18641 198.06981,107.534302 C190.408443,99.8943121 179.825153,95.1660194 168.133512,95.1660194 Z" id="hero"></path>\n            </g>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>track labels hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="track-labels-hover" stroke="#737373">\n            <rect id="Rectangle-Copy-29" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="group" transform="translate(52.2778, 149.7248)" fill="#FFFFFF" stroke-width="24">\n                <path d="M448.444444,85.1189616 L448.444444,320.431462 L166.619398,320.431462 L19.2344421,202.775212 L166.619398,85.1189616 L448.444444,85.1189616 Z M244.028212,161.997434 C232.925565,161.997434 222.874656,166.493347 215.598982,173.760254 C208.318067,181.032394 203.815972,191.079106 203.815972,202.175675 C203.815972,213.272243 208.318067,223.318955 215.598982,230.591095 C222.874656,237.858002 232.925565,242.353915 244.028212,242.353915 C255.130858,242.353915 265.181767,237.858002 272.457442,230.591095 C279.738356,223.318955 284.240451,213.272243 284.240451,202.175675 C284.240451,191.079106 279.738356,181.032394 272.457442,173.760254 C265.181767,166.493347 255.130858,161.997434 244.028212,161.997434 Z" id="backdrop"></path>\n                <path d="M495.232604,12 L495.232604,264.550423 L193.616935,264.550423 L35.4455183,138.275212 L193.616935,12 L495.232604,12 Z M168.133512,95.1660194 C156.441871,95.1660194 145.858581,99.8943121 138.197214,107.534302 C130.523695,115.18641 125.780417,125.758499 125.780417,137.434423 C125.780417,149.110347 130.523695,159.682435 138.197214,167.334543 C145.858581,174.974533 156.441871,179.702826 168.133512,179.702826 C179.825153,179.702826 190.408443,174.974533 198.06981,167.334543 C205.743329,159.682435 210.486607,149.110347 210.486607,137.434423 C210.486607,125.758499 205.743329,115.18641 198.06981,107.534302 C190.408443,99.8943121 179.825153,95.1660194 168.133512,95.1660194 Z" id="hero"></path>\n            </g>\n        </g>\n    </g>\n</svg>',t.config.showTrackLabels),this.button.addEventListener("mouseenter",(()=>{!1===t.doShowTrackLabels&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===t.doShowTrackLabels&&this.setState(!1)}));this.boundMouseClickHandler=(()=>{t.doShowTrackLabels=!t.doShowTrackLabels,t.setTrackLabelVisibility(t.doShowTrackLabels),this.setState(t.doShowTrackLabels)}).bind(this),this.button.addEventListener("click",this.boundMouseClickHandler),this.setVisibility(t.config.showTrackLabelButton)}}class Sy extends Gu{constructor(e,t){super(t,e,"Sample Names",'<svg width="90px" height="20px" viewBox="0 0 90 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="igv-navbar-button-group">\n            <rect id="Rectangle" x="0.5" y="0.5" width="89" height="18" rx="6"></rect>\n            <text id="igv-text-button-label" x="50%" y="50%" dy=".1em" font-family="Helvetica" font-size="12" font-weight="normal" letter-spacing="-0.372">\n                <tspan id="igv-navbar-button-label"></tspan>\n            </text>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>sample names</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="sample-names" stroke="#737373">\n            <rect id="Rectangle-Copy-13" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <line x1="80" y1="465" x2="541" y2="464.5" id="Line-3-Copy-3" stroke-width="32"></line>\n            <line x1="80" y1="312.5" x2="542" y2="313" id="Line-3" stroke-width="32"></line>\n            <line x1="80" y1="158" x2="541" y2="158" id="Line-3-Copy" stroke-width="32"></line>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>sample names hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="sample-names-hover">\n            <rect id="Rectangle-Copy-18" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <line x1="80" y1="465" x2="541" y2="464.5" id="Line-3-Copy-3" stroke="#FFFFFF" stroke-width="32" fill="#FFFFFF"></line>\n            <line x1="80" y1="312.5" x2="542" y2="313" id="Line-3" stroke="#FFFFFF" stroke-width="32" fill="#FFFFFF"></line>\n            <line x1="80" y1="158" x2="541" y2="158" id="Line-3-Copy" stroke="#FFFFFF" stroke-width="32" fill="#FFFFFF"></line>\n        </g>\n    </g>\n</svg>',t.config.showSampleNames),this.button.addEventListener("mouseenter",(()=>{!1===t.showSampleNames&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===t.showSampleNames&&this.setState(!1)})),this.button.addEventListener("click",(()=>{this.performClickWithState(t,void 0)})),!0===t.config.showSampleNameButton?this.show():this.hide()}performClickWithState(e,t){e.showSampleNames=void 0===t?!e.showSampleNames:t;e.columnContainer.querySelector(".igv-sample-name-column").style.display=!1===e.showSampleNames?"none":"flex",this.setState(e.showSampleNames),e.layoutChange()}}class Ey extends Gu{constructor(e,t){super(t,e,"Sample Info",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>sample info</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="sample-info">\n            <rect id="Rectangle-Copy-6" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="Group-2" transform="translate(8, 149)">\n                <rect id="Rectangle" fill="#8DD3C7" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#FBB4AE" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#7FC97F" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#ADE2CF" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#E41A1C" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#3F70AE" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <g id="Group-2-Copy" transform="translate(8, 251)">\n                <rect id="Rectangle" fill="#E41A1C" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#377EB8" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#FDB46B" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#BC80BD" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#FFFFB3" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#ADE2CF" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <g id="Group-2-Copy-2" transform="translate(314, 404) scale(-1, 1) translate(-314, -404)translate(8, 353)">\n                <rect id="Rectangle" fill="#1B9E77" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#377EB8" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#FDB46B" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#BAD1E9" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#4DAF4A" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#CBF03E" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <rect id="Rectangle-Copy-10" stroke="#737373" stroke-width="12" x="6" y="6" width="613" height="613" rx="135"></rect>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>sample info hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="sample-info-hover">\n            <rect id="Rectangle-Copy-14" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="row-2" transform="translate(314, 404) scale(-1, 1) translate(-314, -404)translate(8, 353)">\n                <rect id="Rectangle" fill="#1B9E77" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#377EB8" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#FDB46B" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#BAD1E9" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#4DAF4A" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#CBF03E" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <g id="row-1" transform="translate(8, 251)">\n                <rect id="Rectangle" fill="#E41A1C" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#377EB8" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#FDB46B" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#BC80BD" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#FFFFB3" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#ADE2CF" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <g id="row-0" transform="translate(8, 149)">\n                <rect id="Rectangle" fill="#8DD3C7" x="0" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy" fill="#FBB4AE" x="102" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-8" fill="#7FC97F" x="204" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#ADE2CF" x="306" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#E41A1C" x="408" y="0" width="102" height="102"></rect>\n                <rect id="Rectangle-Copy-7" fill="#3F70AE" x="510" y="0" width="102" height="102"></rect>\n            </g>\n            <rect id="Rectangle-Copy-15" stroke="#737373" stroke-width="12" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <rect id="scrim" fill="#000000" style="mix-blend-mode: hue;" x="8" y="149" width="612" height="306"></rect>\n        </g>\n    </g>\n</svg>',!1),this.showSampleInfo=!1,this.button.addEventListener("mouseenter",(()=>{!1===this.showSampleInfo&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===this.showSampleInfo&&this.setState(!1)})),this.button.addEventListener("click",(()=>{this.performClickWithState(t,void 0)}))}performClickWithState(e,t){this.showSampleInfo=void 0===t?!this.showSampleInfo:t;e.columnContainer.querySelector(".igv-sample-info-column").style.display=!1===this.showSampleInfo?"none":"flex",this.setState(this.showSampleInfo),e.layoutChange()}setButtonVisibility(e){this.showSampleInfo=e,this.setState(this.showSampleInfo),!0===this.showSampleInfo?this.show():this.hide()}}let Ny=23,By=0;const My=function(t,i){this.browser=t,this.zoomContainer=e({class:"igv-zoom-widget"}),i.appendChild(this.zoomContainer),this.zoomOutButton=e(),this.zoomContainer.appendChild(this.zoomOutButton),this.zoomOutButton.appendChild(l("minus-circle")),this.zoomOutButton.addEventListener("click",(()=>{t.zoomOut()}));const n=e();this.zoomContainer.appendChild(n),this.slider=document.createElement("input"),this.slider.type="range",this.slider.min="0",this.slider.max=`${Ny}`,n.appendChild(this.slider),this.slider.addEventListener("change",(e=>{e.preventDefault(),e.stopPropagation();const i=t.referenceFrameList[0],{bpLength:n}=i.genome.getChromosome(i.chr),{end:r,start:s}=i,o=r-s,a=n/Math.pow(2,e.target.valueAsNumber);t.zoomWithScaleFactor(a/o)})),this.zoomInButton=e(),this.zoomContainer.appendChild(this.zoomInButton),this.zoomInButton.appendChild(l("plus-circle")),this.zoomInButton.addEventListener("click",(()=>{t.zoomIn()})),t.on("locuschange",(e=>{this.browser.isMultiLocusMode()?this.disable():(this.enable(),this.update(e))}))};My.prototype.update=function(e){const t=e[0],{bpLength:i}=t.genome.getChromosome(t.chr),{start:n,end:r}=t;Ny=Math.ceil(Math.log2(i/this.browser.minimumBases())),this.slider.max=`${Ny}`;const s=i/(r-n);By=Math.log2(s),this.slider.value=`${Math.round(By)}`},My.prototype.enable=function(){this.slider.disabled=!1},My.prototype.disable=function(){this.slider.disabled=!0},My.prototype.hide=function(){this.zoomContainer.style.display="none"},My.prototype.show=function(){this.zoomContainer.style.display="block"},My.prototype.hideSlider=function(){this.slider.style.display="none"},My.prototype.showSlider=function(){this.slider.style.display="block"};class Ry{constructor(t,i){this.parent=t,this.popover=e({class:"igv-ui-dropdown"}),t.appendChild(this.popover),this.popoverContent=e(),this.popover.appendChild(this.popoverContent),this.popover.style.display="none",this.shim=i}configure(e){if(0===e.length)return;const t=rc(e,this.popover);for(const{object:e}of t)this.popoverContent.appendChild(e)}present(e){this.popover.style.display="block";let{x:t,y:i}=a(e,this.parent);this.popover.style.left=`${t+this.shim.left}px`,this.popover.style.top=`${i+this.shim.top}px`}_present(e){this.popover.style.display="block";let{x:t,y:i,width:n}=a(e,this.parent);t+=this.shim.left,i+=this.shim.top,this.popover.style.top=`${i}px`;const{width:r}=this.popover.getBoundingClientRect(),s=t+r,o=s-n;this.popover.style.left=`${s>n?t-o:t}px`}dismiss(){this.popover.style.display="none"}}class Dy extends Gu{constructor(e,t){super(t,e,"Save Image",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>save image</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="save-image">\n            <rect id="border" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="frame" transform="translate(66, 66)" fill="#737373" fill-rule="nonzero">\n                <path d="M54.75,493 C39.69375,493 26.8046875,487.639062 16.0828125,476.917187 C5.3609375,466.195312 0,453.30625 0,438.25 L0,274 L54.75,274 L54.75,438.25 L219,438.25 L219,493 L54.75,493 Z" id="Path"></path>\n                <path d="M274,493 L274,438.25 L438.25,438.25 L438.25,274 L493,274 L493,438.25 C493,453.30625 487.639062,466.195312 476.917187,476.917187 C466.195312,487.639062 453.30625,493 438.25,493 L274,493 Z" id="Path"></path>\n                <path d="M0,219 L0,54.75 C0,39.69375 5.3609375,26.8046875 16.0828125,16.0828125 C26.8046875,5.3609375 39.69375,0 54.75,0 L219,0 L219,54.75 L54.75,54.75 L54.75,219 L0,219 Z" id="Path"></path>\n                <path d="M438.25,219 L438.25,54.75 L274,54.75 L274,0 L438.25,0 C453.30625,0 466.195312,5.3609375 476.917187,16.0828125 C487.639062,26.8046875 493,39.69375 493,54.75 L493,219 L438.25,219 Z" id="Path"></path>\n            </g>\n            <rect id="border-hold-out-matte" fill="#FFFFFF" x="91" y="90" width="444" height="444" rx="38"></rect>\n            <g id="artwork" transform="translate(148, 176)" fill="#737373" fill-rule="nonzero">\n                <polygon id="Path" points="0 273 82.25 163.4 143.9375 245.6 226.1875 136 329 273"></polygon>\n                <path d="M260,82 C248.155556,82 238.361111,78.1277778 230.616667,70.3833333 C222.872222,62.6388889 219,52.8444444 219,41 C219,29.1555556 222.872222,19.3611111 230.616667,11.6166667 C238.361111,3.87222222 248.155556,0 260,0 C271.844444,0 281.638889,3.87222222 289.383333,11.6166667 C297.127778,19.3611111 301,29.1555556 301,41 C301,52.8444444 297.127778,62.6388889 289.383333,70.3833333 C281.638889,78.1277778 271.844444,82 260,82 Z" id="Path"></path>\n            </g>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>save image</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="save-image">\n            <rect id="border" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="frame" transform="translate(66, 66)" fill="#737373" fill-rule="nonzero">\n                <path d="M54.75,493 C39.69375,493 26.8046875,487.639062 16.0828125,476.917187 C5.3609375,466.195312 0,453.30625 0,438.25 L0,274 L54.75,274 L54.75,438.25 L219,438.25 L219,493 L54.75,493 Z" id="Path"></path>\n                <path d="M274,493 L274,438.25 L438.25,438.25 L438.25,274 L493,274 L493,438.25 C493,453.30625 487.639062,466.195312 476.917187,476.917187 C466.195312,487.639062 453.30625,493 438.25,493 L274,493 Z" id="Path"></path>\n                <path d="M0,219 L0,54.75 C0,39.69375 5.3609375,26.8046875 16.0828125,16.0828125 C26.8046875,5.3609375 39.69375,0 54.75,0 L219,0 L219,54.75 L54.75,54.75 L54.75,219 L0,219 Z" id="Path"></path>\n                <path d="M438.25,219 L438.25,54.75 L274,54.75 L274,0 L438.25,0 C453.30625,0 466.195312,5.3609375 476.917187,16.0828125 C487.639062,26.8046875 493,39.69375 493,54.75 L493,219 L438.25,219 Z" id="Path"></path>\n            </g>\n            <rect id="border-hold-out-matte" fill="#FFFFFF" x="91" y="90" width="444" height="444" rx="38"></rect>\n            <g id="artwork" transform="translate(148, 176)" fill="#737373" fill-rule="nonzero">\n                <polygon id="Path" points="0 273 82.25 163.4 143.9375 245.6 226.1875 136 329 273"></polygon>\n                <path d="M260,82 C248.155556,82 238.361111,78.1277778 230.616667,70.3833333 C222.872222,62.6388889 219,52.8444444 219,41 C219,29.1555556 222.872222,19.3611111 230.616667,11.6166667 C238.361111,3.87222222 248.155556,0 260,0 C271.844444,0 281.638889,3.87222222 289.383333,11.6166667 C297.127778,19.3611111 301,29.1555556 301,41 C301,52.8444444 297.127778,62.6388889 289.383333,70.3833333 C281.638889,78.1277778 271.844444,82 260,82 Z" id="Path"></path>\n            </g>\n        </g>\n    </g>\n</svg>',!1),this.button.addEventListener("mouseenter",(()=>this.setState(!0))),this.button.addEventListener("mouseleave",(()=>{for(const e of this.button.querySelectorAll("div"))if("block"===e.style.display)return;this.setState(!1)})),this.dropdown=new Ry(this.button.parentNode,{top:24,left:-88});const i=[{label:"Save as SVG",click:e=>{this.browser.saveSVGtoFile("igvjs.svg"),this.dropdown.dismiss()}},{label:"Save as PNG",click:e=>{this.browser.savePNGtoFile("igvjs.png"),this.dropdown.dismiss()}}];this.dropdown.configure(i),this.button.addEventListener("click",(e=>{let t;if(e.target===this.button)t=!0;else if(e.target.closest("svg")){e.target.closest("div")===this.button&&(t=!0)}!0===t&&("none"===this.dropdown.popover.style.display?this.dropdown.present(e):this.dropdown.dismiss())})),this.setVisibility(t.config.showSVGButton)}navbarResizeHandler(e){this.dropdown.dismiss(),super.navbarResizeHandler(e)}}const Ty=(e,t)=>{const i=0===e?t.nextElementSibling:t.previousElementSibling;t.remove(),i.remove()},Ly=t=>{const i=e({class:"igv-column-shim"});Xa(i,t);const n=e({class:"igv-column"});return Xa(n,i),n},zy=(t,i)=>{for(let n=0;n<i;n++){const r=e({class:"igv-column"});if(Ya(r,t),i>1&&n>0){Ya(e({class:"igv-column-shim"}),r)}}};class Hy{constructor(t,i,n){this.browser=t,this.referenceFrame=i,this.column=n,this.container=e({class:"igv-center-line"}),n.appendChild(this.container),t.doShowCenterLine?this.show():this.hide()}repaint(){if(this.referenceFrame){if(1/this.referenceFrame.bpPerPixel>1){const e=Math.floor(this.referenceFrame.toPixels(1));this.container.style.width=`${e}px`,this.container.classList.remove("igv-center-line-thin"),this.container.classList.add("igv-center-line-wide")}else this.container.style.width="1px",this.container.classList.remove("igv-center-line-wide"),this.container.classList.add("igv-center-line-thin")}}show(){this.isVisible=!0,this.container.style.display="block",this.repaint()}hide(){this.isVisible=!1,this.container.style.display="none"}resize(){this.repaint()}}const Py=function(t,i){this.button=e({class:"igv-navbar-button"}),t.appendChild(this.button),this.button.textContent="circular view",this.button.addEventListener("click",(()=>{i.circularViewVisible=!i.circularViewVisible})),this.browser=i,this.setVisibility(i.config.showCircularViewButton),this.setState(i.circularViewVisible)};Py.prototype.setVisibility=function(e){!0===e?this.show():this.hide()},Py.prototype.setState=function(e){!0===e?this.button.classList.add("igv-navbar-button-clicked"):this.button.classList.remove("igv-navbar-button-clicked")},Py.prototype.show=function(){this.button.style.display="block",this.setState(this.browser.circularViewVisible)},Py.prototype.hide=function(){this.button.style.display="none"};const Oy=function(t,i,n){const r=e({class:"igv-navbar-button"});t.append(r),r.textContent=n.label,r.addEventListener("click",(()=>n.callback(i)))};class Uy{constructor(t,i){this.browser=t,this.container=e({class:"igv-roi-menu"}),i.appendChild(this.container);const n=e();this.container.appendChild(n),u(n,(()=>this.container.style.display="none")),this.body=e(),this.container.appendChild(this.body),this.container.style.display="none"}async present(e,t,i,n,r,s){const o=this.menuItems(e,t,i,n,r,s);this.browser.menuPopup.presentTrackContextMenu(i,o)}menuItems(e,t,i,n,r,s){const o=[`<b>${e.name||""}</b>`];return t&&o.push({label:"Set description ...",click:()=>{const t={label:"Description",value:e.name||"",callback:()=>{const t=this.browser.inputDialog.value||"";e.name=t.trim(),this.browser.roiManager.repaintTable()}};this.browser.inputDialog.present(t,i)}}),Za()&&e.end-e.start<1e6&&o.push({label:"Copy reference sequence",click:async()=>{this.container.style.display="none";let t=await this.browser.genome.getSequence(e.chr,e.start,e.end);t||(t="Unknown sequence");try{await navigator.clipboard.writeText(t)}catch(e){console.error(e),this.browser.alert.present(`error copying sequence to clipboard ${e}`)}}}),e.end-e.start<=25e3&&o.push({label:"BLAT reference sequence",click:async()=>{this.container.style.display="none";const{chr:t,start:i,end:n}=e;let r=await this.browser.genome.getSequence(t,i,n);if(r){const e=`blat: ${t}:${i+1}-${n}`,s=`blat: ${t}:${i+1}-${n}`;Od({sequence:r,browser:this.browser,name:e,title:s})}}}),t&&o.push("<hr/>",{label:"Delete",click:()=>{this.browser.roiManager.deleteRegionWithKey(s.dataset.region,this.browser.columnContainer),this.browser.roiManager.repaintTable()}}),o}dispose(){this.container.innerHTML=""}}class qy extends Dd{constructor(e){const t={browser:e,parent:e.columnContainer,headerTitle:"Regions of Interest",dismissHandler:()=>e.roiTableControl.buttonHandler(!1),gotoButtonHandler:qy.gotoButtonHandler};t.columnFormat=qy.getColumnFormatConfiguration(!0),super(Object.assign({width:"640px"},t))}tableRowDOM(t){const i=e({class:"igv-roi-table-row"}),{setName:n,feature:r}=t;i.dataset.region=Gy(r.chr,r.start,r.end);let s=[r.chr,Rt(r.start),Rt(r.end),r.name||"",n];4===this.columnFormat.length&&(s=s.slice(0,4));for(let t=0;t<s.length;t++){const n=e();i.appendChild(n),n.style.width=this.columnFormat[t].width,n.innerText=s[t]}return this.tableRowDOMHelper(i),i}renderTable(e){if(Array.from(this.tableRowContainer.querySelectorAll(".igv-roi-table-row")).forEach((e=>e.remove())),e.length>0){const t=e.sort(((e,t)=>e.feature.chr.localeCompare(t.feature.chr)||e.feature.start-t.feature.start||e.feature.end-t.feature.end));for(let e of t){const t=this.tableRowDOM(e);this.tableRowContainer.appendChild(t)}}}set footerDOM(t){super.footerDOM=t,this.gotoButton.textContent="Go to selected region(s)";const i=e({class:"igv-roi-table-button"});this._footerDOM.appendChild(i),i.id="igv-roi-hide-show-button",i.textContent="Copy Sequence",i.title="One region only of max size 1 mb",this.copySequenceButton=i,Qy(this.copySequenceButton,!1),this.boundCopySequenceButtonHandler=async function(e){e.preventDefault(),e.stopPropagation();const t=this.tableDOM.querySelectorAll(".igv-roi-table-row-selected");if(t.length>0){const e=[];for(let i of t){const{locus:t}=Ky(i.dataset.region);e.push(t)}for(let e of this.tableDOM.querySelectorAll(".igv-roi-table-row"))e.classList.remove("igv-roi-table-row-selected");if(this.setTableRowSelectionState(!1),e.length>0){const{chr:t,start:i,end:n}=Zv(e[0],this.browser.isSoftclipped()),r=await this.browser.genome.getSequence(t,i,n);await navigator.clipboard.writeText(r)}}}.bind(this),this.copySequenceButton.addEventListener("click",this.boundCopySequenceButtonHandler);const n=e({class:"igv-roi-table-button"});this._footerDOM.appendChild(n),n.id="igv-roi-hide-show-button",n.textContent="Hide all ROIs",this.toggleROIButton=n,this.boundToggleDisplayButtonHandler=function(e){e.preventDefault(),e.stopPropagation(),this.browser.roiManager.toggleROIs()}.bind(this),this.toggleROIButton.addEventListener("click",this.boundToggleDisplayButtonHandler)}setROIVisibility(e){const t=this.browser.columnContainer.querySelectorAll(".igv-roi-region");for(let i=0;i<t.length;i++){const n=t[i];!1===e?Vy(n,0):n.style.backgroundColor=n.dataset.color}this.toggleROIButton.textContent=!1===e?"Show all ROIs":"Hide all ROIs"}setTableRowSelectionState(e){super.setTableRowSelectionState(e);const t=this.tableDOM.querySelectorAll(".igv-roi-table-row-selected");if(t.length>0&&t.length<2){const{locus:e}=Ky(t[0].dataset.region),{chr:i,start:n,end:r}=Zv(e,this.browser.isSoftclipped());Qy(this.copySequenceButton,r-n<1e6)}else Qy(this.copySequenceButton,!1)}dispose(){document.removeEventListener("click",this.boundGotoButtonHandler),document.removeEventListener("click",this.boundCopySequenceButtonHandler),document.removeEventListener("click",this.boundToggleDisplayButtonHandler),this.browser.roiTableControl.buttonHandler(!1),super.dispose()}static getColumnFormatConfiguration(e){return!0===e?[{label:"Chr",width:"20%"},{label:"Start",width:"15%"},{label:"End",width:"15%"},{label:"Description",width:"30%"},{label:"ROI Set",width:"20%"}]:[{label:"Chr",width:"25%"},{label:"Start",width:"20%"},{label:"End",width:"20%"},{label:"Description",width:"35%"}]}static gotoButtonHandler(e){e.stopPropagation();const t=this.tableDOM.querySelectorAll(".igv-roi-table-row-selected"),i=[];for(let e of t){const{locus:t}=Ky(e.dataset.region);i.push(t)}for(let e of this.tableDOM.querySelectorAll(".igv-roi-table-row"))e.classList.remove("igv-roi-table-row-selected");this.setTableRowSelectionState(!1),i.length>0&&this.browser.search(i.join(" "))}}function Qy(e,t){e.style.pointerEvents=t?"auto":"none",e.style.color=ro(t?"licorice":"silver"),e.style.borderColor=ro(t?"licorice":"silver")}function Vy(e,t){const i=window.getComputedStyle(e).backgroundColor.match(/[\d.]+/g);3===i.length&&i.push(1),i[3]=t,e.style.backgroundColor=`rgba(${i.join(", ")})`}class jy{constructor(e){this.browser=e,this.roiMenu=new Uy(e,e.columnContainer),this.roiTable=new qy(e,e.columnContainer),this.top=0,this.roiSets=[],this.boundLocusChangeHandler=Wy.bind(this),e.on("locuschange",this.boundLocusChangeHandler);this.observer=new MutationObserver((()=>{const t=e.findTracks((e=>new Set(["ideogram","ruler"]).has(e.type))),[i,n]=t.map((e=>e.trackView.viewports[0].$viewport.get(0))).map((e=>function(e){const t=window.getComputedStyle(e),i=parseInt(t.marginTop),n=parseInt(t.marginBottom),{top:r,bottom:s,height:o}=e.getBoundingClientRect();return{top:Math.floor(r)-i,bottom:Math.floor(s)+n,height:Math.floor(o)+i+n}}(e))),r=e.columnContainer.querySelectorAll(".igv-roi-region");if(r)for(const e of r)e.style.marginTop=`${i.height+n.height+-.5}px`})),this.observer.observe(e.columnContainer,{attributes:!0,childList:!0,subtree:!0})}async reset(){this.roiSets.length>0&&this.browser.roiTableControl.setVisibility(!0);const e=this.roiSets.map((e=>this.renderROISet({browser:this.browser,pixelTop:this.top,roiSet:e})));e.length>0&&await Promise.all(e);const t=await this.getTableRecords();if(this.roiTable.renderTable(t),this.roiSets.length>0){const e=this.roiSets[0].isVisible;this.roiTable.setROIVisibility(e)}}async loadROI(e,t){const i=Array.isArray(e)?e:[e];for(let e of i)!e.name&&e.url&&(e.name=await Wa(e.url)),e.url&&!e.format&&(e.format=await sm(e)),this.roiSets.push(new vu(e,t));await this.reset()}clearROIs(){this.roiTable.clearTable();const e=this.browser.columnContainer.querySelectorAll(".igv-roi-region");for(let t of e)t.remove();for(let e of this.roiSets)e.dispose();this.roiSets=[]}async getTableRecords(){const e=[];for(let t of this.roiSets){const i=t.name||"",n=await t.getAllFeatures();for(let t of Object.keys(n))for(let r of n[t])e.push({setName:i,feature:r})}return e}presentTable(){this.roiTable.present()}async repaintTable(){const e=await this.getTableRecords();this.roiTable.renderTable(e)}dismissTable(){this.roiTable.dismiss()}roiTableIsVisible(){return this.roiTable.isVisible()}async updateUserDefinedROISet(e){let t=await this.getUserDefinedROISet();void 0===t&&(t=this.initializeUserDefinedROISet()),t.addFeature(e),this.setROITableButtonVisibility(!0),await this.renderROISet({browser:this.browser,pixelTop:this.top,roiSet:t});const i=await this.getTableRecords();this.roiTable.renderTable(i)}setROITableButtonVisibility(e){this.browser.roiTableControl.setVisibility(e)}toggleROIs(){const e=!this.roiSets[0].isVisible;this.roiTable.setROIVisibility(e);for(const t of this.roiSets)t.isVisible=e}async renderAllROISets(){for(let e of this.roiSets)await this.renderROISet({browser:this.browser,pixelTop:this.top,roiSet:e})}async renderROISet({browser:e,pixelTop:t,roiSet:i}){const n=e.columnContainer.querySelectorAll(".igv-column");for(let r=0;r<n.length;r++){let{chr:s,start:o,end:a,bpPerPixel:c}=e.referenceFrameList[r];const l=n[r].querySelectorAll(".igv-roi-region");for(let e of l){const t=e.dataset.region,{chr:i,start:n,end:r}=Ky(t);(i!==s||r<o||n>a)&&e.remove()}const h=await i.getFeatures(s,o,a);if(h)for(let l of h){const h=Gy(s,l.start,l.end),{x:d,width:u}=yu(Math.max(o,l.start),Math.min(a,l.end),o,c),f=n[r].querySelector($y(h));if(f)f.style.left=`${d}px`,f.style.width=`${u}px`;else{const s=this.createRegionElement(e.columnContainer,t,d,u,i,h,l);n[r].appendChild(s)}}}}createRegionElement(t,i,n,r,s,o,c){const l=e({class:"igv-roi-region"});l.style.top=`${i}px`,l.style.left=`${n}px`,l.style.width=`${r}px`,l.style.backgroundColor=s.color,l.dataset.color=s.color,l.dataset.region=o;const h=e();return l.appendChild(h),h.style.backgroundColor=s.headerColor,h.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),a(e,t);const i=s.isUserDefined;this.roiMenu.present(c,i,e,this,t,l)})),l}renderSVGContext(e,t,{deltaX:i,deltaY:n}){for(const r of e.querySelectorAll(".igv-roi-region")){const{x:e,y:s,width:o,height:a}=r.getBoundingClientRect();t.fillStyle=r.style.backgroundColor,t.fillRect(e-i,s+n,o,a);const c=r.querySelector("div"),{x:l,y:h,width:d,height:u}=c.getBoundingClientRect();t.fillStyle=c.style.backgroundColor,t.fillRect(l-i,h+n,d,u)}}getUserDefinedROISet(){return this.roiSets.find((e=>!0===e.isUserDefined))}initializeUserDefinedROISet(){const e=new vu({name:"user defined",isUserDefined:!0,features:[]},this.browser.genome);return this.roiSets.push(e),e}async deleteRegionWithKey(e,t){t.querySelectorAll($y(e)).forEach((e=>e.remove()));const{feature:i,set:n}=await this.findRegionWithKey(e);n&&n.removeFeature(i);0===(await this.getTableRecords()).length&&(this.browser.roiTableControl.buttonHandler(!1),this.setROITableButtonVisibility(!1))}async findRegionWithKey(e){const{chr:t,start:i,end:n}=Ky(e);for(let e of this.roiSets){const r=await e.getFeatures(t,i,n);for(let s of r)if(s.chr===t&&s.start>=i&&s.end<=n)return{feature:s,set:e}}return{feature:void 0,set:void 0}}toJSON(){return this.roiSets.map((e=>e.toJSON()))}dispose(){this.browser.off("locuschange",this.boundLocusChangeHandler);const e=this.browser.columnContainer.querySelectorAll(".igv-roi-region");for(let t of e)t.remove();this.roiMenu&&this.roiMenu.dispose(),this.roiTable&&this.roiTable.dispose();for(let e of this.roiSets)e.dispose();for(let e of Object.keys(this))this[e]=void 0}}function Wy(){this.renderAllROISets()}function Gy(e,t,i){return`${e}-${t}-${i}`}function $y(e){return`[data-region="${e}"]`}function Ky(e){let t=e.split("-"),i=parseInt(t.pop()),n=parseInt(t.pop()),r=t.join("-");return{chr:r,start:n,end:i,locus:`${r}:${n}-${i}`,bedRecord:`${r}\t${n}\t${i}`}}class Yy{constructor(e,t){this.name=e.name,this.featureSource=e.featureSource||wd(e,t),this.color=e.color||bu}async getFeatures(e,t,i){return this.featureSource.getFeatures({chr:e,start:t,end:i})}draw(e){const{context:t,bpPerPixel:i,bpStart:n,pixelTop:r,pixelHeight:s,pixelWidth:o,features:a}=e;if(!a)return;const c=n+o*i+1;for(let{start:e,end:o}of a){if(o<n)continue;if(e>c)break;const{x:a,width:l}=yu(e,o,n,i);xo.fillRect(t,a,r,l,s,{fillStyle:this.color})}}}class Xy extends Gu{constructor(e,t){super(t,e,["ROI","Regions of Interest Table"],$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>roi</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="roi">\n            <rect id="Rectangle-Copy-23" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <text id="ROI" font-family="HelveticaNeue-Bold, Helvetica Neue" font-size="258" font-weight="bold" fill="#737373">\n                <tspan x="81.445" y="389">ROI</tspan>\n            </text>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>roi hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="roi-hover">\n            <rect id="Rectangle-Copy-24" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <text id="ROI" font-family="HelveticaNeue-Bold, Helvetica Neue" font-size="258" font-weight="bold" fill="#FFFFFF">\n                <tspan x="81.445" y="389">ROI</tspan>\n            </text>\n        </g>\n    </g>\n</svg>',!1),this.button.addEventListener("mouseenter",(()=>{!1===t.doShowROITable&&this.setState(!0)})),this.button.addEventListener("mouseleave",(()=>{!1===t.doShowROITable&&this.setState(!1)})),this.button.addEventListener("click",(()=>this.buttonHandler(!t.doShowROITable))),this.setVisibility(!1)}buttonHandler(e){this.setState(e),this.browser.setROITableVisibility(e)}}class Zy extends Gu{constructor(e,t,i){super(e,t,"Select Tracks",$u,'<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>multi select</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="multi-select">\n            <rect id="backdrop-copy-3" stroke="#737373" stroke-width="12" fill="#FFFFFF" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="row-copy-3" transform="translate(81, 427)" fill="#737373">\n                <rect id="Rectangle" x="134" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-16" stroke="#737373" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n            <g id="row-copy-2" transform="translate(82, 277)">\n                <rect id="Rectangle" fill-opacity="0.33" fill="#CFCECE" x="133" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-16" stroke-opacity="0.32659528" stroke="#CFCECE" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n            <g id="row-copy" transform="translate(81, 119)" fill="#737373">\n                <rect id="Rectangle" x="134" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-17" stroke="#737373" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n        </g>\n    </g>\n</svg>','<svg width="625px" height="625px" viewBox="0 0 625 625" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n    <title>multi select hover</title>\n    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">\n        <g id="multi-select-hover">\n            <rect id="backdrop-copy-4" stroke="#737373" stroke-width="12" fill="#737373" x="6" y="6" width="613" height="613" rx="135"></rect>\n            <g id="row-copy-3" transform="translate(81, 427)" fill="#FFFFFF">\n                <rect id="Rectangle" x="134" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-16" stroke="#FFFFFF" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n            <g id="row-copy-2" transform="translate(82, 277)">\n                <rect id="Rectangle" fill-opacity="0.33" fill="#CFCECE" x="133" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-16" stroke-opacity="0.33" stroke="#CFCECE" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n            <g id="row-copy" transform="translate(81, 119)" fill="#FFFFFF">\n                <rect id="Rectangle" x="134" y="0" width="329" height="70"></rect>\n                <rect id="Rectangle-Copy-17" stroke="#FFFFFF" stroke-width="12" x="6" y="6" width="58" height="58"></rect>\n            </g>\n        </g>\n    </g>\n</svg>',i=!1),this.enableMultiTrackSelection=i,this.button.addEventListener("mouseenter",(e=>{this.setState(!0)})),this.button.addEventListener("mouseleave",(e=>{this.setState(!1)}));this.boundMouseClickHandler=(()=>{this.setMultiTrackSelection(!this.enableMultiTrackSelection)}).bind(this),this.button.addEventListener("click",this.boundMouseClickHandler),this.setVisibility(!0)}setMultiTrackSelection(e){this.enableMultiTrackSelection=e;for(const e of this.browser.trackViews)!1===mo.has(e.track.type)&&(e.setTrackSelectionState(e.axis,this.enableMultiTrackSelection),this.enableMultiTrackSelection||(e.track.selected=!1));this.setState(this.enableMultiTrackSelection),!1===this.enableMultiTrackSelection&&this.browser.overlayTrackButton.setVisibility(!1)}}class Jy{aliasRecordCache=new Map;constructor(e,t,i){(t=t||{}).url=e,this.reader=new Vh(t,i)}getChromosomeName(e){return this.aliasRecordCache.has(e)?this.aliasRecordCache.get(e).chr:e}getChromosomeAlias(e,t){const i=this.aliasRecordCache.get(e);return i&&i[t]||e}async search(e){if(!this.aliasRecordCache.has(e)){const t=await this.reader.search(e);if(t)for(let e of Object.keys(t))"start"!==e&&"end"!==e&&this.aliasRecordCache.set(t[e],t)}return this.aliasRecordCache.get(e)}async getChromosomeNames(){return await this.reader.loadHeader(),Array.from(this.reader.chrNames)}}class eA{aliasRecordCache=new Map;constructor(e,t,i){this.aliasURL=e,this.config=t,this.genome=i}getChromosomeName(e){return this.aliasRecordCache.has(e)?this.aliasRecordCache.get(e).chr:e}getChromosomeAlias(e,t){const i=this.aliasRecordCache.get(e);return i&&i[t]||e}async loadAliases(){const e=await Qs.loadString(this.aliasURL,qa(this.config)),t=Dt(e),i=t[0];i.startsWith("#")&&(this.headings=i.substring(1).split("\t").map((e=>e.trim())),this.altNameSets=this.headings.slice(1));const n=this.genome.chromosomeNames?new Set(this.genome.chromosomeNames):new Set;for(let e of t)if(!e.startsWith("#")&&e.length>0){const t=e.split("\t");let i=t.find((e=>n.has(e)));i||(i=t[0]);const r={chr:i};for(let e=0;e<t.length;e++){r[this.headings?this.headings[e]:e]=t[e],this.aliasRecordCache.set(t[e],r)}}}async search(e){return 0===this.aliasRecordCache.size&&await this.loadAliases(),this.aliasRecordCache.get(e)}}class tA{constructor(e,t,i,n){this.start=e,this.end=t,this.name=i,this.stain=0,"acen"===n?this.type="c":(this.type=n.charAt(1),"p"===this.type&&(this.stain=parseInt(n.substring(4))))}}class iA{cytobandMap=new Map;constructor(e,t,i){(t=t||{}).url=e,this.source=new Zh(t,i)}async getCytobands(e){if(this.cytobandMap.has(e))return this.cytobandMap.get(e);{let t=await this.#C(e);return t||(t=[]),this.cytobandMap.set(e,t),t}}async#C(e){return(await this.source.getFeatures({chr:e})).map((e=>new tA(e.start,e.end,e.name,e.gieStain)))}}class nA{cytobands=new Map;constructor(e,t){this.url=e,this.config=t}async getCytobands(e){return 0===this.cytobands.size&&await this.#_(),this.cytobands.get(e)}async#_(){let e,t;if($a(this.url)){const t=vs(this.url);e="";const i=t.length;for(let n=0;n<i;n++)e+=String.fromCharCode(t[n])}else e=await Qs.loadString(this.url,qa(this.config));let i=[];const n=Dt(e);for(let e of n){const n=e.split("\t"),r=n[0];if(t||(t=r),r!==t&&(this.cytobands.set(t,i),i=[],t=r),5===n.length){const e=parseInt(n[1]),t=parseInt(n[2]),r=n[3],s=n[4];i.push(new tA(e,t,r,s))}}}async getChromosomeNames(){return 0===this.cytobands.size&&await this.#_(),Array.from(this.cytobands.keys())}async getChromosomes(){0===this.cytobands.size&&await this.#_();const e=[];let t=0;for(let[i,n]of this.cytobands.entries())e.push(new hc(i,t++,n[n.length-1].end));return e}}class rA{aliasRecordCache=new Map;constructor(e,t){this.genomeID=e,this.update(e,t)}getChromosomeName(e){return this.aliasRecordCache.has(e)?this.aliasRecordCache.get(e).chr:e}getChromosomeAlias(e,t){const i=this.aliasRecordCache.get(e);return i&&i[t]||e}update(e,t){if(t){const i=[];for(let n of t){if(this.aliasRecordCache.has(n))continue;let t=!1;const r={chr:n};if(i.push(r),n.startsWith("gi|")){const e=rA.getNCBIName(n);r["ncbi-gi-versioned"]=e;const t=e.lastIndexOf(".");if(t>0){const e=e.substring(0,t);r["ncbi-gi"]=e}}else{if(e.startsWith("hg")||e.startsWith("GRCh")||"1kg_ref"===e||"b37"===e)switch(n){case"23":r.ucsc="chrX",t=!0;break;case"24":r.ucsc="chrY",t=!0;break;case"chrX":r.ncbi="23",t=!0;break;case"chrY":r.ncbi="24",t=!0}else if(e.startsWith("mm")||e.startsWith("GRCm")||e.startsWith("rheMac"))switch(n){case"21":r.ucsc="chrX",t=!0;break;case"22":r.ucsc="chrY",t=!0;break;case"chrX":r.ncbi="21",t=!0;break;case"chrY":r.ncbi="22",t=!0}if(t)continue;"chrM"===n?r.ncbi="MT":"MT"===n?r.ucsc="chrM":n.toLowerCase().startsWith("chr")?r.ncbi=n.substring(3):Number.isInteger(Number(n))&&(r.ucsc="chr"+n)}}for(let e of i)for(let t of Object.values(e))this.aliasRecordCache.set(t,e)}}search(e){return this.aliasRecordCache.get(e)}static getNCBIName(e){const t=e.split("\\|");return t[t.length-1]}}class sA{#x;static async createGenome(e,t){const i=new sA(e,t);return await i.init(),i}constructor(e,t){this.config=e,this.browser=t,this.id=e.id||function(e){return void 0!==e.id?e.id:e.fastaURL&&Mt(e.fastaURL)&&!e.fastaURL.startsWith("data:")?e.fastaURL:e.fastaURL&&e.fastaURL.name?e.fastaURL.name:""}(e),this.name=e.name,this.nameSet=e.nameSet}async init(){const e=this.config;if(this.sequence=await Bc(e,this.browser),e.chromSizesURL?this.chromosomes=await async function(e){const t=new Map;let i;if($a(e)){let t=vs(e);i="";for(let e of t)i+=String.fromCharCode(e)}else i=await Qs.load(e,{});const n=vc(i);let r=0;for(let e of n){const i=e.split("\t");if(i.length>1){const e=Number.parseInt(i[1]);t.set(i[0],new hc(i[0],r++,e))}}return t}(e.chromSizesURL):this.chromosomes=this.sequence.chromosomes||new Map,this.chromosomes.size>0&&(this.chromosomeNames=Array.from(this.chromosomes.keys())),e.chromAliasBbURL?(this.chromAlias=new Jy(e.chromAliasBbURL,Object.assign({},e),this),this.chromosomeNames||(this.chromosomeNames=await this.chromAlias.getChromosomeNames())):e.aliasURL?this.chromAlias=new eA(e.aliasURL,Object.assign({},e),this):this.chromosomeNames&&(this.chromAlias=new rA(this.id,this.chromosomeNames)),e.cytobandBbURL)this.cytobandSource=new iA(e.cytobandBbURL,Object.assign({},e),this),this.chromosomeNames||(this.chromosomeNames=await this.cytobandSource.getChromosomeNames());else if(e.cytobandURL&&(this.cytobandSource=new nA(e.cytobandURL,Object.assign({},e)),this.chromosomeNames||(this.chromosomeNames=await this.cytobandSource.getChromosomeNames()),0===this.chromosomes.size)){const e=await this.cytobandSource.getChromosomes();for(let t of e)this.chromosomes.set(e.name,e)}if(!1!==e.wholeGenomeView&&this.chromosomes.size>0&&(e.chromosomeOrder?Array.isArray(e.chromosomeOrder)?this.#x=e.chromosomeOrder:this.#x=e.chromosomeOrder.split(",").map((e=>e.trim())):this.#x=function(e){const t=[];let i,n=1;for(let r of e.values()){if(i){if(r.bpLength<i/100)continue;i=((n-1)*i+r.bpLength)/n,t.push(r.name)}else i=r.bpLength,t.push(r.name);n++}return t}(this.chromosomes)),this.wholeGenomeView=!1!==e.wholeGenomeView&&this.#x&&this.chromosomes.size>1,this.wholeGenomeView){const e=this.#x.reduce(((e,t)=>e+this.chromosomes.get(t).bpLength),0);this.chromosomes.set("all",new hc("all",0,e))}}get description(){return this.config.description||`${this.id}\n${this.name}`}get infoURL(){return this.config.infoURL}showWholeGenomeView(){return this.wholeGenomeView}toJSON(){return Object.assign({},this.config,{tracks:void 0})}get initialLocus(){return this.config.locus?this.config.locus:this.getHomeChromosomeName()}getHomeChromosomeName(){return this.showWholeGenomeView()&&this.chromosomes.has("all")?"all":this.chromosomeNames[0]}getChromosomeName(e){return this.chromAlias?this.chromAlias.getChromosomeName(e,this.chromosomes.keys()):e}getChromosomeDisplayName(e){return this.nameSet&&this.chromAlias&&this.chromAlias.getChromosomeAlias(e,this.nameSet)||e}getChromosome(e){return this.chromAlias&&(e=this.chromAlias.getChromosomeName(e)),this.chromosomes.get(e)}async loadChromosome(e){if(this.chromAlias){const t=await this.chromAlias.search(e);t&&(e=t.chr)}if(!this.chromosomes.has(e)){let t;const i=await this.sequence.getSequenceRecord(e);i&&(t=new hc(e,0,i.bpLength)),this.chromosomes.set(e,t)}return this.chromosomes.get(e)}async getAliasRecord(e){if(this.chromAlias)return this.chromAlias.search(e)}async getCytobands(e){if(this.cytobandSource){const t=this.getChromosomeName(e);return await this.cytobandSource.getCytobands(t)}}getChromosomes(){return this.chromosomes}get wgChromosomeNames(){return this.#x?this.#x.slice():void 0}get showChromosomeWidget(){return this.config.showChromosomeWidget}getGenomeCoordinate(e,t){var i=this.getCumulativeOffset(e);if(void 0!==i)return i+t}getChromosomeCoordinate(e){let t;void 0===this.cumulativeOffsets&&(this.cumulativeOffsets=computeCumulativeOffsets.call(this));let i=0;for(let n of this.#x){const r=this.cumulativeOffsets[n];if(r>e){return{chr:t,position:e-i}}t=n,i=r}return{chr:this.#x[this.#x.length-1],position:0}}getCumulativeOffset(e){void 0===this.cumulativeOffsets&&(this.cumulativeOffsets=function(){let e={},t=0;for(let i of this.#x){e[i]=Math.floor(t);t+=this.getChromosome(i).bpLength}return e}.call(this));const t=this.getChromosomeName(e);return this.cumulativeOffsets[t]}getGenomeLength(){if(!this.bpLength){let e=0;for(let t of this.#x){e+=this.chromosomes.get(t).bpLength}this.bpLength=e}return this.bpLength}async getSequence(e,t,i){return e=this.getChromosomeName(e),this.sequence.getSequence(e,t,i)}getSequenceInterval(e,t,i){return"function"==typeof this.sequence.getSequenceInterval?this.sequence.getSequenceInterval(e,t,i):void 0}}class oA{constructor(){this.clear()}clear(){this.phenotypeColors=new Map,this.snps=new Set,this.qtl=null}isEmpty(){return 0===this.phenotypeColors.size&&0===this.snps.size&&null===this.qtl}addSnp(e){e=e.toUpperCase(),this.snps.add(e)}addPhenotype(e){e=e.toUpperCase();const t=this.phenotypeColors.size;if(!this.phenotypeColors.has(e.toUpperCase())){const i=t<aA.length?aA[t]:_s.randomRGB(0,255);this.phenotypeColors.set(e.toUpperCase(),i)}}hasSnp(e){return e&&this.snps.has(e.toUpperCase())}hasPhenotype(e){return e&&this.phenotypeColors.has(e.toUpperCase())}hasQTL(e){return this.qtls.has(e)}colorForGene(e){return e?this.phenotypeColors.get(e.toUpperCase()):"black"}toJSON(){const e={};return this.phenotypeColors.size>0&&(e.phenotypes=Array.from(this.phenotypeColors.keys())),this.snps.size>0&&(e.snps=Array.from(this.snps)),this.qtl&&(e.qtl=this.qtl),e}static fromJSON(e){const t=new oA;if(e.phenotypes)for(let i of e.phenotypes)t.addPhenotype(i);if(e.snps)for(let i of e.snps)t.addSnp(i);return e.qtl&&(t.qtl=e.qtl),t}}const aA=[];aA.push("rgb(228,26,28)"),aA.push("rgb(55,126,184)"),aA.push("rgb(77,175,74)"),aA.push("rgb(166,86,40)"),aA.push("rgb(152,78,163)"),aA.push("rgb(255,127,0)"),aA.push("rgb(247,129,191)"),aA.push("rgb(255,255,51)"),aA.push("rgb(102,194,165)"),aA.push("rgb(252,141,98)"),aA.push("rgb(141, 160, 203)"),aA.push("rgb(231, 138, 195)"),aA.push("rgb(166, 216, 84)"),aA.push("rgb(255, 217, 47)"),aA.push("rgb(229, 196, 148)"),aA.push("rgb( 141, 211, 199)"),aA.push("rgb(255, 255, 179)"),aA.push("rgb(190, 186, 218)"),aA.push("rgb(251, 128, 114)"),aA.push("rgb(128, 177, 211)"),aA.push("rgb(253, 180, 98)"),aA.push("rgb(179, 222, 105)"),aA.push("rgb(252, 205, 229)"),aA.push("rgb(188, 128, 189)"),aA.push("rgb(204, 235, 197)"),aA.push("rgb(255, 237, 111)");class cA{qtlSelections=new oA;constructor(t,i){this.config=t,this.guid=s(),this.namespace=".browser_"+this.guid,this.parent=i;let n=i.shadowRoot;if(!n){n=i.attachShadow({mode:"open"});const e=new CSSStyleSheet;e.replaceSync('.igv-ui-dropdown {\n  cursor: default;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2048;\n  border-color: #7F7F7F;\n  border-style: solid;\n  border-width: 1px;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  font-weight: 400;\n  background-color: white;\n}\n.igv-ui-dropdown > div {\n  overflow-y: auto;\n  overflow-x: hidden;\n  background-color: white;\n}\n.igv-ui-dropdown > div > div {\n  padding: 4px;\n  width: 100%;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  background-color: white;\n}\n.igv-ui-dropdown > div > div:last-child {\n  border-bottom-color: transparent;\n  border-bottom-width: 0;\n}\n.igv-ui-dropdown > div > div:hover {\n  cursor: pointer;\n  background-color: rgba(0, 0, 0, 0.04);\n}\n\n.igv-ui-popover {\n  cursor: default;\n  position: absolute;\n  z-index: 2048;\n  border-color: #7F7F7F;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 1px;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  background-color: white;\n}\n.igv-ui-popover > div:first-child {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-width: 0;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n}\n.igv-ui-popover > div:first-child > div:first-child {\n  margin-left: 4px;\n}\n.igv-ui-popover > div:first-child > div:last-child {\n  margin-right: 4px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-ui-popover > div:first-child > div:last-child:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-ui-popover > div:last-child {\n  user-select: text;\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: 400px;\n  max-width: 800px;\n  background-color: white;\n  border-bottom-width: 0;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n.igv-ui-popover > div:last-child > div {\n  margin-left: 4px;\n  margin-right: 4px;\n  min-width: 220px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.igv-ui-popover > div:last-child > div > span {\n  font-weight: bolder;\n}\n.igv-ui-popover > div:last-child hr {\n  width: 100%;\n}\n\n.igv-ui-alert-dialog-container {\n  box-sizing: content-box;\n  position: absolute;\n  z-index: 2048;\n  top: 50%;\n  left: 50%;\n  width: 400px;\n  height: 200px;\n  border-color: #7F7F7F;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: thin;\n  outline: none;\n  font-family: "Open Sans", sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n  background-color: white;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n}\n.igv-ui-alert-dialog-container > div:first-child {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n}\n.igv-ui-alert-dialog-container > div:first-child div:first-child {\n  padding-left: 8px;\n}\n.igv-ui-alert-dialog-container .igv-ui-alert-dialog-body {\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text;\n  color: #373737;\n  width: 100%;\n  height: calc(100% - 24px - 64px);\n  overflow-y: scroll;\n}\n.igv-ui-alert-dialog-container .igv-ui-alert-dialog-body .igv-ui-alert-dialog-body-copy {\n  margin: 16px;\n  width: auto;\n  height: auto;\n  overflow-wrap: break-word;\n  word-break: break-word;\n  background-color: white;\n  border: unset;\n}\n.igv-ui-alert-dialog-container > div:last-child {\n  width: 100%;\n  margin-bottom: 10px;\n  background-color: white;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n}\n.igv-ui-alert-dialog-container > div:last-child div {\n  margin: unset;\n  width: 40px;\n  height: 30px;\n  line-height: 30px;\n  text-align: center;\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  font-weight: 400;\n  border-color: #2B81AF;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 4px;\n  background-color: #2B81AF;\n}\n.igv-ui-alert-dialog-container > div:last-child div:hover {\n  cursor: pointer;\n  border-color: #25597f;\n  background-color: #25597f;\n}\n\n.igv-ui-color-swatch {\n  position: relative;\n  box-sizing: content-box;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  border-style: solid;\n  border-width: 2px;\n  border-color: white;\n  border-radius: 4px;\n}\n\n.igv-ui-color-swatch:hover {\n  border-color: dimgray;\n}\n\n.igv-ui-colorpicker-menu-close-button {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 32px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding-right: 8px;\n}\n.igv-ui-colorpicker-menu-close-button i.fa {\n  display: block;\n  margin-left: 4px;\n  margin-right: 4px;\n  color: #5f5f5f;\n}\n.igv-ui-colorpicker-menu-close-button i.fa:hover,\n.igv-ui-colorpicker-menu-close-button i.fa:focus,\n.igv-ui-colorpicker-menu-close-button i.fa:active {\n  cursor: pointer;\n  color: #0f0f0f;\n}\n\n.igv-ui-generic-dialog-container {\n  box-sizing: content-box;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 300px;\n  height: fit-content;\n  padding-bottom: 16px;\n  border-color: #7F7F7F;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  z-index: 2048;\n  background-color: white;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-header {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-header div {\n  margin-right: 4px;\n  margin-bottom: 2px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-header div:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-one-liner {\n  color: #373737;\n  width: 95%;\n  height: 24px;\n  line-height: 24px;\n  text-align: left;\n  margin-top: 8px;\n  padding-left: 8px;\n  overflow-wrap: break-word;\n  background-color: white;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-label-input {\n  margin-top: 8px;\n  width: 95%;\n  height: 24px;\n  color: #373737;\n  line-height: 24px;\n  padding-left: 8px;\n  background-color: white;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-label-input > div {\n  width: fit-content;\n  height: 100%;\n  font-size: 16px;\n  text-align: right;\n  padding-right: 8px;\n  background-color: white;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-label-input input {\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-left: 4px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  color: #373737;\n  text-align: left;\n  outline: none;\n  border-style: solid;\n  border-width: thin;\n  border-color: #7F7F7F;\n  background-color: white;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-label-input input {\n  width: 50%;\n  font-size: 16px;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-input {\n  margin-top: 8px;\n  width: calc(100% - 16px);\n  height: 24px;\n  color: #373737;\n  line-height: 24px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-input input {\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-left: 4px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  color: #373737;\n  text-align: left;\n  outline: none;\n  border-style: solid;\n  border-width: thin;\n  border-color: #7F7F7F;\n  background-color: white;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-input input {\n  font-size: 16px;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-input input[type=range] {\n  width: 70%;\n  -webkit-appearance: none;\n  background: linear-gradient(90deg, white, black);\n  outline: none;\n  margin: 0;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-input output {\n  display: block;\n  height: 100%;\n  width: 20%;\n  font-size: 16px;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel {\n  width: 100%;\n  height: 28px;\n  padding-top: 16px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel > div {\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  width: 75px;\n  height: 28px;\n  line-height: 28px;\n  text-align: center;\n  border-color: transparent;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 2px;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel > div:first-child {\n  margin-left: 32px;\n  margin-right: 0;\n  background-color: #5ea4e0;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel > div:last-child {\n  margin-left: 0;\n  margin-right: 32px;\n  background-color: #c4c4c4;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel > div:first-child:hover {\n  cursor: pointer;\n  background-color: #3b5c7f;\n}\n.igv-ui-generic-dialog-container .igv-ui-generic-dialog-ok-cancel > div:last-child:hover {\n  cursor: pointer;\n  background-color: #7f7f7f;\n}\n\n.igv-ui-generic-container {\n  box-sizing: content-box;\n  position: absolute;\n  z-index: 2048;\n  background-color: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-ui-generic-container > div:first-child {\n  cursor: move;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  height: 24px;\n  width: 100%;\n  background-color: #dddddd;\n}\n.igv-ui-generic-container > div:first-child > div {\n  display: block;\n  color: #5f5f5f;\n  cursor: pointer;\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  margin-bottom: 4px;\n}\n\n.igv-ui-dialog {\n  z-index: 2048;\n  position: fixed;\n  width: fit-content;\n  height: fit-content;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  background-color: white;\n  border-color: #7F7F7F;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n}\n.igv-ui-dialog .igv-ui-dialog-header {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n}\n.igv-ui-dialog .igv-ui-dialog-header div {\n  margin-right: 4px;\n  margin-bottom: 2px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-ui-dialog .igv-ui-dialog-header div:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-ui-dialog .igv-ui-dialog-one-liner {\n  width: 95%;\n  height: 24px;\n  line-height: 24px;\n  text-align: left;\n  margin: 8px;\n  overflow-wrap: break-word;\n  background-color: white;\n  font-weight: bold;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel {\n  width: 100%;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel div {\n  margin: 16px;\n  margin-top: 32px;\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  width: 75px;\n  height: 28px;\n  line-height: 28px;\n  text-align: center;\n  border-color: transparent;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 2px;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel div:first-child {\n  background-color: #5ea4e0;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel div:last-child {\n  background-color: #c4c4c4;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel div:first-child:hover {\n  cursor: pointer;\n  background-color: #3b5c7f;\n}\n.igv-ui-dialog .igv-ui-dialog-ok-cancel div:last-child:hover {\n  cursor: pointer;\n  background-color: #7f7f7f;\n}\n.igv-ui-dialog .igv-ui-dialog-ok {\n  width: 100%;\n  height: 36px;\n  margin-top: 32px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-ui-dialog .igv-ui-dialog-ok div {\n  width: 98px;\n  height: 36px;\n  line-height: 36px;\n  text-align: center;\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  border-color: white;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 4px;\n  background-color: #2B81AF;\n}\n.igv-ui-dialog .igv-ui-dialog-ok div:hover {\n  cursor: pointer;\n  background-color: #25597f;\n}\n\n.igv-ui-panel, .igv-ui-panel-row, .igv-ui-panel-column {\n  z-index: 2048;\n  background-color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.igv-ui-panel-column {\n  display: flex;\n  flex-direction: column;\n}\n\n.igv-ui-panel-row {\n  display: flex;\n  flex-direction: row;\n}\n\n.igv-ui-textbox {\n  background-color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.igv-ui-table {\n  background-color: white;\n}\n\n.igv-ui-table thead {\n  position: sticky;\n  top: 0;\n}\n\n.igv-ui-table th {\n  text-align: left;\n}\n\n.igv-ui-table td {\n  padding-right: 20px;\n}\n\n.igv-ui-table tr:hover {\n  background-color: lightblue;\n}\n\n.igv-ui-center-fixed {\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.igv-navbar {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  box-sizing: border-box;\n  width: 100%;\n  color: #444;\n  font-size: 12px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  line-height: 32px;\n  padding-left: 8px;\n  padding-right: 8px;\n  margin-top: 2px;\n  margin-bottom: 6px;\n  height: 32px;\n  border-style: solid;\n  border-radius: 3px;\n  border-width: thin;\n  border-color: #bfbfbf;\n  background-color: #f3f3f3;\n}\n.igv-navbar .igv-navbar-left-container {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  line-height: 32px;\n}\n.igv-navbar .igv-navbar-left-container .igv-logo {\n  width: 34px;\n  height: 32px;\n  margin-right: 8px;\n}\n.igv-navbar .igv-navbar-left-container .igv-current-genome {\n  height: 32px;\n  margin-left: 4px;\n  margin-right: 4px;\n  user-select: none;\n  line-height: 32px;\n  vertical-align: middle;\n  text-align: center;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-chromosome-select-widget-container {\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n  height: 100%;\n  width: 125px;\n  margin-right: 4px;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-chromosome-select-widget-container select {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  height: 75%;\n  outline: none;\n  font-size: 12px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-locus-size-group {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-left: 8px;\n  height: 22px;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-locus-size-group .igv-search-container {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: 240px;\n  height: 22px;\n  line-height: 22px;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-locus-size-group .igv-search-container input.igv-search-input {\n  cursor: text;\n  width: 85%;\n  height: 22px;\n  line-height: 22px;\n  font-size: 12px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  text-align: left;\n  padding-left: 8px;\n  margin-right: 8px;\n  outline: none;\n  border-style: solid;\n  border-radius: 3px;\n  border-width: thin;\n  border-color: #bfbfbf;\n  background-color: white;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-locus-size-group .igv-search-container .igv-search-icon-container {\n  cursor: pointer;\n  height: 16px;\n  width: 16px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n}\n.igv-navbar .igv-navbar-left-container .igv-navbar-genomic-location .igv-locus-size-group .igv-windowsize-panel-container {\n  margin-left: 4px;\n  user-select: none;\n}\n.igv-navbar .igv-navbar-right-container {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n}\n.igv-navbar .igv-navbar-right-container .igv-navbar-toggle-button-container {\n  position: relative;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n}\n.igv-navbar .igv-navbar-right-container .igv-navbar-toggle-button-container-hidden {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  height: 100%;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget {\n  color: #737373;\n  font-size: 18px;\n  margin-left: 8px;\n  user-select: none;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget div {\n  cursor: pointer;\n  margin-left: unset;\n  margin-right: unset;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget div:first-child {\n  height: 20px;\n  width: 20px;\n  margin-left: unset;\n  margin-right: 4px;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget div:last-child {\n  height: 20px;\n  width: 20px;\n  margin-left: 4px;\n  margin-right: unset;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget div:nth-child(even) {\n  display: block;\n  height: fit-content;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget input {\n  display: block;\n  width: 125px;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget svg {\n  display: block;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 {\n  color: #737373;\n  font-size: 18px;\n  height: 32px;\n  line-height: 32px;\n  margin-left: 8px;\n  user-select: none;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 div {\n  cursor: pointer;\n  margin-left: unset;\n  margin-right: unset;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 div:first-child {\n  height: 20px;\n  width: 20px;\n  margin-left: unset;\n  margin-right: 4px;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 div:last-child {\n  height: 20px;\n  width: 20px;\n  margin-left: 4px;\n  margin-right: unset;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 div:nth-child(even) {\n  width: 0;\n  height: 0;\n  display: none;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 input {\n  width: 0;\n  height: 0;\n  display: none;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-900 svg {\n  display: block;\n}\n.igv-navbar .igv-navbar-right-container .igv-zoom-widget-hidden {\n  display: none;\n}\n\n.igv-navbar-button {\n  display: block;\n  box-sizing: unset;\n  padding-left: 6px;\n  padding-right: 6px;\n  height: 18px;\n  text-transform: capitalize;\n  user-select: none;\n  line-height: 18px;\n  text-align: center;\n  vertical-align: middle;\n  font-family: "Open Sans", sans-serif;\n  font-size: 11px;\n  font-weight: 200;\n  color: #737373;\n  background-color: #f3f3f3;\n  border-color: #737373;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 6px;\n}\n\n.igv-navbar-button:hover {\n  cursor: pointer;\n}\n\n.igv-navbar-button-clicked {\n  color: white;\n  background-color: #737373;\n}\n\n.igv-navbar-icon-button {\n  cursor: pointer;\n  position: relative;\n  width: 24px;\n  height: 24px;\n  margin-left: 4px;\n  margin-right: 4px;\n  border: none;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n.igv-navbar-icon-button > div:first-child {\n  z-index: 512;\n  position: absolute;\n  top: 36px;\n  left: -18px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n.igv-navbar-icon-button > div:last-child {\n  z-index: 512;\n  position: absolute;\n  top: 36px;\n  left: 18px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.igv-navbar-text-button {\n  cursor: pointer;\n  position: relative;\n  margin-left: 2px;\n  margin-right: 2px;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.igv-navbar-text-button > div:nth-child(2) {\n  z-index: 512;\n  position: absolute;\n  top: 36px;\n  left: 0;\n  width: 38px;\n  height: 18px;\n  border: none;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n.igv-navbar-text-button > div:nth-child(3) {\n  z-index: 512;\n  position: absolute;\n  top: 36px;\n  left: 42px;\n  width: 38px;\n  height: 18px;\n  border: none;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n#igv-text-button-label {\n  text-anchor: middle;\n  dominant-baseline: middle;\n}\n\n.igv-navbar-text-button-svg-inactive rect {\n  stroke: #737373;\n  fill: white;\n}\n.igv-navbar-text-button-svg-inactive text {\n  fill: #737373;\n}\n.igv-navbar-text-button-svg-inactive tspan {\n  dominant-baseline: middle;\n}\n\n.igv-navbar-text-button-svg-hover rect {\n  stroke: #737373;\n  fill: #737373;\n}\n.igv-navbar-text-button-svg-hover text {\n  fill: white;\n}\n.igv-navbar-text-button-svg-hover tspan {\n  dominant-baseline: middle;\n}\n\n#igv-save-svg-group rect {\n  stroke: #737373;\n  fill: white;\n}\n#igv-save-svg-group text {\n  fill: #737373;\n}\n\n#igv-save-svg-group:hover rect {\n  stroke: #737373;\n  fill: #737373;\n}\n#igv-save-svg-group:hover text {\n  fill: white;\n}\n\n#igv-save-png-group rect {\n  stroke: #737373;\n  fill: white;\n}\n#igv-save-png-group text {\n  fill: #737373;\n}\n\n#igv-save-png-group:hover rect {\n  stroke: #737373;\n  fill: #737373;\n}\n#igv-save-png-group:hover text {\n  fill: white;\n}\n\n.igv-zoom-in-notice-container {\n  z-index: 256;\n  position: absolute;\n  top: 8px;\n  left: 50%;\n  transform: translate(-50%, 0%);\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n}\n.igv-zoom-in-notice-container > div {\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  width: 100%;\n  height: 100%;\n  font-family: "Open Sans", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  color: #3f3f3f;\n}\n\n.igv-zoom-in-notice {\n  position: absolute;\n  top: 10px;\n  left: 50%;\n}\n.igv-zoom-in-notice div {\n  position: relative;\n  left: -50%;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  color: #3f3f3f;\n  background-color: rgba(255, 255, 255, 0.51);\n  z-index: 64;\n}\n\n.igv-container-spinner {\n  position: absolute;\n  top: 90%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1024;\n  width: 24px;\n  height: 24px;\n  pointer-events: none;\n  color: #737373;\n}\n\n.igv-multi-locus-close-button {\n  position: absolute;\n  top: 2px;\n  right: 0;\n  padding-left: 2px;\n  padding-right: 2px;\n  width: 12px;\n  height: 12px;\n  color: #666666;\n  background-color: white;\n  z-index: 1000;\n}\n.igv-multi-locus-close-button > svg {\n  vertical-align: top;\n}\n\n.igv-multi-locus-close-button:hover {\n  cursor: pointer;\n  color: #434343;\n}\n\n.igv-multi-locus-ruler-label {\n  z-index: 64;\n  position: absolute;\n  top: 2px;\n  left: 0;\n  width: 100%;\n  height: 12px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n}\n.igv-multi-locus-ruler-label > div {\n  font-family: "Open Sans", sans-serif;\n  font-size: 12px;\n  color: rgb(16, 16, 16);\n  background-color: white;\n}\n.igv-multi-locus-ruler-label > div {\n  cursor: pointer;\n}\n\n.igv-multi-locus-ruler-label-square-dot {\n  z-index: 64;\n  position: absolute;\n  left: 50%;\n  top: 5%;\n  transform: translate(-50%, 0%);\n  background-color: white;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-multi-locus-ruler-label-square-dot > div:first-child {\n  width: 14px;\n  height: 14px;\n}\n.igv-multi-locus-ruler-label-square-dot > div:last-child {\n  margin-left: 16px;\n  font-family: "Open Sans", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  color: rgb(16, 16, 16);\n}\n\n.igv-ruler-sweeper {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  top: 26px;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  z-index: 99999;\n  background-color: rgba(68, 134, 247, 0.25);\n}\n\n.igv-ruler-tooltip {\n  pointer-events: none;\n  z-index: 128;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 1px;\n  height: 32px;\n  background-color: transparent;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-ruler-tooltip > div {\n  pointer-events: none;\n  width: 128px;\n  height: auto;\n  padding: 1px;\n  color: #373737;\n  font-size: 10px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  background-color: white;\n  border-style: solid;\n  border-width: thin;\n  border-color: #373737;\n}\n\n.igv-track-label {\n  position: absolute;\n  left: 8px;\n  top: 8px;\n  width: auto;\n  height: auto;\n  max-width: 50%;\n  padding-left: 4px;\n  padding-right: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  font-weight: 400;\n  text-align: center;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  border-color: #444;\n  border-radius: 2px;\n  border-style: solid;\n  border-width: thin;\n  background-color: white;\n  z-index: 128;\n  cursor: pointer;\n}\n\n.igv-track-label:hover,\n.igv-track-label:focus,\n.igv-track-label:active {\n  background-color: #e8e8e8;\n}\n\n.igv-track-label-popup-shim {\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 4px;\n}\n\n.igv-center-line {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 8;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  border-left-style: dashed;\n  border-left-width: thin;\n  border-right-style: dashed;\n  border-right-width: thin;\n}\n\n.igv-center-line-wide {\n  background-color: rgba(0, 0, 0, 0);\n  border-left-color: rgba(127, 127, 127, 0.51);\n  border-right-color: rgba(127, 127, 127, 0.51);\n}\n\n.igv-center-line-thin {\n  background-color: rgba(0, 0, 0, 0);\n  border-left-color: rgba(127, 127, 127, 0.51);\n  border-right-color: rgba(0, 0, 0, 0);\n}\n\n.igv-cursor-guide-horizontal {\n  display: none;\n  pointer-events: none;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  height: 1px;\n  z-index: 32;\n  margin-left: 50px;\n  margin-right: 54px;\n  border-top-style: dotted;\n  border-top-width: thin;\n  border-top-color: rgba(127, 127, 127, 0.76);\n}\n\n.igv-cursor-guide-vertical {\n  pointer-events: none;\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 50%;\n  width: 1px;\n  z-index: 32;\n  border-left-style: dotted;\n  border-left-width: thin;\n  border-left-color: rgba(127, 127, 127, 0.76);\n  display: none;\n}\n\n.igv-user-feedback {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  height: 360px;\n  z-index: 2048;\n  background-color: white;\n  border-color: #a2a2a2;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-user-feedback div:first-child {\n  position: relative;\n  height: 24px;\n  width: 100%;\n  background-color: white;\n  border-bottom-color: #a2a2a2;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n.igv-user-feedback div:first-child div {\n  position: absolute;\n  top: 2px;\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n}\n.igv-user-feedback div:first-child div:first-child {\n  left: 8px;\n}\n.igv-user-feedback div:first-child div:last-child {\n  cursor: pointer;\n  right: 8px;\n}\n.igv-user-feedback div:last-child {\n  width: 100%;\n  height: calc(100% - 24px);\n  border-width: 0;\n}\n.igv-user-feedback div:last-child div {\n  width: auto;\n  height: auto;\n  margin: 8px;\n}\n\n.igv-generic-dialog-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 300px;\n  height: 200px;\n  border-color: #7F7F7F;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  z-index: 2048;\n  background-color: white;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-generic-dialog-container .igv-generic-dialog-header {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n}\n.igv-generic-dialog-container .igv-generic-dialog-header div {\n  margin-right: 4px;\n  margin-bottom: 2px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-generic-dialog-container .igv-generic-dialog-header div:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-generic-dialog-container .igv-generic-dialog-one-liner {\n  color: #373737;\n  width: 95%;\n  height: 24px;\n  line-height: 24px;\n  text-align: left;\n  margin-top: 8px;\n  padding-left: 8px;\n  overflow-wrap: break-word;\n  background-color: white;\n}\n.igv-generic-dialog-container .igv-generic-dialog-label-input {\n  margin-top: 8px;\n  width: 95%;\n  height: 24px;\n  color: #373737;\n  line-height: 24px;\n  padding-left: 8px;\n  background-color: white;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-generic-dialog-container .igv-generic-dialog-label-input div {\n  width: 30%;\n  height: 100%;\n  font-size: 16px;\n  text-align: right;\n  padding-right: 8px;\n  background-color: white;\n}\n.igv-generic-dialog-container .igv-generic-dialog-label-input input {\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-left: 4px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  color: #373737;\n  text-align: left;\n  outline: none;\n  border-style: solid;\n  border-width: thin;\n  border-color: #7F7F7F;\n  background-color: white;\n}\n.igv-generic-dialog-container .igv-generic-dialog-label-input input {\n  width: 50%;\n  font-size: 16px;\n}\n.igv-generic-dialog-container .igv-generic-dialog-input {\n  margin-top: 8px;\n  width: calc(100% - 16px);\n  height: 24px;\n  color: #373737;\n  line-height: 24px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-generic-dialog-container .igv-generic-dialog-input input {\n  display: block;\n  height: 100%;\n  width: 100%;\n  padding-left: 4px;\n  font-family: "Open Sans", sans-serif;\n  font-weight: 400;\n  color: #373737;\n  text-align: left;\n  outline: none;\n  border-style: solid;\n  border-width: thin;\n  border-color: #7F7F7F;\n  background-color: white;\n}\n.igv-generic-dialog-container .igv-generic-dialog-input input {\n  font-size: 16px;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel {\n  width: 100%;\n  height: 28px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel div {\n  margin-top: 32px;\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  width: 75px;\n  height: 28px;\n  line-height: 28px;\n  text-align: center;\n  border-color: transparent;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 2px;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child {\n  margin-left: 32px;\n  margin-right: 0;\n  background-color: #5ea4e0;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child {\n  margin-left: 0;\n  margin-right: 32px;\n  background-color: #c4c4c4;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:first-child:hover {\n  cursor: pointer;\n  background-color: #3b5c7f;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok-cancel div:last-child:hover {\n  cursor: pointer;\n  background-color: #7f7f7f;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok {\n  width: 100%;\n  height: 36px;\n  margin-top: 32px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok div {\n  width: 98px;\n  height: 36px;\n  line-height: 36px;\n  text-align: center;\n  color: white;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  border-color: white;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 4px;\n  background-color: #2B81AF;\n}\n.igv-generic-dialog-container .igv-generic-dialog-ok div:hover {\n  cursor: pointer;\n  background-color: #25597f;\n}\n\n.igv-generic-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2048;\n  background-color: white;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-generic-container div:first-child {\n  cursor: move;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n  height: 24px;\n  width: 100%;\n  background-color: #dddddd;\n}\n.igv-generic-container div:first-child i {\n  display: block;\n  color: #5f5f5f;\n  cursor: pointer;\n  width: 14px;\n  height: 14px;\n  margin-right: 8px;\n  margin-bottom: 4px;\n}\n\n.igv-menu-popup {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: max-content;\n  z-index: 512;\n  cursor: pointer;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  font-weight: 400;\n  color: #4b4b4b;\n  background: white;\n  border-radius: 4px;\n  border-color: #7F7F7F;\n  border-style: solid;\n  border-width: thin;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-end;\n  text-align: left;\n}\n.igv-menu-popup > div:not(:first-child) {\n  width: 100%;\n}\n.igv-menu-popup > div:not(:first-child) > div {\n  background: white;\n}\n.igv-menu-popup > div:not(:first-child) > div.context-menu {\n  padding-left: 4px;\n  padding-right: 4px;\n}\n.igv-menu-popup > div:not(:first-child) > div:last-child {\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-bottom-color: transparent;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n.igv-menu-popup > div:not(:first-child) > div:hover {\n  background: #efefef;\n}\n\n.igv-menu-popup-shim {\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-bottom: 1px;\n  padding-top: 1px;\n}\n\n.igv-menu-popup-header {\n  position: relative;\n  width: 100%;\n  height: 24px;\n  cursor: move;\n  border-top-color: transparent;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n}\n.igv-menu-popup-header div {\n  margin-right: 4px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-menu-popup-header div:hover {\n  cursor: pointer;\n  color: #444;\n}\n\n.igv-menu-popup-check-container {\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 20px;\n  margin-right: 4px;\n  background-color: transparent;\n}\n.igv-menu-popup-check-container div {\n  padding-top: 2px;\n  padding-left: 8px;\n}\n.igv-menu-popup-check-container div:first-child {\n  position: relative;\n  width: 12px;\n  height: 12px;\n}\n.igv-menu-popup-check-container div:first-child svg {\n  position: absolute;\n  width: 12px;\n  height: 12px;\n}\n\n.igv-user-feedback {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  height: 360px;\n  z-index: 2048;\n  background-color: white;\n  border-color: #a2a2a2;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: medium;\n  font-weight: 400;\n  color: #444;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n}\n.igv-user-feedback div:first-child {\n  position: relative;\n  height: 24px;\n  width: 100%;\n  background-color: white;\n  border-bottom-color: #a2a2a2;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n.igv-user-feedback div:first-child div {\n  position: absolute;\n  top: 2px;\n  width: 16px;\n  height: 16px;\n  background-color: transparent;\n}\n.igv-user-feedback div:first-child div:first-child {\n  left: 8px;\n}\n.igv-user-feedback div:first-child div:last-child {\n  cursor: pointer;\n  right: 8px;\n}\n.igv-user-feedback div:last-child {\n  width: 100%;\n  height: calc(100% - 24px);\n  border-width: 0;\n}\n.igv-user-feedback div:last-child div {\n  width: auto;\n  height: auto;\n  margin: 8px;\n}\n\n.igv-loading-spinner-container {\n  z-index: 1024;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 32px;\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-items: center;\n}\n.igv-loading-spinner-container > div {\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 4px solid rgba(128, 128, 128, 0.5);\n  border-top-color: rgb(255, 255, 255);\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes spin {\n  to {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n.igv-roi-menu {\n  position: absolute;\n  z-index: 512;\n  font-family: "Open Sans", sans-serif;\n  font-size: small;\n  font-weight: 400;\n  color: #4b4b4b;\n  background-color: white;\n  width: 192px;\n  border-radius: 4px;\n  border-color: #7F7F7F;\n  border-style: solid;\n  border-width: thin;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n}\n.igv-roi-menu > div:first-child {\n  height: 24px;\n  border-top-color: transparent;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-color: #7F7F7F;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: flex-end;\n  align-items: center;\n}\n.igv-roi-menu > div:first-child > div {\n  margin-right: 4px;\n  height: 12px;\n  width: 12px;\n  color: #7F7F7F;\n}\n.igv-roi-menu > div:first-child > div:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-roi-menu > div:last-child {\n  background-color: white;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-bottom-color: transparent;\n  border-bottom-style: solid;\n  border-bottom-width: 0;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  text-align: start;\n  vertical-align: middle;\n}\n.igv-roi-menu > div:last-child > div {\n  height: 24px;\n  padding-left: 4px;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  border-bottom-color: #7f7f7f;\n}\n.igv-roi-menu > div:last-child > div:not(:first-child):hover {\n  cursor: pointer;\n  background-color: rgba(127, 127, 127, 0.1);\n}\n.igv-roi-menu > div:last-child div:first-child {\n  font-style: italic;\n  text-align: center;\n  padding-right: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.igv-roi-menu > div:last-child > div:last-child {\n  border-bottom-width: 0;\n  border-bottom-color: transparent;\n}\n\n.igv-roi-placeholder {\n  font-style: normal;\n  color: rgba(75, 75, 75, 0.6);\n}\n\n.igv-roi-table {\n  position: absolute;\n  z-index: 1024;\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  resize: both;\n  overflow: hidden;\n  width: min-content;\n  max-width: 1600px;\n  border-color: #7f7f7f;\n  border-radius: 4px;\n  border-style: solid;\n  border-width: thin;\n  font-family: "Open Sans", sans-serif;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: white;\n  cursor: default;\n}\n.igv-roi-table > div {\n  height: 24px;\n  font-size: 14px;\n  text-align: start;\n  vertical-align: middle;\n  line-height: 24px;\n}\n.igv-roi-table > div:first-child {\n  border-color: transparent;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-top-width: 0;\n  border-bottom-color: #7f7f7f;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n  background-color: #eee;\n  cursor: move;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n}\n.igv-roi-table > div:first-child > div:first-child {\n  text-align: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  margin-left: 4px;\n  margin-right: 4px;\n  width: calc(100% - 4px - 12px);\n}\n.igv-roi-table > div:first-child > div:last-child {\n  margin-right: 4px;\n  margin-bottom: 2px;\n  height: 12px;\n  width: 12px;\n  color: #7f7f7f;\n}\n.igv-roi-table > div:first-child > div:last-child > svg {\n  display: block;\n}\n.igv-roi-table > div:first-child > div:last-child:hover {\n  cursor: pointer;\n  color: #444;\n}\n.igv-roi-table > .igv-roi-table-description {\n  padding: 4px;\n  margin-left: 4px;\n  word-break: break-all;\n  overflow-y: auto;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  background-color: transparent;\n}\n.igv-roi-table > .igv-roi-table-goto-explainer {\n  margin-top: 5px;\n  margin-left: 4px;\n  color: #7F7F7F;\n  font-style: italic;\n  height: 24px;\n  border-top: solid lightgray;\n  background-color: transparent;\n}\n.igv-roi-table > .igv-roi-table-column-titles {\n  height: 24px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: stretch;\n  align-items: stretch;\n  padding-right: 16px;\n  background-color: white;\n  border-top-color: #7f7f7f;\n  border-top-style: solid;\n  border-top-width: thin;\n  border-bottom-color: #7f7f7f;\n  border-bottom-style: solid;\n  border-bottom-width: thin;\n}\n.igv-roi-table > .igv-roi-table-column-titles > div {\n  font-size: 14px;\n  vertical-align: middle;\n  line-height: 24px;\n  text-align: left;\n  margin-left: 4px;\n  height: 24px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-right-color: #7f7f7f;\n  border-right-style: solid;\n  border-right-width: thin;\n}\n.igv-roi-table > .igv-roi-table-column-titles > div:last-child {\n  border-right: unset;\n}\n.igv-roi-table > .igv-roi-table-row-container {\n  display: flex;\n  flex-flow: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  overflow: auto;\n  height: 360px;\n  flex: 1 1 auto;\n  background-color: transparent;\n}\n.igv-roi-table > .igv-roi-table-row-container > .igv-roi-table-row {\n  height: 24px;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: stretch;\n  align-items: stretch;\n}\n.igv-roi-table > .igv-roi-table-row-container > .igv-roi-table-row > div {\n  font-size: 14px;\n  vertical-align: middle;\n  line-height: 24px;\n  text-align: left;\n  margin-left: 4px;\n  height: 24px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-right-color: transparent;\n  border-right-style: solid;\n  border-right-width: thin;\n}\n.igv-roi-table > .igv-roi-table-row-container > .igv-roi-table-row > div:last-child {\n  border-right: unset;\n}\n.igv-roi-table > .igv-roi-table-row-container > .igv-roi-table-row-hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.igv-roi-table > div:last-child {\n  min-height: 32px;\n  height: 32px;\n  line-height: 32px;\n  border-top-color: #7f7f7f;\n  border-top-style: solid;\n  border-top-width: thin;\n  border-bottom-color: transparent;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-bottom-width: 0;\n  background-color: #eee;\n  display: flex;\n  flex-flow: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.igv-roi-table-row-selected {\n  background-color: rgba(0, 0, 0, 0.125);\n}\n\n.igv-roi-table-button {\n  cursor: pointer;\n  height: 20px;\n  user-select: none;\n  line-height: 20px;\n  text-align: center;\n  vertical-align: middle;\n  font-family: "Open Sans", sans-serif;\n  font-size: 13px;\n  font-weight: 400;\n  color: black;\n  padding-left: 6px;\n  padding-right: 6px;\n  background-color: rgb(239, 239, 239);\n  border-color: black;\n  border-style: solid;\n  border-width: thin;\n  border-radius: 3px;\n}\n\n.igv-roi-table-button:hover {\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.13);\n}\n\n.igv-roi-region {\n  z-index: 64;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: visible;\n  margin-top: 66px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n}\n.igv-roi-region > div {\n  position: relative;\n  width: 100%;\n  height: 8px;\n  pointer-events: auto;\n}\n\n.igv-roi-menu-row {\n  height: 24px;\n  padding-left: 8px;\n  font-size: small;\n  text-align: start;\n  vertical-align: middle;\n  line-height: 24px;\n  background-color: white;\n}\n\n.igv-roi-menu-row-edit-description {\n  width: -webkit-fill-available;\n  font-size: small;\n  text-align: start;\n  vertical-align: middle;\n  background-color: white;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-bottom: 4px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: stretch;\n  align-items: stretch;\n}\n.igv-roi-menu-row-edit-description > label {\n  margin-left: 2px;\n  margin-bottom: 0;\n  display: block;\n  width: -webkit-fill-available;\n}\n.igv-roi-menu-row-edit-description > input {\n  display: block;\n  margin-left: 2px;\n  margin-right: 2px;\n  margin-bottom: 1px;\n  width: -webkit-fill-available;\n}\n\n.igv-container {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding-top: 4px;\n  user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  min-height: 160px;\n}\n\n.igv-viewport {\n  position: relative;\n  margin-top: 5px;\n  line-height: 1;\n  overflow-x: hidden;\n  overflow-y: hidden;\n}\n\n.igv-viewport-content {\n  position: relative;\n  width: 100%;\n}\n.igv-viewport-content > canvas {\n  position: relative;\n  display: block;\n}\n\n.igv-column-container {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  width: 100%;\n}\n\n.igv-column-shim {\n  width: 1px;\n  margin-left: 2px;\n  margin-right: 2px;\n  background-color: #545453;\n}\n\n.igv-axis-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n  width: 50px;\n}\n.igv-axis-column > div {\n  position: relative;\n  margin-top: 5px;\n  width: 100%;\n}\n.igv-axis-column > div > div {\n  z-index: 512;\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  width: fit-content;\n  height: fit-content;\n  background-color: transparent;\n  display: grid;\n  align-items: start;\n  justify-items: center;\n}\n.igv-axis-column > div > div > input {\n  display: block;\n  margin: unset;\n  cursor: pointer;\n}\n\n.igv-column {\n  position: relative;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n}\n\n.igv-sample-info-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n}\n\n.igv-sample-name-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n}\n\n.igv-scrollbar-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n  width: 14px;\n}\n.igv-scrollbar-column > div {\n  position: relative;\n  margin-top: 5px;\n  width: 14px;\n}\n.igv-scrollbar-column > div > div {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 2px;\n  width: 8px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: #c4c4c4;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n}\n.igv-scrollbar-column > div > div:hover {\n  background-color: #c4c4c4;\n}\n\n.igv-track-drag-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n  width: 12px;\n  background-color: white;\n}\n.igv-track-drag-column > .igv-track-drag-handle {\n  z-index: 512;\n  position: relative;\n  cursor: pointer;\n  margin-top: 5px;\n  width: 100%;\n  border-style: solid;\n  border-width: 0;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n}\n.igv-track-drag-column .igv-track-drag-handle-color {\n  background-color: #c4c4c4;\n}\n.igv-track-drag-column .igv-track-drag-handle-hover-color {\n  background-color: #787878;\n}\n.igv-track-drag-column .igv-track-drag-handle-selected-color {\n  background-color: #0963fa;\n}\n.igv-track-drag-column > .igv-track-drag-shim {\n  position: relative;\n  margin-top: 5px;\n  width: 100%;\n  border-style: solid;\n  border-width: 0;\n}\n\n.igv-gear-menu-column {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 100%;\n  width: 28px;\n}\n.igv-gear-menu-column > div {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 5px;\n  width: 100%;\n  background: white;\n}\n.igv-gear-menu-column > div > div {\n  position: relative;\n  margin-top: 4px;\n  width: 16px;\n  height: 16px;\n  color: #7F7F7F;\n}\n.igv-gear-menu-column > div > div:hover {\n  cursor: pointer;\n  color: #444;\n}\n\n/*# sourceMappingURL=igv.css.map */\n'),n.adoptedStyleSheets=[e]}if(this.root=e({class:"igv-container"}),n.appendChild(this.root),this.spinner=e({class:"igv-loading-spinner-container"}),this.root.appendChild(this.spinner),this.spinner.appendChild(e()),this.spinner.style.width="64px",this.spinner.style.height="64px",this.stopSpinner(),this.alert=new za(this.root),this.columnContainer=e({class:"igv-column-container"}),this.root.appendChild(this.columnContainer),this.menuPopup=new ju(this.columnContainer),this.menuUtils=new bo(this),this.initialize(t),this.trackViews=[],this.constants={dragThreshold:3,scrollThreshold:5,defaultColor:"rgb(0,0,150)",doubleClickDelay:t.doubleClickDelay||500},this.eventHandlers={},t.listeners)for(let e of Object.keys(t.listeners))this.on(e,t.listeners[e]);this.on("trackremoved",(()=>{0===this.findTracks((e=>"function"==typeof e.getSamples)).length&&(this.sampleInfoControl.setButtonVisibility(!1),this.sampleNameViewportWidth=void 0,this.showSampleNames=!1,this.sampleNameControl.setState(this.showSampleNames),this.sampleNameControl.hide(),this.layoutChange())})),this.on("didchangecolumnlayout",(()=>{if(gu.length>0){const e=gu.length;for(let t=0;t<e;t++)gu[t].dispose();gu.length=0}})),this.addEventHandlers(),this.sampleInfo=new Tu(this),this.setControls(t),this.roiManager=new jy(this)}get doShowROITable(){return this.roiManager.roiTableIsVisible()}startSpinner(){this.spinner.style.display="flex"}stopSpinner(){this.spinner.style.display="none"}initialize(e){this.flanking=e.flanking,this.crossDomainProxy=e.crossDomainProxy,this.formats=e.formats,this.trackDefaults=e.trackDefaults,this.nucleotideColors=e.nucleotideColors||Mc;for(let e of Object.keys(this.nucleotideColors))this.nucleotideColors[e.toLowerCase()]=this.nucleotideColors[e];this.doShowTrackLabels=e.showTrackLabels,this.doShowCenterLine=e.showCenterGuide,this.doShowCursorGuide=e.showCursorGuide,this.showSampleNames=e.showSampleNames,this.sampleNameViewportWidth=void 0,e.sampleNameViewportWidth&&(this.sampleNameViewportWidth=e.sampleNameViewportWidth),e.search&&(this.searchConfig={type:"json",url:e.search.url,coords:void 0===e.search.coords?1:e.search.coords,chromosomeField:e.search.chromosomeField||"chromosome",startField:e.search.startField||"start",endField:e.search.endField||"end",geneField:e.search.geneField||"gene",snpField:e.search.snpField||"snp",resultsField:e.search.resultsField})}setControls(e){const t=this.createStandardControls(e);t.insertBefore(Bt(this.columnContainer)),this.$navigation=t,!1===e.showControls&&t.hide()}createStandardControls(t){const i=Bt("<div>",{class:"igv-navbar"});this.$navigation=i;const n=Bt("<div>",{class:"igv-navbar-left-container"});i.append(n);const r=Bt("<div>",{class:"igv-logo"});n.append(r);const o=Bt('<svg width="690px" height="324px" viewBox="0 0 690 324" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>IGV</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="IGV" fill="#666666"><polygon id="Path" points="379.54574 8.00169252 455.581247 8.00169252 515.564813 188.87244 532.884012 253.529506 537.108207 253.529506 554.849825 188.87244 614.833392 8.00169252 689.60164 8.00169252 582.729511 320.722144 486.840288 320.722144"></polygon><path d="M261.482414,323.793286 C207.975678,323.793286 168.339046,310.552102 142.571329,284.069337 C116.803612,257.586572 103.919946,217.158702 103.919946,162.784513 C103.919946,108.410325 117.437235,67.8415913 144.472217,41.0770945 C171.507199,14.3125977 212.903894,0.930550071 268.663545,0.930550071 C283.025879,0.930550071 298.232828,1.84616386 314.284849,3.6774189 C330.33687,5.50867394 344.839793,7.97378798 357.794056,11.072835 L357.794056,68.968378 C339.48912,65.869331 323.578145,63.5450806 310.060654,61.9955571 C296.543163,60.4460336 284.574731,59.6712835 274.154998,59.6712835 C255.850062,59.6712835 240.502308,61.4320792 228.111274,64.9537236 C215.720241,68.4753679 205.793482,74.2507779 198.330701,82.2801269 C190.867919,90.309476 185.587729,100.87425 182.48997,113.974767 C179.392212,127.075284 177.843356,143.345037 177.843356,162.784513 C177.843356,181.942258 179.251407,198.000716 182.067551,210.960367 C184.883695,223.920018 189.671068,234.41436 196.429813,242.443709 C203.188559,250.473058 212.059279,256.178037 223.042241,259.558815 C234.025202,262.939594 247.683295,264.629958 264.01693,264.629958 C268.241146,264.629958 273.098922,264.489094 278.590403,264.207362 C284.081883,263.925631 289.643684,263.50304 295.275972,262.939577 L295.275972,159.826347 L361.595831,159.826347 L361.595831,308.579859 C344.698967,313.087564 327.239137,316.750019 309.215815,319.567334 C291.192494,322.38465 275.281519,323.793286 261.482414,323.793286 L261.482414,323.793286 L261.482414,323.793286 Z" id="Path"></path>;<polygon id="Path" points="0.81355666 5.00169252 73.0472883 5.00169252 73.0472883 317.722144 0.81355666 317.722144"></polygon></g> </g> </svg>');o.css("width","34px"),o.css("height","32px"),r.append(o),this.$current_genome=Bt("<div>",{class:"igv-current-genome"}),n.append(this.$current_genome),this.$current_genome.text("");const a=Bt("<div>",{class:"igv-navbar-genomic-location"});n.append(a),this.chromosomeSelectWidget=new Ay(this,a.get(0)),!1!==t.showChromosomeWidget?this.chromosomeSelectWidget.show():this.chromosomeSelectWidget.hide();const c=Bt("<div>",{class:"igv-locus-size-group"});a.append(c);const h=Bt("<div>",{class:"igv-search-container"});c.append(h),this.$searchInput=Bt("<input>",{class:"igv-search-input",type:"text",placeholder:"Locus Search"}),h.append(this.$searchInput),this.$searchInput[0].addEventListener("keyup",(e=>{e.stopImmediatePropagation()})),this.$searchInput.change((()=>this.doSearch(this.$searchInput.val())));const d=e({class:"igv-search-icon-container"});h.append(Bt(d)),d.appendChild(l("search")),d.addEventListener("click",(()=>this.doSearch(this.$searchInput.val()))),this.windowSizePanel=new Cy(c.get(0),this);const u=Bt("<div>",{class:"igv-navbar-right-container"});i.append(u);const f=Bt('<div class="igv-navbar-toggle-button-container">');if(u.append(f),this.$toggle_button_container=f,this.overlayTrackButton=new ef(this,f.get(0)),this.overlayTrackButton.setVisibility(!1),this.multiTrackSelectButton=new Zy(this,f.get(0)),this.cursorGuide=new _y(this.columnContainer,this),this.cursorGuideButton=new xy(this,f.get(0)),this.centerLineButton=new ky(this,f.get(0)),this.setTrackLabelVisibility(t.showTrackLabels),this.trackLabelControl=new Iy(f.get(0),this),this.roiTableControl=new Xy(f.get(0),this),this.sampleInfoControl=new Ey(f.get(0),this),this.sampleNameControl=new Sy(f.get(0),this),!0===t.showSVGButton&&(this.saveImageControl=new Dy(f.get(0),this)),t.customButtons)for(let e of t.customButtons)new Oy(f.get(0),this,e);return this.zoomWidget=new My(this,u.get(0)),!1===t.showNavigation&&this.$navigation.hide(),this.sliderDialog=new Na(this.root),this.sliderDialog.container.id=`igv-slider-dialog-${s()}`,this.inputDialog=new Ba(this.root),this.inputDialog.container.id=`igv-input-dialog-${s()}`,this.dataRangeDialog=new _o(this,Bt(this.root)),this.dataRangeDialog.$container.get(0).id=`igv-data-range-dialog-${s()}`,this.genericColorPicker=new Da({parent:this.columnContainer,width:432}),this.genericColorPicker.container.id=`igv-track-color-picker-${s()}`,i}getSampleNameViewportWidth(){return void 0===this.sampleNameViewportWidth||!1===this.showSampleNames?0:this.sampleNameViewportWidth}getSampleInfoViewportWidth(){return this.getSampleInfoColumnWidth()}isMultiLocusMode(){return this.referenceFrameList&&this.referenceFrameList.length>1}isMultiLocusWholeGenomeView(){if(void 0===this.referenceFrameList||1===this.referenceFrameList.length)return!1;for(let e of this.referenceFrameList)if("all"===e.chr.toLowerCase())return!0;return!1}currentLoci(){const e=e=>`${e.chr}:${e.start+1}-${e.end}`;return void 0===this.referenceFrameList||0===this.referenceFrameList.length?"":1===this.referenceFrameList.length?e(this.referenceFrameList[0]):this.referenceFrameList.map((t=>e(t)))}toSVG(){const{x:e,y:t,width:i,height:n}=this.columnContainer.getBoundingClientRect(),r=new ru({width:i,height:n,backdropColor:"white",multiLocusGap:0,viewbox:{x:0,y:0,width:i,height:n}}),s={deltaX:0,deltaY:-t};for(let e of this.trackViews)e.renderSVGContext(r,s);return s.deltaX=e,this.roiManager.renderSVGContext(this.columnContainer,r,s),r.getSerializedSvg(!0)}saveSVGtoFile(e,t){let i=this.toSVG();if(t){const e=document.createElement("svg");e.innerHTML=i,t.append(e),t.appendChild(e)}const n=e||"igvjs.svg",r=URL.createObjectURL(new Blob([i],{type:"application/octet-stream"}));Pt(n,r),URL.revokeObjectURL(r)}savePNGtoFile(e){const t=this.toSVG(),i=new Blob([t],{type:"image/svg+xml"}),n=URL.createObjectURL(i),r=document.createElement("img");r.addEventListener("load",(()=>{const t=this.columnContainer.getBoundingClientRect(),i=window.devicePixelRatio,s=t.width*i,o=t.height*i,a=document.createElement("canvas");a.width=s,a.height=o;const c=a.getContext("2d");c.scale(i,i),c.drawImage(r,0,0);const l=a.toDataURL("image/png");Pt(e=e||"igvjs.png",l),URL.revokeObjectURL(n)})),r.src=n}async loadSession(e){let t;return this.sampleInfo.initialize(),this.roiSets=[],t=e.url||e.file?await cA.loadSessionFile(e):e,this.loadSessionObject(t)}static async loadSessionFile(e){const t=e.url||e.file;let i;if(e.url&&Mt(e.url)&&(e.url.startsWith("blob:")||e.url.startsWith("data:"))){const t=cA.uncompressSession(e.url);i=JSON.parse(t)}else{let n=e.filename;if(n||(n=e.url?await Wa(e.url):e.file.name),n.endsWith(".xml")){const e=hu.KNOWN_GENOMES,n=await Qs.loadString(t);i=new fy(n,e)}else if(n.endsWith("hub.txt")){i={reference:(await su.loadHub(t,e)).getGenomeConfig()}}else{if(!n.endsWith(".json"))throw Error("Unrecognized session file format:"+n);i=await Qs.loadJson(t)}}return gA(i)}async loadSessionObject(e){this.cleanHouseForSession(),this.config=e,e.browsers&&(e=await async function(e){const t=e.browsers[0],i={},n=new Bf({url:t.url});await n.readHeaderAndFooter(),i.sampleNameViewportWidth=20,i.genome="hg38";const r=t.state.split(","),s=n.bpResolutions[Number.parseInt(r[2])],o=Number.parseInt(r[0]),a=Math.floor(Number.parseFloat(r[3])*s),c=a+Math.floor(1700*s);return i.locus=`${n.chromosomes[o].name}:${a}-${c}`,i.tracks=(t.tracks||[]).filter((e=>!("refgene"===e.format||"cellType"===e.name))),i.tracks.push({type:"shoebox",url:t.url,name:t.name,colorScale:t.colorScale,_hicFile:n}),i}(e)),this.sampleInfoControl.setButtonVisibility(!1),this.showSampleNames=e.showSampleNames||!1,this.sampleNameControl.setState(!0===this.showSampleNames),e.sampleNameViewportWidth&&(this.sampleNameViewportWidth=e.sampleNameViewportWidth),Ka(this.columnContainer,"igv-axis-column"),Ka(this.columnContainer,"igv-sample-info-column"),Ka(this.columnContainer,"igv-sample-name-column"),Ka(this.columnContainer,"igv-scrollbar-column"),Ka(this.columnContainer,"igv-track-drag-column"),Ka(this.columnContainer,"igv-gear-menu-column");const t=e.reference||e.genome;if(!t)return void console.warn("No genome or reference object specified");const i=Mt(t)?await hu.expandReference(this.alert,t):t;if(await this.loadReference(i,i.locus||e.locus),this.centerLineList=this.createCenterLineList(this.columnContainer),!1!==e.showIdeogram){const e=new cy(this);e.id="ideogram";const t=new of(this,this.columnContainer,e);this.trackViews.push(t)}if(!1!==e.showRuler){const e=new of(this,this.columnContainer,new Ou(this));this.trackViews.push(e)}e.qtlSelections&&(this.qtlSelections=oA.fromJSON(e.qtlSelections)),this.roiManager.clearROIs(),e.roi?this.roiManager.loadROI(e.roi):await this.roiManager.reset();const n=[];if(e.sampleinfo)for(const t of e.sampleinfo)t.file?n.push(t.file):this.loadSampleInfo(t);const r=i.tracks||[],s=e.tracks?r.concat(e.tracks):r;0===s.filter((e=>"sequence"===e.type&&!e.url&&!e.fastaURL)).length&&s.push({type:"sequence",order:Ud,removable:!1});const o=s.filter((e=>void 0!==e.file)).map((({file:e})=>e)),a=s.filter((e=>void 0!==e.indexFile)).map((({indexFile:e})=>e));a.length>0&&o.push(...a),n.length>0&&o.push(...n),o.length>0&&alert(`Local files cannot be loaded automatically.\nThis session contains references to these local files:\n${o.map((e=>`    ${e}`)).join("\n")}`);const c=s.filter((e=>void 0===e.file));let l=1;for(let e of c)void 0===e.order&&(e.order=l++);await this.loadTrackList(c);for(let e of this.trackViews.filter((e=>"ruler"===e.track.type||"ideogram"===e.track.type)))await e.updateViews();return this.trackViews.some((e=>e.track.selected))&&this.multiTrackSelectButton.setMultiTrackSelection(!0),this.updateUIWithReferenceFrameList(),this.updateLocusSearchWidget(),s}cleanHouseForSession(){for(let e of this.trackViews)e.removeDOMFromColumnContainer();this.columnContainer.querySelectorAll(".igv-axis-column, .igv-column-shim, .igv-column, .igv-sample-info-column, .igv-sample-name-column, .igv-scrollbar-column, .igv-track-drag-column, .igv-gear-menu-column").forEach((e=>e.remove())),this.trackViews=[],this.circularView&&this.circularView.clearChords()}async loadReference(e,t){let i;this.removeAllTracks(),this.roiManager.clearROIs(),this.multiTrackSelectButton.setMultiTrackSelection(!1),i=e.gbkURL?await ud(e.gbkURL):await sA.createGenome(e,this);const n=void 0===this.genome||this.genome.id!==i.id;this.genome=i,this.updateNavbarDOMWithGenome(i);let r=t||i.initialLocus;Array.isArray(r)&&(r=r.join(" "));if(!await this.search(r,!0))throw new Error(`Cannot set initial locus ${r}`);if(n){let t;if(e.hubURL){t=(await su.loadHub(e.hubURL)).getGroupedTrackConfigurations()}this.fireEvent("genomechange",[{genome:i,trackConfigurations:t}]),this.circularView&&this.circularView.setAssembly({name:this.genome.id,id:this.genome.id,chromosomes:Lm(this.genome)})}}updateNavbarDOMWithGenome(e){let t=e.id&&e.id.length<20?e.id:`${e.id.substring(0,8)}...${e.id.substring(e.id.length-8)}`;this.$current_genome.text(t),this.$current_genome.attr("title",e.description);!1!==this.config.showChromosomeWidget&&!1!==this.genome.showChromosomeWidget&&e.chromosomeNames&&e.chromosomeNames.length>1?(this.chromosomeSelectWidget.update(e),this.chromosomeSelectWidget.show()):this.chromosomeSelectWidget.hide()}async loadGenome(e){let t;e.url&&(Mt(e.url)&&e.url.endsWith("/hub.txt")?(e.hubURL=e.url,delete e.url):"gbk"===function(e){let t;if(e instanceof File)t=e.name;else{if("string"!=typeof e)throw new Error("Input must be a File object or a URL string");t=e}const i=t.split(".").pop();return i.split("?")[0]}(e.url)&&(e.gbkURL=e.url,delete e.url));if(e.hubURL||e.url&&Mt(e.url)&&e.url.endsWith("/hub.txt")){t=(await su.loadHub(e.hubURL||e.url,e)).getGenomeConfig()}else t=Mt(e)||!(e.url||e.fastaURL||e.twoBitURL||e.gbkURL)?await hu.expandReference(this.alert,e):e;let i;await this.loadReference(t),i=t.gbkURL||"gbk"===t.format?[{name:"Annotations",format:"gbk",url:t.gbkURL}]:t.tracks||[];return 0===i.filter((e=>"sequence"===e.type)).length&&i.push({type:"sequence",order:Ud}),await this.loadTrackList(i),await this.updateViews(),this.genome}async loadTrackHub(e){const t=gA((await su.loadHub(e.url,e)).getGenomeConfig());return this.loadGenome(t)}updateUIWithReferenceFrameList(){const e=this.referenceFrameList;this.isMultiLocusWholeGenomeView()||hu.isWholeGenomeView(e[0].chr),vy(this,this.$navigation.width()),fA(this.trackViews,this.doShowTrackLabels),this.doShowCenterLine&&hu.isWholeGenomeView(e[0].chr)&&this.centerLineButton.boundMouseClickHandler(),this.doShowCursorGuide&&hu.isWholeGenomeView(e[0].chr)&&this.cursorGuideButton.boundMouseClickHandler(),this.setCenterLineAndCenterLineButtonVisibility(hu.isWholeGenomeView(e[0].chr))}setCenterLineAndCenterLineButtonVisibility(e){e?this.centerLineButton.setVisibility(!e):this.centerLineButton.setVisibility(this.config.showCenterGuideButton);for(let t of this.centerLineList)e?this.setCenterLineVisibility(!e):this.setCenterLineVisibility(this.doShowCenterLine)}setTrackLabelVisibility(e){fA(this.trackViews,e)}setROITableVisibility(e){!0===e?this.roiManager.presentTable():this.roiManager.dismissTable()}setCursorGuideVisibility(e){e?this.cursorGuide.show():this.cursorGuide.hide()}setCustomCursorGuideMouseHandler(e){this.cursorGuide.customMouseHandler=e}setCenterLineVisibility(e){for(let t of this.centerLineList)!0===e?(t.show(),t.repaint()):t.hide()}async loadTrackList(e){let t=0;for(let i of e)void 0===i.order&&(i.order=t++);const i=[];for(let t of e)i.push(this._loadTrack(t));const n=await Promise.all(i);return this.trackViews.filter((function(e){return e.track.autoscaleGroup})).length>0&&this.updateViews(),n}async loadTrack(e){e.sync=!1!==e.sync;const t=this._loadTrack(e);return t&&e.autoscaleGroup&&(await t,this.updateViews()),t}async _loadTrack(e){Mt(e)&&(e=JSON.parse(e));try{if(e.hidden){const t=wd(e,this.genome);return void await t.getFeatures({chr:"1",start:0,end:Number.MAX_SAFE_INTEGER})}const t=await this.createTrack(e);if("sampleinfo"===e.type)return void this.layoutChange();if(void 0===t)return;return this.addTrack(e,t)}catch(t){let i=t.message||t.error||t.toString();const n={401:"Access unauthorized",403:"Access forbidden",404:"Not found"};n.hasOwnProperty(i)&&(i=n[i]),i=`${i} : ${Ht(e.url)?e.url.name:e.url}`;const r=new Error(i);throw console.error(r),r}}async addTrack(e,t){void 0===t.order&&(t.order=this.trackViews.length);const i=new of(this,this.columnContainer,t);if(this.trackViews.push(i),fA(this.trackViews,this.doShowTrackLabels),"function"==typeof t.postInit)try{i.startSpinner(),await t.postInit()}finally{i.stopSpinner()}return t.autoscaleGroup||(e.sync?await i.updateViews():i.updateViews()),"function"==typeof t.hasSamples&&t.hasSamples()&&(this.sampleInfo.hasAttributes()&&this.sampleInfoControl.setButtonVisibility(!0),!1!==this.config.showSampleNameButton&&this.sampleNameControl.show()),this.reorderTracks(),this.fireEvent("trackorderchanged",[this.getTrackOrder()]),this.multiTrackSelectButton.setMultiTrackSelection(this.multiTrackSelectButton.enableMultiTrackSelection),t}async loadROI(e){return this.roiManager.loadROI(e,this.genome)}clearROIs(){this.roiManager.clearROIs()}async getUserDefinedROIs(){if(this.roiManager){const e=this.roiManager.getUserDefinedROISet();if(void 0===e)return[];const t=await e.getAllFeatures(),i=[];for(let e of Object.values(t))i.push(...e);return i}return[]}getRulerTrackView(){const e=this.trackViews.filter((({track:e})=>"ruler"===e.id));return e.length>0?e[0]:void 0}async createTrack(e){let t=await async function(e){return"function"==typeof e?e():e}
/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */(e.url||e.fastaURL);if(Mt(t)&&(t=t.trim()),t)if(e.format)e.format=e.format.toLowerCase();else if(e.fastaURL)e.format="fasta";else if(e.sourceType)"htsget"===e.sourceType&&await Rh.inferFormat(e);else{const t=await sm(e);t&&(e.format=t)}e.type&&Pa(e);let i=e.type?e.type.toLowerCase():void 0;if(!i){if(!e.format)throw Error(`Unrecognized track:  ${JSON.stringify(e)}`);if("hic"===e.format){const t=new Bf(e);if(await t.readHeaderAndFooter(),!t.chromosomeIndexMap.celltype)throw Error("'.hic' files not supported");i="shoebox",e._hicFile=t}else if(i=Ha(e.format),"bedtype"===i){const t=wd(e,this.genome);e._featureSource=t;const n=await t.trackType();i=n||"annotation"}e.type=i}if(this.trackDefaults&&i){const t=this.trackDefaults[i];if(t)for(let i in t)t.hasOwnProperty(i)&&void 0===e[i]&&(e[i]=t[i])}const n=function(e,t,i){let n;switch(e){case"annotation":case"genes":case"fusionjuncspan":case"snp":n="feature";break;case"seg":case"maf":case"mut":n="seg";break;case"junctions":case"splicejunctions":n="junction";break;default:n=e}return uy.has(n)?uy.get(n)(t,i):void 0}(i,e,this);if(void 0!==n)return e.roi&&e.roi.length>0&&(n.roiSets=e.roi.map((e=>new Yy(e,this.genome)))),n;this.alert.present(new Error(`Error creating track.  Could not determine track type for file: ${e.url||e}`),void 0)}reorderTracks(){this.trackViews.sort((function(e,t){const i=e=>"ideogram"===e.track.id?1:"ruler"===e.track.id?2:3,n=i(e),r=i(t);if(n===r){return(e.track.order||0)-(t.track.order||0)}return n-r}));for(let{axis:e,viewports:t,sampleInfoViewport:i,sampleNameViewport:n,outerScroll:r,dragHandle:s,gearContainer:o}of this.trackViews){e.remove();for(let{$viewport:e}of t)e.detach();i.viewport.remove(),n.viewport.remove(),r.remove(),s.remove(),o.remove()}const e=this.columnContainer.querySelectorAll(".igv-column");for(let{axis:t,viewports:i,sampleInfoViewport:n,sampleNameViewport:r,outerScroll:s,dragHandle:o,gearContainer:a}of this.trackViews){this.columnContainer.querySelector(".igv-axis-column").appendChild(t);for(let t=0;t<e.length;t++){const{$viewport:n}=i[t];e[t].appendChild(n.get(0))}this.columnContainer.querySelector(".igv-sample-info-column").appendChild(n.viewport),this.columnContainer.querySelector(".igv-sample-name-column").appendChild(r.viewport),this.columnContainer.querySelector(".igv-scrollbar-column").appendChild(s),this.columnContainer.querySelector(".igv-track-drag-column").appendChild(o),this.columnContainer.querySelector(".igv-gear-menu-column").appendChild(a)}}getTrackOrder(){return this.trackViews.filter((e=>e.track&&e.track.name)).map((e=>e.track.name))}getSelectedTrackViews(){return this.trackViews.filter((e=>!0===e.track.selected))}removeTrackByName(e){const t=this.trackViews.slice();for(let i of t)e===i.track.name&&this.removeTrack(i.track)}removeTrack(e){for(let t of this.trackViews)if(e===t.track){this._removeTrack(t.track);break}}_removeTrack(e){e.disposed||(this.trackViews.splice(this.trackViews.indexOf(e.trackView),1),this.fireEvent("trackremoved",[e]),this.fireEvent("trackorderchanged",[this.getTrackOrder()]),e.trackView&&e.trackView.dispose())}removeAllTracks(){const e=this.trackViews;this.trackViews=[];for(let t of e)"ruler"!==t.track.id&&"ideogram"!==t.track.id?(this.fireEvent("trackremoved",[t.track]),t.dispose()):this.trackViews.push(t)}get ideogramTrackView(){return this.trackViews[0]}get rulerTrackView(){return this.trackViews[1]}findTracks(e,t){let i="function"==typeof e?t=>e(t.track):i=>t===i.track[e];return this.trackViews.filter(i).map((e=>e.track))}get tracks(){return this.trackViews.map((e=>e.track)).filter((e=>void 0!==e))}setTrackHeight(e){this.trackHeight=e,this.trackViews.forEach((function(t){t.setTrackHeight(e)}))}async visibilityChange(){this.layoutChange()}async layoutChange(){if(this.referenceFrameList.find((e=>e.bpPerPixel<0))){const e=this.calculateViewportWidth(this.referenceFrameList.length);for(let t of this.referenceFrameList)t.bpPerPixel=(t.end-t.start)/e}this.referenceFrameList&&(this.isMultiLocusWholeGenomeView()||hu.isWholeGenomeView(this.referenceFrameList[0].chr),vy(this,this.$navigation.width())),lA.call(this),await this.updateViews()}async updateViews(){const e=this.trackViews;this.updateLocusSearchWidget();for(let e of this.referenceFrameList)e.bpPerPixel<=10&&await this.genome.getSequence(e.chr,e.start,e.start+1);for(let e of this.centerLineList)e.repaint();if(this.dragObject)for(let t of e)await t.updateViews();else{const t={},i=[];for(const n of e)if(n.track.autoscaleGroup){const e=n.track.autoscaleGroup;t[e]||(t[e]=[]),t[e].push(n)}else i.push(n);if(Object.entries(t).length>0)for(const[e,i]of Object.entries(t)){const e=await Promise.all(i.map((e=>e.getInViewFeatures()))),t=Qa(e.flat());for(const e of i)e.track.dataRange=Object.assign({},t),e.track.autoscale=!1;await Promise.all(i.map((e=>e.updateViews())))}await Promise.all(i.map((e=>e.updateViews())))}}repaintViews(){for(let e of this.trackViews)e.repaintViews()}updateLocusSearchWidget(){if(!this.referenceFrameList)return;const e=this.referenceFrameList,t=this.calculateViewportWidth(this.referenceFrameList.length);for(let i of e)i.end=i.start+i.bpPerPixel*t;this.chromosomeSelectWidget&&(this.chromosomeSelectWidget.select.value=1===e.length?this.referenceFrameList[0].chr:"");const i=this.referenceFrameList.map((e=>e.getLocusString())).join(" ");this.$searchInput.val(i),this.fireEvent("locuschange",[this.referenceFrameList])}calculateViewportWidth(e){let{width:t}=this.columnContainer.getBoundingClientRect();return t-=50+this.getSampleInfoViewportWidth()+this.getSampleNameViewportWidth()+14+12+28,t-=5*(e-1),Math.floor(t/e)}minimumBases(){return this.config.minimumBases}zoomIn(){this.zoomWithScaleFactor(.5)}zoomOut(){this.zoomWithScaleFactor(2)}async zoomWithScaleFactor(e,t,i){if(!this.referenceFrameList)return;const n=this.calculateViewportWidth(this.referenceFrameList.length);let r=i?[i]:this.referenceFrameList;for(let i of r)i.zoomWithScaleFactor(this,e,n,t)}async addMultiLocusPanel(e,t,i,n){if(!this.referenceFrameList)return;const r=this.calculateViewportWidth(1+this.referenceFrameList.length),s=this.calculateViewportWidth(this.referenceFrameList.length)/this.calculateViewportWidth(1+this.referenceFrameList.length);for(let e of this.referenceFrameList)e.bpPerPixel*=s;const o=(i-t)/r,a=new gy(this.genome,e,t,i,o),c=n?this.referenceFrameList.indexOf(n):this.referenceFrameList.length-1,l=1+c,{$viewport:h}=this.trackViews[0].viewports[c],d=Ly(h.get(0).parentElement);if(this.fireEvent("didchangecolumnlayout"),l===this.referenceFrameList.length){this.referenceFrameList.push(a);for(let e of this.trackViews){const t=Bu(e,d,a);e.viewports.push(t)}}else{this.referenceFrameList.splice(l,0,a);for(let e of this.trackViews){const t=Bu(e,d,a);e.viewports.splice(l,0,t)}}this.centerLineList=this.createCenterLineList(this.columnContainer),lA.call(this),await this.updateViews(!0)}createCenterLineList(e){const t=e.querySelectorAll(".igv-center-line");for(let e=0;e<t.length;e++)t[e].remove();const i=[],n=e.querySelectorAll(".igv-column");for(let e=0;e<n.length;e++)i.push(new Hy(this,this.referenceFrameList[e],n[e]));return i}async removeMultiLocusPanel(e){const t=this.referenceFrameList.indexOf(e),{$viewport:i}=this.trackViews[0].viewports[t];Ty(t,i.parent().get(0)),this.fireEvent("didchangecolumnlayout");for(let{viewports:e}of this.trackViews)e[t].dispose(),e.splice(t,1);if(this.referenceFrameList.splice(t,1),1===this.referenceFrameList.length&&this.getRulerTrackView())for(let e of this.getRulerTrackView().viewports)e.dismissLocusLabel();const n=this.calculateViewportWidth(1+this.referenceFrameList.length)/this.calculateViewportWidth(this.referenceFrameList.length);await this.rescaleForMultiLocus(n)}async gotoMultilocusPanel(e){const t=this.referenceFrameList.indexOf(e);this.columnContainer.querySelectorAll(".igv-column").forEach(((e,i)=>{i===t||e.remove()})),this.columnContainer.querySelectorAll(".igv-column-shim").forEach((e=>e.remove()));for(let e of this.trackViews){const i=e.viewports[t];e.viewports.filter(((e,i)=>i!==t)).forEach((e=>e.dispose())),e.viewports=[i]}const i=this.calculateViewportWidth(1);e.bpPerPixel=(e.end-e.start)/i,this.referenceFrameList=[e],this.trackViews.forEach((({viewports:e})=>e.forEach((e=>e.setWidth(i))))),this.centerLineList=this.createCenterLineList(this.columnContainer),this.updateUIWithReferenceFrameList(),await this.updateViews(!0)}async rescaleForMultiLocus(e){const t=this.calculateViewportWidth(this.referenceFrameList.length);for(let t of this.referenceFrameList)t.bpPerPixel*=e;for(let{viewports:e}of this.trackViews)for(let i of e)i.setWidth(t);this.centerLineList=this.createCenterLineList(this.columnContainer),this.updateUIWithReferenceFrameList(),await this.updateViews()}async goto(e,t,i){await this.search(e+":"+t+"-"+i)}async doSearch(e,t){const i=await this.search(e,t);return i||this.alert.present(new Error(`Unrecognized locus: <b> ${e} </b>`)),i}async search(e,t){const i=await async function(e,t){if(void 0===t||""===t.trim())return;const i=t.split(" ");let n=[];const r=async t=>{if("all"===t.trim().toLowerCase()||"*"===t)return e.genome.wholeGenomeView?{chr:"all",start:0,end:e.genome.getChromosome("all").bpLength}:void 0;let i,n;if(t.includes(":")&&(i=Zv(t,e.isSoftclipped()),i&&(n=await e.genome.loadChromosome(i.chr))),!n){i=void 0;const r=await Xv(e,t);r&&(i={chr:r.chr,start:r.start,end:r.end,name:(r.name||t).toUpperCase()}),i||(n=await e.genome.loadChromosome(t),n&&(i={chr:n.name}))}return i&&(n=n||await e.genome.loadChromosome(i.chr),i.chr=n.name,void 0===i.start&&void 0===i.end&&(i.start=0,i.end=n.bpLength)),i};for(let e of i){const t=await r(e);t&&n.push(t)}if(0===n.length){const e=await r(t.replaceAll(" ","+"));e&&n.push(e)}return 0===n.length?void 0:n}(this,e);if(i&&i.length>0){this.referenceFrameList=function(e,t,i,n,r,s){return e.map((e=>{const o=Object.assign({},e);if(i&&o.name&&(o.start=Math.max(0,o.start-i),o.end+=i),!s){const e=t.getChromosome(o.chr);Va(e.bpLength,o,n)}return new gy(t,o.chr,o.start,o.end,(o.end-o.start)/r)}))}(i,this.genome,this.flanking,this.minimumBases(),this.calculateViewportWidth(i.length),this.isSoftclipped());for(let e of this.trackViews)e.removeViewportsFromColumnContainer();this.columnContainer.querySelectorAll(".igv-column-shim, .igv-column").forEach((e=>e.remove())),zy(this.columnContainer.querySelector(".igv-sample-info-column"),this.referenceFrameList.length),this.fireEvent("didchangecolumnlayout");for(let e of this.trackViews)e.createViewports(this,this.columnContainer,this.referenceFrameList);return this.centerLineList=this.createCenterLineList(this.columnContainer),this.updateUIWithReferenceFrameList(),t||await this.updateViews(),!0}return!1}async loadSampleInfo(e){await this.sampleInfo.loadSampleInfoFile(e.url);for(const{sampleInfoViewport:e}of this.trackViews)e.setWidth(this.getSampleInfoColumnWidth());this.findTracks((e=>"function"==typeof e.getSamples)).length>0&&(this.sampleInfoControl.performClickWithState(this,!0),this.sampleInfoControl.setButtonVisibility(!0));for(const{sampleInfoViewport:e}of this.trackViews)e.repaint()}getSampleInfoColumnWidth(){if(this.sampleInfo.attributeCount){const e=this.findTracks((e=>"function"==typeof e.getSamples)).length>0,t=this.sampleInfo.hasAttributes(),i=this.sampleInfoControl.showSampleInfo;return e&&t&&i?this.sampleInfo.attributeCount*Hu+8:0}return 0}on(e,t){this.eventHandlers[e]||(this.eventHandlers[e]=[]),this.eventHandlers[e].push(t)}un(e,t){this.off(e,t)}off(e,t){if(e)if(t){const i=this.eventHandlers[e];if(i&&0!==i.length){const n=i.indexOf(t);-1!==n&&this.eventHandlers[e].splice(n,1)}else console.warn("No handlers to remove for event: "+e)}else this.eventHandlers[e]=[];else this.eventHandlers={}}fireEvent(e,t,i){const n=this.eventHandlers[e];if(void 0===n||0===n.length)return;const r=i||window;return n.map((function(e){return e.apply(r,t)}))[0]}dispose(){this.removeEventHandlers();for(let e of this.trackViews)e.dispose();this.roiManager&&this.roiManager.dispose()}toJSON(){const e={version:"3.0.2"};if(void 0!==this.showSampleNames&&(e.showSampleNames=this.showSampleNames),this.sampleNameViewportWidth&&(e.sampleNameViewportWidth=this.sampleNameViewportWidth),e.reference=this.genome.toJSON(),e.reference.fastaURL instanceof File)throw new Error(`Error. Sessions cannot include local file references ${e.reference.fastaURL.name}.`);if(e.reference.indexURL instanceof File)throw new Error(`Error. Sessions cannot include local file references ${e.reference.indexURL.name}.`);const t=[];let i=this.trackViews[0];for(let{referenceFrame:e}of i.viewports){const i=e.getLocusString();t.push(i)}e.locus=1===t.length?t[0]:t,e.roi=this.roiManager.toJSON(),this.qtlSelections.isEmpty()||(e.qtlSelections=this.qtlSelections.toJSON());const n=[],r=[];for(const{track:e}of this.trackViews)try{let t;"function"==typeof e.getState?t=Hl.localFileInspection(e.getState()):e.config&&(t=Hl.localFileInspection(e.config)),t&&(t.browser&&delete t.browser,t.order=e.order,n.push(t))}catch(t){const i=`Track: ${e.name}: ${t}`;console.error(i),r.push(i)}if(r.length>0){let e=1,t="Errors encountered saving session: </br>";for(let i of r)t+=` (${e++}) ${i.toString()} <br/>`;throw Error(t)}e.tracks=n;const s=[];for(const e of n)for(const t of Object.keys(e))"file"!==t&&"indexFile"!==t||s.push(e[t]);const o=[];if(this.sampleInfo.sampleInfoFiles.length>0){const t=this.sampleInfo.toJSON();t.length>0&&(e.sampleinfo=t);for(const e of this.sampleInfo.sampleInfoFiles){const t=Hl.localFileInspection({url:e});t.file&&o.push(t.file)}o.length>0&&s.push(...o)}return s.length>0&&alert(`This session includes reference(s) to local file(s):\n${s.map((e=>`    ${e}`)).join("\n")}\nLocal files cannot be loaded automatically when a saved session is restored.`),e}compressedSession(){return function(e){const t=new Uint8Array(e.length);for(var i=0;i<e.length;i++)t[i]=e.charCodeAt(i);const n=new cs(t),r=String.fromCharCode.apply(null,n);return btoa(r).replace(/\+/g,".").replace(/\//g,"_").replace(/=/g,"-")}(JSON.stringify(this.toJSON()))}sessionURL(){const e=window.location.href.slice(),t=e.indexOf("?");return(t>0?e.substring(0,t):e)+"?sessionURL=blob:"+this.compressedSession()}mouseDownOnViewport(e,t){var i;i=r(e),this.vpMouseDown={viewport:t,lastMouseX:i.x,mouseDownX:i.x,lastMouseY:i.y,mouseDownY:i.y,referenceFrame:t.referenceFrame}}cancelTrackPan(){const e=this.dragObject;this.dragObject=void 0,this.isScrolling=!1,this.vpMouseDown=void 0,e&&e.viewport.referenceFrame.start!==e.start&&(this.updateViews(),this.fireEvent("trackdragend"))}isTrackPanning(){return this.dragObject}isSoftclipped(){return void 0!==this.trackViews.find((e=>!0===e.track.showSoftClips))}startTrackDrag(e){this.dragTrack=e}updateTrackDrag(e){if(e&&this.dragTrack){const t=this.dragTrack,i=this.trackViews.indexOf(e),n=this.trackViews.indexOf(t),r=this.trackViews;r[i]=t,r[n]=e;const s=this.trackViews[i].track.order;this.trackViews[n].track.order=s;const o=r.length;let a=s;if(i<n)for(let e=i+1;e<o;e++){const t=r[e].track;if(!(t.order<=a))break;t.order=Math.min(Number.MAX_SAFE_INTEGER,a+1),a=t.order}else for(let e=i-1;e>0;e--){const t=r[e].track;if(!(t.order>=a))break;t.order=Math.max(-Number.MAX_SAFE_INTEGER,a-1),a=t.order}this.reorderTracks()}}endTrackDrag(){this.dragTrack?(this.dragTrack=void 0,this.fireEvent("trackorderchanged",[this.getTrackOrder()])):this.dragTrack=void 0}addEventHandlers(){this.addWindowResizeHandler(),this.addRootMouseUpHandler(),this.addRootMouseLeaveHandler(),this.addColumnContainerEventHandlers(),this.addKeyboardHandler()}removeEventHandlers(){this.removeWindowResizeHandler(),this.removeRootMouseUpHandler(),this.removeRootMouseLeaveHandler(),this.removeColumnContainerEventHandlers(),this.removeKeyboardHandler()}addWindowResizeHandler(){this.boundWindowResizeHandler=lA.bind(this),window.addEventListener("resize",this.boundWindowResizeHandler)}removeWindowResizeHandler(){window.removeEventListener("resize",this.boundWindowResizeHandler)}addRootMouseUpHandler(){this.boundRootMouseUpHandler=dA.bind(this),this.root.addEventListener("mouseup",this.boundRootMouseUpHandler)}removeRootMouseUpHandler(){this.root.removeEventListener("mouseup",this.boundRootMouseUpHandler)}addRootMouseLeaveHandler(){this.boundRootMouseLeaveHandler=dA.bind(this),this.root.addEventListener("mouseleave",this.boundRootMouseLeaveHandler)}removeRootMouseLeaveHandler(){this.root.removeEventListener("mouseleave",this.boundRootMouseLeaveHandler)}addColumnContainerEventHandlers(){this.boundColumnContainerMouseMoveHandler=hA.bind(this),this.boundColumnContainerTouchMoveHandler=hA.bind(this),this.boundColumnContainerMouseLeaveHandler=dA.bind(this),this.boundColumnContainerMouseUpHandler=dA.bind(this),this.boundColumnContainerTouchEndHandler=dA.bind(this),this.columnContainer.addEventListener("mousemove",this.boundColumnContainerMouseMoveHandler),this.columnContainer.addEventListener("touchmove",this.boundColumnContainerTouchMoveHandler),this.columnContainer.addEventListener("mouseleave",this.boundColumnContainerMouseLeaveHandler),this.columnContainer.addEventListener("mouseup",this.boundColumnContainerMouseUpHandler),this.columnContainer.addEventListener("touchend",this.boundColumnContainerTouchEndHandler)}removeColumnContainerEventHandlers(){this.columnContainer.removeEventListener("mousemove",this.boundColumnContainerMouseMoveHandler),this.columnContainer.removeEventListener("touchmove",this.boundColumnContainerTouchMoveHandler),this.columnContainer.removeEventListener("mouseleave",this.boundColumnContainerMouseLeaveHandler),this.columnContainer.removeEventListener("mouseup",this.boundColumnContainerMouseUpHandler),this.columnContainer.removeEventListener("touchend",this.boundColumnContainerTouchEndHandler)}addKeyboardHandler(){this.keyUpHandler=uA.bind(this),document.addEventListener("keyup",this.keyUpHandler)}removeKeyboardHandler(){console.log("Remove handler"),document.addEventListener("keyup",this.keyUpHandler)}static uncompressSession(e){let t;if(e.indexOf("/gzip;base64")>0){t=vs(e);let i="";for(let e of t)i+=String.fromCharCode(e);return i}return function(e){e=e.replace(/\./g,"+").replace(/_/g,"/").replace(/-/g,"=");const t=atob(e),i=[];for(let e=0;e<t.length;e++)i.push(t.charCodeAt(e));const n=hs(i);let r="";for(let e of n)r+=String.fromCharCode(e);return r}(e.substring(5))}createCircularView(e,t){var i;return t=!0===t,this.circularView=(i=this,new Em(e,{onChordClick:(e,t,n)=>{const r=e.data,s=r.mate;function o(e){e.chr=i.genome.getChromosomeName(e.refName);let t=!1;for(let n of i.referenceFrameList){const i=am.fromLocusString(n.getLocusString());if(i.contains(e)){t=!0;break}if(i.overlaps(e)){n.extend(e),t=!0;break}}if(!t){const t=2e3,n=(e.start+e.end)/2;i.addMultiLocusPanel(e.chr,n-t,n+t)}}o(r),o(s)}})),this.circularViewControl=new Py(this.$toggle_button_container.get(0),this),this.circularView.setAssembly({name:this.genome.id,id:this.genome.id,chromosomes:Lm(this.genome)}),this.circularViewVisible=t,this.circularView}get circularViewVisible(){return void 0!==this.circularView&&this.circularView.visible}set circularViewVisible(e){this.circularView&&(this.circularView.visible=e,this.circularViewControl.setState(e))}}async function lA(){if(!this.referenceFrameList)return;const e=this.calculateViewportWidth(this.referenceFrameList.length);for(let t of this.referenceFrameList){const i=this.referenceFrameList.indexOf(t),{chr:n,genome:r}=t,{bpLength:s}=r.getChromosome(t.chr),o=t.toBP(e);hu.isWholeGenomeView(n)||o>s?t.bpPerPixel=s/e:t.end=t.start+t.toBP(e);for(let{viewports:t}of this.trackViews)t[i].setWidth(e)}this.updateUIWithReferenceFrameList(),await this.updateViews(!0)}function hA(e){e.preventDefault();const{x:t,y:i}=r(e);if(this.vpMouseDown){const{viewport:e,referenceFrame:n}=this.vpMouseDown,r=Math.abs(t-this.vpMouseDown.mouseDownX)>Math.abs(i-this.vpMouseDown.mouseDownY);if(!this.dragObject&&!this.isScrolling)if(r)this.vpMouseDown.mouseDownX&&Math.abs(t-this.vpMouseDown.mouseDownX)>this.constants.dragThreshold&&(this.dragObject={viewport:e,start:n.start});else if(this.vpMouseDown.mouseDownY&&Math.abs(i-this.vpMouseDown.mouseDownY)>this.constants.scrollThreshold){this.isScrolling=!0;const t=e.$viewport.height(),i=e.trackView.maxViewportContentHeight();this.vpMouseDown.r=t/i}if(this.dragObject){const i=!this.isSoftclipped();let r=this.vpMouseDown.lastMouseX-t;n.shiftPixels(r,e.$viewport.width(),i)&&this.updateViews(),this.fireEvent("trackdrag")}if(this.isScrolling){const t=this.vpMouseDown.r*(this.vpMouseDown.lastMouseY-i);e.trackView.moveScroller(t)}this.vpMouseDown.lastMouseX=t,this.vpMouseDown.lastMouseY=i}}function dA(e){this.cancelTrackPan(),this.endTrackDrag()}async function uA(e){if(!(this.referenceFrameList.length>1||"KeyF"!==e.code&&"KeyB"!==e.code)){const t=this.getSelectedTrackViews();if(t.length>0){const i=t[0].track;if("function"==typeof i.nextFeatureAfter){const t=this.referenceFrameList[0],n=t.viewport?t.viewport.getWidth():this.calculateViewportWidth(this.referenceFrameList.length),r="all"===t.chr.toLowerCase(),s=i.visibilityWindow;if(r||s&&s>0&&t.bpPerPixel*n>s)return;const o="KeyF"===e.code,a=t.chr,c=t.center,l=await i.nextFeatureAfter(a,c,o);if(l){const i=await this.genome.getChromosomeName(l.chr);if(a===i){const i=(l.start+l.end)/2;if(e.shiftKey){const e=this.config.minimumBases||40,r=Math.max(e,1.1*(l.end-l.start));t.start=Math.max(0,i-r/2),t.end=i+r/2,t.bpPerPixel=(t.end-t.start)/n}else t.shift(i-c);this.updateViews()}else{t.chr=i;const r=(l.start+l.end)/2;if(e.shiftKey){const e=this.config.minimumBases||40,i=Math.max(e,1.1*(l.end-l.start));t.start=Math.max(0,r-i/2),t.end=t.start+i,t.bpPerPixel=(t.end-t.start)/n}else t.start=r-n*t.bpPerPixel/2,t.end=t.start+n*t.bpPerPixel;this.updateViews()}}}}}}function fA(e,t){for(let{viewports:i}of e)for(let e of i)e.$trackLabel&&(0===i.indexOf(e)&&!0===t?e.$trackLabel.show():e.$trackLabel.hide())}let pA=[];function gA(e){return void 0===e.minimumBases&&(e.minimumBases=40),void 0===e.showIdeogram&&(e.showIdeogram=!0),void 0===e.showCircularView&&(e.showCircularView=!1),void 0===e.showCircularViewButton&&(e.showCircularViewButton=!1),void 0===e.showTrackLabelButton&&(e.showTrackLabelButton=!0),void 0===e.showTrackLabels&&(e.showTrackLabels=!0),void 0===e.showCursorTrackingGuideButton&&(e.showCursorTrackingGuideButton=!0),void 0===e.showCursorGuide&&(e.showCursorGuide=e.showCursorTrackingGuide||!1),void 0===e.showCenterGuideButton&&(e.showCenterGuideButton=!0),void 0===e.showCenterGuide&&(e.showCenterGuide=!1),void 0===e.showSampleNames&&(e.showSampleNames=!1),void 0===e.showSVGButton&&(e.showSVGButton=!0),void 0===e.showControls&&(e.showControls=!0),void 0===e.showNavigation&&(e.showNavigation=!0),void 0===e.showRuler&&(e.showRuler=!0),void 0===e.flanking&&(e.flanking=1e3),void 0===e.pairsSupported&&(e.pairsSupported=!0),e.tracks||(e.tracks=[]),e}const mA=Qs.setApiKey;const wA=Qs.oauth;var bA={TrackUtils:Oa,IGVGraphics:xo,MenuUtils:bo,DataRangeDialog:_o,createTrack:async function(e,t){return await cA.prototype.createTrack.call(t,e)},createBrowser:async function(e,t){void 0===t&&(t={}),hu.KNOWN_GENOMES||await hu.initializeGenomes(t),gA(t),t.queryParametersSupported&&function(e){var t,i,n,r,s,o,a,c,l;let h,d,u;if(a=window.location.href,s={},t=a.indexOf("?"),i=a.lastIndexOf("#"),t>=0)for(i<0&&(i=a.length),n=t+1;n<i;)(r=a.indexOf("&",n))<0&&(r=i),2===(o=a.substring(n,r).split("=",2)).length?(c=o[0],l=decodeURIComponent(o[1]),"file"===c?h=l.split(","):"index"===c?d=l.split(","):"name"===c?u=l.split(","):"genome"===c?!l.startsWith("https://")&&!l.startsWith("http://")||l.endsWith(".json")?(e[c]=l,e.reference=void 0):e.reference={fastaURL:l,indexURL:l+".fai"}:("reference"===c&&(e.genome=void 0),e[c]=l),n=r+1):n++;if(h){e.tracks||(e.tracks=[]);for(let t=0;t<h.length;t++){if(h[t].endsWith(".xml")||h[t].endsWith(".json")){e.sessionURL=h[t];break}const i={url:h[t]};d&&d.length>t&&(i.indexURL=d[t]),u&&u.length>t&&(i.name=u[t]),e.tracks.push(i)}}}(t),t.apiKey&&Qs.setApiKey(t.apiKey),t.oauthToken&&Qs.setOauthToken(t.oauthToken),t.clientId&&!Ts()&&await async function(e){if(!google.accounts.oauth2.initTokenClient)throw new Error("Google accounts token client not loaded (https://accounts.google.com/gsi/client)");if(Ts())throw new Error("Google client is already initialized");const t={client_id:e.client_id||e.clientId,scope:e.scope||"https://www.googleapis.com/auth/userinfo.profile",state:e.state||"igv",error:e=>{throw new Error(e.type)},hint:e.hint,hosted_domain:e.hosted_domain},i=google.accounts.oauth2.initTokenClient(t);google.igv={tokenClient:i,apiKey:e.apiKey}}({client_id:t.clientId,apiKey:t.apiKey,scope:"https://www.googleapis.com/auth/userinfo.profile"});const i=new cA(t,e);pA.push(i),i.startSpinner();const n=t.sessionURL||t.session||t.hubURL;return n?await i.loadSession({url:n}):await i.loadSessionObject(t),i.stopSpinner(),vy(i,i.$navigation.width()),i},removeBrowser:function(e){e.dispose(),e.root.remove(),pA=pA.filter((t=>t!==e))},removeAllBrowsers:function(){for(let e of pA)e.dispose(),e.root.remove();pA=[]},visibilityChange:async function(){for(let e of pA)await e.visibilityChange()},setGoogleOauthToken:function(e){return Qs.setOauthToken(e)},setOauthToken:function(e,t){return Qs.setOauthToken(e,t)},oauth:wA,version:my,setApiKey:mA,TrackBase:Hl,registerTrackClass:function(e,t){uy.set(e,((e,i)=>new t(e,i)))},registerTrackCreatorFunction:function(e,t){uy.set(e,t)},registerFileFormats:function(e,t){Sl[e]={fields:t}},loadSessionFile:cA.loadSessionFile};return bA}));
//# sourceMappingURL=igv.min.js.map
</script>

    <style type="text/css">
        body {
            font-size: 80%;
            font-family: 'Lucida Grande', Verdana, Arial, Sans-Serif;
        }


    </style>

    <!-- selector table style -->
    <style>

        thead {
            position: sticky;
            top: 0;
        }

        tr {
            cursor: default;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        tr:hover {
            background-color: lightblue;
        }

        th {
            background-color: lightskyblue;
            color: white;
            cursor: pointer;
        }

        .selected {
            background-color: lightblue !important;
            outline: solid thin darkblue !important;
        }
    </style>

    <!-- accordian style,  ref: https://alligator.io/css/collapsible/ -->
    <style type="text/css">
        .wrap-collabsible {
            margin-bottom: 1.2rem;
        }

        input[type='checkbox'] {
            display: none;
        }

        .lbl-toggle {
            display: block;

            font-weight: bold;
            font-family: monospace;
            font-size: 1.2rem;
            text-transform: uppercase;
            text-align: left;

            padding: 1rem;

            color: black;
            background: #dddddd;

            cursor: pointer;

            border-radius: 7px;
            transition: all 0.25s ease-out;
        }

        .lbl-toggle:hover {
            color: blue;
        }

        .lbl-toggle::before {
            content: ' ';
            display: inline-block;

            border-top: 5px solid transparent;
            border-bottom: 5px solid transparent;
            border-left: 5px solid currentColor;
            vertical-align: middle;
            margin-right: .7rem;
            transform: translateY(-2px);

            transition: transform .2s ease-out;
        }

        .toggle:checked + .lbl-toggle::before {
            transform: rotate(90deg) translateX(-3px);
        }

        .collapsible-content {
            max-height: 0px;
            overflow: auto;
            transition: max-height .25s ease-in-out;
        }

        .toggle:checked + .lbl-toggle + .collapsible-content {
            max-height: 350px;
        }

        .toggle:checked + .lbl-toggle {
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        .collapsible-content .content-inner {
            background: rgba(250, 224, 66, .2);
            border-bottom: 1px solid rgba(250, 224, 66, .45);
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            padding: .5rem 1rem;
        }
    </style>

</head>

<body>


<div id="container" style="display: flex; flex-direction: column">
    <div id="tableContainer" class="wrap-collabsible">
        <input id="collapsible" class="toggle" type="checkbox" checked>
        <label for="collapsible" class="lbl-toggle">Variants</label>
        <div class="collapsible-content">
            <div id="tableSelectorDiv"></div>
        </div>
    </div>

    <div id="igvContainer">
        <div id="igvDiv"></div>
    </div>
</div>

<!--
Remove igv.js script tag in header and uncomment for local debugging.  "igv.js" is the root directory of a  local
igv.js repository.  Adjust path as neccessary


<script type="module">
      import igv from "./igv.js/js/index.js";
-->

<script type="text/javascript">

    const tableJson = {"headers": ["unique_id", "Chrom", "Start", "End", "Name"], "rows": [[0, "XM_031967871.1", 1027, 1029, "Exon5:codon343:FS_DEL:-1"], [1, "XM_031967871.1", 1090, 1092, "Exon5:codon364:FS_INS:+1"], [2, "XM_031967871.1", 1135, 1137, "Exon5:codon379:FS_INS:+1"], [3, "XM_031967871.1", 1183, 1185, "Exon5:codon395:FS_INS:+1"], [4, "XM_031967871.1", 1192, 1194, "Exon5:codon398:FS_DEL:-1"], [5, "XM_031967871.1", 1222, 1224, "Exon5:codon408:FS_DEL:-1"]]}
    const sessionDictionary = {"0": "data:application/gzip;base64,", "1": "data:application/gzip;base64,", "2": "data:application/gzip;base64,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", "3": "data:application/gzip;base64,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", "4": "data:application/gzip;base64,", "5": "data:application/gzip;base64,"}
    let igvBrowser

    document.addEventListener("DOMContentLoaded", function () {
        initIGV()
    })


    /**
     * Create the igv instance initialized with the first session in the session dictionary.  This will correspond
     * to the first variant in the variant table. *
     */
    function initIGV() {

        const igvDiv = document.getElementById("igvDiv")
        const options =
            {
                sessionURL: sessionDictionary["0"],
                showChromosomeWidget: false,  // The session for each variant contains data and sequence for that variant only
                showCenterGuide: true,
                search: false     // disable webservice search
            }

        igv.createBrowser(igvDiv, options)
            .then(function (b) {
                igvBrowser = b
                initTable()
            })
    }

    function initTable() {

        // table
        const table = document.createElement("table")
        table.id = "variant_table"
        table.style.width = "100%"
        document.getElementById("tableSelectorDiv").appendChild(table)

        // header
        const thead = document.createElement('thead')
        table.appendChild(thead)
        const headerRow = thead.insertRow(0)
        const headers = tableJson.headers
        for (let j = 1; j < headers.length; j++) {
            var cell = document.createElement("th")
            headerRow.appendChild(cell)
            cell.innerHTML = headers[j]
        }


        // body
        const tbody = document.createElement('tbody')
        table.appendChild(tbody)
        const tableRows = tableJson.rows
        for (let i = 0; i < tableRows.length; i++) {

            const rowData = tableRows[i]
            const unique_id = rowData[0]
            const row = document.createElement("tr")
            row.id = "row_" + unique_id
            tbody.appendChild(row)

            // First row selected by default
            if (i === 0) row.classList.add("selected")

            row.onclick = function (event) {
                const list = document.getElementById("variant_table").getElementsByTagName("tr")
                for (let i = 0; i < list.length; i++) {
                    list[i].classList.remove("selected")
                }
                const rowID = event.target.parentElement.id
                const row = document.getElementById(rowID)
                row.classList.add("selected")
                const uniqueId = rowID.substring(4)
                const session = sessionDictionary[uniqueId]
                igvBrowser.loadSession({
                    url: session
                })
            }

            for (let j = 1; j < headers.length; j++) {
                cell = document.createElement("td")
                //cell.rowID = i;
                row.appendChild(cell)
                cell.innerHTML = rowData[j]
            }
        }

        // Add sorting.  Adapted from https://stackoverflow.com/questions/14267781/sorting-html-table-with-javascript/49041392
        Array.prototype.slice.call(document.querySelectorAll('th')).forEach(function (th) {
            th.addEventListener('click', function () {
                //var table = th.parentNode
                //while (table.tagName.toUpperCase() != 'TABLE') table = table.parentNode;
                Array.prototype.slice.call(table.querySelectorAll('tr:nth-child(n+1)'), 1)
                    .sort(comparer(Array.prototype.slice.call(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(function (tr) {
                        table.appendChild(tr)
                    })
            })
        })


        function getCellValue(tr, idx) {
            return tr.children[idx].innerText || tr.children[idx].textContent
        }

        function comparer(idx, asc) {
            return function (a, b) {
                return function (v1, v2, asc) {
                    // Special case for chromosome coloumn
                    if (idx === 0 && v1.startsWith('chr') && v2.startsWith('chr')) {
                        v1 = v1.substr(3)
                        v2 = v2.substr(3)
                    }
                    // always put empty columns at end of table when sorting            
                    if (v1 == '' && v2 != '') {
                        return 1
                    }
                    if (v2 == '' && v1 != '') {
                        return -1
                    }

                    var isNumber = v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2)
                    ret = isNumber ? v1 - v2 : v1.toString().localeCompare(v2)

                    // reverse ordering if not ascending order            
                    if (!asc) {
                        ret = -1 * ret
                    }
                    return (ret)

                }(getCellValue(a, idx), getCellValue(b, idx), asc)
            }
        }

    }


</script>
</body>
</html>
